{"version":3,"file":"app.js","mappings":"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","sources":["../../webpack/universalModuleDefinition","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ActionBar.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ActionView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/Attach.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/BooleanEditor.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/BottomSheet.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ConsoleView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/Container.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ContentView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ContextMenu.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/CounterView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/DateEditor.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/DateEditorCombo.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/Drawer.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/FileUploadView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/HeadedContentView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/HtmlView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/Icon.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/IconTextView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ImageView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ItemSelector.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ItemView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ItemsEditor.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ItemsView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ListView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/LocationView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/MediaEditor.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/MediaView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/MessageBox.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/MultiItemPicker.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/NavBar.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/OperationView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/PageHost.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/PermissionRequestItemView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/PopUpContent.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/ProgressView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/PropertyView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/RemovableItemView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/SearchView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/SectionEditor.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/SectionsView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/SelectableItemView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/SimpleItemView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/SingleItemPicker.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/SingleItemSelector.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/SnackBar.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/Spinner.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/TextEditor.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/TextView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/Toast.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/VideoView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/WebView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Templates/WizardView.html","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Global.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Helpers/Format.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Helpers/Http.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Helpers/TypeCheck.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Helpers/Uri.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Linq.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/StringTable.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Types/DynamicString.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/PromiseUtils.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Services/DynamicPageManager.ts","../.././Scripts/Application.ts","../.././Scripts/Components/ColorPicker.ts","../.././Scripts/Data/InfectionDataSet.ts","../.././Scripts/Data/RangeDayAreaDataSet.ts","../.././Scripts/Data/ViewModes.ts","../.././Scripts/Framework/Bindings.ts","../.././Scripts/Framework/Graphics.ts","../.././Scripts/Global.ts","../.././Scripts/Indicators.ts","../.././Scripts/Framework/TipManager.ts","../.././node_modules/date-fns/esm/locale/it/_lib/formatDistance/index.js","../.././node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../.././node_modules/date-fns/esm/locale/it/_lib/formatLong/index.js","../.././node_modules/date-fns/esm/_lib/requiredArgs/index.js","../.././node_modules/date-fns/esm/toDate/index.js","../.././node_modules/date-fns/esm/_lib/toInteger/index.js","../.././node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../.././node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","../.././node_modules/date-fns/esm/locale/it/_lib/formatRelative/index.js","../.././node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../.././node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../.././node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../.././node_modules/date-fns/esm/locale/it/index.js","../.././node_modules/date-fns/esm/locale/it/_lib/localize/index.js","../.././node_modules/date-fns/esm/locale/it/_lib/match/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../.././node_modules/date-fns/esm/locale/en-US/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../.././Scripts/Pages/GeoPlotPage.ts","../.././Scripts/Api.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Language/IT.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Abstraction/IOperation.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Types/TimeSpan.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/StringUtils.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/DateUtils.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Types/Exception.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/DomUtils.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/Identifier.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/Properties.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Abstraction/IMapManager.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/ArrayUtils.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/ObjectUtils.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/ComputedProperty.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/ObservableProperty.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/Binder.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/BindableObject.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/TypeCheck.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/Abstraction/IBehavoir.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/TemplateBuilder.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/ObservableList.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/View.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/MathUtils.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Operation.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/ViewUtils.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ViewComponent.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ContentView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ContextMenu.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/IconTextView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ActionView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/SelectionManager.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Behavoirs/AttachBehavoir.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Behavoirs/RippleClickBehavoir.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Behavoirs/ScrollCheckBehavoir.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Behavoirs/VibrateClickBehavoir.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Blocker.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SelfHostedPageHost.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Page.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ItemsView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Panel.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/Activity.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SlidePageHost.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Abstraction/IGestureListener.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Abstraction/IAction.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Abstraction/IPageHost.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/ContentActivity.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Behavoirs/ContextMenuBehavoir.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ActionBar.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/NavBar.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SearchView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/FulltemsLoader.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/TextView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ListView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/Item.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/ItemsSource.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/PagedItemsLoader.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/SearchActivity.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/BottomSheet.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/RemovableItemView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SelectableItemView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Container.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Content/ItemEditContent.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/WebView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/WebPage.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/BasePopUpMessage.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/PopUpContent.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/PopupEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BaseEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/Functions.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/SingleItemSelector.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Actions.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/ActivityEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/SelectMultipleItemsActivity.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/SelectSingleItemActivity.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ConsoleView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Animation.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ContentHostView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/CounterView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Drawer.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/FileUploadView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/GridView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Interaction.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Components.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Editors.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/HeadedContentView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/HtmlView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ImageView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/ImageLoade.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ItemView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/LocationView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Types/Signal.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/MapItemsView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/MapView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/VideoView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/VideoLoader.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/MediaView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/MessageBox.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ProgressView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BaseTextEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/NumberEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/PropertyView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SectionsView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SimpleItemView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SnackBar.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/StaticMapView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Toast.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/WizardView.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Content/MessageContent.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BaseItemEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BasePicker.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BooleanEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/DateEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/DateEditorCombo.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/ItemEditorConverter.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/EditableItemsSource.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/ItemsEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/MediaEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/MultiItemPicker.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/ObjectEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/RichTextEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/SectionEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/SingleItemPicker.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/MultiItemSelector.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/TextEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/TimeEditor.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Validators.ts","../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Services/PermissionManager.ts","../.././Scripts/Framework/Operation.ts","../.././Scripts/Framework/DataAdapter.ts","../.././Scripts/Framework/SplitEnumerator.ts","../.././Scripts/Components/TreeView.ts","../.././Scripts/Components/DataImport.ts","../.././Scripts/Components/GraphContext.ts","../.././Scripts/Components/BaseStudioItem.ts","../.././Scripts/Components/StudioRegression.ts","../.././Scripts/Components/StudioSerie.ts","../.././Scripts/Components/StudioProject.ts","../.././Scripts/Pages/StudioPage.ts","../.././Scripts/Types.ts","../../external umd \"Chart\"","../../external umd \"Desmos\"","../../external umd \"Hammer\"","../../external umd \"webapp-core\"","../../webpack/bootstrap","../../webpack/runtime/compat get default export","../../webpack/runtime/define property getters","../../webpack/runtime/hasOwnProperty shorthand","../../webpack/runtime/make namespace object"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"webapp-core\"), require(\"Hammer\"), require(\"Desmos\"), require(\"Chart\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"GeoPlot\", [\"webapp-core\", \"Hammer\", \"Desmos\", \"Chart\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GeoPlot\"] = factory(require(\"webapp-core\"), require(\"Hammer\"), require(\"Desmos\"), require(\"Chart\"));\n\telse\n\t\troot[\"GeoPlot\"] = factory(root[\"webapp-core\"], root[\"Hammer\"], root[\"Desmos\"], root[\"Chart\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__3892__, __WEBPACK_EXTERNAL_MODULE__4396__, __WEBPACK_EXTERNAL_MODULE__1431__, __WEBPACK_EXTERNAL_MODULE__2370__) {\nreturn ","__defineTemplate(\"ActionBar\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(\"context-mode\", m => m.selectionManager && m.selectionManager.isActive)\n      .beginChild(\"ul\").set(\"class\",\"nav main\")\n         .if(m => m.icon != null, t3 => t3\n            .beginChild(\"li\").set(\"class\",\"icon\").template(\"Icon\", m => m.icon).endChild()\n         )\n         .if(m => m.mainAction == 'menu', t3 => t3\n            .beginChild(\"li\").set(\"class\",\"main-action menu\").on(\"click\", m => m.showNavigationMenu()).behavoir(\"ripple\")\n               .beginChild(\"i\").set(\"class\",\"icon fas fa-bars\").endChild()\n            .endChild()\n         )\n         .if(m => m.mainAction == 'back', t3 => t3\n            .beginChild(\"li\").set(\"class\",\"main-action back\").on(\"click\", m => m.back()).behavoir(\"ripple\")\n               .beginChild(\"i\").set(\"class\",\"icon fas fa-chevron-left\").endChild()\n            .endChild()\n         )\n         .if(m => m.content != null, t3 => t3\n            .beginChild(\"li\").set(\"class\",\"main-content\").content(m => m.content).endChild()\n         , t3 => t3\n            .if(m => m.title != null, t4 => t4\n               .beginChild(\"li\").set(\"class\",\"main-content title\").text(m => m.title).endChild()\n            )\n         )\n         .foreach(m => m.actions, t3 => t3\n            .beginChild(\"li\").set(\"class\",\"action-item\").class(m => m.name).content(m => m).endChild()\n         )\n      .endChild()\n      .beginChild(\"ul\").set(\"class\",\"nav context\")\n         .beginChild(\"li\").set(\"class\",\"main-action close\").on(\"click\", m => m.selectionManager ? m.selectionManager.close() : null).behavoir(\"ripple\")\n            .beginChild(\"i\").set(\"class\",\"icon fas fa-times\").endChild()\n         .endChild()\n         .if(m => m.selectionManager != null, t3 => t3\n            .beginChild(\"li\").set(\"class\",\"title\").text(m => m.selectionManager.selectionText).endChild()\n            .foreach(m => m.selectionManager.actions, t4 => t4\n               .beginChild(\"li\").set(\"class\",\"action-item\").class(m => m.name).content(m => m).endChild()\n            )\n         )\n      .endChild()\n   .endChild()\n   .content(m => m.navigationMenu)\n});","__defineTemplate(\"ActionIcon\", t => { t\n   .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"action button-text\").set(\"tooltip\",m => m.tooltip).on(\"click\", m => m.executeAsync()).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"ripple\").template(\"Icon\", m => m.content).endChild()\n});\n__defineTemplate(\"ActionLink\", t => { t\n   .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"action button-text\").on(\"click\", m => m.executeAsync()).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"ripple\").content(m => m.content).endChild()\n});\n__defineTemplate(\"ActionButton\", t => { t\n   .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"action button\").on(\"click\", m => m.executeAsync()).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"ripple\").content(m => m.content).endChild()\n});","__defineTemplate(\"Attach\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"attach\").endChild()\n});","__defineTemplate(\"DefaultCheckBox\", t => { t\n   .beginChild(\"label\")\n      .beginChild(\"input\").set(\"type\",\"checkbox\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).endChild()\n      .beginChild(\"span\").text(m => m.label).endChild()\n   .endChild()\n});\n__defineTemplate(\"Switch\", t => { t\n   .beginChild(\"div\").set(\"class\",\"switch\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).class(\"selected\", m => m.editValue)\n      .beginChild(\"div\").set(\"class\",\"checkbox-container\")\n         .beginChild(\"div\").set(\"class\",\"unselected-half\").on(\"click\", m => m.editValue = false).endChild()\n         .beginChild(\"div\").set(\"class\",\"selected-half\").on(\"click\", m => m.editValue = true).endChild()\n         .beginChild(\"div\").set(\"class\",\"switch-button\").endChild()\n      .endChild()\n      .if(m => m.label != null, t2 => t2\n         .beginChild(\"label\").text(m => m.label).endChild()\n      )\n   .endChild()\n});\n__defineTemplate(\"CheckBox\", t => { t\n   .beginChild(\"div\").set(\"class\",\"checkbox\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).on(\"click\", m => m.toggle()).class(\"selected\", m => m.editValue)\n      .beginChild(\"div\").set(\"class\",\"checkbox-container\")\n         .beginChild(\"i\").set(\"class\",\"fas fa-check\").endChild()\n      .endChild()\n      .if(m => m.label != null, t2 => t2\n         .beginChild(\"label\").text(m => m.label).endChild()\n      )\n   .endChild()\n});","__defineTemplate(\"BottomSheet\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status).behavoir(\"attach\")\n      .if(m => m.isShowOpener, t2 => t2\n         .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"opener button-text\").on(\"click\", m => m.toggle())\n            .beginChild(\"i\").set(\"class\",\"fas fa-caret-up\").endChild()\n         .endChild()\n      )\n      .content(m => m.content).endChild()\n});","__defineTemplate(\"ConsoleView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible)\n      .beginChild(\"div\").set(\"class\",\"toolbar\")\n         .beginChild(\"button\").set(\"type\",\"button\").on(\"click\", m => m.hide()).text(\"Hide\").endChild()\n         .beginChild(\"button\").set(\"type\",\"button\").on(\"click\", m => m.clear()).text(\"Clear\").endChild()\n      .endChild()\n      .beginChild(\"div\").set(\"class\",\"body\")\n         .foreach(m => m.root.items, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});\n__defineTemplate(\"ConsoleMessageView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"console-item console-message\").class(m => m.type)\n      .if(m => m.content != null, t2 => t2\n         .foreach(m => m.content, t3 => t3\n            .beginChild(\"span\").text(m => m).endChild()\n         )\n      )\n   .endChild()\n});\n__defineTemplate(\"ConsoleGroupView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"console-item console-group\")\n      .beginChild(\"header\").template(\"ConsoleMessageView\", m => m).endChild()\n      .beginChild(\"section\")\n         .foreach(m => m.items, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"Container\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"attach\")\n      .if(m => m.title != null, t2 => t2\n         .beginChild(\"header\")\n            .beginChild(\"label\").text(m => m.title).endChild()\n         .endChild()\n      )\n      .beginChild(\"div\").set(\"class\",\"content\").class(\"expanded\", m => m.isExpanded).class(\"expandible\", m => m.canExpand)\n         .if(m => m.canExpand, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"content-wrapper\").content(m => m.content, true).endChild()\n            .if(m => m.isOverflow, t4 => t4\n               .beginChild(\"a\").set(\"class\",\"base-button expand-collapse\").on(\"click\", m => m.toggleExpand()).visible(m => m.canExpand).behavoir(\"ripple\")\n                  .beginChild(\"i\").set(\"class\",\"fas fa-angle-down\").endChild()\n               .endChild()\n            )\n         , t3 => t3\n            .content(m => m.content, true)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"ContentView\", t => { t\n   .content(m => m.content)\n});\n__defineTemplate(\"ContentViewNested\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status).behavoir(\"attach\").content(m => m.content).endChild()\n});","__defineTemplate(\"ContextMenu\", t => { t\n   .beginChild(\"ul\").class(m => m.className)\n      .foreach(m => m.actions, t2 => t2\n         .beginChild(\"li\").content(m => m).endChild()\n      )\n   .endChild()\n});","__defineTemplate(\"CounterView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"action\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"label\").set(\"class\",\"title\").text(m => m.title).endChild()\n      .beginChild(\"span\").set(\"class\",\"value\").text(m => m.content).endChild()\n   .endChild()\n});","__defineTemplate(\"DateEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"type\",\"date\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).endChild()\n});","__defineTemplate(\"DateEditorCombo\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"select\").set(\"class\",\"input-element day\").value(m => m.selectedDay)\n         .beginChild(\"option\").set(\"value\",\"\").text(m => WebApp.Format.text('day-label')).endChild()\n         .foreach(m => m.days, t3 => t3\n            .beginChild(\"option\").set(\"value\",m => m).text(m => m).endChild()\n         )\n      .endChild()\n      .beginChild(\"select\").set(\"class\",\"input-element month\").value(m => m.selectedMonth)\n         .beginChild(\"option\").set(\"value\",\"\").text(m => WebApp.Format.text('month-label')).endChild()\n         .foreach(m => m.months, t3 => t3\n            .beginChild(\"option\").set(\"value\",m => m.number).text(m => m.name).endChild()\n         )\n      .endChild()\n      .beginChild(\"select\").set(\"class\",\"input-element year\").value(m => m.selectedYear)\n         .beginChild(\"option\").set(\"value\",\"\").text(m => WebApp.Format.text('year-label')).endChild()\n         .foreach(m => m.years, t3 => t3\n            .beginChild(\"option\").set(\"value\",m => m).text(m => m).endChild()\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"Drawer\", t => { t\n   .beginChild(\"div\").set(\"class\",\"drawer-container\").class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"drawer\").behavoir(\"gesture\")\n         .if(m => m.header != null, t3 => t3\n            .beginChild(\"header\").content(m => m.header).endChild()\n         )\n         .foreach(m => m.groups, t3 => t3\n            .if(m => m.actions.count > 0, t4 => t4\n               .beginChild(\"section\")\n                  .if(m => m.label != null, t6 => t6\n                     .beginChild(\"label\").text(m => m.label).endChild()\n                  )\n                  .beginChild(\"div\").set(\"class\",\"menu\")\n                     .foreach(m => m.actions, t7 => t7\n                        .content(m => m)\n                     )\n                  .endChild()\n               .endChild()\n            )\n         )\n      .endChild()\n      .behavoir(\"attach\").endChild()\n});","__defineTemplate(\"FileUploadView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"content\")\n         .beginChild(\"div\").set(\"class\",\"header\")\n            .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"select button-text\").on(\"click\", m => m.select()).text(m => m.text).set(\"enabled\",m => m.status == 'selected' || m.status== 'empty').endChild()\n         .endChild()\n         .beginChild(\"div\").set(\"class\",\"progress\")\n            .beginChild(\"div\").set(\"class\",\"bar\").style(\"width\", m => (m.progress * 100) + '%').endChild()\n            .beginChild(\"div\").set(\"class\",\"text\").text(m => m.progressText).endChild()\n         .endChild()\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"HeadedContentView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible)\n      .beginChild(\"header\").content(m => m.header).endChild()\n      .beginChild(\"div\").set(\"class\",\"content\").content(m => m.content).endChild()\n   .endChild()\n});","__defineTemplate(\"Html\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).html(m => m.content).endChild()\n});\n__defineTemplate(\"HtmlNode\", t => { t\n   .appendChild(t.model.content)\n});","__defineTemplate(\"Icon\", t => { t\n   .if(m => m != null, t1 => t1\n      .if(m => m.substr(0, 4) == 'fas ' || m.substr(0, 4) == 'fab ' || m.substr(0, 4) == 'far ' || m.substr(0, 4) == 'fal '|| m.substr(0, 4) == 'fad ', t2 => t2\n         .beginChild(\"i\").set(\"class\",\"icon\").class(m => m).endChild()\n      , t2 => t2\n         .beginChild(\"img\").set(\"class\",\"icon\").set(\"src\",m => m).endChild()\n      )\n   )\n});","__defineTemplate(\"IconTextView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status)\n      .if(m => m.icon != null, t2 => t2\n         .template(\"Icon\", m => m.icon)\n      )\n      .if(m => m.text != null, t2 => t2\n         .beginChild(\"span\").set(\"class\",\"text\").text(m => m.text).endChild()\n      )\n      .if(m => m.badge != null, t2 => t2\n         .beginChild(\"span\").set(\"class\",\"badge\").text(m => m.badge).endChild()\n      )\n   .endChild()\n});\n__defineTemplate(\"IconTextViewInline\", t => { t\n   .class(m => m.status)\n   .if(m => m.icon != null, t1 => t1\n      .template(\"Icon\", m => m.icon)\n   )\n   .if(m => m.text != null, t1 => t1\n      .beginChild(\"span\").set(\"class\",\"text\").text(m => m.text).endChild()\n   )\n   .if(m => m.badge != null, t1 => t1\n      .beginChild(\"span\").set(\"class\",\"badge\").text(m => m.badge).endChild()\n   )\n});","__defineTemplate(\"ImageInline\", t => { t\n   .beginChild(\"img\").class(m => m.className).set(\"src\",m => m.content).visible(m => m.visible).set(\"enabled\",m => m.enabled).endChild()\n});\n__defineTemplate(\"Image\", t => { t\n   .beginChild(\"div\").set(\"class\",\"image-container\").visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"img\").class(m => m.className).set(\"src\",m => m.content).endChild()\n   .endChild()\n});","__defineTemplate(\"ItemSelectorList\", t => { t\n   .beginChild(\"div\").set(\"class\",\"items-view\").class(m => m.className)\n      .foreach(m => m.items, t2 => t2\n         .content(m => m)\n      )\n   .endChild()\n});","__defineTemplate(\"ItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).class(m => m.status).class(\"activable\", m => m.canOpen).class(\"compact\", m => !(m.mainActions && m.mainActions.length > 0))\n      .if(m => m.mainActions && m.mainActions.length > 0, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"body-container\").template(\"ItemViewBody\", m => m).endChild()\n         .beginChild(\"div\").set(\"class\",\"main-actions\")\n            .foreach(m => m.mainActions, t4 => t4\n               .content(m => m)\n            )\n         .endChild()\n      , t2 => t2\n         .template(\"ItemViewBody\", m => m)\n      )\n   .endChild()\n});\n__defineTemplate(\"ItemViewBody\", t => { t\n   .class(\"with-menu\", m => m.hasActions)\n   .beginChild(\"div\").on(\"click\", m => m.open()).class(\"body\", m => true)\n      .if(m => m.content.count <= 1, t2 => t2\n         .content(m => m.content.get(0), true), t2 => t2\n         .foreach(m => m.content, t3 => t3\n            .content(m => m)\n         )\n      )\n   .endChild()\n   .if(m => m.canOpen, t1 => t1\n      .beginChild(\"i\").set(\"class\",\"open-icon fas fa-angle-right\").endChild()\n   )\n   .if(m => m.hasActions, t1 => t1\n      .beginChild(\"a\").set(\"class\",\"menu\").on(\"click\", m => m.showMenu())\n         .beginChild(\"i\").set(\"class\",\"fas fa-ellipsis-v\").endChild()\n      .endChild()\n   )\n});","__defineTemplate(\"ItemsEditor\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .foreach(m => m.content, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"list-item\").content(m => m, true).endChild()\n      )\n      .if(m => m.canAdd, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"add-item\").content(m => m.addAction).endChild()\n      )\n   .endChild()\n});","__defineTemplate(\"ItemsView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .foreach(m => m.content, t2 => t2\n         .content(m => m)\n      )\n      .if(m => m.content.count == 0 && m.emptyView != null, t2 => t2\n         .content(m => m.emptyView)\n      )\n   .endChild()\n});\n__defineTemplate(\"ItemsViewWrapped\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"div\").set(\"class\",\"wrapper\")\n         .foreach(m => m.content, t3 => t3\n            .content(m => m)\n         )\n         .if(m => m.content.count == 0 && m.emptyView != null, t3 => t3\n            .content(m => m.emptyView)\n         )\n      .endChild()\n   .endChild()\n});\n__defineTemplate(\"ItemsViewForm\", t => { t\n   .beginChild(\"form\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .foreach(m => m.content, t2 => t2\n         .content(m => m)\n      )\n      .if(m => m.content.count == 0 && m.emptyView != null, t2 => t2\n         .content(m => m.emptyView)\n      )\n   .endChild()\n});","__defineTemplate(\"ListView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"scroll-check\").class(m => m.status)\n      .foreach(m => m.header, t2 => t2\n         .beginChild(\"header\").set(\"class\",\"header-item\").content(m => m).endChild()\n         .if(m => WebApp.injectProxy(m, \"$parent\", t.model).showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .if(m => m.content.count == 0 && m.emptyView != null && m.status == 'loaded', t2 => t2\n         .content(m => m.emptyView)\n      )\n      .foreach(m => m.content, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"list-item\").content(m => m, true).endChild()\n         .if(m => WebApp.injectProxy(m, \"$parent\", t.model).showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .foreach(m => m.footer, t2 => t2\n         .beginChild(\"footer\").set(\"class\",\"footer-item\").content(m => m).endChild()\n         .if(m => WebApp.injectProxy(m, \"$parent\", t.model).showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .beginChild(\"div\").set(\"class\",\"loading-item\")\n         .beginChild(\"i\").set(\"class\",\"fas fa-circle-notch fa-spin fa-3x fa-fw\").endChild()\n      .endChild()\n   .endChild()\n});\n__defineTemplate(\"ListViewInline\", t => { t\n   .beginChild(\"div\").set(\"class\",\"list-view-inline\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"scroll-check\").class(m => m.status)\n      .if(m => m.header.count > 0, t2 => t2\n         .foreach(m => m.header, t3 => t3\n            .content(m => m)\n         )\n         .if(m => m.showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .if(m => m.content.count == 0 && m.emptyView != null && m.status == 'loaded', t2 => t2\n         .content(m => m.emptyView)\n      )\n      .foreach(m => m.content, t2 => t2\n         .content(m => m)\n         .if(m => WebApp.injectProxy(m, \"$parent\", t.model).showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .if(m => m.footer.count > 0, t2 => t2\n         .foreach(m => m.footer, t3 => t3\n            .content(m => m)\n         )\n         .if(m => m.showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .beginChild(\"div\").set(\"class\",\"loading-item\")\n         .beginChild(\"i\").set(\"class\",\"fas fa-circle-notch fa-spin fa-3x fa-fw\").endChild()\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"LocationView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"address\")\n         .if(m => m.content.name != null, t3 => t3\n            .beginChild(\"label\").text(m => m.content.name).endChild()\n         )\n         .beginChild(\"span\").text(m => m.content.address).endChild()\n      .endChild()\n      .beginChild(\"img\").set(\"src\",m => m.map).on(\"click\", m => m.showMap()).endChild()\n   .endChild()\n});","__defineTemplate(\"MediaEditor\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible)\n      .beginChild(\"div\").set(\"class\",\"media-container\").on(\"click\", m => m.showMenu()).content(m => m.mediaView).endChild()\n      .content(m => m.fileUpload).endChild()\n});","__defineTemplate(\"MediaView\", t => { t\n   .content(m => m.activeView)\n});","__defineTemplate(\"MessageBox\", t => { t\n   .beginChild(\"div\").class(m => m.className)\n      .beginChild(\"h5\").set(\"class\",\"title\").text(m => m.title).endChild()\n      .beginChild(\"div\").set(\"class\",\"body\")\n         .if(m => m.icon != null, t3 => t3\n            .template(\"Icon\", m => m.icon)\n         )\n         .beginChild(\"div\").set(\"class\",\"text\").text(m => m.message).endChild()\n      .endChild()\n      .beginChild(\"div\").set(\"class\",\"actions\")\n         .foreach(m => m.actions, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"MultiItemPicker\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"items-container\")\n         .beginChild(\"i\").set(\"class\",\"loading-item fas fa-circle-notch fa-spin fa-fw\").endChild()\n         .foreach(m => m.items, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n      .content(m => m.selectAction).endChild()\n});","__defineTemplate(\"NavBar\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"nav\").set(\"class\",\"nav\")\n         .foreach(m => m.content, t3 => t3\n            .beginChild(\"button\").set(\"class\",\"button-text\").class(m => m.status).on(\"click\", m => m.select()).visible(m => m.visible).behavoir(\"ripple\").content(m => m).endChild()\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"OperationView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"operation-view\").template(\"Spinner\", m => m)\n      .beginChild(\"div\").set(\"class\",\"text\")\n         .beginChild(\"span\").text(m => m.message).endChild()\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"SlidePageHost\", t => { t\n   .beginChild(\"div\").set(\"class\",\"slide-page-host\").class(m => m.activeTransaction)\n      .beginChild(\"div\").set(\"class\",\"page-container\").class(m => m.pageViews[0].className).content(m => m.pageViews[0].content).endChild()\n      .beginChild(\"div\").set(\"class\",\"page-container\").class(m => m.pageViews[1].className).content(m => m.pageViews[1].content).endChild()\n   .endChild()\n});\n__defineTemplate(\"SinglePageHost\", t => { t\n   .beginChild(\"div\").set(\"class\",\"single-page-host\").content(m => m.current.view).endChild()\n});","__defineTemplate(\"PermissionRequestItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className)\n      .beginChild(\"div\").set(\"class\",\"item-content\")\n         .beginChild(\"div\").set(\"class\",\"main\").content(m => m.switchView).endChild()\n         .beginChild(\"span\").set(\"class\",\"right bold uppercase\").text(m => WebApp.Format.action('permission-why')).on(\"click\", m => m.isShowInfo = true).class(\"hidden\", m => m.isShowInfo).endChild()\n      .endChild()\n      .beginChild(\"div\").set(\"class\",\"info-message on-surface-smaller\").text(m => WebApp.Format.message(m.request.description)).class(\"hidden\", m => !m.isShowInfo).endChild()\n   .endChild()\n});","__defineTemplate(\"PopUpContent\", t => { t\n   .beginChild(\"div\").class(m => m.className)\n      .beginChild(\"h5\").set(\"class\",\"title\").text(m => m.title).endChild()\n      .beginChild(\"div\").set(\"class\",\"body\").content(m => m.contentView).endChild()\n      .beginChild(\"div\").set(\"class\",\"actions\")\n         .foreach(m => m.actions, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"ProgressView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(\"visible\", m => m.visible)\n      .beginChild(\"i\").set(\"class\",\"spinner fas fa-circle-notch fa-spin fa-3x fa-fw\").endChild()\n   .endChild()\n});","__defineTemplate(\"PropertyView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"action\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .if(m => m.showLabel && m.label != null, t2 => t2\n         .beginChild(\"label\").set(\"for\",m => m.editor.uid).text(m => m.label).endChild()\n      )\n      .if(m => m.readonly, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"display-value\").text(m => m.editor.displayValue).endChild()\n      , t2 => t2\n         .content(m => m.editor)\n         .if(m => m.error != null, t3 => t3\n            .beginChild(\"span\").set(\"class\",\"error\").text(m => m.error).endChild()\n         )\n      )\n   .endChild()\n});","__defineTemplate(\"RemovableItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"content\").content(m => m.content).endChild()\n      .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"remove button-text\").set(\"href\",\"#!\").on(\"click\", m => m.removeAsync())\n         .beginChild(\"i\").set(\"class\",\"fas fa-times\").endChild()\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"SearchView\", t => { t\n   .if(m => m.isExpanded, t1 => t1\n      .beginChild(\"div\").set(\"class\",\"search-container\").class(m => m.className).visible(m => m.visible).class(m => m.status)\n         .beginChild(\"input\").set(\"type\",\"text\").focus(m => m.hasFocus).set(\"enabled\",m => m.enabled).value(m => m.searchText).set(\"placeholder\",m => m.tooltip).endChild()\n         .beginChild(\"i\").set(\"class\",\"loading-item fas fa-circle-notch fa-spin fa-fw\").endChild()\n      .endChild()\n   , t1 => t1\n      .template(\"ActionIcon\", m => m)\n   )\n});","__defineTemplate(\"SectionEditor\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).content(m => m.navBar)\n      .if(m => m.navBar.selectedItem && m.navBar.selectedItem.content && m.navBar.selectedItem.content.editor != null, t2 => t2\n         .content(m => m.navBar.selectedItem.content.editor)\n      )\n   .endChild()\n});","__defineTemplate(\"SectionsView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .foreach(m => m.content, t2 => t2\n         .beginChild(\"section\")\n            .beginChild(\"h5\").set(\"class\",\"header\").content(m => m.header).endChild()\n            .beginChild(\"div\").set(\"class\",\"content\").content(m => m.content).endChild()\n         .endChild()\n      )\n   .endChild()\n});","__defineTemplate(\"SelectableItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).on(\"click\", m => m.toggle()).class(\"selected\", m => m.isSelected).class(\"checkbox\", m => true)\n      .beginChild(\"div\").set(\"class\",\"checkbox-container\").value(m => m.isSelected)\n         .beginChild(\"i\").set(\"class\",\"fas fa-check\").endChild()\n      .endChild()\n      .content(m => m.content).endChild()\n});\n__defineTemplate(\"SelectableItemViewText\", t => { t\n   .beginChild(\"div\").class(m => m.className).on(\"click\", m => m.toggle()).class(\"selected\", m => m.isSelected).content(m => m.content, true).endChild()\n});","__defineTemplate(\"SimpleItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).class(m => m.status).template(\"Icon\", m => m.icon)\n      .beginChild(\"div\").set(\"class\",\"details\")\n         .beginChild(\"h6\").text(m => m.text).endChild()\n         .if(m => m.subText != null, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"sub-text\").text(m => m.subText).endChild()\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"SingleItemPicker\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"items-container\")\n         .beginChild(\"i\").set(\"class\",\"loading-item fas fa-circle-notch fa-spin fa-fw\").endChild()\n         .content(m => m.contentView).endChild()\n      .if(m => m.editValue != null, t2 => t2\n         .content(m => m.clearAction)\n      )\n      .content(m => m.selectAction).endChild()\n});","__defineTemplate(\"SelectEditor\", t => { t\n   .beginChild(\"select\").set(\"class\",\"input-element\").focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).behavoir(\"attach\")\n      .if(m => m.placeholder != null, t2 => t2\n         .beginChild(\"option\").set(\"value\",\"\").text(m => m.placeholder).endChild()\n      )\n      .foreach(m => m.items, t2 => t2\n         .beginChild(\"option\").text(m => m.content).endChild()\n      )\n   .endChild()\n});\n__defineTemplate(\"SingleItemSelectorButton\", t => { t\n   .beginChild(\"button\").set(\"type\",\"button\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).on(\"click\", m => m.selectAsync())\n      .beginChild(\"span\").text(m => m.selectedItemText).endChild()\n      .beginChild(\"i\").set(\"class\",\"fas fa-caret-down\").endChild()\n   .endChild()\n});","__defineTemplate(\"SnackBar\", t => { t\n   .beginChild(\"div\").set(\"class\",\"snack-bar-container\").class(m => m.status)\n      .beginChild(\"div\").class(m => m.className)\n         .beginChild(\"div\").set(\"class\",\"content\").on(\"click\", m => m.hide(null)).content(m => m.content).endChild()\n         .if(m => m.action != null, t3 => t3\n            .content(m => m.action)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"Spinner\", t => { t\n   .beginChild(\"div\").set(\"class\",\"spinner-container\")\n      .beginChild(\"i\").set(\"class\",\"spinner fas fa-circle-notch fa-spin fa-3x fa-fw\").endChild()\n   .endChild()\n});","__defineTemplate(\"TextEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"class\",\"input-element\").set(\"type\",\"text\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).set(\"maxlength\",m => m.maxLength).endChild()\n});\n__defineTemplate(\"NumberEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"class\",\"input-element\").set(\"inputmode\",\"decimal\").set(\"type\",\"text\").set(\"pattern\",m => WebApp.Format.text('decimal-input')).set(\"lang\",m => WebApp.App.language).value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).endChild()\n});\n__defineTemplate(\"TimeEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"class\",\"input-element\").set(\"type\",\"time\").set(\"lang\",m => WebApp.App.language).value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).set(\"min\",\"00:00\").set(\"max\",\"24:00\").endChild()\n});\n__defineTemplate(\"PasswordEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"class\",\"input-element\").set(\"type\",\"password\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).set(\"maxlength\",m => m.maxLength).endChild()\n});\n__defineTemplate(\"TextEditorMultiLine\", t => { t\n   .beginChild(\"textarea\").set(\"class\",\"input-element\").behavoir(\"attach\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"rows\",m => m.lineCount).set(\"placeholder\",m => m.placeholder).set(\"maxlength\",m => m.maxLength).endChild()\n});","__defineTemplate(\"TextContent\", t => { t\n   .beginChild(\"span\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).text(m => m.content).endChild()\n});\n__defineTemplate(\"TextView\", t => { t\n   .beginChild(\"span\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).text(m => m.text).endChild()\n});\n__defineTemplate(\"Text\", t => { t\n   .beginChild(\"span\").text(m => m).endChild()\n});","__defineTemplate(\"ToastContainer\", t => { t\n   .foreach(m => m, t1 => t1\n      .content(m => m)\n   )\n});\n__defineTemplate(\"Toast\", t => { t\n   .beginChild(\"div\").class(m => m.className)\n      .if(m => m.icon != null, t2 => t2\n         .template(\"Icon\", m => m.icon)\n      )\n      .beginChild(\"span\").text(m => m.message).endChild()\n      .class(\"visible\", m => m.visible).endChild()\n});","__defineTemplate(\"VideoView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"video-container\").visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.className)\n      .beginChild(\"video\").set(\"src\",m => m.content).behavoir(\"attach\").endChild()\n   .endChild()\n});\n__defineTemplate(\"VideoViewInline\", t => { t\n   .beginChild(\"video\").visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.className).set(\"src\",m => m.content).behavoir(\"attach\").endChild()\n});","__defineTemplate(\"WebView\", t => { t\n   .beginChild(\"iframe\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"src\",m => m.content).behavoir(\"attach\").endChild()\n});","__defineTemplate(\"WizardView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"div\").set(\"class\",\"wizard-steps\")\n         .beginChild(\"ul\")\n            .foreach(m => m.content, t4 => t4\n               .beginChild(\"li\").text(m => m.index + 1).class(\"active\", m => m.isActive).class(\"done\", m => m.index < WebApp.injectProxy(m, \"$parent\", t.model).currentStepIndex).endChild()\n            )\n         .endChild()\n      .endChild()\n      .if(m => m.currentView != null, t2 => t2\n         .beginChild(\"h5\").set(\"class\",\"title\").text(m => m.currentView.title).endChild()\n         .if(m => m.currentView.coverImage != null, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"cover-image\").template(\"Icon\", m => m.currentView.coverImage).endChild()\n         )\n         .content(m => m.currentView)\n      )\n      .beginChild(\"div\").set(\"class\",\"actions\").content(m => m.actions.next).content(m => m.actions.finish)\n         .foreach(m => m.currentView.actions, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});","import { IAppArgs, IApplication } from \"./Abstraction/IApplication\";\r\nimport { Type } from \"./Types/Types\";\r\n\r\nexport var App: IApplication<IAppArgs> = null;\r\n\r\nexport const Services: IServices = {} as IServices;\r\n\r\n/****************************************/\r\n\r\nexport async function runAsync<TApp extends IApplication<TArgs>, TArgs extends IAppArgs>(app: Type<TApp> | TApp, args: TArgs, action: () => any) {\r\n\r\n    if (typeof app == \"function\")\r\n        App = new app();\r\n    else\r\n        App = app;\r\n\r\n    window.addEventListener(\"load\", async () => {\r\n\r\n        await App.runAsync(args);\r\n\r\n        action();\r\n    });\r\n}\r\n\r\n/****************************************/\r\n\r\nexport async function install(workerUri: string, versionUri: string, isDebug?: boolean) {\r\n\r\n    const curVer = localStorage.getItem(\"AppVer\");\r\n\r\n    let newVer: string;\r\n\r\n    try {\r\n        newVer = JSON.parse(await (await fetch(versionUri)).text());\r\n    }\r\n    catch {\r\n        newVer = curVer;\r\n        console.warn(\"Error fetching version\");\r\n    }\r\n\r\n    if (\"serviceWorker\" in navigator) {\r\n        const curReg = await navigator.serviceWorker.getRegistration(workerUri);\r\n\r\n        if (curVer != newVer || !curReg) {\r\n\r\n            if (curReg)\r\n                await curReg.update();\r\n            else\r\n                await navigator.serviceWorker.register(workerUri);\r\n        }\r\n    };\r\n\r\n    localStorage.setItem(\"AppVer\", newVer);\r\n\r\n    if (curVer && curVer != newVer && !isDebug)\r\n        document.location.reload();\r\n}","import { IDictionary } from \"../Abstraction/IDictionary\";\r\nimport { IMap } from \"../Abstraction/IMap\";\r\nimport { DynamicString, LocalString, StringUsage } from \"../Types/DynamicString\";\r\n\r\nexport namespace Format {\r\n\r\n    export function join(separator: string, ...args: LocalString[]) {\r\n\r\n        let result = \"\";\r\n\r\n        for (const arg of args) {\r\n            if (!arg)\r\n                continue;\r\n            if (result.length > 0)\r\n                result += separator;\r\n            result += DynamicString.getValue(arg);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function text(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function title(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args, usage: StringUsage.Title });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function action(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args, usage: StringUsage.Action });\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    export function tooltip(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args, usage: StringUsage.Tooltip });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function message(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args, usage: StringUsage.Message });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function numberWithCommas(value: number, separator = \".\") {\r\n        if (value == null || value == undefined)\r\n            return \"\";\r\n        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function currency(value: number, symbol: string = \"€. \") {\r\n        if (value == null || value == undefined)\r\n            return \"\";\r\n        return symbol + \" \" + value.toFixed(2);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function replaceArgs(value: string, args: IDictionary<any> | IMap<any, string>): string {\r\n\r\n        if (!value)\r\n            return;\r\n\r\n        let map: IMap<any, string>;\r\n\r\n        if (typeof (args) != \"function\")\r\n            map = key => args[key];\r\n        else\r\n            map = <any>args;\r\n\r\n        let state = 0;\r\n        let result = \"\";\r\n        let curName = \"\";\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            const c = value[i];\r\n            switch (state) {\r\n                case 0:\r\n                    if (c == \"{\") {\r\n                        curName = \"\";\r\n                        state = 1;\r\n                    }\r\n                    else\r\n                        result += c;\r\n                    break;\r\n                case 1:\r\n                    if (c == \"}\" || c == \":\" || c == \"=\") {\r\n                        state = 0;\r\n\r\n                        if (args)\r\n                            result += map(curName);\r\n\r\n                        if (c == \":\" || c == \"=\")\r\n                            state = 2;\r\n                        else\r\n                            state = 0;\r\n                    }\r\n                    else if (c != \"?\")\r\n                        curName += c;\r\n                    break;\r\n                case 2:\r\n                    if (c == \"}\")\r\n                        state = 0;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function replaceArgs2(value: string, args: IDictionary<any> | IMap<any, string>): string {\r\n\r\n        if (!value)\r\n            return value;\r\n\r\n        let map: IMap<any, string>;\r\n\r\n        if (typeof (args) != \"function\")\r\n            map = key => args[key];\r\n        else\r\n            map = <any>args;\r\n\r\n        let result = \"\";\r\n        let paramName = \"\";\r\n        let state = 0;\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            const c = value[i];\r\n\r\n            switch (state) {\r\n                case 0:\r\n                    if (c == '$')\r\n                        state = 1;\r\n                    else\r\n                        result += c;\r\n                    break;\r\n                case 1:\r\n                    if (c == '(') {\r\n                        state = 2;\r\n                        paramName = \"\";\r\n                    }\r\n                    else {\r\n                        result += \"$\" + c;\r\n                        state = 0;\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    if (c == ')') {\r\n                        const paramValue = map(paramName);\r\n                        result += JSON.stringify(paramValue);\r\n                        state = 0;\r\n                    }\r\n                    else\r\n                        paramName += c;\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function linkify(value: string): string {\r\n\r\n        if (!value)\r\n            return \"\";\r\n\r\n        let replacedText, replacePattern1, replacePattern2, replacePattern3;\r\n\r\n        //URLs starting with http://, https://, or ftp://\r\n        replacePattern1 = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\r\n        replacedText = value.replace(replacePattern1, '<a href=\"$1\" target=\"_blank\">$1</a>');\r\n\r\n        //URLs starting with \"www.\" (without // before it, or it'd re-link the ones done above).\r\n        replacePattern2 = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\r\n        replacedText = replacedText.replace(replacePattern2, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\r\n\r\n        //Change email addresses to mailto:: links.\r\n        replacePattern3 = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\r\n        replacedText = replacedText.replace(replacePattern3, '<a href=\"mailto:$1\">$1</a>');\r\n\r\n        return replacedText;\r\n    }\r\n}","﻿import { Services } from \"../Global\";\r\n\r\n\r\nexport namespace Http {\r\n\r\n    export function getStringAsync(url: string): Promise<string> {\r\n        return Services.httpClient.requestAsync<string>({\r\n            url: url,\r\n            method: \"GET\",\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function postStringAsync(url: string, data: any): Promise<string> {\r\n        return Services.httpClient.requestAsync<string>({\r\n            url: url,\r\n            method: \"POST\",\r\n            data: data,\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function getJsonAsync<T>(url: string): Promise<T> {\r\n\r\n        return Services.httpClient.requestAsync<T>({\r\n            url: url,\r\n            method: \"GET\",\r\n            responseType: \"application/json\",\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function postJsonAsync<T>(url: string, data: any): Promise<T> {\r\n\r\n        return Services.httpClient.requestAsync<T>({\r\n            url: url,\r\n            method: \"POST\",\r\n            responseType: \"application/json\",\r\n            data: data,\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function postBinaryAsync<T>(url: string, data: Blob | File | ArrayBuffer, onProgress?: (ev: ProgressEvent) => boolean): Promise<T> {\r\n\r\n        return Services.httpClient.requestAsync<T>({\r\n            url: url,\r\n            method: \"POST\",\r\n            responseType: \"application/json\",\r\n            dataType: \"application/octet-stream\",\r\n            data: data,\r\n            onProgress: onProgress\r\n        });\r\n    }\r\n}","﻿import { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { ICloneable } from \"../Abstraction/ICloneable\";\r\nimport { IList } from \"../Abstraction/IList\";\r\nimport { IStateManager } from \"../Abstraction/IStateManager\";\r\nimport { Guid } from \"../Types/Types\";\r\n\r\nconst GUID_REGEXP = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n\r\nexport function isList(obj: any): obj is IList<any> {\r\n\r\n    return obj && typeof obj == \"object\" && \"add\" in obj && \"get\" in obj && \"count\" in obj;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isCloneable(obj: any): obj is ICloneable {\r\n\r\n    return obj && typeof obj == \"object\" && \"clone\" in obj && typeof obj[\"clone\"] == \"function\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isObservableList(obj: any): obj is IObservableList<any> {\r\n\r\n    return isList(obj) && \"subscribe\" in obj;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isString(obj: any): obj is string {\r\n\r\n    return typeof obj == \"string\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isFunction(obj: any): obj is Function {\r\n\r\n    return typeof obj == \"function\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isObject(obj: any): obj is object {\r\n\r\n    return typeof obj == \"object\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isStateManager(obj: any): obj is IStateManager {\r\n\r\n    return obj && typeof obj == \"object\" && \"setState\" in obj && \"getState\" in obj;\r\n}\r\n\r\n\r\nexport function isGuid(obj: any): obj is Guid {\r\n\r\n    return GUID_REGEXP.test(obj?.toString());\r\n\r\n}\r\n","import { App } from \"../Global\";\r\n\r\nexport namespace Uri {\r\n\r\n    var _relativeSegment: string;\r\n    var _absoluteSegment: string;\r\n\r\n    /****************************************/\r\n\r\n    export function absolute(uri: string): string {\r\n\r\n        if (uri.substr(0, 2) == \"./\" || uri.substr(0, 2) == \"~/\")\r\n            return getAbsoluteSegment(document.URL) + App.baseUrl.substr(1) + uri.substr(2);\r\n\r\n        else if (uri.substr(0, 1) == \"/\")\r\n            return getAbsoluteSegment(document.URL) + uri.substr(1);\r\n\r\n        else if (isAbsolute(uri))\r\n            return uri;\r\n\r\n        return getRelativeSegment(document.URL) + uri.substr(1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function isAbsolute(uri: string): boolean {\r\n        return uri.indexOf(\"://\") != -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function getRelativeSegment(uri: string): string {\r\n\r\n        if (!_relativeSegment) {\r\n\r\n            _relativeSegment = \"\";\r\n\r\n            const index = uri.lastIndexOf(\"/\");\r\n            if (index != -1)\r\n                _relativeSegment = uri.substr(0, index + 1);\r\n        }\r\n        return _relativeSegment;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function getAbsoluteSegment(uri: string): string {\r\n\r\n        if (!_absoluteSegment) {\r\n\r\n            _absoluteSegment = \"\";\r\n\r\n            let index = uri.indexOf(\"://\");\r\n            if (index != -1) {\r\n                index = uri.indexOf(\"/\", index + 4);\r\n                if (index != -1)\r\n                    _absoluteSegment = uri.substr(0, index + 1);\r\n            }\r\n        }\r\n\r\n        return _absoluteSegment;\r\n    }\r\n}","import { IDictionary } from \"./Abstraction/IDictionary\";\r\nimport { IKeyValue } from \"./Abstraction/IKeyValue\";\r\nimport { IList } from \"./Abstraction/IList\";\r\nimport { isList } from \"./Helpers/TypeCheck\";\r\nimport { Type } from \"./Types/Types\";\r\nimport { delayAsync } from \"./Utils/PromiseUtils\";\r\n\r\nexport interface IEnumerator<T> {\r\n\r\n    current: T;\r\n\r\n    moveNext(): boolean;\r\n\r\n    reset(): void;\r\n\r\n    toArray?(): T[];\r\n\r\n    count?(): number;\r\n\r\n    first?(): T;\r\n\r\n    last?(): T;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IGroupItem<TKey, TValue> {\r\n    key: TKey;\r\n    values: Linq<TValue>;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface ICollection<T> {\r\n\r\n    length: number;\r\n\r\n    item(index: number): T;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IEnumerable<T> {\r\n\r\n    getEnumerator(): IEnumerator<T>;\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass EmptyEnumerator<T> implements IEnumerator<T> {\r\n\r\n    get current(): T {\r\n        return undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(): number {\r\n        return 0;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass DistinctEnumerator<TSrc, TDest> implements IEnumerator<TDest>{\r\n\r\n    private _selector: (item: TSrc) => TDest;\r\n    private _source: IEnumerator<TSrc>;\r\n    private _foundItems: TDest[];\r\n    private _current: TDest;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<TSrc>, selector?: (item: TSrc) => TDest) {\r\n\r\n        this._selector = selector;\r\n        this._source = source;\r\n\r\n        if (!this._selector)\r\n            this._selector = a => <any>a;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): TDest {\r\n        return this._current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        while (this._source.moveNext()) {\r\n            const item = this._selector(this._source.current);\r\n            if (this._foundItems.indexOf(item) == -1) {\r\n                this._foundItems.push(item);\r\n                this._current = item;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._source.reset();\r\n        this._foundItems = [];\r\n        this._current = undefined;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass DictionaryEnumerator<T> implements IEnumerator<IKeyValue<T>> {\r\n\r\n    private _curIndex: number;\r\n    private _keyList: string[];\r\n    private _value: IDictionary<T>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: IDictionary<T>) {\r\n        this._keyList = Object.getOwnPropertyNames(value);\r\n        this._value = value;\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): IKeyValue<T> {\r\n        return {\r\n            key: this._keyList[this._curIndex],\r\n            value: this._value[this._keyList[this._curIndex]]\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        this._curIndex++;\r\n        return this._curIndex < this._keyList.length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curIndex = -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    first(): IKeyValue<T> {\r\n        return {\r\n            key: this._keyList[0],\r\n            value: this._value[this._keyList[0]]\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    last(): IKeyValue<T> {\r\n        return {\r\n            key: this._keyList[this._keyList.length - 1],\r\n            value: this._value[this._keyList[this._keyList.length - 1]]\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(): number {\r\n        return this._keyList.length;\r\n    }\r\n\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass ArrayEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _curIndex: number;\r\n    private _value: T[];\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: T[]) {\r\n        this._value = value;\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._value[this._curIndex];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toArray() {\r\n        return this._value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        this._curIndex++;\r\n        return this._curIndex < this._value.length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curIndex = -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    first(): T {\r\n        return this._value[0];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    last(): T {\r\n        return this._value[this._value.length - 1];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(): number {\r\n        return this._value.length;\r\n    }\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nclass CollectionEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _curIndex: number;\r\n    private _value: ICollection<T>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: ICollection<T>) {\r\n        this._value = value;\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._value.item(this._curIndex);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        this._curIndex++;\r\n        return this._curIndex < this._value.length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curIndex = -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    first(): T {\r\n        return this._value.item(0);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    last(): T {\r\n        return this._value.item(this._value.length - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(): number {\r\n        return this._value.length;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass SelectManyEnumerator<TSrc, TDest> implements IEnumerator<TDest> {\r\n\r\n    private _selector: (item: TSrc, index?: number) => IEnumerable<TDest>;\r\n    private _source: IEnumerator<TSrc>;\r\n    private _index: number;\r\n    private _curGroup: IEnumerator<TDest>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<TSrc>, selector: (item: TSrc, index?: number) => IEnumerable<TDest>) {\r\n\r\n        this._selector = selector;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): TDest {\r\n        return this._curGroup?.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        while (true) {\r\n\r\n            while (!this._curGroup) {\r\n\r\n                if (!this._source.moveNext())\r\n                    return false;\r\n\r\n                this._curGroup = this._selector(this._source.current, this._index)?.getEnumerator();\r\n            }\r\n\r\n            if (this._curGroup) {\r\n\r\n                if (!this._curGroup.moveNext())\r\n                    this._curGroup = null;\r\n                else {\r\n                    this._index++;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curGroup = null;\r\n        this._index = -1;\r\n        this._source.reset();\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass SelectEnumerator<TSrc, TDest> implements IEnumerator<TDest> {\r\n\r\n    private _selector: (item: TSrc, index?: number) => TDest;\r\n    private _source: IEnumerator<TSrc>;\r\n    private _index: number;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<TSrc>, selector: (item: TSrc, index?: number) => TDest) {\r\n\r\n        this._selector = selector;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): TDest {\r\n        return this._selector(this._source.current, this._index);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        this._index++;\r\n        return this._source.moveNext();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._index = -1;\r\n        this._source.reset();\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass WhereEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _condition: (item: T) => boolean;\r\n    private _source: IEnumerator<T>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<T>, condition: (item: T) => boolean) {\r\n\r\n        this._condition = condition;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._source.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        while (this._source.moveNext()) {\r\n            if (this._condition(this._source.current))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._source.reset();\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass SkipEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _source: IEnumerator<T>;\r\n    private _count: number;\r\n    private _skipped: boolean;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<T>, count: number) {\r\n\r\n        this._count = count;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._source.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        if (!this._skipped) {\r\n            let elCount = 0;\r\n            while (elCount < this._count) {\r\n                if (!this._source.moveNext())\r\n                    return false;\r\n                elCount++;\r\n            }\r\n            this._skipped = true;\r\n        }\r\n\r\n        return this._source.moveNext();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._source.reset();\r\n        this._skipped = false;\r\n    }\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass TakeEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _source: IEnumerator<T>;\r\n    private _count: number;\r\n    private _taken: number;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<T>, count: number) {\r\n\r\n        this._count = count;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._source.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        if (this._taken >= this._count)\r\n            return false;\r\n\r\n        if (!this._source.moveNext())\r\n            return false;\r\n\r\n        this._taken++;\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._source.reset();\r\n        this._taken = 0;\r\n    }\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass IteratorEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _source: Iterator<T>;\r\n    private _current: T;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: Iterator<T>) {\r\n        this._source = source;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        const result = this._source.next();\r\n        if (result.done)\r\n            return false;\r\n        this._current = result.value;\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Linq<T> implements IEnumerable<T> {\r\n\r\n    private _enumerator: IEnumerator<T>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: IEnumerator<T>) {\r\n\r\n        this._enumerator = value;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    selectMany<TResult>(selector: (item: T, index?: number) => IEnumerable<TResult>): Linq<TResult> {\r\n\r\n        return linq(new SelectManyEnumerator(this._enumerator, selector));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select<TResult>(selector: (item: T, index?: number) => TResult): Linq<TResult> {\r\n\r\n        return linq(new SelectEnumerator(this._enumerator, selector));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    ofType<TCheck>(typeCheck: (item: T) => boolean): Linq<TCheck>;\r\n\r\n    ofType<TCheck>(type: Type<TCheck>): Linq<TCheck>;\r\n\r\n    ofType<TCheck>(typeOrCheck: Type<TCheck> | { (item: T) : boolean }): Linq<TCheck> {\r\n\r\n        if (\"prototype\" in typeOrCheck)\r\n            return this.where(a => a instanceof typeOrCheck) as any;\r\n\r\n        return this.where(a => (typeOrCheck as any)(a)) as any;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    where(condition: (item: T) => boolean): Linq<T> {\r\n\r\n        return linq(new WhereEnumerator(this._enumerator, condition));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    first(condition?: (item: T) => boolean): T {\r\n\r\n        if (condition)\r\n            return this.where(condition).first();\r\n\r\n        if (this._enumerator.first)\r\n            return this._enumerator.first();\r\n\r\n        this._enumerator.reset();\r\n        if (this._enumerator.moveNext())\r\n            return this._enumerator.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    last(): T {\r\n\r\n        if (this._enumerator.last)\r\n            return this._enumerator.last();\r\n\r\n        this._enumerator.reset();\r\n\r\n        let lastItem: T;\r\n\r\n        while (this._enumerator.moveNext())\r\n            lastItem = this._enumerator.current;\r\n\r\n        return lastItem;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    sum(selector?: (item: T) => number): number {\r\n\r\n        if (selector)\r\n            return this.select(selector).sum();\r\n\r\n        let result = 0;\r\n\r\n        this.foreach(a => {\r\n            result += parseFloat(a as any);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    min(selector?: (item: T) => number): number {\r\n\r\n        if (selector)\r\n            return this.select(selector).min();\r\n        let result = Number.POSITIVE_INFINITY;\r\n        this.foreach(a => {\r\n            const number = parseFloat(a as any);\r\n            if (number < result)\r\n                result = number;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    max(selector?: (item: T) => number): number {\r\n\r\n        if (selector)\r\n            return this.select(selector).max();\r\n        let result = Number.NEGATIVE_INFINITY;\r\n        this.foreach(a => {\r\n            const number = parseFloat(a as any);\r\n            if (number > result)\r\n                result = number;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    avg(selector?: (item: T) => number): number {\r\n\r\n        if (selector)\r\n            return this.select(selector).avg();\r\n\r\n        let result = 0;\r\n        let count = 0;\r\n\r\n        this.foreach(a => {\r\n            result += parseFloat(a as any);\r\n            count++;\r\n        });\r\n\r\n        if (count)\r\n            return result / count;\r\n        return NaN;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(condition?: (item: T) => boolean): number {\r\n\r\n        if (condition)\r\n            return this.where(condition).count();\r\n\r\n        if (this._enumerator.count)\r\n            return this._enumerator.count();\r\n\r\n        this._enumerator.reset();\r\n\r\n        let count = 0;\r\n        while (this._enumerator.moveNext())\r\n            count++;\r\n\r\n        return count;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    concat(separator: string, selector?: (item: T) => any): string {\r\n\r\n        let result = \"\";\r\n        let index = 0;\r\n\r\n        if (!selector)\r\n            selector = a => a.toString();\r\n\r\n        this.foreach(a => {\r\n            if (index > 0)\r\n                result += separator;\r\n            result += selector(a);\r\n            index++;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    orderBy(selector: (item: T) => any): Linq<T> {\r\n\r\n        const result = this.toArray();\r\n        result.sort((a, b) => {\r\n            const itemA = selector(a);\r\n            const itemB = selector(b);\r\n            return itemA - itemB;\r\n        });\r\n        return linq(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    orderByDesc(selector: (item: T) => any): Linq<T> {\r\n\r\n        const result = this.toArray();\r\n        result.sort((a, b) => {\r\n            const itemA = selector(a);\r\n            const itemB = selector(b);\r\n            return itemB - itemA;\r\n        });\r\n        return linq(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    distinct<TDest>(selector?: (item: T) => TDest): Linq<TDest> {\r\n\r\n        return linq(new DistinctEnumerator<T, TDest>(this._enumerator, selector));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    groupBy<TKey>(key: (item: T) => TKey, comparer?: (a: TKey, b: TKey) => boolean): Linq<IGroupItem<TKey, T>>;\r\n\r\n    groupBy<TKey extends IDictionary<(item: T) => any>>(key: (item: T) => TKey, comparer?: (a: TKey, b: TKey) => boolean): Linq<IGroupItem<TKey, T>>;\r\n\r\n    groupBy<TKey>(key: any, comparer?: (a: TKey, b: TKey) => boolean): Linq<IGroupItem<TKey, T>> {\r\n\r\n        const result: Array<IGroupItem<TKey, T>> = [];\r\n\r\n        if (!comparer)\r\n            comparer = (a, b) => a == b;\r\n\r\n        if (typeof key == \"function\") {\r\n\r\n            const keySelector = <(item: T) => TKey>key;\r\n\r\n            this.foreach(item => {\r\n                const itemKey = keySelector(item);\r\n                let groupItem = linq(result).first(a => comparer(a.key, itemKey));\r\n                if (!groupItem) {\r\n                    groupItem = {\r\n                        key: itemKey,\r\n                        values: linq(new ArrayEnumerator([]))\r\n                    };\r\n                    result.push(groupItem);\r\n                }\r\n                groupItem.values._enumerator.toArray().push(item);\r\n\r\n            });\r\n        }\r\n\r\n        return linq(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    indexOf(condition: (item: T) => boolean): number {\r\n\r\n        let index = 0;\r\n\r\n        this._enumerator.reset();\r\n        while (this._enumerator.moveNext()) {\r\n            if (condition(this._enumerator.current))\r\n                return index;\r\n            index++;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    foreach(action: (item: T, index?: number) => void): Linq<T> {\r\n\r\n        this._enumerator.reset();\r\n\r\n        let index = 0;\r\n        while (this._enumerator.moveNext()) {\r\n            action(this._enumerator.current, index);\r\n            index++;\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /****************************************/\r\n\r\n    async foreachAsync(action: (item: T, index?: number) => Promise<void>, chunkSize = 1): Promise<Linq<T>> {\r\n\r\n        this._enumerator.reset();\r\n\r\n        let index = 0;\r\n        while (this._enumerator.moveNext()) {\r\n            await action(this._enumerator.current, index);\r\n            index++;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    any(condition?: (item: T) => boolean): boolean {\r\n\r\n        if (!condition)\r\n            return this._enumerator.moveNext();\r\n\r\n        return this.where(condition).any();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    contains(item: T, comparer?: (a: T, b: T) => boolean) {\r\n\r\n        if (!comparer)\r\n            comparer = (a, b) => a == b;\r\n\r\n        this._enumerator.reset();\r\n\r\n        while (this._enumerator.moveNext())\r\n            if (comparer(this._enumerator.current, item))\r\n                return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    all(condition: (item: T) => boolean): boolean {\r\n\r\n        return !this.where(a => !condition(a)).any();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    take(count: number): Linq<T> {\r\n        return linq(new TakeEnumerator(this._enumerator, count));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    skip(count: number): Linq<T> {\r\n        return linq(new SkipEnumerator(this._enumerator, count));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    replace(condition: (item: T) => boolean, newItem: T) {\r\n        if (!(this._enumerator instanceof ArrayEnumerator))\r\n            throw \"Invalid enumerator, expected array\";\r\n        const items = this._enumerator.toArray();\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (condition(items[i]))\r\n                items[i] == newItem;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toGenerator() {\r\n\r\n        function* generator(self: Linq<T>) {\r\n\r\n            self._enumerator.reset();\r\n            while (self._enumerator.moveNext())\r\n                yield self._enumerator.current;\r\n        }\r\n\r\n        return generator(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async toArrayAsync(chunkSize = 1) {\r\n\r\n        if (this._enumerator.toArray)\r\n            return this._enumerator.toArray();\r\n\r\n        const array: T[] = [];\r\n\r\n        let index = 0;\r\n\r\n        for (const item of this.toGenerator()) {\r\n\r\n            array.push(item);\r\n\r\n            if (index % chunkSize == 0)\r\n                await delayAsync(0);\r\n\r\n            index++;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toArray(): T[] {\r\n\r\n        if (this._enumerator.toArray)\r\n            return this._enumerator.toArray();\r\n\r\n        const result: T[] = [];\r\n        this.foreach(a => result.push(a));\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toDictionary(keySelector: (item: T) => string): IDictionary<T>;\r\n\r\n    toDictionary<TValue>(keySelector: (item: T) => string, valueSelector: (item: T) => TValue): IDictionary<TValue>;\r\n\r\n    toDictionary(keySelector: (item: T) => string, valueSelector?: (item: T) => any): IDictionary<any> {\r\n\r\n        if (!valueSelector)\r\n            valueSelector = a => a;\r\n\r\n        const result = {};\r\n        this.foreach(a =>\r\n            result[keySelector(a)] = valueSelector(a));\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getEnumerator(): IEnumerator<T> {\r\n\r\n        return this._enumerator;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    [Symbol.iterator]() {\r\n        this._enumerator.reset();\r\n        return ({\r\n            next: (value?: any): IteratorResult<T> => {\r\n                const isDone = !this._enumerator.moveNext();\r\n                return {\r\n                    done: isDone,\r\n                    value: this._enumerator.current\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function linq<T>(enumerator: IEnumerator<T>): Linq<T>;\r\nexport function linq<T>(enumerable: IEnumerable<T>): Linq<T>;\r\nexport function linq<T>(array: T[]): Linq<T>;\r\nexport function linq<T>(list: ICollection<T>): Linq<T>;\r\nexport function linq<T>(iterator: Iterator<T>): Linq<T>;\r\nexport function linq<T>(dictionary: IDictionary<T>): Linq<IKeyValue<T>>;\r\nexport function linq<T extends Node>(nodeList: NodeListOf<T>): Linq<T>;\r\nexport function linq<T>(iterable: IList<T>): Linq<T>;\r\n\r\nexport function linq<T>(value: any): Linq<any> {\r\n\r\n    let enumerator: IEnumerator<any>;\r\n\r\n    if (!value)\r\n        enumerator = new EmptyEnumerator<T>();\r\n    else if (Array.isArray(value))\r\n        enumerator = new ArrayEnumerator<T>(value);\r\n    else if (\"getEnumerator\" in value)\r\n        enumerator = (value as IEnumerable<T>).getEnumerator();\r\n    else if (isList(value))\r\n        enumerator = new ArrayEnumerator(value.toArray());\r\n    else if (\"item\" in value)\r\n        enumerator = new CollectionEnumerator<T>(value);\r\n    else if (\"next\" in value && typeof (value[\"next\"]) == \"function\")\r\n        enumerator = new IteratorEnumerator(value);\r\n    else if (\"current\" in value && \"reset\" in value && \"moveNext\" in value)\r\n        enumerator = value;\r\n    else\r\n        enumerator = new DictionaryEnumerator<T>(value);\r\n\r\n    return new Linq(enumerator);\r\n}","import { IDictionary } from \"./Abstraction/IDictionary\";\r\nimport { IDynamicString } from \"./Types/DynamicString\";\r\n\r\ndeclare global {\r\n    interface IStringTable {\r\n        [key: string]: IDynamicString|string;\r\n    }\r\n}\r\n\r\ninterface IStringTableConfig {\r\n    language: string;\r\n    sector?: string;\r\n}\r\n\r\nexport var Strings: IStringTable;\r\n\r\n/****************************************/\r\n\r\nexport class StringTable {\r\n\r\n    private static _tables: IDictionary<IStringTable> = {};\r\n    private static _currentConfig: IStringTableConfig;\r\n\r\n    /****************************************/\r\n\r\n    private static getKey(config: IStringTableConfig): string {\r\n        let key = config.language;\r\n        if (config.sector)\r\n            key += \"|\" + config.sector;\r\n        return key;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static get(config?: IStringTableConfig): IStringTable {\r\n\r\n        if (!config)\r\n            config = this._currentConfig;\r\n\r\n        let result = StringTable._tables[this.getKey(config)];\r\n        if (!result && config.sector)\r\n            result = StringTable._tables[this.getKey({ language: config.language })];\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static add(value: Partial<IStringTable>, config: IStringTableConfig): void {\r\n        const key = this.getKey(config);\r\n        const curValue = this._tables[key];\r\n        if (!curValue)\r\n            this._tables[key] = value as IStringTable;\r\n        else {\r\n            for (const str in value)\r\n                curValue[str] = value[str];\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static get currentConfig(): IStringTableConfig {\r\n        return this._currentConfig;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static set currentConfig(value: IStringTableConfig) {\r\n        this._currentConfig = value;\r\n        Strings = StringTable.get();\r\n    }\r\n}","import { Strings } from \"../StringTable\";\r\n\r\nexport type LocalString = IDynamicString | string | keyof IStringTable;\r\n\r\nexport enum WordNumber {\r\n    Singular,\r\n    Plural\r\n}\r\n\r\n/****************************************/\r\n\r\nexport enum WordGender {\r\n    Male,\r\n    Female\r\n}\r\n\r\n/****************************************/\r\n\r\nexport enum StringUsage {\r\n    General,\r\n    Label,\r\n    Column,\r\n    Action,\r\n    Message,\r\n    Question,\r\n    Title,\r\n    Tooltip\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDynamicStringConfig {\r\n    useArticle?: boolean;\r\n    useArticleInd?: boolean;\r\n    cardinality?: number;\r\n    number?: WordNumber;\r\n    gender?: WordGender;\r\n    scope?: string;\r\n    language?: string;\r\n    usage?: StringUsage;\r\n    params?: Array<LocalString>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDynamicString {\r\n    (config?: IDynamicStringConfig): string;\r\n};\r\n\r\n\r\n/****************************************/\r\n\r\ninterface IFullNameConfig {\r\n    detArticle?: string;\r\n    undetArticle?: string;\r\n    name: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAdverbConfig {\r\n    male?: string;\r\n    female?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface INameConfig {\r\n    gender?: WordGender;\r\n    singular: IFullNameConfig;\r\n    plural?: IFullNameConfig;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAdjectiveConfig {\r\n    male?: INameConfig;\r\n    female?: INameConfig;\r\n}\r\n\r\n/****************************************/\r\n\r\nclass DynamicStringManager {\r\n\r\n    format(Strings: IDynamicString): IDynamicString {\r\n        return cfg => {\r\n            let curValue = Strings(cfg);\r\n\r\n            if (cfg) {\r\n\r\n                if (cfg.usage === StringUsage.Column ||\r\n                    cfg.usage === StringUsage.Label ||\r\n                    cfg.usage === StringUsage.Action ||\r\n                    cfg.usage === StringUsage.Title ||\r\n                    cfg.usage === StringUsage.Question ||\r\n                    cfg.usage === StringUsage.Tooltip ||\r\n                    cfg.usage === StringUsage.Message)\r\n                    curValue = curValue.substr(0, 1).toUpperCase() + curValue.substr(1);\r\n\r\n                if (cfg.usage === StringUsage.Label)\r\n                    curValue += \":\";\r\n\r\n                if (cfg.usage === StringUsage.Message)\r\n                    curValue += \".\";\r\n\r\n                if (cfg.usage === StringUsage.Question)\r\n                    curValue += \"?\";\r\n            }\r\n\r\n            return curValue;\r\n        };\r\n    }\r\n\r\n    get(name: string): IDynamicString {\r\n        const value = Strings[name];\r\n        if (typeof value == \"string\")\r\n            return DynamicString.simple(value);\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getValue(value: LocalString, config?: IDynamicStringConfig): string;\r\n\r\n    getValue(value: LocalString, usage?: StringUsage): string;\r\n\r\n    getValue(value: LocalString, usageOrConfig?: any): string {\r\n\r\n        if (typeof value == \"function\") {\r\n\r\n            let cfg: IDynamicStringConfig;\r\n\r\n            if (usageOrConfig) {\r\n                if (StringUsage[usageOrConfig])\r\n                    cfg = {\r\n                        usage: usageOrConfig\r\n                    };\r\n                else\r\n                    cfg = usageOrConfig;\r\n            }\r\n\r\n            return (value as IDynamicString)(cfg);\r\n        }\r\n        else {\r\n\r\n            if (value && Strings && value in Strings)\r\n                return this.getValue(this.get(value as string), usageOrConfig);\r\n        }\r\n\r\n        return <string>value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    complex(value: string): IDynamicString {\r\n        return DynamicString.format(cfg => {\r\n\r\n            let state = 0;\r\n            let result = \"\";\r\n            let curName = \"\";\r\n            let curNameParams: string = null;\r\n            let curNameParamsDeep = 0;\r\n\r\n            if (!cfg)\r\n                cfg = {};\r\n\r\n            if (!cfg.gender && cfg.params) {\r\n                //Forzo la valutazione dei parametri x estrarre il genere\r\n                cfg.params.forEach(a => {\r\n                    if (typeof a === \"function\")\r\n                        (a as IDynamicString)({ ...cfg, params: [] });\r\n                });\r\n            }\r\n\r\n            for (let i = 0; i < value.length; i++) {\r\n                const c = value[i];\r\n                switch (state) {\r\n                    case 0:\r\n                        if (c == \"{\") {\r\n                            curName = \"\";\r\n                            curNameParams = null;\r\n                            state = 1;\r\n                        }\r\n                        else\r\n                            result += c;\r\n                        break;\r\n                    case 1:\r\n                        if (c == \"}\") {\r\n                            state = 3;\r\n                            i--;\r\n                            break;\r\n                        }\r\n                        else if (c == \":\") {\r\n                            curNameParams = \"\";\r\n                            curNameParamsDeep = 0;\r\n                            state = 2;\r\n                        }\r\n                        else\r\n                            curName += c;\r\n                        break;\r\n                    case 2:\r\n                        if (c == \"{\")\r\n                            curNameParamsDeep++;\r\n\r\n                        if (c == \"}\") {\r\n                            curNameParamsDeep--;\r\n                            if (curNameParamsDeep < 0) {\r\n                                state = 3;\r\n                                i--;\r\n                            }\r\n                            else\r\n                                curNameParams += c;\r\n                        }\r\n                        else\r\n                            curNameParams += c;\r\n                        break;\r\n                    case 3:\r\n\r\n                        let paramCfg: IDynamicStringConfig;\r\n\r\n                        if (curNameParams)\r\n                            paramCfg = <IDynamicStringConfig>JSON.parse(curNameParams.trim());\r\n                        else\r\n                            paramCfg = {};\r\n\r\n                        let flagFound = true;\r\n\r\n                        while (flagFound) {\r\n\r\n                            flagFound = false;\r\n\r\n                            if (curName.startsWith(\"*\")) {\r\n                                paramCfg.number = WordNumber.Plural;\r\n                                curName = curName.substr(1);\r\n                                flagFound = true;\r\n                            }\r\n\r\n                            if (curName.startsWith(\"!\")) {\r\n                                paramCfg.useArticle = true;\r\n                                curName = curName.substr(1);\r\n                                flagFound = true;\r\n                            }\r\n\r\n                            if (curName.startsWith(\".\")) {\r\n                                paramCfg.useArticleInd = true;\r\n                                curName = curName.substr(1);\r\n                                flagFound = true;\r\n                            }\r\n                        }\r\n\r\n                        if (cfg.gender && !paramCfg.gender)\r\n                            paramCfg.gender = cfg.gender;\r\n\r\n                        if (cfg.cardinality && !paramCfg.cardinality)\r\n                            paramCfg.cardinality = cfg.cardinality;\r\n\r\n                        if (cfg.number && !paramCfg.number)\r\n                            paramCfg.number = cfg.number;\r\n\r\n                        if (cfg.useArticle !== undefined && paramCfg.useArticle === undefined)\r\n                            paramCfg.useArticle = cfg.useArticle;\r\n\r\n\r\n                        const number = parseInt(curName);\r\n\r\n                        if (!isNaN(number)) {\r\n                            if (cfg.params && number < cfg.params.length) {\r\n                                const param = cfg.params[number];\r\n                                result += this.getValue(param, paramCfg);\r\n                            }\r\n                        }\r\n                        else\r\n                            result += this.get(curName)(paramCfg);\r\n\r\n                        if (paramCfg.gender)\r\n                            cfg.gender = paramCfg.gender;\r\n\r\n                        state = 0;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return result;\r\n\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    adverb(advCfg: IAdverbConfig): IDynamicString {\r\n        return this.format(cfg => {\r\n\r\n            return cfg && cfg.gender == WordGender.Female ? advCfg.female : advCfg.male;\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private appendArticle(article: string, name: string): string {\r\n        let result = article;\r\n        if (result.charAt(result.length - 1) != \"'\")\r\n            result += \" \";\r\n        return result + name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    adjective(adjCfg: IAdjectiveConfig): IDynamicString {\r\n        return this.format(cfg => {\r\n\r\n            const gender = cfg && cfg.gender == WordGender.Female ? adjCfg.female : adjCfg.male;\r\n\r\n            const fullName = cfg && (cfg.number == WordNumber.Plural || cfg.cardinality > 1) ? gender.plural : gender.singular;\r\n\r\n            if (cfg && cfg.useArticle)\r\n                return this.appendArticle(fullName.detArticle, fullName.name);\r\n\r\n            if (cfg && cfg.useArticleInd)\r\n                return this.appendArticle(fullName.undetArticle, fullName.name);\r\n\r\n            return fullName.name;\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    noun(nameCfg: INameConfig): IDynamicString {\r\n        return this.format(cfg => {\r\n\r\n            if (!cfg)\r\n                cfg = {};\r\n\r\n            if (nameCfg.gender)\r\n                cfg.gender = nameCfg.gender;\r\n\r\n            const fullName = (cfg.number == WordNumber.Plural || cfg.cardinality > 1) ? nameCfg.plural : nameCfg.singular;\r\n\r\n            if (cfg && cfg.useArticle)\r\n                return this.appendArticle(fullName.detArticle, fullName.name);\r\n\r\n            if (cfg && cfg.useArticleInd)\r\n                return this.appendArticle(fullName.undetArticle, fullName.name);\r\n\r\n            return fullName.name;\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    map(selector: (table: IStringTable) => IDynamicString): IDynamicString {\r\n        return cfg => selector(Strings)(cfg);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    simple(value: string): IDynamicString {\r\n        return this.format(() => value);\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport var DynamicString = new DynamicStringManager();\r\n\r\nexport function $string(name: string): IDynamicString {\r\n    return DynamicString.get(name);\r\n}\r\n","﻿\r\nexport function delayAsync(milliseconds: number): Promise<void> {\r\n\r\n    return new Promise(res => setTimeout(res, milliseconds));\r\n};","import { IOperation } from \"../../Core/Abstraction/IOperation\";\r\nimport { App, Services } from \"../../Core/Global\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { Http } from \"../../Core/Helpers/Http\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { IPage } from \"../Abstraction/IPage\";\r\nimport { IPageInfo, IPageManager } from \"../Abstraction/IPageManager\";\r\nimport { ILoader, ScriptLoader, StyleLoader } from \"../Helpers/Loaders\";\r\n\r\ninterface IClientPage {\r\n\r\n    scripts?: string[];\r\n\r\n    styles?: string[];\r\n\r\n    action?: string;\r\n\r\n    isLoded?: boolean;\r\n\r\n    url?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAppInclude {\r\n\r\n    scripts: string[];\r\n\r\n    styles: string[];\r\n\r\n    components: string[];\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAppComponent {\r\n    include: IAppInclude;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAppPage extends IAppComponent {\r\n\r\n    url: string;\r\n\r\n    action: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAppStructure {\r\n\r\n    pages: { [name: string]: IAppPage };\r\n\r\n    components: { [name: string]: IAppComponent };\r\n\r\n    templates?: { [name: string]: string };\r\n\r\n    include?: [];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class DynamicPageManager implements IPageManager {\r\n\r\n    private _struture: IAppStructure;\r\n\r\n    /****************************************/\r\n\r\n    async createPageAsync(pageInfo: IPageInfo): Promise<IPage> {\r\n\r\n        const curOperation = Services.operation.begin({ message: \"Loading page '\" + pageInfo.name + \"'...\" });\r\n\r\n        const clientPage = await this.getClientPageAsync(pageInfo.name, curOperation);\r\n\r\n        if (!clientPage.isLoded)\r\n            await this.loadClientPageAsync(clientPage, curOperation);\r\n\r\n        const result = eval(clientPage.action);\r\n\r\n\r\n        let page: IPage;\r\n\r\n        if (result instanceof Promise)\r\n            page = await <Promise<IPage>>result;\r\n\r\n        if (page != null)\r\n            page.url = Format.replaceArgs(App.baseUrl + clientPage.url, pageInfo.args);\r\n\r\n        page.args = pageInfo.args;\r\n\r\n        curOperation.end();\r\n\r\n        return page;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadComponentsAsync(pageName: string) {\r\n\r\n        const curOperation = Services.operation.begin({ message: \"Loading page '\" + pageName + \"'...\" });\r\n\r\n        const clientPage = await this.getClientPageAsync(pageName, curOperation);\r\n\r\n        if (clientPage && !clientPage.isLoded)\r\n            await this.loadClientPageAsync(clientPage, curOperation);\r\n\r\n        curOperation.end();\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    private async include(src: string) {\r\n        const curStruct = await Http.getJsonAsync<IAppStructure>(src);\r\n\r\n        if (curStruct) {\r\n\r\n            if (curStruct.include) {\r\n                for (const file of curStruct.include)\r\n                    await this.include(file);\r\n            }\r\n\r\n            if (curStruct.components) {\r\n                for (const key in curStruct.components)\r\n                    this._struture.components[key] = curStruct.components[key];\r\n            }\r\n\r\n            if (curStruct.pages) {\r\n                for (const key in curStruct.pages)\r\n                    this._struture.pages[key] = curStruct.pages[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    private async loadAppStructureAsync(operation?: IOperation): Promise<void> {\r\n\r\n        if (!this._struture) {\r\n            this._struture = {\r\n                components: {},\r\n                pages: {},\r\n            };\r\n            await this.include(\"~/app.json\");\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private async loadClientPageAsync(clientPage: IClientPage, operation?: IOperation): Promise<void> {\r\n\r\n        const loaders: ILoader[] = [];\r\n\r\n        clientPage.isLoded = true;\r\n\r\n        if (clientPage.scripts)\r\n            clientPage.scripts.forEach(a => loaders.push(new ScriptLoader(a)));\r\n\r\n        if (clientPage.styles)\r\n            clientPage.styles.forEach(a => loaders.push(new StyleLoader(a)));\r\n\r\n        await Promise.all(linq(loaders).select(a => a.loadAsync(operation)).toArray());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private async getClientPageAsync(name: string, operation?: IOperation): Promise<IClientPage> {\r\n\r\n        await this.loadAppStructureAsync(operation);\r\n\r\n        const result: IClientPage = {};\r\n\r\n        const pageInfo = this._struture.pages[name];\r\n\r\n        result.styles = [];\r\n        result.scripts = [];\r\n        result.action = pageInfo.action;\r\n        result.url = pageInfo.url;\r\n\r\n        this.includeClientPage(result, pageInfo.include);\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private includeClientPage(clientPage: IClientPage, include: IAppInclude) {\r\n\r\n        if (!include)\r\n            return;\r\n\r\n        if (include.components)\r\n            include.components.forEach(a => this.includeClientPage(clientPage, this._struture.components[a].include));\r\n\r\n        if (include.styles)\r\n            include.styles.forEach(a => {\r\n                if (clientPage.styles.indexOf(a) == -1)\r\n                    clientPage.styles.push(a);\r\n            });\r\n\r\n        if (include.scripts)\r\n            include.scripts.forEach(a => {\r\n                if (clientPage.scripts.indexOf(a) == -1)\r\n                    clientPage.scripts.push(a);\r\n            });\r\n    }\r\n}","﻿import { XHRHttpClient, Services, IApplication, IAppArgs } from \"./WebApp\";\r\n\r\nexport class GeoPlotApplication implements IApplication<IAppArgs> {\r\n\r\n    handleError(source: any, error: any, message?: string) {\r\n\r\n    }\r\n\r\n    runAsync(args?: IAppArgs) {\r\n        Services.httpClient = new XHRHttpClient();\r\n        this.baseUrl = args.baseUrl;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    startupArgs: IAppArgs;\r\n\r\n    appName: string;\r\n\r\n    baseUrl: string;\r\n\r\n    isDev: boolean;\r\n\r\n    language: string;\r\n} ","﻿import { MATERIAL_COLORS } from \"../Types\";\r\n\r\ninterface IColorViewModel {\r\n    select(): void;\r\n    value: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ColorPicker {\r\n\r\n    private _onSelected: (color: string) => void;\r\n    private _element: HTMLElement;\r\n    private _mouseDown: (ev: MouseEvent) => void;\r\n\r\n    /****************************************/\r\n\r\n    constructor() {\r\n        for (var color in MATERIAL_COLORS)\r\n            this.addColor(MATERIAL_COLORS[color][600]);\r\n        this._mouseDown = ev => this.onMouseDown(ev);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(element: HTMLElement) {\r\n        this._element = element;\r\n        document.body.appendChild(this._element);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async pick(): Promise<string> {\r\n        await this.open();\r\n        return new Promise(res => this._onSelected = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addColor(color: string) {\r\n        this.colors.push({\r\n            value: color,\r\n            select: () => {\r\n                if (this._onSelected)\r\n                    this._onSelected(color);\r\n                this._onSelected = null;\r\n                this.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async open() {\r\n\r\n        if (this.isOpened())\r\n            return;\r\n\r\n        this.isOpened(true);\r\n\r\n        if (window.event) {\r\n            const mouseEvent = <MouseEvent>window.event;\r\n            const coords = { x: mouseEvent.pageX, y: mouseEvent.pageY };\r\n            //await PromiseUtils.delay(0);\r\n            this._element.style.left = coords.x + \"px\";\r\n            this._element.style.top = (coords.y - this._element.clientHeight) + \"px\";\r\n        }\r\n        document.body.addEventListener(\"mousedown\", this._mouseDown);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    close() {\r\n        if (!this.isOpened())\r\n            return;\r\n\r\n        this.isOpened(false);\r\n\r\n        document.body.removeEventListener(\"mousedown\", this._mouseDown);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onMouseDown(ev: MouseEvent) {\r\n\r\n        if ((<HTMLElement>ev.target).parentElement != this._element) {\r\n            if (this._onSelected)\r\n                this._onSelected(undefined);\r\n            this._onSelected = null;\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isOpened = ko.observable(false);\r\n    colors: IColorViewModel[] = [];\r\n\r\n    static readonly instance = new ColorPicker();\r\n}","﻿import { LinearGradient } from \"../Framework/Graphics\";\r\nimport { CombineIndicatorFunction, ConstIndicatorFunction, DoubleFactorFunction, SimpleFactorFunction, SimpleIndicatorFunction } from \"../Indicators\";\r\nimport { IDataSet } from \"../Types\";\r\nimport { Dictionary, divideNull, isNaNOrNull, round } from \"../WebApp\";\r\n\r\nexport interface IInfectionData {\r\n    totalPositive: number;\r\n    currentPositive: number;\r\n    totalDeath: number;\r\n    totalSevere: number;\r\n    totalHospedalized: number;\r\n    totalHealed: number;\r\n    toatlTests: number;\r\n    totalCaseTested: number;\r\n    historicDeaths: Dictionary<number>;\r\n    newICU: number;\r\n    totalAntigenicPositive: number;\r\n    totalAntigenicTests: number;\r\n    totalMolecularPositive: number;\r\n    totalMolecularTests: number;\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\n\r\nexport var InfectionDataSet: IDataSet<IInfectionData> = {\r\n\r\n    name: \"COVID-19\",\r\n    empty: {\r\n        currentPositive: undefined,\r\n        historicDeaths: { \"2015\": undefined, \"2016\": undefined, \"2017\": undefined, \"2018\": undefined, \"2019\": undefined, \"2020\": undefined },\r\n        toatlTests: undefined,\r\n        totalDeath: undefined,\r\n        totalHealed: undefined,\r\n        totalHospedalized: undefined,\r\n        totalPositive: undefined,\r\n        totalSevere: undefined,\r\n        totalCaseTested: undefined,\r\n        newICU: undefined,\r\n        totalAntigenicPositive: undefined,\r\n        totalAntigenicTests: undefined,\r\n        totalMolecularPositive: undefined,\r\n        totalMolecularTests: undefined,\r\n    },\r\n    indicators: [\r\n        {\r\n            id: \"totalPositive\",\r\n            name: $string(\"$(total-positive)\"),\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            validFor: [\"region\", \"country\", \"district\"],\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalPositive)\r\n        },\r\n        {\r\n            id: \"totalAntigenicPositive\",\r\n            name: $string(\"$(antigenic-positive)\"),\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            validFor: [\"region\", \"country\"],\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalAntigenicPositive)\r\n        },\r\n        {\r\n            id: \"totalMolecularPositive\",\r\n            name: $string(\"$(molecular-positive)\"),\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            validFor: [\"region\", \"country\"],\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalMolecularPositive)\r\n        },\r\n        {\r\n            id: \"currentPositive\",\r\n            name: $string(\"$(current-positive)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#e91e63\",\r\n            colorDark: \"#880e4f\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.currentPositive)\r\n        },\r\n        {\r\n            id: \"totalDeath\",\r\n            name: $string(\"$(death)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalDeath)\r\n        },\r\n        {\r\n            id: \"totalSevere\",\r\n            name: $string(\"$(severe)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#ff9800\",\r\n            colorDark: \"#e65100\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalSevere)\r\n        },\r\n        {\r\n            id: \"newICU\",\r\n            name: $string(\"$(newICU)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#ff9800\",\r\n            colorDark: \"#e65100\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.newICU)\r\n        },\r\n        {\r\n            id: \"totalHospedalized\",\r\n            name: $string(\"$(hospedalized)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#fdd835\",\r\n            colorDark: \"#fbc02d\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalHospedalized)\r\n        },\r\n        {\r\n            id: \"totalHealed\",\r\n            name: $string(\"$(healed)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#4caf50\",\r\n            colorDark: \"#1b5e20\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalHealed)\r\n        },\r\n        {\r\n            id: \"toatlTests\",\r\n            name: $string(\"$(tested)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#03a9f4\",\r\n            colorDark: \"#01579b\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.toatlTests)\r\n        },\r\n        {\r\n            id: \"totalCaseTested\",\r\n            name: $string(\"$(caseTested)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#03a9f4\",\r\n            colorDark: \"#01579b\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalCaseTested)\r\n        },\r\n        {\r\n            id: \"totalMolecularTests\",\r\n            name: $string(\"$(molecularTests)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#03a9f4\",\r\n            colorDark: \"#01579b\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalMolecularTests)\r\n        },\r\n        {\r\n            id: \"totalAntigenicTests\",\r\n            name: $string(\"$(antigenicTests)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#03a9f4\",\r\n            colorDark: \"#01579b\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalAntigenicTests)\r\n        },\r\n        {\r\n            id: \"surface\",\r\n            name: $string(\"$(surface) ($(geo))\"),\r\n            validFor: [\"region\", \"district\"],\r\n            colorLight: \"#777\",\r\n            colorDark: \"#222\",\r\n            showInFavorites: false,\r\n            compute: new ConstIndicatorFunction((v, a) => round(a.surface, 0))\r\n        },\r\n        {\r\n            id: \"density\",\r\n            name: $string(\"$(density) ($(geo))\"),\r\n            validFor: [\"region\", \"district\"],\r\n            colorLight: \"#777\",\r\n            colorDark: \"#222\",\r\n            showInFavorites: false,\r\n            compute: new ConstIndicatorFunction((v, a) => round(a.demography.total / a.surface, 0))\r\n        },\r\n\r\n        {\r\n            id: \"death2020\",\r\n            name: $string(\"$(total-death) +60 (2020)*\"),\r\n            validFor: [\"details\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a =>\r\n                a.historicDeaths ? a.historicDeaths[\"2020\"] : undefined)\r\n        },\r\n        {\r\n            id: \"death2019\",\r\n            name: $string(\"$(total-death) +60 (2019)\"),\r\n            validFor: [\"region\", \"district\", \"details\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a =>\r\n                a.historicDeaths ? a.historicDeaths[\"2019\"] : undefined)\r\n        },\r\n        {\r\n            id: \"death2018\",\r\n            name: $string(\"$(total-death) +60 (2018)\"),\r\n            validFor: [\"region\", \"district\", \"details\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: false,\r\n            compute: new SimpleIndicatorFunction(a =>\r\n                a.historicDeaths ? a.historicDeaths[\"2018\"] : undefined)\r\n        },\r\n        {\r\n            id: \"death2017\",\r\n            name: $string(\"$(total-death) +60 (2017)\"),\r\n            validFor: [\"region\", \"district\", \"details\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: false,\r\n            compute: new SimpleIndicatorFunction(a =>\r\n                a.historicDeaths ? a.historicDeaths[\"2017\"] : undefined)\r\n        },\r\n        {\r\n            id: \"death-diff-2020-2019\",\r\n            name: $string(\"DIff. decessi 2020-19\"),\r\n            validFor: [\"details\"],\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            gradient: new LinearGradient(\"#00c853\", \"#bdbdbd\", \"#ff1744\"),\r\n            canBeNegative: true,\r\n            compute: new CombineIndicatorFunction({\r\n                death2019: new SimpleIndicatorFunction(a => a.historicDeaths[2019]),\r\n                death2020: new SimpleIndicatorFunction(a => a.historicDeaths[2020]),\r\n            }, values => isNaNOrNull(values.death2020) || isNaNOrNull(values.death2019) ? undefined : (values.death2020 - values.death2019))\r\n        },\r\n        {\r\n            id: \"population\",\r\n            name: $string(\"$(population) ($(geo))\"),\r\n            validFor: [\"region\", \"district\", \"details\", \"country\"],\r\n            colorLight: \"#777\",\r\n            colorDark: \"#222\",\r\n            showInFavorites: false,\r\n            compute: new ConstIndicatorFunction((v, a) => a.demography.total)\r\n        },\r\n        {\r\n            id: \"populationOld\",\r\n            name: $string(\"$(population) +65 ($(geo))\"),\r\n            validFor: [\"region\", \"district\", \"country\"],\r\n            colorLight: \"#777\",\r\n            colorDark: \"#222\",\r\n            showInFavorites: false,\r\n            compute: new ConstIndicatorFunction((v, a) => a.demography.over65)\r\n        },\r\n\r\n        /*,\r\n        {\r\n            id: \"extimated-death\",\r\n            name: $string(\"Morti stimati\"),\r\n            validFor: [\"country\"],\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            compute: new CombineIndicatorFunction({\r\n                totalPositive: new SimpleIndicatorFunction(a => a.totalPositive),\r\n                toatlTests: new SimpleIndicatorFunction(a => a.toatlTests),\r\n                dailyDeath: new ConstIndicatorFunction((v, a) => 1450)\r\n            }, values => Math.round((values.totalPositive / values.toatlTests) * values.dailyDeath))\r\n        },\r\n        {\r\n            id: \"healed-death\",\r\n            name: $string(\"$(death) + $(healed)\"),\r\n            validFor: [\"country\", \"region\"],\r\n            colorLight: \"#4caf50\",\r\n            colorDark: \"#1b5e20\",\r\n            compute: new CombineIndicatorFunction({\r\n                totalHealed: new SimpleIndicatorFunction(a => a.totalHealed),\r\n                totalDeath: new SimpleIndicatorFunction(a => a.totalDeath)\r\n            }, values => values.totalHealed + values.totalDeath)\r\n        }*/\r\n    ],\r\n    factors: [\r\n        {\r\n            id: \"none\",\r\n            name: $string(\"$(none)\"),\r\n            compute: new SimpleFactorFunction((i, v, a) => i),\r\n            format: a => formatNumber(a),\r\n            reference: (v, a) => \"N/A\",\r\n            description: $string(\"[indicator]\")\r\n        },\r\n        {\r\n            id: \"population\",\r\n            validFor: [\"region\", \"country\", \"details\", \"district\"],\r\n            name: $string(\"$(population)\"),\r\n            compute: new SimpleFactorFunction((i, v, a) => divideNull(i, a.demography.total) * 100000),\r\n            format: a => formatNumber(a),\r\n            reference: (v, a) => formatNumber(a.demography.total),\r\n            description: $string(\"[indicator] $(every-100k)\")\r\n        },\r\n        {\r\n            id: \"populationOld\",\r\n            validFor: [\"region\", \"country\", \"district\"],\r\n            name: $string(\"$(population) +65\"),\r\n            compute: new SimpleFactorFunction((i, v, a) => divideNull(i, a.demography.over65) * 100000),\r\n            format: a => formatNumber(round(a, 1)),\r\n            reference: (v, a) => formatNumber(a.demography.over65),\r\n            description: $string(\"[indicator] $(every-100k) +65\")\r\n        },\r\n        {\r\n            id: \"density\",\r\n            name: $string(\"$(density)\"),\r\n            validFor: [\"region\", \"country\", \"district\"],\r\n            compute: new SimpleFactorFunction((i, v, a) => divideNull(i, divideNull(a.demography.total, a.surface)) * 100000),\r\n            format: a => formatNumber(round(a, 1)),\r\n            reference: (v, a) => formatNumber(round(a.demography.total / a.surface, 1)),\r\n            description: $string(\"[indicator] $(over-density)\")\r\n        },\r\n        {\r\n            id: \"totalPositive\",\r\n            name: $string(\"$(total-positive)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.totalPositive)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.totalPositive),\r\n            description: $string(\"% [indicator] $(over-total-positive)\")\r\n        },\r\n        {\r\n            id: \"currentPositive\",\r\n            name: $string(\"$(current-positive)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.currentPositive)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.totalPositive),\r\n            description: $string(\"% [indicator] $(over-current-positive)\")\r\n        },\r\n        {\r\n            id: \"severe\",\r\n            name: $string(\"$(severe)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.totalSevere)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.totalSevere),\r\n            description: $string(\"% [indicator] $(over-severe)\")\r\n        },\r\n        {\r\n            id: \"test\",\r\n            name: $string(\"$(tested)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.toatlTests)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.toatlTests),\r\n            description: $string(\"% [indicator] $(over-tested)\")\r\n        },\r\n        {\r\n            id: \"caseTested\",\r\n            name: $string(\"$(caseTested)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.totalCaseTested)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.totalCaseTested),\r\n            description: $string(\"% [indicator] $(over-case-tested)\")\r\n        },\r\n        {\r\n            id: \"death2019Perc\",\r\n            name: $string(\"$(total-death) +60 (2019)\"),\r\n            validFor: [\"details\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.historicDeaths[2019])),\r\n            format: a => isNaNOrNull(a) ? \"N/A\" : (a > 0 ? \"+\" : \"\") + round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.historicDeaths[2019]),\r\n            description: $string(\"% [indicator] $(over-tested)\")\r\n        },\r\n    ]\r\n};","﻿import { IDayAreaDataSet, IDayAreaGroupItem } from \"../Types\";\r\nimport { linq, Linq } from \"../WebApp\";\r\n\r\nexport class RangeDayAreaDataSet<TData>  {\r\n\r\n    protected _days: IDayAreaGroupItem<TData>[];\r\n\r\n    constructor(data: IDayAreaDataSet<TData>) {\r\n        this._days = data.days;\r\n    }\r\n\r\n    get days(): Linq<IDayAreaGroupItem<TData>> {\r\n        const startIndex = this.startDay ?? 0;\r\n        const endIndex = this.endDay ?? this._days.length - 1;\r\n        return linq(this._days).skip(startIndex).take(endIndex - startIndex + 1);\r\n    }\r\n\r\n    get(index: number | string): IDayAreaGroupItem<TData> {\r\n        index = typeof index == \"string\" ? parseInt(index) : index;\r\n        return this._days[(this.startDay ?? 0) + index];\r\n    }\r\n\r\n    get count(): number {\r\n        const startIndex = this.startDay ?? 0;\r\n        const endIndex = this.endDay ?? this._days.length - 1;\r\n        return endIndex - startIndex + 1;\r\n    }\r\n\r\n    startDay?: number;\r\n    endDay?: number;\r\n}","﻿import { GeoAreaType } from \"../Types\";\r\n\r\nexport type ViewMode = \"district\" | \"region\" | \"country\" | \"details\";\r\n\r\ninterface IViewModeData {\r\n    label: { singular: string, plural: string };\r\n    mapGroup: string;\r\n    areaType: GeoAreaType;\r\n    validateId: (id: string) => boolean;\r\n    tab: string;\r\n}\r\n\r\nexport var ViewModes: { [K in ViewMode]: IViewModeData } = {\r\n    \"district\": {\r\n        label: {\r\n            singular: $string(\"$(district)\"),\r\n            plural: $string(\"$(districts)\")\r\n        },\r\n        mapGroup: \"group_district\",\r\n        tab: \"districtTab\",\r\n        areaType: GeoAreaType.District,\r\n        validateId: (id: string) => id[0].toLowerCase() == 'd'\r\n    },\r\n    \"region\": {\r\n        label: {\r\n            singular: $string(\"$(region)\"),\r\n            plural: $string(\"$(regions)\")\r\n        },\r\n        mapGroup: \"group_region\",\r\n        tab: \"regionTab\",\r\n        areaType: GeoAreaType.Region,\r\n        validateId: (id: string) => id[0].toLowerCase() == 'r'\r\n    },\r\n    \"country\": {\r\n        label: {\r\n            singular: $string(\"$(italian)\"),\r\n            plural: $string(\"$(italians)\")\r\n        },\r\n        mapGroup: \"group_country\",\r\n        tab: \"italyTab\",\r\n        areaType: GeoAreaType.Country,\r\n        validateId: (id: string) => id.toLowerCase() == 'it'\r\n    },\r\n    'details': {\r\n        label: {\r\n            singular: $string(\"$(area-details)\"),\r\n            plural: $string(\"$(area-details)\")\r\n        },\r\n        mapGroup: \"group_municipality\",\r\n        tab: \"detailsTab\",\r\n        areaType: GeoAreaType.Municipality,\r\n        validateId: (id: string) => id[0].toLowerCase() == 'm'\r\n    }\r\n}","﻿interface KnockoutBindingHandlers {\r\n    attach: KnockoutBindingHandler;\r\n}\r\n\r\ntype AttachFunction = (element: HTMLElement) => void;\r\n\r\nif (window[\"ko\"]) {\r\n\r\n    ko.bindingHandlers.attach = {\r\n        init: (element, valueAccessor, allBindings, viewModel) => {\r\n\r\n            let func = <AttachFunction|boolean>ko.unwrap(valueAccessor());\r\n\r\n            if (func === true || func == undefined)\r\n                func = <AttachFunction>viewModel[\"attachNode\"];\r\n\r\n            if (typeof func != \"function\")\r\n                throw \"Supplied argument is not a function\";\r\n\r\n            setTimeout(() =>\r\n                (<AttachFunction>func).call(viewModel, element));\r\n        }\r\n    }\r\n}","﻿import { linq } from \"../WebApp\";\r\n\r\ntype Color = string;\r\n\r\nexport interface IGeometry {\r\n\r\n}\r\n\r\nexport interface IRect2D extends IGeometry {\r\n    x: number;\r\n    y: number\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPoint2D extends IGeometry {\r\n    x: number;\r\n    y: number\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPoly2D extends IGeometry {\r\n    points: IPoint2D[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDrawGeometry<T extends IGeometry> {\r\n    id: string;\r\n    geometry: T;\r\n    fillColor?: Color;\r\n    strokeColor?: Color;\r\n    strokeSize?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IGradientColor {\r\n    value: string | RgbColor;\r\n    position?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class LinearGradient {\r\n\r\n    constructor(...values: (string | RgbColor)[]) {\r\n        if (values.length > 0) {\r\n\r\n            if (typeof values[0] == \"string\")\r\n                this.colors = linq(values).select(a => new RgbColor(<string>a)).toArray();\r\n            else\r\n                this.colors = <RgbColor[]>values;\r\n        }\r\n        else\r\n            this.colors = [];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    valueAt(pos: number): RgbColor {\r\n\r\n        if (pos < 0)\r\n            return this.colors[0];\r\n        if (pos > 1)\r\n            this.colors[this.colors.length - 1];\r\n\r\n        const stepSize = 1 / (this.colors.length - 1);\r\n        const minX = Math.floor(pos / stepSize);\r\n        const maxX = Math.ceil(pos / stepSize);\r\n        const minOfs = (pos - minX * stepSize) / stepSize;\r\n\r\n        const c1 = this.colors[minX];\r\n        const c2 = this.colors[maxX];\r\n\r\n        const c3 = new RgbColor();\r\n        c3.r = c1.r + (c2.r - c1.r) * minOfs;\r\n        c3.g = c1.g + (c2.g - c1.g) * minOfs;\r\n        c3.b = c1.b + (c2.b - c1.b) * minOfs;\r\n        return c3;\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    colors: RgbColor[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class RgbColor {\r\n\r\n    constructor(value?: string) {\r\n        if (value)\r\n            this.fromHex(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    fromHex(value: string) {\r\n        if (value.length == 4) {\r\n            this.r = parseInt(\"0x\" + value[1] + value[1]) / 255;\r\n            this.g = parseInt(\"0x\" + value[2] + value[2]) / 255;\r\n            this.b = parseInt(\"0x\" + value[3] + value[3]) / 255;\r\n        }\r\n        else {\r\n            this.r = parseInt(\"0x\" + value[1] + value[2]) / 255;\r\n            this.g = parseInt(\"0x\" + value[3] + value[4]) / 255;\r\n            this.b = parseInt(\"0x\" + value[5] + value[6]) / 255;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toString() {\r\n        function toHex(value: number) {\r\n            let res = Math.round(value * 255).toString(16);\r\n            if (res.length == 1)\r\n                return \"0\" + res;\r\n            return res;\r\n        }\r\n        return \"#\" + toHex(this.r) + toHex(this.g) + toHex(this.b);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    r: number = 0;\r\n    g: number = 0;\r\n    b: number = 0;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Graphics {\r\n\r\n    _svg: SVGSVGElement;\r\n\r\n    constructor(svg: SVGSVGElement) {\r\n\r\n        this._svg = svg;\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setViewPort(minX: number, minY: number, maxX: number, maxY: number) {\r\n        this._svg.viewBox.baseVal.x = minX;\r\n        this._svg.viewBox.baseVal.y = minY;\r\n        this._svg.viewBox.baseVal.width = maxX - minX;\r\n        this._svg.viewBox.baseVal.height = maxY - minY;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    drawPoly(poly: IDrawGeometry<IPoly2D>) {\r\n\r\n        var polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\r\n        polygon.style.fill = poly.fillColor;\r\n        polygon.style.stroke = poly.strokeColor;\r\n        polygon.style.strokeWidth = poly.strokeSize + \"%\";\r\n        polygon.id = poly.id;\r\n\r\n        for (let i = 0; i < poly.geometry.points.length; i++) {\r\n            let point = this._svg.createSVGPoint();\r\n            point.x = poly.geometry.points[i].x;\r\n            point.y = poly.geometry.points[i].y\r\n            polygon.points.appendItem(point);\r\n        }\r\n\r\n        this._svg.appendChild(polygon);\r\n    }\r\n}","﻿if (!HTMLCanvasElement.prototype.toBlob) {\r\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\r\n        value: function (callback, type, quality) {\r\n            let canvas = this;\r\n            setTimeout(() => {\r\n                const binStr = atob(canvas.toDataURL(type, quality).split(',')[1]);\r\n                const len = binStr.length;\r\n                const arr = new Uint8Array(len);\r\n\r\n                for (let i = 0; i < len; i++)\r\n                    arr[i] = binStr.charCodeAt(i);\r\n\r\n                callback(new Blob([arr], { type: type || 'image/png' }));\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function capitalizeFirst(value: string) {\r\n    return value.substr(0, 1).toUpperCase() + value.substr(1);\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nexport function expandCollapse(elment: HTMLElement) {\r\n    let container = elment.parentElement;\r\n    let content = <HTMLElement>container.querySelector(\".section-content\");\r\n    if (container.classList.contains(\"closed\")) {\r\n        content.style.removeProperty(\"display\");\r\n        container.classList.remove(\"closed\");\r\n    }\r\n    else {\r\n        container.classList.add(\"closed\");\r\n        setTimeout(() => content.style.display = \"none\", 300);\r\n    }\r\n}\r\n\r\ndeclare global {\r\n\r\n    const $language: string;\r\n\r\n    function formatNumber(value: number, emptyValue?: string): string;\r\n\r\n    function $string(format: string): string;\r\n}\r\n","﻿import { RangeDayAreaDataSet } from \"./Data/RangeDayAreaDataSet\";\r\nimport { IDataSet, IDayAreaSerieSource, IFactorFunction, IFunctionPoint, IGeoArea, IGeoAreaSet, IIndicatorFunction } from \"./Types\";\r\nimport { DictionaryOf, IDictionary, linq, sumNull } from \"./WebApp\";\r\n\r\nexport class ConstIndicatorFunction<TData> implements IIndicatorFunction<TData> {\r\n    private readonly _value: (value: TData, area?: IGeoArea) => number;\r\n\r\n    constructor(value: (value: TData, area?: IGeoArea) => number) {\r\n        this._value = value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData, delta: TData, exMain: TData[], exDelta: TData[], area: IGeoArea): number {\r\n        let result = this._value(main, area);\r\n        if (exMain) {\r\n            for (var i in exMain)\r\n                result = sumNull(result, -this.value(exMain[i], exDelta[i], null, null, area));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SimpleIndicatorFunction<TData> implements IIndicatorFunction<TData> {\r\n    private readonly _value: (value: TData, area?: IGeoArea) => number;\r\n\r\n    constructor(value: (value: TData, area?: IGeoArea) => number) {\r\n        this._value = value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData, delta: TData, exMain: TData[], exDelta: TData[], area: IGeoArea): number {\r\n        var result = this._value(main, area);\r\n        if (delta)\r\n            result -= this._value(delta, area);\r\n        if (exMain) {\r\n            for (var i in exMain)\r\n                result -= this.value(exMain[i], exDelta[i], null, null, area);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class CombineIndicatorFunction<TData, TDic extends IDictionary<IIndicatorFunction<TData>>> implements IIndicatorFunction<TData> {\r\n\r\n    private readonly _value: (values: DictionaryOf<TDic, number>) => number\r\n    private readonly _indicators: TDic;\r\n\r\n    constructor(indicators: TDic, value: (values: DictionaryOf<TDic, number>) => number) {\r\n        this._value = value;\r\n        this._indicators = indicators;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData, delta: TData, exMain: TData[], exDelta: TData[], area: IGeoArea): number {\r\n\r\n        const value: DictionaryOf<TDic, number> = <any>{};\r\n\r\n        for (var key in this._indicators)\r\n            value[key] = this._indicators[key].value(main, delta, exMain, exDelta, area);\r\n\r\n        return this._value(value);\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SimpleFactorFunction<TData> implements IFactorFunction<TData> {\r\n    private readonly _value: (indicator: number, value?: TData, area?: IGeoArea) => number;\r\n\r\n    constructor(value: (indicator: number, value?: TData, area?: IGeoArea) => number) {\r\n        this._value = value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData[], delta: TData[], exMain: TData[][], exDelta: TData[][], area: IGeoArea, indicator: IIndicatorFunction<TData>): number {\r\n        let curValue: number;\r\n        for (var i in main)\r\n            curValue = sumNull(curValue, indicator.value(main[i], delta[i], exMain[i], exDelta[i], area));\r\n        return this._value(curValue, main[0], area);\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class DoubleFactorFunction<TData> implements IFactorFunction<TData> {\r\n    private readonly _value: (indicator: number, factor: number) => number;\r\n    private readonly _factor: IIndicatorFunction<TData>;\r\n\r\n    constructor(value: (indicator: number, factor: number) => number, factor: IIndicatorFunction<TData>) {\r\n        this._value = value;\r\n        this._factor = factor;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData[], delta: TData[], exMain: TData[][], exDelta: TData[][], area: IGeoArea, indicator: IIndicatorFunction<TData>): number {\r\n        let curValue: number;\r\n        let curFactor: number;\r\n        for (var i in main) {\r\n            curValue = sumNull(curValue, indicator.value(main[i], delta[i], exMain[i], exDelta[i], area));\r\n            curFactor = sumNull(curFactor, this._factor.value(main[i], delta[i], exMain[i], exDelta[i], area));\r\n        }\r\n        return this._value(curValue, curFactor);\r\n    }\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\ninterface IComputeIndicatorOptions<TData> {\r\n    dayNumber: number;\r\n    areaOrId: string | IGeoArea;\r\n    indicatorId: keyof TData | string;\r\n    isDayDelta?: boolean;\r\n    execludedAreas?: string[];\r\n}\r\n\r\ninterface IComputeFactorOptions<TData> {\r\n    factorId: string;\r\n    indicatorId: string;\r\n    dayNumberOrGroup: number | number[];\r\n    areaOrId: string | IGeoArea;\r\n    isDayDelta?: boolean;\r\n    execludedAreas?: string[];\r\n}\r\n\r\n\r\nexport class IndicatorCalculator<TData> {\r\n\r\n    constructor(data: RangeDayAreaDataSet<TData>, dataSet: IDataSet<TData>, geo: IGeoAreaSet) {\r\n        this.data = data;\r\n        this.dataSet = dataSet;\r\n        this.geo = geo;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getDataAtDay(number: number, curAreaId: string): TData {\r\n        if (number < 0)\r\n            return undefined;\r\n        const day = this.data.get(number);\r\n        if (day) {\r\n            const data = day.values[curAreaId]\r\n            if (data)\r\n                return data;\r\n        }\r\n        return this.dataSet.empty;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getFactorValue(options: IComputeFactorOptions<TData>) {\r\n\r\n        const areaId = (typeof options.areaOrId == \"string\" ? options.areaOrId : options.areaOrId.id).toLowerCase();\r\n\r\n        let dayGroup: number[];\r\n        if (!Array.isArray(options.dayNumberOrGroup))\r\n            dayGroup = [options.dayNumberOrGroup];\r\n        else\r\n            dayGroup = options.dayNumberOrGroup;\r\n\r\n        let main: TData[] = [];\r\n        let delta: TData[] = [];\r\n        let exMain: TData[][] = [];\r\n        let exDelta: TData[][] = [];\r\n\r\n        for (var dayNumber of dayGroup) {\r\n\r\n            main.push(this.getDataAtDay(dayNumber, areaId));\r\n\r\n            if (options.isDayDelta)\r\n                delta.push(this.getDataAtDay(dayNumber - 1, areaId));\r\n\r\n            if (options.execludedAreas) {\r\n                var curExMain = [];\r\n                var curExDelta = [];\r\n                for (var exAreaId of options.execludedAreas) {\r\n                    curExMain.push(this.getDataAtDay(dayNumber, exAreaId.toLowerCase()));\r\n                    if (options.isDayDelta)\r\n                        curExDelta.push(this.getDataAtDay(dayNumber - 1, exAreaId.toLowerCase()));\r\n                }\r\n                exMain.push(curExMain)\r\n                exDelta.push(curExDelta)\r\n            }\r\n        }\r\n\r\n        const factor = linq(this.dataSet.factors).first(a => a.id == options.factorId);\r\n        const indicator = linq(this.dataSet.indicators).first(a => a.id == options.indicatorId);\r\n\r\n        return factor.compute.value(main, delta, exMain, exDelta, this.geo.areas[areaId], indicator.compute);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getIndicatorValue(options: IComputeIndicatorOptions<TData>) {\r\n\r\n        const areaId = (typeof options.areaOrId == \"string\" ? options.areaOrId : options.areaOrId.id).toLowerCase();\r\n\r\n        const indicator = linq(this.dataSet.indicators).first(a => a.id == options.indicatorId);\r\n\r\n        let main = this.getDataAtDay(options.dayNumber, areaId);\r\n        let delta: TData;\r\n        let exMain: TData[];\r\n        let exDelta: TData[];\r\n\r\n        if (options.isDayDelta)\r\n            delta = this.getDataAtDay(options.dayNumber - 1, areaId);\r\n\r\n        if (options.execludedAreas) {\r\n            exMain = [];\r\n            exDelta = [];\r\n            for (var exAreaId of options.execludedAreas) {\r\n                exMain.push(this.getDataAtDay(options.dayNumber, exAreaId.toLowerCase()));\r\n                if (options.isDayDelta)\r\n                    exDelta.push(this.getDataAtDay(options.dayNumber - 1, exAreaId.toLowerCase()));\r\n            };\r\n        }\r\n\r\n        return indicator.compute.value(main, delta, exMain, exDelta, this.geo.areas[areaId]);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getSerie<TX extends Date | number>(source: IDayAreaSerieSource): IFunctionPoint[] {\r\n\r\n        const result: IFunctionPoint[] = [];\r\n\r\n        let index = source.startDay + (source.isDelta ? 1 : 0);\r\n\r\n        let lastItem: IFunctionPoint;\r\n\r\n        if (source.groupSize > 1) {\r\n\r\n            let count = source.groupSize;\r\n            let group: number[] = [];\r\n            this.data.days.skip(index).foreach((day) => {\r\n                group.push(index);\r\n                count--;\r\n                if (count == 0) {\r\n                    const item: IFunctionPoint = {\r\n                        x: (source.xAxis == \"date\" ? new Date(day.date) : index),\r\n                        y: this.getFactorValue({\r\n                            dayNumberOrGroup: source.isDelta ? group : index,\r\n                            areaOrId: source.areaId,\r\n                            factorId: source.factorId,\r\n                            indicatorId: source.indicatorId,\r\n                            execludedAreas: source.exeludedAreaIds,\r\n                            isDayDelta: source.isDelta\r\n                        })\r\n                    };\r\n                    result.push(<any>item);\r\n                    count = source.groupSize;\r\n                    group = [];\r\n                }\r\n                index++;\r\n            });\r\n        }\r\n        else {\r\n\r\n            this.data.days.skip(index).foreach((day) => {\r\n\r\n                const item: IFunctionPoint = {\r\n                    x: (source.xAxis == \"date\" ? new Date(day.date) : index),\r\n                    y: this.getFactorValue({\r\n                        dayNumberOrGroup: index,\r\n                        areaOrId: source.areaId,\r\n                        factorId: source.factorId,\r\n                        indicatorId: source.indicatorId,\r\n                        execludedAreas: source.exeludedAreaIds,\r\n                        isDayDelta: source.isDelta\r\n                    })\r\n                };\r\n\r\n                result.push(<any>item);\r\n                index++;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n    data: RangeDayAreaDataSet<TData>;\r\n    dataSet: IDataSet<TData>;\r\n    geo: IGeoAreaSet;\r\n}","﻿import { addClass, centerElement, Dictionary, DictionaryOf, linq, removeClass, safeCall } from \"../WebApp\";\r\n\r\ninterface IShowTipOptions {\r\n    onClose?: () => void;\r\n    timeout?: number;\r\n    override?: boolean;\r\n    force?: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IViewActionTip {\r\n    html: string;\r\n    featureName: string;\r\n    elementSelector?: string;\r\n    showAfter: number;\r\n    showAction?: () => void;\r\n    order: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class TipViewModel {\r\n\r\n    private _closeTimeoutId: number;\r\n    private _element: HTMLElement;\r\n    private _closeAfter: number;\r\n\r\n    constructor(value: IViewActionTip, closeAfter?: number) {\r\n        this.value = value;\r\n        this._closeAfter = closeAfter;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    dontShowAgain() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onActionExecuted() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    executeAction() {\r\n        if (this.value.showAction)\r\n            this.value.showAction();\r\n        setTimeout(() => this.startPulse());\r\n        this.onActionExecuted();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    startPulse() {\r\n        this._element = document.querySelector(this.value.elementSelector);\r\n        if (!this._element)\r\n            return;\r\n        let relY = centerElement(this._element);\r\n\r\n        addClass(this._element, \"pulse\")\r\n\r\n        let tipElement = document.querySelector(\".tip-container\");\r\n        if (relY < (tipElement.clientTop + tipElement.clientHeight))\r\n            this.isTransparent(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    stopPulse() {\r\n\r\n        if (!this._element)\r\n            return;\r\n        removeClass(this._element, \"pulse\");\r\n        this.isTransparent(false);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    next() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    understood() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onClose() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    close() {\r\n        clearTimeout(this._closeTimeoutId);\r\n        this.stopPulse();\r\n        this.isVisible(false);\r\n        this.onClose();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    show() {\r\n        if (this._closeTimeoutId)\r\n            clearTimeout(this._closeTimeoutId);\r\n        this.isVisible(true);\r\n        if (this._closeAfter)\r\n            this._closeTimeoutId = setTimeout(() => this.close(), this._closeAfter) as any;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value: IViewActionTip;\r\n    isVisible = ko.observable(false);\r\n    isTransparent = ko.observable(false);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface ITipPreferences<TActions extends Dictionary<number>> {\r\n    showTips: boolean\r\n    actions: TActions;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class TipManager<TActions extends Dictionary<number>> {\r\n\r\n    private _getPreferences: () => ITipPreferences<TActions>;\r\n\r\n    private _tips: DictionaryOf<TActions, IViewActionTip>;\r\n\r\n    constructor(tips: DictionaryOf<TActions, IViewActionTip>, getPreferences: () => ITipPreferences<TActions>, savePreferences: () => void) {\r\n\r\n        this._getPreferences = getPreferences;\r\n        this._tips = tips;\r\n        this.savePreferences = savePreferences;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get preferences(): ITipPreferences<TActions> {\r\n        return this._getPreferences();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    savePreferences() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    markAction(actionId: keyof TActions, label?: string) {\r\n\r\n        this.preferences.actions[actionId]++;\r\n        this.savePreferences();\r\n\r\n        if (!window[\"gtag\"])\r\n            return;\r\n\r\n        safeCall(() => gtag(\"event\", actionId, {\r\n            event_category: \"GeoPlot\",\r\n            event_label: label,\r\n            value: this.preferences.actions[actionId]\r\n        }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected markTip(tipId: keyof TActions, action: string) {\r\n        if (!window[\"gtag\"])\r\n            return;\r\n\r\n        safeCall(() => gtag(\"event\", action, {\r\n            event_category: \"GeoPlot/Tip\",\r\n            event_label: tipId\r\n        }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    engageUser() {\r\n\r\n        if (this.preferences.showTips != undefined && !this.preferences.showTips)\r\n            return;\r\n\r\n        const nextTip = linq(this._tips).where(a => a.value.showAfter > 0 && this.preferences.actions[a.key] == 0).first();\r\n\r\n        if (!this.showTip(nextTip.key, {\r\n            onClose: () => this.engageUser(),\r\n            timeout: nextTip.value.showAfter,\r\n        })) {\r\n            this.engageUser();\r\n        }\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    showTip(tipId: keyof TActions, options?: IShowTipOptions) {\r\n\r\n        if (this.preferences.showTips != undefined && !this.preferences.showTips)\r\n            return false;\r\n\r\n        if ((!options || !options.override) && this.tip() && this.tip().isVisible())\r\n            return false;\r\n\r\n        if ((!options || !options.force) && this.preferences.actions[tipId])\r\n            return false;\r\n\r\n        const tip = this._tips[tipId];\r\n\r\n        const model = new TipViewModel(tip);\r\n\r\n        model.onActionExecuted = () => {\r\n            this.markTip(tipId, \"how\");\r\n        }\r\n\r\n        model.dontShowAgain = () => {\r\n            this.preferences.showTips = false;\r\n            this.savePreferences();\r\n            model.close();\r\n            this.markTip(tipId, \"dontShowAgain\");\r\n        }\r\n\r\n        model.understood = () => {\r\n            this.preferences.actions[tipId]++;\r\n            this.savePreferences();\r\n            model.close();\r\n            this.markTip(tipId, \"understood\");\r\n        };\r\n\r\n        model.onClose = () => {\r\n            //this.tip(null);\r\n            if (options && options.onClose)\r\n                options.onClose();\r\n        }\r\n\r\n        let nextTip = linq(this._tips).where(a => a.value.order > tip.order && this.preferences.actions[a.key] == 0).first();\r\n\r\n        if (nextTip) {\r\n            model.next = () => {\r\n                model.close();\r\n                this.preferences.actions[tipId]++;\r\n                this.showTip(nextTip.key);\r\n                this.markTip(tipId, \"next\");\r\n            }\r\n        }\r\n        else\r\n            model.next = null;\r\n\r\n        this.tip(model);\r\n\r\n        setTimeout(() => model.show(), options && options.timeout ? options.timeout * 1000 : 0);\r\n\r\n        return true;\r\n    }\r\n\r\n    tip = ko.observable<TipViewModel>();\r\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'meno di un secondo',\n    other: 'meno di {{count}} secondi'\n  },\n  xSeconds: {\n    one: 'un secondo',\n    other: '{{count}} secondi'\n  },\n  halfAMinute: 'alcuni secondi',\n  lessThanXMinutes: {\n    one: 'meno di un minuto',\n    other: 'meno di {{count}} minuti'\n  },\n  xMinutes: {\n    one: 'un minuto',\n    other: '{{count}} minuti'\n  },\n  aboutXHours: {\n    one: \"circa un'ora\",\n    other: 'circa {{count}} ore'\n  },\n  xHours: {\n    one: \"un'ora\",\n    other: '{{count}} ore'\n  },\n  xDays: {\n    one: 'un giorno',\n    other: '{{count}} giorni'\n  },\n  aboutXWeeks: {\n    one: 'circa una settimana',\n    other: 'circa {{count}} settimane'\n  },\n  xWeeks: {\n    one: 'una settimana',\n    other: '{{count}} settimane'\n  },\n  aboutXMonths: {\n    one: 'circa un mese',\n    other: 'circa {{count}} mesi'\n  },\n  xMonths: {\n    one: 'un mese',\n    other: '{{count}} mesi'\n  },\n  aboutXYears: {\n    one: 'circa un anno',\n    other: 'circa {{count}} anni'\n  },\n  xYears: {\n    one: 'un anno',\n    other: '{{count}} anni'\n  },\n  overXYears: {\n    one: 'più di un anno',\n    other: 'più di {{count}} anni'\n  },\n  almostXYears: {\n    one: 'quasi un anno',\n    other: 'quasi {{count}} anni'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'tra ' + result;\n    } else {\n      return result + ' fa';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE d MMMM y',\n  long: 'd MMMM y',\n  medium: 'd MMM y',\n  short: 'dd/MM/y'\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm'\n};\nvar dateTimeFormats = {\n  full: '{{date}} {{time}}',\n  long: '{{date}} {{time}}',\n  medium: '{{date}} {{time}}',\n  short: '{{date}} {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar weekdays = ['domenica', 'lunedì', 'martedì', 'mercoledì', 'giovedì', 'venerdì', 'sabato'];\n\nfunction lastWeek(day) {\n  switch (day) {\n    case 0:\n      return \"'domenica scorsa alle' p\";\n\n    default:\n      return \"'\" + weekdays[day] + \" scorso alle' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  return \"'\" + weekdays[day] + \" alle' p\";\n}\n\nfunction nextWeek(day) {\n  switch (day) {\n    case 0:\n      return \"'domenica prossima alle' p\";\n\n    default:\n      return \"'\" + weekdays[day] + \" prossimo alle' p\";\n  }\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'ieri alle' p\",\n  today: \"'oggi alle' p\",\n  tomorrow: \"'domani alle' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nexport default function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Italian locale.\n * @language Italian\n * @iso-639-2 ita\n * @author Alberto Restifo [@albertorestifo]{@link https://github.com/albertorestifo}\n * @author Giovanni Polimeni [@giofilo]{@link https://github.com/giofilo}\n * @author Vincenzo Carrese [@vin-car]{@link https://github.com/vin-car}\n */\n\nvar locale = {\n  code: 'it',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1\n    /* Monday */\n    ,\n    firstWeekContainsDate: 4\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['aC', 'dC'],\n  abbreviated: ['a.C.', 'd.C.'],\n  wide: ['avanti Cristo', 'dopo Cristo']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['T1', 'T2', 'T3', 'T4'],\n  wide: ['1º trimestre', '2º trimestre', '3º trimestre', '4º trimestre']\n};\nvar monthValues = {\n  narrow: ['G', 'F', 'M', 'A', 'M', 'G', 'L', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic'],\n  wide: ['gennaio', 'febbraio', 'marzo', 'aprile', 'maggio', 'giugno', 'luglio', 'agosto', 'settembre', 'ottobre', 'novembre', 'dicembre']\n};\nvar dayValues = {\n  narrow: ['D', 'L', 'M', 'M', 'G', 'V', 'S'],\n  short: ['dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab'],\n  abbreviated: ['dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab'],\n  wide: ['domenica', 'lunedì', 'martedì', 'mercoledì', 'giovedì', 'venerdì', 'sabato']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'm.',\n    pm: 'p.',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'mattina',\n    afternoon: 'pomeriggio',\n    evening: 'sera',\n    night: 'notte'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'mattina',\n    afternoon: 'pomeriggio',\n    evening: 'sera',\n    night: 'notte'\n  },\n  wide: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'mattina',\n    afternoon: 'pomeriggio',\n    evening: 'sera',\n    night: 'notte'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'm.',\n    pm: 'p.',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'di mattina',\n    afternoon: 'del pomeriggio',\n    evening: 'di sera',\n    night: 'di notte'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'di mattina',\n    afternoon: 'del pomeriggio',\n    evening: 'di sera',\n    night: 'di notte'\n  },\n  wide: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'di mattina',\n    afternoon: 'del pomeriggio',\n    evening: 'di sera',\n    night: 'di notte'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber) {\n  var number = Number(dirtyNumber);\n  return number + 'º';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(º)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(aC|dC)/i,\n  abbreviated: /^(a\\.?\\s?C\\.?|a\\.?\\s?e\\.?\\s?v\\.?|d\\.?\\s?C\\.?|e\\.?\\s?v\\.?)/i,\n  wide: /^(avanti Cristo|avanti Era Volgare|dopo Cristo|Era Volgare)/i\n};\nvar parseEraPatterns = {\n  any: [/^a/i, /^(d|e)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^t[1234]/i,\n  wide: /^[1234](º)? trimestre/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[gfmalsond]/i,\n  abbreviated: /^(gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic)/i,\n  wide: /^(gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^g/i, /^f/i, /^m/i, /^a/i, /^m/i, /^g/i, /^l/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ge/i, /^f/i, /^mar/i, /^ap/i, /^mag/i, /^gi/i, /^l/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[dlmgvs]/i,\n  short: /^(do|lu|ma|me|gi|ve|sa)/i,\n  abbreviated: /^(dom|lun|mar|mer|gio|ven|sab)/i,\n  wide: /^(domenica|luned[i|ì]|marted[i|ì]|mercoled[i|ì]|gioved[i|ì]|venerd[i|ì]|sabato)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^g/i, /^v/i, /^s/i],\n  any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^g/i, /^v/i, /^s/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|m\\.|p|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,\n  any: /^([ap]\\.?\\s?m\\.?|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mezza/i,\n    noon: /^mezzo/i,\n    morning: /mattina/i,\n    afternoon: /pomeriggio/i,\n    evening: /sera/i,\n    night: /notte/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","﻿import { Chart, Plugin } from \"chart.js\";\r\nimport { IInfectionData, InfectionDataSet } from \"../Data/InfectionDataSet\";\r\nimport { RangeDayAreaDataSet } from \"../Data/RangeDayAreaDataSet\";\r\nimport { ViewMode, ViewModes } from \"../Data/ViewModes\";\r\nimport { LinearGradient } from \"../Framework/Graphics\";\r\nimport { ITipPreferences, IViewActionTip, TipManager } from \"../Framework/TipManager\";\r\nimport { IndicatorCalculator } from \"../Indicators\";\r\nimport { IDayAreaDataSet, IFactor, IFunctionPoint, IGeoArea, IGeoAreaSet, IIndicator } from \"../Types\";\r\nimport { Dictionary, DictionaryOf, discretize, exponential, formatDate, IDictionary, isNaNOrNull, linq, Signal, delayAsync, parseDate, App, copyText, round  } from \"../WebApp\";\r\nimport { StudioData } from \"./StudioPage\";\r\nimport { it, enUS } from \"date-fns/locale\";\r\n\r\ntype TData = IInfectionData; \r\n\r\ninterface IDayData {\r\n    topAreas?: AreaViewModel[];\r\n}\r\n\r\ninterface IDataRange {\r\n    startDay?: Date;\r\n    endDay?: Date;\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface ISpecialDate {\r\n    date: Date;\r\n    visible?: boolean;\r\n    label?: string;\r\n    color?: string;\r\n    width?: number;\r\n    dash?: number[];\r\n    dashOffset?: number;\r\n}\r\n\r\ninterface IPageState {\r\n    day?: number;\r\n    area?: string;\r\n    view?: ViewMode;\r\n    maxFactor?: number;\r\n    indicator?: keyof TData | string;\r\n    factor?: string;\r\n    dayDelta?: boolean;\r\n    groupSize?: number;\r\n    startDay?: number;\r\n    logScale?: boolean;\r\n    showEnvData?: boolean;\r\n    excludedArea?: string[];\r\n    detailsArea?: string;\r\n    dateRangeId?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IOverviewViewActions extends Dictionary<number> {\r\n\r\n    areaSelected: number;\r\n    indicatorChanged: number;\r\n    indicatorSelected: number;\r\n    dayChanged: number;\r\n    viewChanged: number;\r\n    groupChanged: number;\r\n    scaleChanged: number;\r\n    topAreasOpened: number;\r\n    chartActionExecuted: number;\r\n    factorChanged: number;\r\n    maxFactorChanged: number;\r\n    deltaSelected: number;\r\n    regionExcluded: number;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IViewPreferences extends ITipPreferences<IOverviewViewActions> {\r\n    isFirstView: boolean;\r\n    version: number;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IGeoPlotViewModel {\r\n    geo: IGeoAreaSet;\r\n    data: IDayAreaDataSet<TData>;\r\n    debugMode: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IGroupDay {\r\n    number: number;\r\n    value: Date;\r\n    text: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nclass IndicatorViewModel {\r\n\r\n    select() {\r\n\r\n    }\r\n\r\n    indicator: IIndicator<TData>;\r\n    value = ko.observable<number>();\r\n}\r\n\r\n/****************************************/\r\n\r\nclass AreaViewModel {\r\n\r\n    select() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value: IGeoArea;\r\n\r\n    data = ko.observable<TData>();\r\n    factor = ko.observable<number>();\r\n    indicator = ko.observable<number>();\r\n    reference = ko.observable<any>();\r\n    indicators = ko.observable<IndicatorViewModel[]>();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class GeoPlotPage {\r\n\r\n    private readonly _mainData: RangeDayAreaDataSet<TData>;\r\n    private readonly _mainGeo: IGeoAreaSet;\r\n    private _detailsData: RangeDayAreaDataSet<TData>;\r\n    private _detailsGeo: IGeoAreaSet;\r\n\r\n    private _selectedArea: IGeoArea; ù\r\n    private _chart: Chart;\r\n    private _daysData: IDayData[];\r\n    private _topAreasVisible: boolean = false;\r\n    private _mapSvg: SVGSVGElement;\r\n    private _execludedArea = new Map<string, IGeoArea>();\r\n    private _dataSet = InfectionDataSet;\r\n    private _keepState = false;\r\n    private _debugMode = false;\r\n    private _preferences: IViewPreferences;\r\n    private _calculator: IndicatorCalculator<TData>;\r\n\r\n    private _tips: DictionaryOf<IOverviewViewActions, IViewActionTip> = {\r\n        areaSelected: {\r\n            order: 0,\r\n            featureName: \"Zone\",\r\n            html: \"Puoi vedere i dati relativi ad una particolare area selezionadoli sulla mappa.\",\r\n            elementSelector: \".card-map .center-align\",\r\n            showAfter: 3,\r\n            showAction: () => {\r\n                this.viewMode(\"region\");\r\n                this.selectedArea = this._calculator.geo.areas[\"r10\"];\r\n            }\r\n        },\r\n        indicatorSelected: {\r\n            order: 1,\r\n            featureName: \"Indicatori\",\r\n            html: \"Puoi vedere il grafico associato all'indicatore, facendo click sull'indicatore.\",\r\n            elementSelector: \".indicators .summary-field\",\r\n            showAfter: 15,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                this.selectedIndicator(linq(this._dataSet.indicators).first(a => a.id == \"totalDeath\"));\r\n            }\r\n        },\r\n        dayChanged: {\r\n            order: 2,\r\n            featureName: \"Cronologia\",\r\n            html: \"Puoi vedere gli indicatori dei giorni precedenti muovendo la slide.\",\r\n            elementSelector: \".day input[type=range]\",\r\n            showAfter: 20,\r\n            showAction: () => {\r\n                this.dayNumber(5);\r\n            }\r\n        },\r\n        indicatorChanged: {\r\n            order: 3,\r\n            featureName: \"Indicatori\",\r\n            html: \"Puoi cambiare l'indicatore scegliendolo dal filtro nell'elenco.\",\r\n            elementSelector: \".filter-indicator\",\r\n            showAfter: 0\r\n        },\r\n        viewChanged: {\r\n            order: 4,\r\n            featureName: \"Zone\",\r\n            html: \"Puoi vedere gli indicatori a livello regionale, nazionale o provinciale.\",\r\n            elementSelector: \"#areaTabs\",\r\n            showAfter: 0,\r\n            showAction: () => {\r\n                this.viewMode(\"district\");\r\n            }\r\n        },\r\n        topAreasOpened: {\r\n            order: 5,\r\n            featureName: \"Zone\",\r\n            html: \"Puo vedere le zone più colpite di un qualsiasi indicatore scelto.\",\r\n            elementSelector: \"#topCases .card-title\",\r\n            showAfter: 20,\r\n            showAction: () => {\r\n                if (this.viewMode() == \"country\")\r\n                    this.viewMode(\"region\");\r\n                M.Collapsible.getInstance(document.getElementById(\"topCases\")).open(0);\r\n            }\r\n        },\r\n        deltaSelected: {\r\n            order: 5.5,\r\n            featureName: \"Indicatori\",\r\n            html: \"Puoi vedere l'incremento giornaliero dell'indicatore anzichè il valore totale.\",\r\n            elementSelector: \".day-delta\",\r\n            showAfter: 20,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                this.isDayDelta(true);\r\n            }\r\n        },\r\n        factorChanged: {\r\n            order: 6,\r\n            featureName: \"Indicatori\",\r\n            html: \"Puoi mettere in relazione qualsiasi indicatore a numerosi parametri (es. % Positivi su Tamponi).\",\r\n            elementSelector: \".filter-factor\",\r\n            showAfter: 30,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                this.selectedIndicator(linq(this._dataSet.indicators).first(a => a.id == \"totalPositive\"));\r\n                this.selectedFactor(linq(this._dataSet.factors).first(a => a.id == \"population\"));\r\n            }\r\n        },\r\n        groupChanged: {\r\n            order: 7,\r\n            featureName: \"Grafico\",\r\n            html: \"Puo raggruppare i dati del grafico in gruppi da 1 a 7 giorni. Puoi anche scegliere la data d'inizio.\",\r\n            elementSelector: \".row-chart-group .select-wrapper\",\r\n            showAfter: 30,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                var element = document.querySelector(\".chart-options\");\r\n                if (element.classList.contains(\"closed\"))\r\n                    element.classList.remove(\"closed\");\r\n                this.groupSize(2);\r\n                M.FormSelect.init(document.querySelectorAll(\".row-chart-group select\"));\r\n            }\r\n        },\r\n        chartActionExecuted: {\r\n            order: 8,\r\n            featureName: \"Grafico\",\r\n            html: \"Puoi portare il grafico a schermo interno, copiarlo, o copiare la serie numerico e incollarla in excel.\",\r\n            elementSelector: \".chart .actions\",\r\n            showAfter: 30\r\n        },\r\n        scaleChanged: {\r\n            order: 9,\r\n            featureName: \"Grafico\",\r\n            html: \"Puoi cambiare da scala logaritmica a scala lineare.\",\r\n            elementSelector: \".log-scale\",\r\n            showAfter: 210,\r\n            showAction: () => {\r\n                this.isLogScale(true);\r\n            }\r\n        },\r\n        maxFactorChanged: {\r\n            order: 10,\r\n            featureName: \"Mappa\",\r\n            html: \"Puoi cambiare il riferimento rispetto al quale la mappa viene colorata. Normalmente è in base al valore massimo che si ha avuto globalmente.\",\r\n            elementSelector: \".max-factor\",\r\n            showAfter: 60,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                this.selectedIndicator(linq(this._dataSet.indicators).first(a => a.id == \"totalPositive\"));\r\n                this.autoMaxFactor(false);\r\n                this.maxFactor(1000);\r\n            }\r\n        },\r\n        regionExcluded: {\r\n            order: 11,\r\n            featureName: \"Mappa\",\r\n            html: \"Nella vista nazionale puoi escludere dagli indicatori il valore di una o più regioni cliccando sulla mappa.\",\r\n            elementSelector: \".card-map .center-align\",\r\n            showAfter: 0,\r\n            showAction: () => {\r\n                if (this.viewMode() != \"country\")\r\n                    this.viewMode(\"country\");\r\n                this._execludedArea.set(\"R8\", this._calculator.geo.areas[\"r8\"]);\r\n                this.updateIndicator();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _specialDates: IDictionary<ISpecialDate> = {\r\n        current: {\r\n            date: undefined,\r\n            color: \"#000\",\r\n            width: 0.5,\r\n            label: \"Giorno corrente\"\r\n        },\r\n        \"dpcm8\": {\r\n            date: new Date(2020, 2, 7),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 8 Marzo (italia zona rossa)\"\r\n        },\r\n        \"dpcm9\": {\r\n            date: new Date(2020, 2, 9),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 9 Marzo (italia zona rossa)\"\r\n        },\r\n        \"dpcm11\": {\r\n            date: new Date(2020, 2, 11),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 11 Marzo (chiusura attività)\"\r\n        },\r\n        \"mds20\": {\r\n            date: new Date(2020, 2, 20),\r\n            color: \"#070\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: false,\r\n            label: \"MDS 20 Marzo (chiura parchi, motoria nelle vicinane)\"\r\n        },\r\n        \"dpcm22\": {\r\n            date: new Date(2020, 2, 21),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 22 Marzo (chiusura ulteriore attività)\"\r\n        },\r\n        \"dpcm25\": {\r\n            date: new Date(2020, 2, 24),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 25 Marzo (maggiori sanzioni)\"\r\n        }\r\n    };\r\n\r\n    _dataRanges: IDataRange[] = [\r\n        {\r\n            id: 0,\r\n            name: \"$(all)\",\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"1° $(wave)\",\r\n            endDay: new Date(2020, 7, 31)\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"2° $(wave)\",\r\n            startDay: new Date(2020, 8, 1)\r\n        },\r\n    ]\r\n\r\n    constructor(model: IGeoPlotViewModel) {\r\n\r\n        this._mainData = new RangeDayAreaDataSet(model.data);\r\n        this._mainGeo = model.geo;\r\n        this._debugMode = model.debugMode;\r\n        this._calculator = new IndicatorCalculator(this._mainData, this._dataSet, this._mainGeo);\r\n\r\n        this.dataRange.subscribe(value => {\r\n\r\n            const findDayIndex = (date: Date) => {\r\n                return this._mainData.days.indexOf(a => parseDate(a.date).getTime() >= date.getTime());\r\n            };\r\n\r\n            this._mainData.startDay = undefined;\r\n            this._mainData.endDay = undefined;\r\n\r\n            this._mainData.startDay = value.startDay ? findDayIndex(value.startDay) : undefined;\r\n            this._mainData.endDay = value.endDay ? findDayIndex(value.endDay) : undefined;\r\n\r\n            this.updateDays();\r\n            this.dayNumber(this._mainData.count - 1);\r\n        });\r\n\r\n        this.dayNumber.subscribe(value => {\r\n            if (value != this._calculator.data.count - 1)\r\n                this.tipManager.markAction(\"dayChanged\");\r\n            this.updateDayData();\r\n            this._specialDates.current.date = new Date(this._calculator.data.get(value).date);\r\n            this.updateChart();\r\n        });\r\n\r\n        this._mapSvg = document.getElementsByTagName(\"svg\").item(0);\r\n        this._mapSvg.addEventListener(\"click\", e => this.onMapClick(e, false))\r\n        this._mapSvg.addEventListener(\"dblclick\", e => this.onMapClick(e, true))\r\n\r\n        this.updateDays();\r\n\r\n        const areaTabs = M.Tabs.init(document.getElementById(\"areaTabs\"));\r\n\r\n        areaTabs.options.onShow = (el: HTMLDivElement) => {\r\n\r\n            this.setViewMode(<ViewMode>el.dataset[\"viewMode\"]);\r\n        };\r\n\r\n        const topCasesView = M.Collapsible.init(document.getElementById(\"topCases\"));\r\n\r\n        topCasesView.options.onOpenStart = () => {\r\n            if (!this._daysData)\r\n                this.updateTopAreas();\r\n            this._topAreasVisible = true;\r\n            this.tipManager.markAction(\"topAreasOpened\");\r\n        }\r\n\r\n        topCasesView.options.onCloseEnd = () => {\r\n            this._topAreasVisible = false;\r\n        }\r\n\r\n        this.indicators = ko.computed(() => linq(this._dataSet.indicators)\r\n            .where(a => !a.validFor || a.validFor.indexOf(this.viewMode()) != -1)\r\n            .toArray());\r\n\r\n        this.factors = ko.computed(() => linq(this._dataSet.factors)\r\n            .where(a => !a.validFor || a.validFor.indexOf(this.viewMode()) != -1)\r\n            .toArray());\r\n\r\n        this.detailsArea.subscribe(value => {\r\n            this.updateDetailsArea();\r\n        });\r\n\r\n        this.selectedIndicator.subscribe(value => {\r\n            if (!value)\r\n                return;\r\n            this.updateIndicator();\r\n            if (value.id != \"totalPositive\")\r\n                this.tipManager.markAction(\"indicatorChanged\", value.id);\r\n        });\r\n\r\n        this.selectedFactor.subscribe(value => {\r\n            if (!value)\r\n                return;\r\n            this.updateIndicator();\r\n            if (value.id != \"none\")\r\n                this.tipManager.markAction(\"factorChanged\", value.id);\r\n            setTimeout(() => M.FormSelect.init(document.querySelectorAll(\".row-chart-group select\")));\r\n        });\r\n\r\n        this.autoMaxFactor.subscribe(value => {\r\n            if (value) {\r\n                this.updateMaxFactor();\r\n                this.updateMap();\r\n            }\r\n            this.updateUrl();\r\n        });\r\n\r\n        this.maxFactor.subscribe(value => {\r\n            if (!this.autoMaxFactor()) {\r\n                this.updateMap();\r\n                this.tipManager.markAction(\"maxFactorChanged\", value.toString());\r\n            }\r\n            this.updateUrl();\r\n        });\r\n\r\n        this.baseFactor.subscribe(value => {\r\n            if (!this.autoMaxFactor()) {\r\n                this.updateMap();\r\n            }\r\n            this.updateUrl();\r\n        });\r\n\r\n        this.isDayDelta.subscribe(value => {\r\n            this.computeStartDayForGroup();\r\n            this.updateIndicator();\r\n            if (value)\r\n                this.tipManager.markAction(\"deltaSelected\");\r\n\r\n        });\r\n\r\n        this.isLogScale.subscribe(value => {\r\n            this.updateChart();\r\n            this.updateUrl();\r\n            if (value)\r\n                this.tipManager.markAction(\"scaleChanged\");\r\n        });\r\n\r\n        this.isZoomChart.subscribe(value => {\r\n            this.updateChart();\r\n        });\r\n\r\n        this.groupSize.subscribe(value => {\r\n            this.computeStartDayForGroup();\r\n            this.updateChart();\r\n            this.updateUrl();\r\n            if (value > 1)\r\n                this.tipManager.markAction(\"groupChanged\", value.toString());\r\n        });\r\n\r\n        this.startDay.subscribe(value => {\r\n            this.updateChart();\r\n            this.updateUrl();\r\n        });\r\n\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const stateRaw = urlParams.get(\"state\");\r\n        this._keepState = urlParams.get(\"keepState\") == \"true\";\r\n\r\n        this.loadPreferences();\r\n\r\n        this.tipManager = new TipManager<IOverviewViewActions>(this._tips, () => this._preferences, () => this.savePreferences());\r\n\r\n        this.tipManager.engageUser();\r\n\r\n        let state: IPageState;\r\n\r\n        if (stateRaw && this._keepState)\r\n            state = <IPageState>JSON.parse(atob(stateRaw));\r\n        else\r\n            state = {};\r\n\r\n        setTimeout(() => this.loadState(state), 0);\r\n\r\n        if (!this._debugMode)\r\n            window.addEventListener(\"beforeunload\", () => this.savePreferences());\r\n\r\n        //Templating.template(document.querySelector(\"#template\"), \"TestComponent\", Templating.model({ isChecked: false }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected isDefaultState(state: IPageState) {\r\n        return (!state.day || state.day == this._calculator.data.count - 1) &&\r\n            (!state.view || state.view == \"region\") &&\r\n            !state.area &&\r\n            (!state.indicator || state.indicator == \"totalPositive\") &&\r\n            (!state.factor || state.factor == \"none\") &&\r\n            !state.maxFactor &&\r\n            !state.dayDelta &&\r\n            !state.logScale &&\r\n            !state.showEnvData &&\r\n            state.dateRangeId == 0,\r\n            (!state.groupSize || state.groupSize == 1) &&\r\n            (state.startDay == undefined || state.startDay == 0) &&\r\n            (!state.excludedArea) &&\r\n            (!state.detailsArea);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadState(state: IPageState) {\r\n\r\n        if (!state.view)\r\n            state.view = \"region\";\r\n\r\n        const viewTabs = M.Tabs.getInstance(document.getElementById(\"areaTabs\"));\r\n        viewTabs.select(ViewModes[state.view].tab);\r\n\r\n        document.body.scrollTop = 0;\r\n\r\n        if (!state.dateRangeId)\r\n            this.dataRange(this.dataRanges[0]);\r\n        else\r\n            this.dataRange(linq(this.dataRanges).first(a => a.id == state.dateRangeId));\r\n\r\n        if (state.logScale != undefined)\r\n            this.isLogScale(state.logScale);\r\n\r\n        if (state.groupSize)\r\n            this.groupSize(state.groupSize);\r\n\r\n        if (state.startDay != undefined)\r\n            this.startDay(state.startDay);\r\n\r\n        if (state.dayDelta != undefined)\r\n            this.isDayDelta(state.dayDelta);\r\n\r\n        if (state.showEnvData != undefined)\r\n            this.isShowEnvData(state.showEnvData);\r\n\r\n        if (state.maxFactor) {\r\n            this.autoMaxFactor(false);\r\n            this.maxFactor(state.maxFactor);\r\n        }\r\n\r\n        this.dayNumber(state.day != undefined ? state.day : this._calculator.data.count - 1);\r\n\r\n        if (state.excludedArea) {\r\n            this._execludedArea.clear();\r\n            for (let areaId of state.excludedArea)\r\n                this._execludedArea.set(areaId, this._calculator.geo.areas[areaId.toLowerCase()]);\r\n        }\r\n\r\n        if (state.indicator)\r\n            this.selectedIndicator(linq(this._dataSet.indicators).first(a => a.id == state.indicator));\r\n\r\n        if (state.factor)\r\n            this.selectedFactor(linq(this._dataSet.factors).first(a => a.id == state.factor));\r\n\r\n        if (state.area)\r\n            this.selectedArea = this._calculator.geo.areas[state.area.toLowerCase()];\r\n\r\n        if (state.detailsArea)\r\n            this.detailsArea(this._calculator.geo.areas[state.detailsArea]);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    saveStata(): IPageState {\r\n\r\n        return {\r\n            view: this.viewMode() == \"region\" ? undefined : this.viewMode(),\r\n            indicator: this.selectedIndicator() ? this.selectedIndicator().id : undefined,\r\n            factor: this.selectedFactor() ? this.selectedFactor().id : undefined,\r\n            dayDelta: this.isDayDelta() ? true : undefined,\r\n            maxFactor: this.autoMaxFactor() ? undefined : this.maxFactor(),\r\n            day: this.dayNumber() == this._calculator.data.count - 1 ? undefined : this.dayNumber(),\r\n            area: this.selectedArea ? this.selectedArea.id : undefined,\r\n            groupSize: this.groupSize() == 1 ? undefined : this.groupSize(),\r\n            startDay: this.startDay() == 0 ? undefined : this.startDay(),\r\n            logScale: this.isLogScale() ? true : undefined,\r\n            excludedArea: this._execludedArea.size > 0 ? linq(this._execludedArea.keys()).toArray() : undefined,\r\n            showEnvData: this.isShowEnvData() ? true : undefined,\r\n            detailsArea: this.detailsArea() ? this.detailsArea().id : undefined,\r\n            dateRangeId: this.dataRange().id\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadPreferences() {\r\n        let json = localStorage.getItem(\"preferences\");\r\n\r\n        if (json) {\r\n\r\n            try {\r\n                this._preferences = JSON.parse(json);\r\n            }\r\n            catch {\r\n            }\r\n\r\n            if (!this._preferences || this._preferences.version != 1) {\r\n                this._preferences = this.getDefaultPreferences();\r\n                this._preferences.isFirstView = false;\r\n                this._preferences.showTips = false;\r\n                this.savePreferences();\r\n            }\r\n        }\r\n        else\r\n            this._preferences = this.getDefaultPreferences();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getDefaultPreferences(): IViewPreferences {\r\n        return ({\r\n            isFirstView: true,\r\n            showTips: true,\r\n            version: 1,\r\n            actions: {\r\n                areaSelected: 0,\r\n                indicatorSelected: 0,\r\n                indicatorChanged: 0,\r\n                dayChanged: 0,\r\n                viewChanged: 0,\r\n                chartActionExecuted: 0,\r\n                factorChanged: 0,\r\n                groupChanged: 0,\r\n                maxFactorChanged: 0,\r\n                scaleChanged: 0,\r\n                topAreasOpened: 0,\r\n                deltaSelected: 0,\r\n                regionExcluded: 0\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    savePreferences() {\r\n        this._preferences.isFirstView = false;\r\n        localStorage.setItem(\"preferences\", JSON.stringify(this._preferences));\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    toggleChartZoom() {\r\n\r\n        this._preferences.actions.chartActionExecuted++;\r\n        this.isZoomChart(!this.isZoomChart());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async copyMap() {\r\n        const element = document.querySelector(\"svg.map\");\r\n        const svgText = element.outerHTML;\r\n        const blob = new Blob([svgText], { type: \"image/svg+xml\" });\r\n\r\n        if (navigator[\"clipboard\"] && navigator[\"clipboard\"][\"write\"]) {\r\n            const svgImage = document.createElement('img');\r\n            svgImage.style.width = element.clientWidth + \"px\";\r\n            svgImage.style.height = element.clientHeight + \"px\";\r\n            svgImage.onload = function () {\r\n\r\n                const canvas = document.createElement(\"canvas\");\r\n                canvas.width = element.clientWidth;\r\n                canvas.height = element.clientHeight;\r\n\r\n                const ctx = canvas.getContext(\"2d\");\r\n                ctx.fillStyle = \"white\";\r\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n                ctx.drawImage(svgImage, 0, 0);\r\n\r\n                canvas.toBlob(async pngBlob => {\r\n                    let item = new ClipboardItem({ [pngBlob.type]: pngBlob });\r\n                    await navigator.clipboard.write([item]);\r\n                    M.toast({ html: $string(\"$(msg-map-copied)\") })\r\n                })\r\n            }\r\n            svgImage.src = window.URL.createObjectURL(blob);\r\n        }\r\n        else {\r\n            const element = document.createElement(\"a\");\r\n            element.href = window.URL.createObjectURL(blob);\r\n            element.target = \"_blan\";\r\n            element.download = \"map.svg\";\r\n            element.click();\r\n            M.toast({ html: $string(\"$(msg-no-copy)\") })\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    copyChart() {\r\n        this._chart.canvas.toBlob(async blob => {\r\n            if (navigator[\"clipboard\"] && navigator[\"clipboard\"][\"write\"]) {\r\n                let item = new ClipboardItem({ [blob.type]: blob });\r\n                await navigator.clipboard.write([item]);\r\n                M.toast({ html: $string(\"$(msg-chart-copied)\") })\r\n            }\r\n            else {\r\n                const url = window.URL.createObjectURL(blob);\r\n                const element = document.createElement(\"a\");\r\n                element.href = url;\r\n                element.target = \"_blan\";\r\n                element.download = this._chart.options.plugins.title.text + \".png\";\r\n                element.click();\r\n                M.toast({ html: $string(\"$(msg-no-copy)\") })\r\n            }\r\n        });\r\n        this.tipManager.markAction(\"chartActionExecuted\", \"copy\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async copySerie() {\r\n\r\n        const data = this._chart.data.datasets[0].data as unknown as IFunctionPoint[];\r\n        let text = \"\";\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (i > 0)\r\n                text += \"\\n\";\r\n            text += formatDate(data[i].x as Date, $string(\"$(date-format)\")) + \"\\t\" + i + \"\\t\" + round(data[i].y, 1);\r\n        }\r\n\r\n        copyText(text);\r\n\r\n        M.toast({ html: $string(\"$(msg-serie-copied)\") })\r\n        this.tipManager.markAction(\"chartActionExecuted\", \"copySerie\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async copySerieForStudio() {\r\n\r\n        let obj: StudioData = {\r\n            type: \"serie\",\r\n            version: 1,\r\n            color: this.selectedIndicator().colorLight,\r\n            serie: {\r\n                type: \"geoplot\",\r\n                areaId: this.selectedArea.id,\r\n                indicatorId: this.selectedIndicator().id,\r\n                xAxis: \"dayNumber\",\r\n                exeludedAreaIds: linq(this._execludedArea.keys()).toArray(),\r\n                factorId: this.selectedFactor().id,\r\n                groupSize: this.groupSize(),\r\n                isDelta: this.isDayDelta(),\r\n                startDay: this.startDay(),\r\n                range: {\r\n                    start: this._calculator.data.startDay,\r\n                    end: this._calculator.data.endDay,\r\n                }\r\n            },\r\n            title: this.factorDescription()\r\n        };\r\n\r\n        obj.values = this._calculator.getSerie(obj.serie);\r\n\r\n        copyText(JSON.stringify(obj));\r\n\r\n        M.toast({ html: $string(\"$(msg-serie-copied-studio)\") })\r\n\r\n        this.tipManager.markAction(\"chartActionExecuted\", \"copySerieForStudio\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    play() {\r\n        if (this.dayNumber() == this._calculator.data.count - 1)\r\n            this.dayNumber(0);\r\n        this.isPlaying(true);\r\n        this.nextFrame();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    pause() {\r\n        this.isPlaying(false);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setViewMode(mode: ViewMode, fromModel = false) {\r\n\r\n        if (fromModel) {\r\n            const areaTabs = M.Tabs.getInstance(document.getElementById(\"areaTabs\"));\r\n            areaTabs.select(ViewModes[mode].tab);\r\n        }\r\n\r\n        if (mode == \"details\") {\r\n\r\n            if (this._detailsGeo && this._detailsData) {\r\n                this._calculator.geo = this._detailsGeo;\r\n                this._calculator.data = this._detailsData;\r\n            }\r\n        }\r\n        else {\r\n            this._calculator.geo = this._mainGeo;\r\n            this._calculator.data = this._mainData;\r\n        }\r\n\r\n        this.totalDays(this._calculator.data.count - 1);\r\n\r\n        if (mode != \"region\")\r\n            this.tipManager.markAction(\"viewChanged\", mode);\r\n\r\n        this.viewMode(mode);\r\n\r\n        const districtGroup = document.getElementById(\"group_district\");\r\n\r\n        if (mode == \"district\" || mode == \"details\")\r\n            districtGroup.style.removeProperty(\"display\");\r\n        else\r\n            districtGroup.style.display = \"none\";\r\n\r\n        this.selectedArea = null;\r\n\r\n        this._chart = null;\r\n\r\n        this._execludedArea.clear();\r\n\r\n        this.clearMap();\r\n\r\n        this.updateMaxFactor();\r\n\r\n        this.updateDayData();\r\n\r\n        if (this.viewMode() == \"country\") {\r\n            this.selectedArea = this._calculator.geo.areas[\"it\"];\r\n            this.tipManager.showTip(\"regionExcluded\", { timeout: 5 });\r\n        }\r\n        else {\r\n            if (this._topAreasVisible)\r\n                this.updateTopAreas();\r\n            else\r\n                this._daysData = undefined;\r\n        }\r\n\r\n        setTimeout(() =>\r\n            M.FormSelect.init(document.querySelectorAll(\".row-indicator select\")));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get selectedArea() {\r\n        return this._selectedArea;\r\n    }\r\n\r\n    set selectedArea(value: IGeoArea) {\r\n        if (value == this._selectedArea)\r\n            return;\r\n\r\n        if (this._selectedArea) {\r\n            const element = document.getElementById(this._selectedArea.id.toUpperCase());\r\n            if (element)\r\n                element.classList.remove(\"selected\");\r\n        }\r\n\r\n        this._selectedArea = value;\r\n\r\n        if (this._selectedArea) {\r\n            const element = document.getElementById(this._selectedArea.id.toUpperCase());\r\n            if (element) {\r\n                element.classList.add(\"selected\");\r\n                const parent = element.parentElement;\r\n                element.remove();\r\n                parent.appendChild(element);\r\n            }\r\n        }\r\n        this.changeArea();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getFactorValue(dayNumberOrGroup: number | number[], areaOrId: string | IGeoArea): number {\r\n\r\n        return this._calculator.getFactorValue({\r\n            dayNumberOrGroup: dayNumberOrGroup,\r\n            areaOrId: areaOrId,\r\n            factorId: this.selectedFactor().id,\r\n            indicatorId: this.selectedIndicator().id,\r\n            isDayDelta: this.isDayDelta(),\r\n            execludedAreas: linq(this._execludedArea.keys()).toArray()\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getIndicatorValue(dayNumber: number, areaOrId: string | IGeoArea, indicatorId: keyof TData | string): number {\r\n\r\n        return this._calculator.getIndicatorValue({\r\n            dayNumber: dayNumber,\r\n            areaOrId: areaOrId,\r\n            indicatorId: indicatorId,\r\n            isDayDelta: this.isDayDelta(),\r\n            execludedAreas: linq(this._execludedArea.keys()).toArray()\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected computeStartDayForGroup() {\r\n\r\n        let totDays = this._calculator.data.count - this.startDay();\r\n        const module = (totDays % this.groupSize());\r\n        if (module != 0) {\r\n            const invModule = this.groupSize() - module;\r\n            if (this.startDay() - invModule >= 0)\r\n                this.startDay(this.startDay() - invModule);\r\n            else if (this.startDay() + module < this._calculator.data.count - 1)\r\n                this.startDay(this.startDay() + module);\r\n\r\n            M.FormSelect.init(document.querySelectorAll(\".row-chart-group select\"));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private onMapClick(e: MouseEvent, isDouble: boolean) {\r\n\r\n        const item = <SVGPolygonElement>e.target;\r\n        const areaId = item.parentElement.id;\r\n        const area = this._calculator.geo.areas[areaId.toLowerCase()];\r\n\r\n        if (!area)\r\n            return;\r\n\r\n        if (!isDouble) {\r\n            if (this.viewMode() == \"country\") {\r\n                if (this._execludedArea.has(areaId))\r\n                    this._execludedArea.delete(areaId);\r\n                else {\r\n                    this._execludedArea.set(areaId, area);\r\n                    M.toast({ html: $string(\"$(msg-region-ex)\").replace(\"[region]\", area.name) });\r\n                }\r\n                this.updateIndicator();\r\n            }\r\n            else {\r\n                //if (item.parentElement.classList.contains(this.viewMode()))\r\n                this.selectedArea = area;\r\n            }\r\n\r\n            this.tipManager.markAction(\"areaSelected\", area.name);\r\n        }\r\n        else {\r\n            if (this.viewMode() == \"region\" || this.viewMode() == \"district\")\r\n                this.detailsArea(area);\r\n        }\r\n    }\r\n\r\n\r\n        /****************************************/top\r\n\r\n    protected nextFrame() {\r\n\r\n        if (!this.isPlaying())\r\n            return;\r\n\r\n        if (this.dayNumber() >= this._calculator.data.count - 1)\r\n            this.pause();\r\n        else\r\n            this.dayNumber(parseInt(this.dayNumber().toString()) + 1);\r\n\r\n        setTimeout(() => this.nextFrame(), 200);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected changeArea() {\r\n        if (this._selectedArea == null)\r\n            this.currentArea(null);\r\n        else {\r\n            var isEmptyArea = !this.currentArea();\r\n\r\n            const area = new AreaViewModel();\r\n\r\n            area.value = this._selectedArea;\r\n\r\n            this.updateArea(area);\r\n\r\n            this.currentArea(area)\r\n\r\n            this.updateFactorDescription();\r\n\r\n            this.updateAreaIndicators();\r\n\r\n            this.updateChart();\r\n\r\n            if (isEmptyArea) {\r\n                M.FormSelect.init(document.querySelectorAll(\".row-chart-group select\"));\r\n                M.Tooltip.init(document.querySelectorAll(\".row-chart-group .tooltipped\"));\r\n            }\r\n        }\r\n\r\n        this.updateUrl();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateAreaIndicators() {\r\n        if (!this.currentArea())\r\n            return;\r\n        if (!this.currentArea().indicators()) {\r\n            const items: IndicatorViewModel[] = [];\r\n            for (let indicator of this.indicators()) {\r\n\r\n                if (indicator.showInFavorites === false)\r\n                    continue;\r\n\r\n                let item = new IndicatorViewModel();\r\n                item.indicator = indicator;\r\n                item.select = () => {\r\n                    this.tipManager.markAction(\"indicatorSelected\", item.indicator.id);\r\n                    this.selectedIndicator(indicator);\r\n                    setTimeout(() =>\r\n                        M.FormSelect.init(document.querySelectorAll(\".row-indicator select\")));\r\n                }\r\n                items.push(item);\r\n            }\r\n            this.currentArea().indicators(items);\r\n        }\r\n\r\n        const areaId = this.currentArea().value.id.toLowerCase();\r\n\r\n        for (let item of this.currentArea().indicators())\r\n            item.value(this.getIndicatorValue(this.dayNumber(), areaId, item.indicator.id))\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateFactorDescription() {\r\n\r\n        let desc = \"\";\r\n\r\n        if (this.isDayDelta())\r\n            desc = \"$(new) \";\r\n\r\n        desc += this.selectedFactor().description.replace(\"[indicator]\", this.selectedIndicator().name);\r\n        if (this.currentArea())\r\n            desc += \" - \" + this.currentArea().value.name;\r\n\r\n        if (this._execludedArea.size > 0) {\r\n            desc += \" - $(except) (\";\r\n            let i = 0;\r\n            for (let key of this._execludedArea.keys()) {\r\n                if (i > 0)\r\n                    desc += \", \";\r\n                desc += this._execludedArea.get(key).name;\r\n                i++;\r\n            }\r\n            desc += \")\";\r\n        }\r\n\r\n        this.factorDescription($string(desc));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateIndicator() {\r\n\r\n        if (!this.selectedIndicator() || !this.selectedFactor())\r\n            return;\r\n\r\n        this.updateFactorDescription();\r\n\r\n        /*\r\n        if (this.selectedFactor().id != \"none\") {\r\n \r\n            if (this.groupSize() != 1)\r\n                this.groupSize(1);\r\n        }*/\r\n\r\n        this.updateMaxFactor();\r\n        this.updateDayData();\r\n        this.updateChart();\r\n        this.updateUrl();\r\n\r\n        if (this._topAreasVisible)\r\n            this.updateTopAreas();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateMaxFactor() {\r\n\r\n        if (!this.selectedFactor() || !this.selectedIndicator() || !this.autoMaxFactor())\r\n            return;\r\n\r\n        let result = Number.NEGATIVE_INFINITY;\r\n        let curView = ViewModes[this.viewMode()];\r\n\r\n\r\n        let count = 0;\r\n        let list = [];\r\n        this._calculator.data.days.foreach((day, i) => {\r\n            for (let areaId in day.values) {\r\n                if (!curView.validateId(areaId))\r\n                    continue;\r\n                if (!this._calculator.geo.areas[areaId])\r\n                    continue;\r\n\r\n                const factor = Math.abs(this.getFactorValue(i, areaId));\r\n                if (!isNaNOrNull(factor) && factor != Number.POSITIVE_INFINITY && factor > result)\r\n                    result = factor;\r\n\r\n                if (factor != 0)\r\n                    list.push(factor);\r\n            }\r\n        });\r\n        /*\r\n        list = linq(list).orderBy(a => a).toArray();\r\n        var index = Math.floor(list.length / 2);\r\n        result = list[index];*/\r\n\r\n        this.maxFactor(parseFloat(result.toFixed(1)));\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected initChart() {\r\n        const canvas = <HTMLCanvasElement>document.querySelector(\"#areaGraph\");\r\n\r\n        const referencesPlugIn: Plugin<any> = {\r\n            id: \"lines\",\r\n            afterDraw: chart => {\r\n\r\n                const data = chart.data.datasets[0].data;\r\n\r\n                if (!data || data.length == 0)\r\n                    return;\r\n\r\n                const xScale = chart.scales.xAxes;\r\n                const ctx = chart.ctx;\r\n\r\n                for (let key in this._specialDates) {\r\n\r\n                    let item = this._specialDates[key];\r\n                    if (!item.date || item.visible === false)\r\n                        continue;\r\n                    \r\n                    let offset = xScale.getPixelForValue(item.date.getTime());\r\n\r\n                    ctx.lineWidth = item.width || 1;\r\n\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(offset, chart.chartArea.top);\r\n                    ctx.lineTo(offset, chart.chartArea.bottom);\r\n                    ctx.strokeStyle = item.color || \"#000\";\r\n\r\n                    if (item.dash)\r\n                        ctx.setLineDash(item.dash);\r\n                    else\r\n                        ctx.setLineDash([]);\r\n                    if (item.dashOffset)\r\n                        ctx.lineDashOffset = item.dashOffset;\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n        };\r\n\r\n        const bkPlugin: Plugin<any> = {\r\n            id: \"bk\",\r\n            beforeDraw: function (chart, args, options) {\r\n                var ctx = chart.ctx;\r\n                ctx.fillStyle = \"white\";\r\n                ctx.fillRect(0, 0, chart.width, chart.height);\r\n            }\r\n        };\r\n\r\n        this._chart = new Chart(canvas, {\r\n            plugins: [bkPlugin, referencesPlugIn],\r\n            type: \"line\",\r\n            data: {\r\n                datasets: [\r\n                    {\r\n                        fill: \"origin\",\r\n                        data: [],\r\n                        borderWidth: 1\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                maintainAspectRatio: false,\r\n                plugins: {\r\n                    title: {\r\n                        display: false\r\n                    },\r\n                    legend: {\r\n                        display: true,\r\n                        position: \"bottom\"\r\n                    },\r\n                    tooltip: {\r\n                        callbacks: {\r\n                            label: item => {\r\n                                return round(item.parsed.y, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n \r\n                scales: {\r\n                    xAxes: {\r\n                        type: \"time\",\r\n                        adapters: {\r\n                            date: {\r\n                                locale: $language == \"it-IT\" ? it : enUS,\r\n                            }\r\n                        },\r\n                        time: {\r\n                            unit: \"day\",\r\n                            tooltipFormat: \"dd/MMM\"\r\n                        }\r\n\r\n                    },\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateDays() {\r\n        const days = [];\r\n        this._calculator.data.days.foreach((day, i) =>\r\n            days.push({ number: i, value: new Date(day.date), text: formatDate(day.date, $string(\"$(date-format-short)\")) })\r\n        );\r\n        this.days(days);\r\n        this.totalDays(this._calculator.data.count - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateChart() {\r\n\r\n        if (!this.selectedIndicator() || !this.currentArea() || !this.selectedFactor())\r\n            return;\r\n\r\n        if (this._chart == null)\r\n            this.initChart();\r\n\r\n        const area = this.currentArea().value;\r\n\r\n        this._chart.data.datasets[0].label = this.factorDescription();\r\n        this._chart.options.plugins.title.text = this._chart.data.datasets[0].label;\r\n\r\n        if (this.isLogScale())\r\n            this._chart.options.scales.y.type = \"logarithmic\";\r\n        else\r\n            this._chart.options.scales.y.type = \"linear\";\r\n\r\n        this._chart.options.scales.y.min = 0;\r\n\r\n        this._chart.data.datasets[0].borderColor = this.selectedIndicator().colorDark;\r\n        this._chart.data.datasets[0].backgroundColor = this.selectedIndicator().colorLight;\r\n\r\n        const data = this._calculator.getSerie({\r\n            type: \"geoplot\",\r\n            areaId: area.id,\r\n            indicatorId: this.selectedIndicator().id,\r\n            xAxis: \"date\",\r\n            startDay: this.startDay(),\r\n            exeludedAreaIds: linq(this._execludedArea.keys()).toArray(),\r\n            factorId: this.selectedFactor().id,\r\n            groupSize: this.groupSize(),\r\n            isDelta: this.isDayDelta()\r\n        });\r\n\r\n        const orderedData = linq(data).select(a => a.y).where(a=> !isNaN(a)).orderBy(a => a).toArray();\r\n\r\n        this._chart.options.scales.y.min = orderedData[2];\r\n        this._chart.options.scales.y.max = orderedData[orderedData.length - 3];\r\n\r\n        this._chart.data.datasets[0].data = data as any;\r\n        this._chart.update();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateArea(value: AreaViewModel, dayNumber?: number) {\r\n\r\n        if (!value || !this.selectedIndicator() || !this.selectedFactor())\r\n            return;\r\n\r\n        if (dayNumber == undefined)\r\n            dayNumber = this.dayNumber();\r\n\r\n        const id = value.value.id.toLowerCase();\r\n        const area = value.value;\r\n\r\n        /*\r\n        if (!day || !day.values[id]) {\r\n            M.toast({\r\n                html: $string(\"$(msg-no-data)\")});\r\n            return;\r\n        }*/\r\n\r\n        value.data(this._calculator.getDataAtDay(dayNumber, id));\r\n\r\n        value.indicator(this.getIndicatorValue(dayNumber, id, this.selectedIndicator().id));\r\n\r\n        value.factor(this.getFactorValue(dayNumber, area));\r\n\r\n        value.reference(this.selectedFactor().reference(value.data(), area));\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updateDetailsArea() {\r\n\r\n        const detailsEl = <HTMLElement>document.querySelector(\".details-map\");\r\n\r\n        if (!this.detailsArea()) {\r\n            this.setViewMode(\"region\");\r\n            detailsEl.innerHTML = \"\";\r\n        }\r\n        else {\r\n\r\n            await this.detailsLoading.waitFor();\r\n\r\n            this.detailsLoading.reset();\r\n\r\n            try {\r\n\r\n                this.setViewMode(\"details\", true);\r\n\r\n                await delayAsync(0);\r\n\r\n                detailsEl.innerHTML = \"<span class = 'loading'><i class ='material-icons'>loop</i></span>\";\r\n\r\n                document.getSelection().empty();\r\n\r\n                const mainData = <IGeoPlotViewModel>JSON.parse(await (await fetch(App.baseUrl + \"AreaData/\" + this.detailsArea().id)).text());\r\n                const mapData = await (await fetch(App.baseUrl + \"AreaMap/\" + this.detailsArea().id)).text();\r\n\r\n                detailsEl.innerHTML = mapData;\r\n\r\n                var svgMap = <HTMLElement>document.querySelector(\".details-map svg\");\r\n                svgMap.addEventListener(\"click\", e => this.onMapClick(e, false));\r\n\r\n                svgMap.querySelector(\"#group_municipality\").classList.add(\"active\");\r\n\r\n                this._detailsData = new RangeDayAreaDataSet(mainData.data);\r\n                this._detailsGeo = mainData.geo;\r\n\r\n                this.setViewMode(\"details\", true);\r\n            }\r\n            finally {\r\n\r\n                this.detailsLoading.set();\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateTopAreas() {\r\n\r\n        this._daysData = [];\r\n\r\n        this._calculator.data.days.foreach((day, i) => {\r\n\r\n            const item: IDayData = {};\r\n\r\n            const isInArea = ViewModes[this.viewMode()].validateId;\r\n\r\n            item.topAreas = linq(day.values).select(a => ({\r\n                factor: this.getFactorValue(i, a.key),\r\n                value: a\r\n            })).where(a => !isNaNOrNull(a.factor))\r\n                .orderByDesc(a => a.factor).where(a => isInArea(a.value.key)).select(a => {\r\n\r\n                    const area = new AreaViewModel();\r\n\r\n                    area.value = this._calculator.geo.areas[a.value.key.toLowerCase()];\r\n\r\n                    area.select = () => this.selectedArea = area.value;\r\n\r\n                    this.updateArea(area, i);\r\n\r\n                    return area;\r\n\r\n                }).take(25).toArray();\r\n\r\n            this._daysData.push(item);\r\n        });\r\n\r\n        this.topAreas(this._daysData[this.dayNumber()].topAreas);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateDayData() {\r\n\r\n        const day = this._calculator.data.get(this.dayNumber());\r\n\r\n        if (!day) {\r\n            console.warn(\"No day data: \" + this.dayNumber());\r\n            return;\r\n        }\r\n\r\n        this.currentData(formatDate(day.date, $string(\"$(date-format)\")));\r\n\r\n        this.updateMap();\r\n\r\n        this.updateArea(this.currentArea());\r\n\r\n        this.updateAreaIndicators();\r\n\r\n        if (this._daysData && this._topAreasVisible)\r\n            this.topAreas(this._daysData[this.dayNumber()].topAreas);\r\n\r\n        this.updateUrl();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateUrl() {\r\n        if (!this._keepState)\r\n            return;\r\n        const state = this.saveStata();\r\n        let url = App.baseUrl + \"Overview\";\r\n        if (!this.isDefaultState(state))\r\n            url += \"?state=\" + encodeURIComponent(btoa(JSON.stringify(state))) + \"&keepState=true\";\r\n        history.replaceState(null, null, url);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected clearMap() {\r\n\r\n        const day = this._calculator.data.get(this.dayNumber());\r\n\r\n        if (!day || !day.values) {\r\n            console.warn(\"No day data: \" + this.dayNumber());\r\n            return;\r\n        }\r\n\r\n        for (const key in day.values) {\r\n            const element = document.getElementById(key.toUpperCase());\r\n            if (element) {\r\n                //element.style.fillOpacity = \"1\";\r\n                element.style.removeProperty(\"fill\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateMap() {\r\n\r\n        if (!this.selectedIndicator() || !this.selectedFactor())\r\n            return;\r\n\r\n\r\n        if (this.viewMode() != \"country\") {\r\n\r\n            const day = this._calculator.data.get(this.dayNumber());\r\n\r\n            var indicator = this.selectedIndicator();\r\n\r\n            const gradient = indicator.gradient ? indicator.gradient : new LinearGradient(\"#fff\", indicator.colorDark);\r\n\r\n            for (const key in day.values) {\r\n                const element = document.getElementById(key.toUpperCase());\r\n                if (element) {\r\n\r\n                    const area = this._calculator.geo.areas[key];\r\n\r\n                    if (area.type != ViewModes[this.viewMode()].areaType)\r\n                        continue;\r\n\r\n\r\n                    let factor = this.getFactorValue(this.dayNumber(), area);\r\n                    if (factor == Number.POSITIVE_INFINITY)\r\n                        factor = NaN;\r\n\r\n                    if (indicator.canBeNegative)\r\n                        factor = 0.5 + ((factor - this.baseFactor()) / (this.maxFactor() * 2));\r\n                    else\r\n                        factor = (factor - this.baseFactor()) / this.maxFactor();\r\n\r\n\r\n                    factor = Math.min(1, Math.max(0, factor));\r\n\r\n                    if (isNaNOrNull(factor)) {\r\n                        if (element.classList.contains(\"valid\"))\r\n                            element.classList.remove(\"valid\");\r\n                        element.style.removeProperty(\"fill\");\r\n                    }\r\n                    else {\r\n                        if (!element.classList.contains(\"valid\"))\r\n                            element.classList.add(\"valid\");\r\n\r\n                        let value: number;\r\n                        if (!indicator.canBeNegative)\r\n                            value = discretize(exponential(factor), 20);\r\n                        else\r\n                            value = discretize(factor, 20);\r\n                        element.style.fill = gradient.valueAt(value).toString();\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (this.viewMode() != \"details\") {\r\n            linq(document.querySelectorAll(\".main-map g.region\")).foreach((element: HTMLElement) => {\r\n                if (this._execludedArea.has(element.id))\r\n                    element.style.fill = \"#444\";\r\n                else\r\n                    element.style.fill = \"#FFF\";\r\n            });\r\n        }\r\n    }\r\n\r\n    get dataRanges() {\r\n        return this._dataRanges;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    dayNumber = ko.observable(0);\r\n    totalDays = ko.observable(0);\r\n    detailsLoading = new Signal(true);\r\n    detailsArea = ko.observable<IGeoArea>();\r\n    currentData = ko.observable<string>();\r\n    currentArea = ko.observable<AreaViewModel>();\r\n    topAreas = ko.observable<AreaViewModel[]>();\r\n    viewMode = ko.observable<ViewMode>(\"district\");\r\n    selectedIndicator = ko.observable<IIndicator<TData>>();\r\n    selectedFactor = ko.observable<IFactor<TData>>();\r\n    autoMaxFactor = ko.observable<boolean>(true);\r\n    maxFactor = ko.observable<number>();\r\n    baseFactor = ko.observable<number>(0);\r\n    isPlaying = ko.observable(false);\r\n    isLogScale = ko.observable<boolean>(false);\r\n    isDayDelta = ko.observable<boolean>(false);\r\n    isZoomChart = ko.observable<boolean>(false);\r\n    isShowEnvData = ko.observable<boolean>(false);\r\n    groupSize = ko.observable<number>(1);\r\n    startDay = ko.observable<number>(0);\r\n    dataRange = ko.observable<IDataRange>();\r\n    days = ko.observable<IGroupDay[]>();\r\n    tipManager: TipManager<IOverviewViewActions>;\r\n    isNoFactorSelected = ko.computed(() => this.selectedFactor() && this.selectedFactor().id == 'none');\r\n    groupDays = [1, 2, 3, 4, 5, 6, 7];\r\n    factorDescription = ko.observable<string>();\r\n    indicators: KnockoutObservable<IIndicator<TData>[]>;\r\n    factors: KnockoutObservable<IFactor<TData>[]>;\r\n\r\n}","﻿import { IStudioViewModel } from \"./Pages/StudioPage\";\r\nimport { IApiResult } from \"./Types\";\r\nimport { Guid, Http } from \"./WebApp\";\r\n\r\nexport namespace Api {\r\n\r\n    export async function saveState(id: Guid, state: object) {\r\n\r\n        let result = await Http.postJsonAsync<IApiResult<boolean>>(\"~/SaveState/\" + id, state);\r\n        if (!result.isSuccess)\r\n            throw result.error;\r\n        return result.data;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export async function loadState<T>(id: Guid) {\r\n        let result = await Http.getJsonAsync<IApiResult<T>>(\"~/LoadState/\" + id);\r\n        if (!result.isSuccess)\r\n            throw result.error;\r\n        return result.data;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export async function loadStudioData() {\r\n        return await Http.getJsonAsync<IStudioViewModel>(\"~/StudioData\");\r\n    }\r\n} ","﻿import { StringTable } from \"../Core/StringTable\";\r\nimport { DynamicString } from \"../Core/Types/DynamicString\";\r\n\r\nStringTable.add({\r\n\r\n    \"msg-upgrading\": \"aggiornamento alla nuova versione\",\r\n\r\n    \"confirm\": \"conferma\",\r\n\r\n    \"yes\": \"si\",\r\n\r\n    \"no\": \"no\",\r\n\r\n    \"close\": \"chiudi\",\r\n\r\n    \"day-label\": \"[Giorno]\",\r\n\r\n    \"month-label\": \"[Mese]\",\r\n\r\n    \"year-label\": \"[Anno]\",\r\n\r\n    \"msg-specify-value\": DynamicString.complex(\"specificare un valore per '{0}'\"),\r\n\r\n    \"msg-insert-greater-than\": DynamicString.complex(\"inserire un valore maggiore o uguale a {0}\"),\r\n\r\n    \"msg-invalid-email\": \"email non valida\",\r\n\r\n    \"msg-insert-less-than\": DynamicString.complex(\"inserire un valore minore o uguale a {0}\"),\r\n\r\n}, { language: \"IT\" });","﻿import { LocalString } from \"../Types/DynamicString\";\r\n\r\nexport enum OperationType {\r\n    Global,\r\n    Local\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IOperationProgress {\r\n\r\n    message?: LocalString;\r\n\r\n    totCount?: number;\r\n\r\n    current?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IOperation {\r\n\r\n    end(): void;\r\n\r\n    progress: IOperationProgress;\r\n\r\n    parentOperation: IOperation;\r\n\r\n    type: OperationType;\r\n\r\n    //subOperations: WebApp.IList<IOperation>;\r\n\r\n    addSubOperation(operation: IOperation);\r\n\r\n    removeSubOperation(operation: IOperation);\r\n\r\n    message: LocalString;\r\n}","﻿import { Format } from \"../Helpers/Format\";\r\nimport { padLeft } from \"../Utils/StringUtils\";\r\n\r\nexport enum TimePart {\r\n    Milliseconds,\r\n    Seconds,\r\n    Minutes,\r\n    Hours,\r\n    Days\r\n}\r\n\r\nexport class TimeSpan {\r\n\r\n    constructor(ticks: number = 0) {\r\n        this.ticks = ticks;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalDays() {\r\n        return this.ticks / (1000 * 60 * 60 * 24);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalHours() {\r\n        return this.ticks / (1000 * 60 * 60);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalMinutes() {\r\n        return this.ticks / (1000 * 60);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalSeconds() {\r\n        return this.ticks / (1000);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalMilliseconds() {\r\n        return this.ticks;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get days() {\r\n        return Math.floor(this.ticks / (1000 * 60 * 60 * 24))\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get hours() {\r\n        return Math.floor(this.ticks / (1000 * 60 * 60)) % 24;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get minutes() {\r\n        return Math.floor(this.ticks / (1000 * 60)) % 60;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get seconds() {\r\n        return Math.floor(this.ticks / (1000)) % 60;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get milliseconds() {\r\n        return this.ticks % 1000;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    format(format: string): string {\r\n        return Format.replaceArgs(format, arg => TimeSpan.formatArgument(this, arg));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toString() {\r\n        return this.format(\"{hh}:{mm}:{ss}\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static zero() {\r\n        return new TimeSpan(0);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromMilliseconds(value: number) {\r\n        return new TimeSpan(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromSeconds(value: number) {\r\n        return new TimeSpan(value * 1000);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromMinutes(value: number) {\r\n        return new TimeSpan(value * 1000 * 60);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromHours(value: number) {\r\n        return new TimeSpan(value * 1000 * 60 * 60);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromDays(value: number) {\r\n        return new TimeSpan(value * 1000 * 60 * 60 * 24);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static create(days: number = 0, hours: number = 0, minutes: number = 0, seconds: number = 0, milliseconds: number = 0) {\r\n        return new TimeSpan(\r\n            (days * 1000 * 60 * 60 * 24) +\r\n            (hours * 1000 * 60 * 60) +\r\n            (minutes * 1000 * 60) +\r\n            (seconds * 1000) +\r\n            (milliseconds));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static formatArgument(value: TimeSpan, arg: string): string {\r\n        switch (arg) {\r\n\r\n            case \"d\":\r\n                return value.days.toString();\r\n            case \"dd\":\r\n                return padLeft(value.days.toString(), 2, \"0\");\r\n            case \"h\":\r\n                return value.hours.toString();\r\n            case \"hh\":\r\n                return padLeft(value.hours.toString(), 2, \"0\");\r\n            case \"m\":\r\n                return value.minutes.toString();\r\n            case \"mm\":\r\n                return padLeft(value.minutes.toString(), 2, \"0\");\r\n            case \"s\":\r\n                return value.seconds.toString();\r\n            case \"ss\":\r\n                return padLeft(value.seconds.toString(), 2, \"0\");\r\n            case \"f\":\r\n                return (value.milliseconds / 100).toString();\r\n            case \"ff\":\r\n                return (value.milliseconds / 10).toString();\r\n            case \"fff\":\r\n                return value.milliseconds.toString();\r\n        }\r\n        return arg;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    ticks: number;\r\n}    ","﻿declare global {\r\n    interface Crypto {\r\n        randomUUID(): string;\r\n    }\r\n}\r\n\r\nexport function randomString(length: number, chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"): string {\r\n\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < length; i++)\r\n        result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n\r\n    return result;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isUpperCase(value: string): boolean {\r\n    return value.toUpperCase() === value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function repeatString(value: string, count: number): string {\r\n    let result = \"\";\r\n    for (let i = 0; i < count; i++)\r\n        result += value;\r\n    return result;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function padLeft(value: string, count: number, char: string): string {\r\n    if (value == null)\r\n        return;\r\n    if (value.length >= count)\r\n        return value;\r\n    return repeatString(char, count - value.length) + value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function padRight(value: string, count: number, char: string): string {\r\n    if (value == null)\r\n        return;\r\n    if (value.length >= count)\r\n        return value;\r\n    return value + repeatString(char, count - value.length);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function uuidv4(): string {\r\n    if (\"crypto\" in window && \"randomUUID\" in crypto)\r\n        return crypto.randomUUID();\r\n\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}","import { Format } from \"../Helpers/Format\";\r\nimport { LocalString } from \"../Types/DynamicString\";\r\nimport { TimeSpan } from \"../Types/TimeSpan\";\r\nimport { padLeft } from \"./StringUtils\";\r\n\r\nexport const WEEK_DAYS = [\"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\", \"Domenica\"];\r\nexport const MONTHS = [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"];\r\n\r\n/****************************************/\r\n\r\nexport function parseDate(value: Date | string): Date {\r\n\r\n    if (value instanceof Date)\r\n        return value;\r\n\r\n    return new Date(value);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function addDays(date: Date | string, value: number): Date {\r\n    return dateAdd(date, TimeSpan.fromDays(value));\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function dateAdd(date: Date | string, value: TimeSpan): Date {\r\n    date = parseDate(date);\r\n    return new Date(date.getTime() + value.ticks);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function dateDiff(date1: Date | string, date2: Date | string): TimeSpan {\r\n    return new TimeSpan(parseDate(date1).getTime() - parseDate(date2).getTime());\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function now(): Date {\r\n    return new Date();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isSameDay(dateA: Date | string, dateB: Date | string): boolean {\r\n    return truncateTime(dateA).getTime() == truncateTime(dateB).getTime();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function today(): Date {\r\n    return truncateTime(now());\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function truncateTime(date: Date|string): Date {\r\n    date = parseDate(date);\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function timeOfDay(date: Date | string): TimeSpan {\r\n    date = parseDate(date);\r\n    return new TimeSpan(date.getTime() - truncateTime(date).getTime());\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function formatDate(date: Date | string, format: LocalString): string {\r\n    date = parseDate(date);\r\n    return Format.replaceArgs(Format.text(format), arg => formatDateArgument(date, arg));\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function formatDateArgument(value: Date | string, arg: string): string {\r\n    value = parseDate(value);\r\n    switch (arg) {\r\n        case \"D\":\r\n            return value.getDate().toString();\r\n        case \"DD\":\r\n            return padLeft(value.getDate().toString(), 2, \"0\");\r\n        case \"W\":\r\n            return WEEK_DAYS[(value.getDay() + 6) % 7].substr(0, 3);\r\n        case \"WW\":\r\n            return WEEK_DAYS[(value.getDay() + 6) % 7];\r\n        case \"M\":\r\n            return value.getMonth().toString();\r\n        case \"MM\":\r\n            return padLeft((value.getMonth() + 1).toString(), 2, \"0\");\r\n        case \"MMM\":\r\n            return MONTHS[value.getMonth()].substr(0, 3);\r\n        case \"MMMM\":\r\n            return MONTHS[value.getMonth()];\r\n        case \"YY\":\r\n            return value.getFullYear().toString().substr(2);\r\n        case \"YYYY\":\r\n            return value.getFullYear().toString();\r\n        case \"h\":\r\n            return value.getHours().toString();\r\n        case \"hh\":\r\n            return padLeft(value.getHours().toString(), 2, \"0\");\r\n        case \"m\":\r\n            return value.getMinutes().toString();\r\n        case \"mm\":\r\n            return padLeft(value.getMinutes().toString(), 2, \"0\");\r\n        case \"s\":\r\n            return value.getSeconds().toString();\r\n        case \"ss\":\r\n            return padLeft(value.getSeconds().toString(), 2, \"0\");\r\n        case \"f\":\r\n            return (value.getMilliseconds() / 100).toString();\r\n        case \"ff\":\r\n            return (value.getMilliseconds() / 10).toString();\r\n        case \"fff\":\r\n            return value.getMilliseconds().toString();\r\n    }\r\n    return arg;\r\n}","﻿export class Exception extends Error {\r\n\r\n    constructor(message?: string, innerException?: Exception) {\r\n\r\n        super();\r\n\r\n        this.message = message;\r\n\r\n        this.innerException = innerException;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    innerException: Exception;\r\n}","import { linq, Linq } from \"../Linq\";\r\nimport { randomString } from \"./StringUtils\";\r\n\r\nclass LinqNode {\r\n\r\n    constructor(node: Node) {\r\n        this.node = node;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get childNodes(): Linq<LinqNode> {\r\n        return linq(this.node.childNodes).select(a => new LinqNode(a));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    descendsFrom(target: Node): boolean {\r\n        let curItem = this.node;\r\n        while (curItem != null) {\r\n            if (curItem == target)\r\n                return true;\r\n            curItem = curItem.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hasClass(className: string): boolean {\r\n        if (\"classList\" in this.node)\r\n            return (this.node as HTMLElement).classList.contains(className);\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get discendants(): Linq<LinqNode> {\r\n\r\n        function* iterator(node: Node) {\r\n\r\n            for (const child of this.node.childNodes) {\r\n                yield new LinqNode(child);\r\n                for (const innerChild of iterator(child))\r\n                    yield innerChild;\r\n            };\r\n        }\r\n\r\n        return linq(iterator(this.node));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get parentNodesOrSelf(): Linq<LinqNode> {\r\n\r\n        function* iterator(node: Node) {\r\n\r\n            let curItem = node;\r\n            while (curItem != null) {\r\n                yield new LinqNode(curItem);\r\n                curItem = curItem.parentNode;\r\n            }\r\n        }\r\n\r\n        return linq(iterator(this.node));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get parentNodes(): Linq<LinqNode> {\r\n        return this.parentNodesOrSelf.skip(1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get name(): string {\r\n        return this.node.nodeName;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    node: Node;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function parentOfClass(src: HTMLElement, className: string): HTMLElement {\r\n    return <HTMLElement>linqNode(src).parentNodes.where(a => a.hasClass(className)).select(a => a.node).first();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function linqNode(src: Node): LinqNode {\r\n    return new LinqNode(src);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isParentOrSelf(element: HTMLElement, parent: HTMLElement): boolean {\r\n\r\n    let curElement = element;\r\n\r\n    while (curElement) {\r\n        if (curElement == parent)\r\n            return true;\r\n        curElement = curElement.parentElement;\r\n    }\r\n    return false;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function generateNodeId(base: string = \"id_\") {\r\n    while (true) {\r\n        const curId = base + randomString(8);\r\n        if (!document.getElementById(curId))\r\n            return curId;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function removeClass(element: Element, className: string) {\r\n    if (element.classList.contains(className))\r\n        element.classList.remove(className);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function addClass(element: Element, className: string) {\r\n    if (!element.classList.contains(className))\r\n        element.classList.add(className);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isTouchDevice() {\r\n\r\n    return (\"ontouchstart\" in window) ||\r\n            (navigator.maxTouchPoints > 0);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isSmallDevice(): boolean {\r\n    return window.innerWidth < 610;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport async function copyText(value: string) {\r\n    if (navigator[\"clipboard\"])\r\n        await navigator.clipboard.writeText(value);\r\n    else {\r\n        const input = document.createElement(\"textarea\");\r\n        document.body.appendChild(input);\r\n        input.value = value\r\n        input.select();\r\n        //input.setSelectionRange(0, input.value.length);\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(input);\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getScrollParent(element: HTMLElement): HTMLElement {\r\n\r\n    if (!element)\r\n        return null;\r\n\r\n    if (element.scrollHeight > element.clientHeight)\r\n        return element;\r\n\r\n    return getScrollParent(element.parentElement);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isScrolledIntoView(element: HTMLElement): boolean {\r\n\r\n    const scrollParent = getScrollParent(element);\r\n    if (!scrollParent)\r\n        return true;\r\n\r\n    const scrollTop = scrollParent.scrollTop;\r\n    const scrollBottom = scrollTop + scrollParent.clientHeight;\r\n\r\n    const elemTop = element.offsetTop;\r\n    const elemBottom = element.clientHeight + elemTop;\r\n\r\n    return elemTop < scrollBottom && elemBottom > scrollTop;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function centerElement(element: HTMLElement, always = true): number {\r\n\r\n    const topOfPage = document.documentElement.scrollTop;\r\n    const heightOfPage = window.innerHeight;\r\n\r\n    let elY = 0;\r\n    let elH = 0;\r\n\r\n    for (let p = element; p && p != document.body; p = <HTMLElement>p.offsetParent)\r\n        elY += p.offsetTop;\r\n\r\n    elH = element.offsetHeight;\r\n\r\n    if (always || elY + elH > topOfPage + heightOfPage || elY < topOfPage)\r\n        document.documentElement.scrollTop = Math.max(0, elY - (heightOfPage - elH) / 2);\r\n\r\n    return elY - document.documentElement.scrollTop;\r\n\r\n}","﻿import { IDictionary } from \"../Abstraction/IDictionary\";\r\n\r\nconst idMap: IDictionary<number> = {};\r\n\r\nexport function generateId(base: string): string {\r\n\r\n    if (!base)\r\n        base = \"item\";\r\n\r\n    if (idMap[base] === undefined)\r\n        idMap[base] = 0;\r\n\r\n    idMap[base]++;\r\n\r\n    if (idMap[base] == 1)\r\n        return base;\r\n\r\n    return base + idMap[base];\r\n}","﻿import { getOrCreateProperty, getTypeName, hasProp } from \"../Core/Utils/ObjectUtils\";\r\nimport { IBindable } from \"./Abstraction/IBindable\";\r\nimport { IObservableProperty } from \"./Abstraction/IObservableProperty\";\r\nimport { IProperty } from \"./Abstraction/IProperty\";\r\nimport { ComputedProperty } from \"./ComputedProperty\";\r\nimport { ObservableProperty } from \"./ObservableProperty\";\r\n\r\nexport type Bindable<TValue> = IProperty<TValue> | TValue;\r\n\r\n/****************************************/\r\n\r\nexport interface IValueConverter<TSrc, TDest> {\r\n\r\n    convertTo(src: TSrc): TDest;\r\n\r\n    convertFrom(dest: TDest): TSrc;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function newProp<TValue>(name: string, value?: TValue, onChanged?: (value: TValue, oldValue: TValue) => void) : IObservableProperty < TValue > {\r\n\r\n    const result = new ObservableProperty<TValue>({\r\n        value: value\r\n    }, name);\r\n\r\n    if (onChanged)\r\n        result.subscribe(onChanged);\r\n    return result;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport namespace Properties {\r\n\r\n    export function converter<TObj extends object, TKey extends keyof TObj, TValue extends TObj[TKey], TProp>(obj: TObj, propName: TKey, convert: (value: TValue) => TProp, convertBack?: (value: TProp) => TValue): IProperty<TProp> {\r\n\r\n        let conValue;\r\n\r\n        return {\r\n\r\n            get: () => {\r\n                if (conValue == undefined)\r\n                    conValue = convert(obj[propName] as TValue);\r\n                return conValue;\r\n            },\r\n\r\n            set: value => {\r\n                conValue = value;\r\n                if (convertBack)\r\n                    obj[propName] = convertBack(value);\r\n            },\r\n\r\n            name: <string>propName\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function create<TObj extends IBindable, TKey extends (keyof TObj) & string, TValue extends TObj[TKey]>(obj: TObj, propName: TKey, property?: IObservableProperty<TValue>): IObservableProperty<TValue> {\r\n\r\n        let desc = Object.getOwnPropertyDescriptor(obj, propName);\r\n        if (!desc) {\r\n            console.warn(\"'\", propName, \"' not defined in \", getTypeName(obj));\r\n            desc = {};\r\n        }\r\n\r\n        if (!property)\r\n            property = new ObservableProperty(desc, <string>propName);\r\n\r\n        const props = getOrCreateProperty<any>(obj, \"@props\", {});\r\n        props[propName as any] = property;\r\n\r\n        Object.defineProperty(obj, propName, {\r\n\r\n            get: () => property.get(),\r\n\r\n            set: (newValue) => property.set(newValue)\r\n        });\r\n\r\n        return property;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function createAll<TObj>(obj: TObj): TObj {\r\n\r\n        const props = Object.getOwnPropertyNames(obj);\r\n\r\n        props.forEach(propName => {\r\n\r\n            if (propName[0] == \"_\" || propName[0] == \"$\")\r\n                return;\r\n\r\n            const propDesc = Object.getOwnPropertyDescriptor(obj, propName);\r\n\r\n            if (propDesc && !propDesc.writable)\r\n                return;\r\n\r\n            create(obj, <any>propName);\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function get<TObj extends IBindable, TKey extends keyof TObj, TValue extends TObj[TKey]>(obj: TObj, propName: TKey): IProperty<TValue> {\r\n\r\n        if (hasProp(obj, \"@props\")) {\r\n            const prop = obj[\"@props\"][propName];\r\n            if (prop)\r\n                return prop;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function getOrCreate<TObj extends IBindable, TKey extends keyof TObj & string, TValue extends TObj[TKey]>(obj: TObj, propName: TKey, property?: IObservableProperty<TValue>): IObservableProperty<TValue> {\r\n\r\n        const prop = get(obj, propName);\r\n        if (prop)\r\n            return <IObservableProperty<TValue>>prop;\r\n        return create(obj, propName, property);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function isProperty(obj: any): obj is IProperty<any> {\r\n\r\n        return (obj && typeof obj == \"object\" && typeof obj[\"get\"] == \"function\" && obj[\"get\"].length == 0 && typeof obj[\"set\"] == \"function\" && obj[\"set\"].length == 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function isObservableProperty(obj: any): obj is IObservableProperty<any> {\r\n        //TODO improve this check\r\n        return obj instanceof ObservableProperty || obj instanceof ComputedProperty;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function bind<TDest, TSrc = TDest>(dest: IObservableProperty<TDest>, src: Bindable<TSrc>, converter: IValueConverter<TSrc, TDest>) {\r\n\r\n        let value: TSrc;\r\n\r\n        if (isProperty(src)) {\r\n\r\n            if (isObservableProperty(src)) {\r\n                src.subscribe(value => {\r\n                    if (converter)\r\n                        dest.set(converter.convertTo(value as TSrc));\r\n                    else\r\n                        dest.set(value);\r\n                });\r\n            }\r\n\r\n            dest.subscribe(value => {\r\n                if (converter)\r\n                    (src as IProperty<TSrc>).set(converter.convertFrom(value as TDest));\r\n                else\r\n                    (src as IProperty<TSrc>).set(value as unknown as TSrc);\r\n            });\r\n\r\n            value = src.get();\r\n        }\r\n        else\r\n            value = <TSrc>src;\r\n\r\n        if (converter)\r\n            dest.set(converter.convertTo(value));\r\n        else\r\n            dest.set(value as unknown as TDest);\r\n\r\n        return undefined;\r\n    }\r\n}","﻿import { IFactory } from \"../../Core/Abstraction/IFactory\";\r\nimport { ISize } from \"../Types/Size\";\r\nimport { IHTMLAttach } from \"./IHTMLAttach\";\r\n\r\n\r\ndeclare global {\r\n\r\n    export interface IServices {\r\n\r\n        mapManager: IFactory<IMapManager>;\r\n    }\r\n}\r\n\r\n\r\nexport enum MapShapeType {\r\n    None,\r\n    Circle\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IMapStyle {\r\n\r\n    fillColor?: string;\r\n    strokeColor?: string;\r\n    strokeSize?: number;\r\n    opacity?: number;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface ICreateMapItemOptions {\r\n\r\n    id: string;\r\n    title?: string;\r\n    description?: string;\r\n    location?: IGeoPoint;\r\n    icon?: any;\r\n    color?: string;\r\n    shape?: IMapShape;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IStaticMapPin {\r\n    center: IGeoPoint;\r\n    icon?: any;\r\n    name?: string;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IStaticMapOptions {\r\n    size?: ISize;\r\n    center?: IGeoPoint;\r\n    pins?: IStaticMapPin[];\r\n    zoomLevel?: number;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IMapManager extends IHTMLAttach {\r\n\r\n    addItems(itemsOptions: ICreateMapItemOptions[]): IMapItem[];\r\n\r\n    removeItem(item: IMapItem);\r\n\r\n    getItemById(id: string): IMapItem;\r\n\r\n    clear();\r\n\r\n    centerTo(location: IGeoPoint, radiusMeters?: number);\r\n\r\n    zoomToItems();\r\n\r\n    updateSize();\r\n\r\n    getAddressAsync(location: IGeoPoint): Promise<string>;\r\n\r\n    getLocationAsync(address: string): Promise<IGeoPoint>;\r\n\r\n    staticMap(options: IStaticMapOptions): string;\r\n\r\n    showCurrentPositionAsync(value: boolean): Promise<void>;\r\n\r\n    selectedItem: IMapItem;\r\n\r\n    onAttached();\r\n\r\n    onSelectionChanged();\r\n\r\n    isReady: boolean;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IGeoPoint {\r\n    latitude: number;\r\n    longitude: number;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IMapItem {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    location: IGeoPoint;\r\n    icon: string;\r\n    color: string;\r\n    shape: IMapShape;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IMapShape {\r\n    type: MapShapeType;\r\n    radius?: number;\r\n    style?: IMapStyle;\r\n}","import { equals } from \"./ObjectUtils\";\r\nimport { delayAsync } from \"./PromiseUtils\";\r\n\r\nexport function equalsArray<T>(a: T[], b: T[]): boolean {\r\n\r\n    if (!Array.isArray(a) || !Array.isArray(b))\r\n        return false;\r\n\r\n    if (a.length != b.length)\r\n        return false;\r\n\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (!equals(a[i], b[i]))\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n \r\n/****************************************/\r\n\r\nexport async function forEachAsync<T>(items: T[], chunkSize: number, action: (item: T, index: number) => void) {\r\n\r\n    let index = 0;\r\n\r\n    for (const item of items) {\r\n\r\n        action(item, index);\r\n        if (index % chunkSize == 0)\r\n            await delayAsync(0);\r\n        index++;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function mergeArrays<T>(...args: T[][]): T[] {\r\n\r\n    const result: T[] = [];\r\n    for (const item of args) {\r\n        if (!item)\r\n            continue;\r\n        result.push(...item);\r\n    }\r\n    return result;\r\n}","import { isCloneable, isFunction, isObject, isString } from \"../Helpers/TypeCheck\";\r\nimport { Type } from \"../Types/Types\";\r\nimport { equalsArray } from \"./ArrayUtils\";\r\n\r\nexport function isEmpty(value: any): boolean {\r\n    return value === undefined || value === null || (Array.isArray(value) && value.length == 0);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function equals(valueA: any, valueB: any): boolean {\r\n\r\n    if (Array.isArray(valueA) || Array.isArray(valueB))\r\n        return equalsArray(valueA, valueB);\r\n\r\n    return valueA == valueB;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function createInstance<TObj>(typeName: string, ...args: any[]): TObj {\r\n\r\n    const parts = typeName.split(\".\");\r\n\r\n    let curType: any = window;\r\n    for (const part of parts)\r\n        curType = curType[part];\r\n\r\n    return new curType(...args);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function hasProp(obj: object, propName: string): boolean {\r\n    return (propName in obj);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isInstanceOf<T>(obj: any, type: Type<T>): obj is T {\r\n\r\n    if (!obj)\r\n        return;\r\n    let curType = getType(obj);\r\n    while (curType != null) {\r\n        if (curType == type)\r\n            return true;\r\n        curType = getBaseType(curType);\r\n    }\r\n    return false;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getOrCreateProperty<T>(obj: object, propName: string, value: T): T {\r\n    const desc = Object.getOwnPropertyDescriptor(obj, propName);\r\n    if (!desc) {\r\n        createProperty(obj, propName, value);\r\n        return value;\r\n    }\r\n    return get(obj, propName);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function createProperty(obj: object, propName: string, value: any) {\r\n    if (propName.substr(0, 1) == \"@\") {\r\n        Object.defineProperty(obj, propName, {\r\n            writable: true,\r\n            enumerable: false,\r\n            value: value\r\n        });\r\n    }\r\n    else {\r\n        Object.defineProperty(obj, propName, {\r\n            value: value\r\n        });\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function get<T>(obj: object, propName: string, defValue?: T): T {\r\n\r\n    if (!obj)\r\n        return defValue;\r\n    const value = obj[propName];\r\n    if (value === undefined || value === null)\r\n        return defValue;\r\n    return value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function set(obj: object, propName: string, value: any) {\r\n\r\n    if (propName.substr(0, 1) == \"@\") {\r\n        const desc = Object.getOwnPropertyDescriptor(obj, propName);\r\n        if (!desc)\r\n            createProperty(obj, propName, value);\r\n        else\r\n            obj[propName] = value;\r\n    }\r\n    else\r\n        obj[propName] = value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function setTypeName(obj: object | Type<any>, name: string) {\r\n\r\n    if (isObject(obj))\r\n        set(obj, \"@typeName\", name);\r\n    else\r\n        set(Object.getPrototypeOf(obj), \"@typeName\", name);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getTypeName(obj: any) {\r\n\r\n    if (!obj)\r\n        return undefined;\r\n\r\n    let name = obj[\"@typeName\"];\r\n\r\n    if (!name) {\r\n        name = typeof obj;\r\n\r\n        if (name == \"function\")\r\n            return getFunctionName(obj);\r\n\r\n        if (name == \"object\") {\r\n\r\n            const constFunc = obj.constructor;\r\n            if (constFunc)\r\n                return getTypeName(constFunc);\r\n        }\r\n    }\r\n    return name;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getBaseType(ctr: Type<any>): Type<any>;\r\n\r\nexport function getBaseType(obj: object): Type<any>;\r\n\r\nexport function getBaseType(objOrFun: object | Type<any>): Type<any> {\r\n\r\n    let proto: any;\r\n\r\n    if (isFunction(objOrFun))\r\n        proto = objOrFun.prototype;\r\n    else\r\n        proto = Object.getPrototypeOf(objOrFun);\r\n\r\n    return Object.getPrototypeOf(proto).constructor;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getType<TObj>(obj: TObj): Type<TObj>\r\n\r\nexport function getType<TObj>(typeName: string): Type<TObj>\r\n\r\nexport function getType<TObj>(typeOrName: string | object): Type<TObj> {\r\n\r\n    if (isString(typeOrName)) {\r\n        const parts = typeOrName.split(\".\");\r\n        let curObj = self;\r\n        parts.forEach(part => {\r\n            curObj = curObj[part];\r\n            if (!curObj)\r\n                return null;\r\n        });\r\n        return <any>curObj;\r\n    }\r\n\r\n    return (typeOrName as object).constructor as Type<TObj>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getFunctionName(func: Function): string {\r\n\r\n    let curName = func.name;\r\n    if (!curName) {\r\n        const funcNameRegex = /function\\s([^(]{1,})\\(/;\r\n        const results = (funcNameRegex).exec(func.toString());\r\n        curName = (results && results.length > 1) ? results[1].trim() : \"\";\r\n    }\r\n    return curName;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function clone<TObj>(obj: TObj): TObj {\r\n\r\n    if (isCloneable(obj))\r\n        return obj.clone();\r\n\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function registerType(type: Function, name: string) {\r\n    set(type, \"@typeName\", name);\r\n}","﻿import { IObservableProperty, IPropertyChangedHandler } from \"./Abstraction/IObservableProperty\";\r\nimport { forEachRev } from \"./Binder\";\r\n\r\nexport class ComputedProperty<TValue = any> implements IObservableProperty<TValue> {\r\n\r\n    private _handlers: IPropertyChangedHandler<TValue>[];\r\n\r\n    /****************************************/\r\n\r\n    constructor(getter: () => TValue, name: string) {\r\n\r\n        this.get = getter;\r\n\r\n        this.name = name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(): TValue {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set(value: TValue) {\r\n\r\n        //throw \"Not supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notifyChanged() {\r\n\r\n        const value = this.get();\r\n\r\n        forEachRev(this._handlers, handler =>\r\n            handler(value, undefined));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    subscribe(handler: IPropertyChangedHandler<TValue>) {\r\n        if (!this._handlers)\r\n            this._handlers = [];\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index == -1)\r\n            this._handlers.push(handler);\r\n        return handler;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    unsubscribe(handler: IPropertyChangedHandler<TValue>) {\r\n        if (!this._handlers)\r\n            return;\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index != -1)\r\n            this._handlers.splice(index, 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly name: string;\r\n\r\n    readonly isReadOnly = true;\r\n}","﻿import { IObservableProperty, IPropertyChangedHandler } from \"./Abstraction/IObservableProperty\";\r\nimport { forEachRev } from \"./Binder\";\r\n\r\nexport class ObservableProperty<TValue = any> implements IObservableProperty<TValue> {\r\n\r\n    private _handlers: IPropertyChangedHandler<TValue>[];\r\n    private _descriptor: PropertyDescriptor;\r\n\r\n    /****************************************/\r\n\r\n    constructor(desc: PropertyDescriptor, name: string) {\r\n        this._descriptor = desc;\r\n        this.name = name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(): TValue {\r\n        if (this._descriptor.get)\r\n            return this._descriptor.get();\r\n        return this._descriptor.value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set(value: TValue) {\r\n\r\n        const oldValue = this.get();\r\n\r\n        if (this._descriptor.set)\r\n            this._descriptor.set(value);\r\n        else\r\n            this._descriptor.value = value;\r\n\r\n        if (oldValue != value && this._handlers) {\r\n            forEachRev(this._handlers, handler =>\r\n                handler(value, oldValue));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notifyChanged() {\r\n\r\n        const value = this.get();\r\n\r\n        forEachRev(this._handlers, handler =>\r\n            handler(value, undefined));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    subscribe(handler: IPropertyChangedHandler<TValue>) {\r\n        if (!this._handlers)\r\n            this._handlers = [];\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index == -1)\r\n            this._handlers.push(handler);\r\n        return handler;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    unsubscribe(handler: IPropertyChangedHandler<TValue>) {\r\n        if (!this._handlers)\r\n            return;\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index != -1)\r\n            this._handlers.splice(index, 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly name: string;\r\n}","import { isObservableList } from \"../Core/Helpers/TypeCheck\";\r\nimport { IObservableListHandler } from \"./Abstraction/IObservableList\";\r\nimport { IObservableProperty, IPropertyChangedHandler } from \"./Abstraction/IObservableProperty\";\r\nimport { Properties } from \"./Properties\";\r\n\r\nexport type BindValue<TModel, TValue> = TValue | IGetter<TModel, TValue>;\r\n\r\ninterface IGetter<TObj, TValue> {\r\n    (model: TObj): TValue;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IPropertySubscription<TValue = any> {\r\n\r\n    source: any;\r\n\r\n    property: IObservableProperty<TValue>;\r\n\r\n    handler: IPropertyChangedHandler<TValue> | IObservableListHandler<any>;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IBinding<TModel, TValue = any> {\r\n\r\n    lastValue: TValue;\r\n\r\n    value(model: TModel): TValue;\r\n\r\n    action(newValue: TValue, oldValue?: TValue, isUpdate?: boolean, isClear?: boolean): void;\r\n\r\n    subscriptions: IPropertySubscription[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPropertyAccess {\r\n    obj: any;\r\n    propName: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Binder<TModel> {\r\n\r\n    private _bindings: IBinding<TModel>[] = [];\r\n    private _modelBinders: Binder<TModel>[] = [];\r\n    private _depBinders: Binder<any>[] = [];\r\n\r\n    /****************************************/\r\n\r\n    constructor(model?: TModel) {\r\n        this.model = model;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected register(binder: Binder<TModel>) {\r\n\r\n        this._modelBinders.push(binder);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected registerDependant(binder: Binder<any>) {\r\n\r\n        this._depBinders.push(binder);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected unregisterDependant(binder: Binder<any>) {\r\n        const index = this._depBinders.indexOf(binder);\r\n        if (index != -1)\r\n            this._depBinders.splice(index, 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getBindValue<TValue>(value: BindValue<TModel, TValue>): TValue {\r\n        if (typeof value == \"function\")\r\n            return (value as IGetter<TModel, TValue>)(this.model);\r\n        return <TValue>value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bind<TValue>(value: BindValue<TModel, TValue>, action: (newValue: TValue, oldValue?: TValue, isUpdate?: boolean, isClear?: boolean) => void) {\r\n\r\n        if (typeof value == \"function\") {\r\n\r\n            const binding = <IBinding<TModel, TValue>>{\r\n                value: <IGetter<TModel, TValue>>value,\r\n                action: action,\r\n                subscriptions: [],\r\n                lastValue: undefined\r\n            };\r\n\r\n            this._bindings.push(binding);\r\n\r\n            binding.value(this.createProxy(this.model, (obj, propName) => {\r\n                this.subscribe(obj, propName, binding);\r\n                return true;\r\n            }));\r\n\r\n            const bindValue = binding.value(this.model);\r\n\r\n            binding.action(bindValue, undefined, false);\r\n\r\n            binding.lastValue = bindValue;\r\n        }\r\n        else\r\n            action(value as TValue, undefined, false);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected unsubscribe(binding: IBinding<TModel>, cleanValue: boolean) {\r\n\r\n        binding.subscriptions.forEach(sub => {\r\n\r\n            if (isObservableList(sub.source))\r\n                sub.source.unsubscribe(sub.handler as IObservableListHandler<any>);\r\n            else\r\n                sub.property.unsubscribe(sub.handler as IPropertyChangedHandler<any>);\r\n        });\r\n\r\n        if (cleanValue && binding.lastValue) {\r\n            binding.action(null, binding.lastValue, true, true);\r\n            binding.lastValue = null;\r\n        }\r\n\r\n        binding.subscriptions = [];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected subscribe(obj, propName: string, binding: IBinding<TModel>) {\r\n\r\n        for (let i = 0; i < binding.subscriptions.length; i++) {\r\n            const sub = binding.subscriptions[i];\r\n            if (sub.source == obj && sub.property.name == propName)\r\n                return;\r\n        }\r\n\r\n        if (isObservableList(obj)) {\r\n\r\n            const handler = <IObservableListHandler<any>>{\r\n                onChanged: () => {\r\n\r\n                    const bindValue = binding.value(this.model);\r\n\r\n                    if (bindValue == binding.lastValue)\r\n                        return;\r\n\r\n                    binding.action(bindValue, binding.lastValue, true);\r\n\r\n                    binding.lastValue = bindValue;\r\n                }\r\n            };\r\n\r\n            obj.subscribe(handler);\r\n\r\n            binding.subscriptions.push({\r\n                source: obj,\r\n                property: null,\r\n                handler: handler\r\n            });\r\n        }\r\n        else {\r\n\r\n            const propDesc = Object.getOwnPropertyDescriptor(obj, propName);\r\n\r\n            if (!propDesc || (!propDesc.writable && !propDesc.set)) {\r\n                console.warn(\"Property \", propName, \" for object \", obj, \" not exists or is not writeable.\");\r\n                return;\r\n            }\r\n\r\n            const prop = Properties.getOrCreate(obj, propName);\r\n\r\n            const handler = (value, oldValue) => {\r\n\r\n                const bindValue = binding.value(this.model);\r\n\r\n                if (bindValue == binding.lastValue)\r\n                    return;\r\n\r\n                this.unsubscribe(binding, false);\r\n\r\n                binding.value(this.createProxy(this.model, (obj, propName) => {\r\n                    this.subscribe(obj, propName, binding);\r\n                    return true;\r\n                }));\r\n\r\n                binding.action(bindValue, binding.lastValue, true);\r\n\r\n                binding.lastValue = bindValue;\r\n            };\r\n\r\n            prop.subscribe(handler);\r\n\r\n            binding.subscriptions.push({\r\n                source: obj,\r\n                property: prop,\r\n                handler: handler\r\n            });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getBindingProperty<TValue>(value: BindValue<TModel, TValue>): IObservableProperty<TValue> {\r\n        if (typeof value != \"function\")\r\n            return null;\r\n\r\n        let lastProp: IPropertyAccess;\r\n        (value as IGetter<TModel, TValue>)(this.createProxy(this.model, (obj, propName) => {\r\n            lastProp = {\r\n                obj: obj,\r\n                propName: propName\r\n            }\r\n            return true;\r\n        }));\r\n\r\n        if (lastProp && lastProp.obj)\r\n            return Properties.getOrCreate(lastProp.obj, lastProp.propName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createProxy<TObj>(obj: TObj, action: (obj: any, propName: string) => boolean): TObj {\r\n\r\n        interface IListProxy {\r\n            count?: number;\r\n\r\n            get?: (index: number) => any;\r\n\r\n            _innerProxies?: { [key: number]: any };\r\n        }\r\n\r\n        if (!obj || typeof (obj) != \"object\")\r\n            return obj;\r\n\r\n        const propList: string[] = [];\r\n\r\n        const proxy = {};\r\n\r\n        if (isObservableList(obj)) {\r\n\r\n            const listProxy = <IListProxy>proxy;\r\n\r\n            propList.push(\"count\");\r\n\r\n            listProxy._innerProxies = {};\r\n\r\n            listProxy.get = (index) => {\r\n\r\n                if (!(index in listProxy._innerProxies)) {\r\n\r\n                    if (action(obj, index.toString()))\r\n                        listProxy._innerProxies[index] = this.createProxy(obj.get(index), action);\r\n                    else\r\n                        listProxy._innerProxies[index] = obj.get(index);\r\n                }\r\n\r\n                return listProxy._innerProxies[index];\r\n            }\r\n        }\r\n        else {\r\n            for (const propName in obj)\r\n                propList.push(propName);\r\n        }\r\n\r\n        for (const propName of propList) {\r\n\r\n            let innerProxy;\r\n            let isInit = false;\r\n            let lastValueSet;\r\n\r\n            Object.defineProperty(proxy, propName, {\r\n                get: () => {\r\n                    if (!isInit) {\r\n\r\n                        if (action(obj, propName))\r\n                            innerProxy = this.createProxy(obj[propName], action);\r\n                        else\r\n                            innerProxy = obj[propName];\r\n\r\n                        isInit = true;\r\n                    }\r\n                    return innerProxy;\r\n                },\r\n                set: value => {\r\n\r\n                    if (lastValueSet == value)\r\n                        return;\r\n\r\n                    if (action(obj, propName))\r\n                        innerProxy = this.createProxy(value, action);\r\n                    else\r\n                        innerProxy = value;\r\n\r\n                    lastValueSet = value;\r\n\r\n                    isInit = true;\r\n                }\r\n            });\r\n        }\r\n        return <TObj>proxy;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected cleanBindings(cleanValue: boolean) {\r\n\r\n        this._bindings.forEach(binding =>\r\n            this.unsubscribe(binding, cleanValue));\r\n\r\n        this._modelBinders.forEach(binder =>\r\n            binder.cleanBindings(cleanValue));\r\n\r\n        this._depBinders.forEach(binder =>\r\n            binder.cleanBindings(cleanValue));\r\n\r\n        this._modelBinders = [];\r\n        this._bindings = [];\r\n        this._depBinders = [];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateModel(model: TModel) {\r\n\r\n        this.model = model;\r\n\r\n        forEachRev(this._bindings, binding => {\r\n            const value = binding.value(model);\r\n            if (binding.lastValue == value)\r\n                return;\r\n            binding.action(value, binding.lastValue, true)\r\n            binding.lastValue = value;\r\n        });\r\n\r\n        forEachRev(this._modelBinders, binder =>\r\n            binder.updateModel(model));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    model: TModel;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function forEachRev<T>(items: T[], action: (item: T) => void) {\r\n\r\n    if (!items || items.length == 0)\r\n        return;\r\n\r\n    for (let i = items.length - 1; i >= 0; i--)\r\n        action(items[i]);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport async function forEachRevAsync<T>(items: T[], action: (item: T) => Promise<void>) {\r\n\r\n    if (!items || items.length == 0)\r\n        return;\r\n\r\n    for (let i = items.length - 1; i >= 0; i--)\r\n        await action(items[i]);\r\n}","﻿import { DynamicString, IDynamicStringConfig, LocalString, StringUsage } from \"../Core/Types/DynamicString\";\r\nimport { IBindable } from \"./Abstraction/IBindable\";\r\nimport { IObservableProperty, IPropertyChangedHandler } from \"./Abstraction/IObservableProperty\";\r\nimport { Binder } from \"./Binder\";\r\nimport { ComputedProperty } from \"./ComputedProperty\";\r\nimport { Bindable, IValueConverter, Properties } from \"./Properties\";\r\n\r\nexport class BindableObject implements IBindable {\r\n\r\n    private _computedBinder: Binder<this>;\r\n\r\n    prop<TKey extends keyof this & string>(propName: TKey): IObservableProperty<this[TKey]> {\r\n        return Properties.getOrCreate(this, propName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static bindValue<T>(value: Bindable<T>): T {\r\n        if (Properties.isProperty(value))\r\n            return value.get();\r\n        return <any>value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bindConfig<TConfig, TKey extends keyof this & keyof TConfig & string, TSrc extends TConfig[TKey], TDest extends this[TKey]>(propName: TKey, config: TConfig, converter?: IValueConverter<TSrc, TDest>, onValueChanged?: IPropertyChangedHandler<TDest>) {\r\n\r\n        this.bind(propName, config && propName in config ? <Bindable<TSrc>>config[propName] : undefined, converter, onValueChanged);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n\r\n    bindConfigString<TConfig, TKey extends keyof this & keyof TConfig & string>(propName: TKey, config: TConfig, configOrUsage?: IDynamicStringConfig | StringUsage, onValueChanged?: IPropertyChangedHandler<string>) {\r\n\r\n        this.bindString(propName, config && propName in config ? <any>config[propName] : undefined, configOrUsage, onValueChanged);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    computed<TKey extends keyof this & string, TValue extends this[TKey]>(propName: TKey, compute: (model: this) => TValue) {\r\n\r\n        return Properties.create(this, propName, this.createComputed(compute, <string>propName));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    createComputed<TValue>(compute: (model: this) => TValue, name?: string): IObservableProperty<TValue> {\r\n\r\n        if (!this._computedBinder)\r\n            this._computedBinder = new Binder(this);\r\n\r\n        const prop = new ComputedProperty(() => compute(this), name);\r\n\r\n        this._computedBinder.bind(compute, () => prop.notifyChanged());\r\n\r\n        return prop;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bind<TKey extends keyof this & string, TSrc, TDest extends this[TKey]>(propName: TKey, value: Bindable<TSrc>, converter?: IValueConverter<TSrc, TDest>, onValueChanged?: IPropertyChangedHandler<TDest>) {\r\n\r\n        const prop = Properties.getOrCreate(this, propName);\r\n\r\n        if (onValueChanged)\r\n            prop.subscribe(onValueChanged);\r\n\r\n        if (value !== undefined)\r\n            Properties.bind(prop, value, converter);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bindString<TKey extends keyof this & string>(propName: TKey, value: Bindable<LocalString>, configOrUsage?: IDynamicStringConfig | StringUsage, onValueChanged?: IPropertyChangedHandler<string>) {\r\n\r\n        return this.bind(propName, value, {\r\n            convertTo: a => <any>DynamicString.getValue(a, <any>configOrUsage),\r\n            convertFrom: a => <any>a\r\n        }, <any>onValueChanged);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    apply(block: (obj: this) => any): this {\r\n        block(this);\r\n        return this;\r\n    }\r\n}","﻿import { IActivable } from \"../Abstraction/IActivable\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IEditable } from \"../Abstraction/IEditable\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { IHTMLContainer } from \"../Abstraction/IHTMLContainer\";\r\nimport { ISelectable } from \"../Abstraction/ISelectable\";\r\nimport { ISingleItemSelector } from \"../Abstraction/ISingleItemSelector\";\r\nimport { IValidable } from \"../Abstraction/IValidator\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport function isAsyncEditor(value: any): value is IAsyncEditor<any, any> {\r\n\r\n    return value && typeof value == \"object\" && \"editAsync\" in value && typeof value[\"editAsync\"] == \"function\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isView(value: any): value is IView {\r\n\r\n    return value && typeof value == \"object\" && \"parentView\" in value && \"template\" in value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isActivable(value: any): value is IActivable {\r\n\r\n    return value && typeof value == \"object\" && typeof value[\"activateAsync\"] == \"function\" && value[\"activateAsync\"].length == 0;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isSelectable(value: any): value is ISelectable {\r\n\r\n    return value && typeof value == \"object\" && \"isSelected\" in value && \"select\" in value && typeof value[\"select\"] == \"function\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isSingleItemSelector(value: any): value is ISingleItemSelector<any> {\r\n\r\n    return value && typeof value == \"object\" && \"selectedItem\" in value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isAsyncLoad(value: any): value is IAsyncLoad {\r\n\r\n    return value && typeof value == \"object\" && typeof value[\"loadAsync\"] == \"function\" && value[\"loadAsync\"].length == 0;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isValidable(value: any): value is IValidable {\r\n\r\n    return value && typeof value == \"object\" && typeof value[\"validateAsync\"] == \"function\" && value[\"validateAsync\"].length < 2;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isHTMLContainer(value: any): value is IHTMLContainer {\r\n\r\n    return value && typeof value == \"object\" && \"nodes\" in value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isEditable(value: any): value is IEditable<any> {\r\n\r\n    return value && typeof value == \"object\" && \"createEditor\" in value && typeof value.createEditor == \"function\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isHTMLAttach(value: any): value is IHTMLAttach {\r\n\r\n    return typeof value == \"object\" && \"attach\" in value && typeof value[\"attach\"] == \"function\"\r\n}","﻿export interface IBehavoir<TElement extends HTMLElement = HTMLElement, TModel = any> {\r\n\r\n    attach(element: TElement, model?: TModel);\r\n\r\n    detach(element: TElement, model?: TModel);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport var behavoirCatalog: { [key: string]: () => IBehavoir } = {}","import { linq } from \"../Core/Linq\";\r\nimport { getTypeName } from \"../Core/Utils/ObjectUtils\";\r\nimport { isHTMLContainer } from \"../View/Helpers/TypeCheck\";\r\nimport { behavoirCatalog, IBehavoir } from \"./Abstraction/IBehavoir\";\r\nimport { IObservableList, IObservableListHandler } from \"./Abstraction/IObservableList\";\r\nimport { ITemplate } from \"./Abstraction/ITemplate\";\r\nimport { CatalogTemplate, ITemplateProvider } from \"./Abstraction/ITemplateProvider\";\r\nimport { Binder, BindValue } from \"./Binder\";\r\n \r\ntype TemplateValueMap<TModel, TObj extends { [key: string]: any }> = { [TKey in keyof TObj]?: BindValue<TModel, TObj[TKey]> }\r\n\r\ntype RefNodePosition = \"after\" | \"before\" | \"inside\";\r\n\r\ntype TemplateInlineMode = \"never\" | \"always\" | \"auto\" | \"explicit\" | \"replace-parent\" | \"embed-child\" | \"inherit\";\r\n\r\n/****************************************/\r\n\r\nexport const TemplateCatalog: { [key: string]: ITemplate<any> } = {};\r\n\r\nexport function defineTemplate(name: string, template: ITemplate<any>) {\r\n    TemplateCatalog[name] = template;\r\n}\r\n\r\nwindow[\"__defineTemplate\"] = defineTemplate;\r\n\r\n/****************************************/\r\n\r\nexport class TemplateBuilder<TModel, TElement extends HTMLElement = HTMLElement> extends Binder<TModel>{\r\n\r\n    protected _endElement: Node;\r\n    protected _startElement: Node;\r\n    protected _lastElement: Node;\r\n    protected _childCount = 0;\r\n    protected _updateCount = 0;\r\n    protected _updateNode: Node = null;\r\n\r\n    /****************************************/\r\n\r\n    constructor(model: TModel, element: TElement, parent?: TemplateBuilder<any>) {\r\n\r\n        super(model);\r\n         \r\n        this.parent = parent;\r\n\r\n        this.element = element;\r\n\r\n        if (element.namespaceURI && element.namespaceURI != \"http://www.w3.org/1999/xhtml\")\r\n            this.namespace = element.namespaceURI;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected beginTemplate<TInnerModel>(model?: TInnerModel, refNode?: Node, refNodePos: RefNodePosition = \"after\", marker?: string): TemplateBuilder<TInnerModel> {\r\n\r\n        const innerBuilder = new TemplateBuilder<TInnerModel>(model, this.element, this);\r\n\r\n        innerBuilder._lastElement = this._lastElement;\r\n\r\n        innerBuilder.begin(refNode, refNodePos, marker);\r\n\r\n        if (this.inlineMode == \"explicit\") {\r\n            innerBuilder.isInline = this.isInline;\r\n            innerBuilder.inlineMode = \"inherit\";\r\n        }\r\n\r\n        return innerBuilder;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected endTemplate<TInnerMode>(childBuilder: TemplateBuilder<TInnerMode>) {\r\n\r\n        childBuilder.end();\r\n\r\n        if (childBuilder.element == this.element)\r\n            this._lastElement = childBuilder._lastElement;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected beginUpdate() {\r\n\r\n        if (this._updateCount == 0 && this.element.parentNode) {\r\n\r\n            this._updateNode = document.createTextNode(\"\");\r\n            this.element.parentNode.replaceChild(this._updateNode, this.element)\r\n        }\r\n        this._updateCount++;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected endUpdate() {\r\n\r\n        this._updateCount--;\r\n\r\n        if (this._updateCount == 0 && this._updateNode) {\r\n\r\n            this._updateNode.parentNode.replaceChild(this.element, this._updateNode)\r\n            this._updateNode = null;\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    begin(refNode?: Node, refNodePos?: RefNodePosition, marker?: string): this {\r\n\r\n        this._startElement = marker ? document.createComment(\"begin-\" + marker) : document.createTextNode(\"\");\r\n\r\n        if (refNode) {\r\n\r\n            if (refNodePos == \"after\") {\r\n                if (!refNode.nextSibling)\r\n                    refNode.parentNode.appendChild(this._startElement);\r\n                else\r\n                    refNode.parentNode.insertBefore(this._startElement, refNode.nextSibling);\r\n            }\r\n\r\n            else if (refNodePos == \"before\")\r\n                refNode.parentNode.insertBefore(this._startElement, refNode);\r\n\r\n            else if (refNodePos == \"inside\")\r\n                refNode.appendChild(this._startElement);\r\n        }\r\n        else\r\n            this.appendChild(this._startElement);\r\n\r\n        this._lastElement = this._startElement;\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    end(): this {\r\n\r\n        if (this._endElement)\r\n            return;\r\n\r\n        if (this._startElement.nodeType == Node.COMMENT_NODE)\r\n            this._endElement = document.createComment(this._startElement.textContent.replace(\"begin-\", \"end-\"));\r\n        else\r\n            this._endElement = document.createTextNode(\"\");\r\n\r\n        this.appendChild(this._endElement);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear(remove: boolean = false): this {\r\n\r\n        this._childCount = 0;\r\n\r\n        if (!this._endElement) {\r\n            console.warn(\"Missing end element: \" + this.model);\r\n            this.end();\r\n        }\r\n\r\n        let curNode = this._endElement;\r\n\r\n        while (true) {\r\n\r\n            let mustDelete = true;\r\n\r\n            if ((curNode == this._startElement || curNode == this._endElement) && !remove)\r\n                mustDelete = false;\r\n\r\n            const prev = curNode.previousSibling;\r\n\r\n            if (mustDelete) {\r\n\r\n                if (mustDelete)\r\n                    curNode.parentNode.removeChild(curNode);\r\n            }\r\n\r\n            if (curNode == this._startElement)\r\n                break;\r\n\r\n            curNode = prev;\r\n        }\r\n\r\n        if (remove) {\r\n            this._endElement = null;\r\n            this._startElement = null;\r\n            this._lastElement = null;\r\n        }\r\n        else\r\n            this._lastElement = this._startElement;\r\n\r\n        this.cleanBindings(true);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    appendChild(node: Node): this {\r\n\r\n        if (!this._lastElement || !this._lastElement.parentNode) //TODO this || didn't exists\r\n            this.element.appendChild(node);\r\n        else {\r\n            if (this._lastElement.nextSibling)\r\n                this._lastElement.parentNode.insertBefore(node, this._lastElement.nextSibling);\r\n            else\r\n                this._lastElement.parentNode.appendChild(node);\r\n\r\n        }\r\n        //TODO this line was inside else\r\n        this._lastElement = node;\r\n        //\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    foreach<TItem>(selector: BindValue<TModel, IObservableList<TItem> | TItem[]>, templateOrName: CatalogTemplate<TItem>): this {\r\n        const value = this.getBindValue(selector);\r\n        if (Array.isArray(value) || !value)\r\n            this.foreachArray(selector as any, templateOrName);\r\n        else\r\n            this.foreachList(selector as any, templateOrName);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    foreachList<TItem>(selector: BindValue<TModel, IObservableList<TItem>>, templateOrName: CatalogTemplate<TItem>): this {\r\n\r\n        let itemsBuilders: TemplateBuilder<TItem>[] = [];\r\n\r\n        const template = this.loadTemplate(templateOrName);\r\n\r\n        const marker = document.createTextNode(\"\");\r\n\r\n        this.appendChild(marker);\r\n\r\n        const handler: IObservableListHandler<TItem> = {\r\n\r\n            onClear: () => {\r\n                itemsBuilders.forEach(a => a.clear(true));\r\n                itemsBuilders = [];\r\n            },\r\n\r\n            onItemRemoved: (item, index, reason) => {\r\n\r\n                if (reason == \"replace\" || reason == \"clear\")\r\n                    return;\r\n\r\n                itemsBuilders[index].clear(true);\r\n                itemsBuilders.splice(index, 1);\r\n            },\r\n\r\n            onItemSwap: (index: number, newIndex: number) => {\r\n\r\n            },\r\n\r\n            onItemReplaced: (newItem, oldItem, index) => {\r\n\r\n                itemsBuilders[index].updateModel(newItem);\r\n            },\r\n\r\n            onItemAdded: (item, index, reason) => {\r\n\r\n                if (reason == \"replace\")\r\n                    return;\r\n\r\n                let itemBuilder: TemplateBuilder<TItem>;\r\n\r\n                if (index == itemsBuilders.length) {\r\n                    if (index == 0)\r\n                        itemBuilder = this.beginTemplate(item, marker, \"after\", this.createMarker(item));\r\n                    else\r\n                        itemBuilder = this.beginTemplate(item, itemsBuilders[index - 1]._endElement, \"after\", this.createMarker(item));\r\n\r\n                    itemsBuilders.push(itemBuilder);\r\n                }\r\n                else {\r\n                    itemBuilder = this.beginTemplate(item, itemsBuilders[index]._startElement, \"before\", this.createMarker(item));\r\n                    itemsBuilders.splice(index, 0, itemBuilder);\r\n                }\r\n\r\n                itemBuilder.index = index;\r\n\r\n                template(itemBuilder);\r\n\r\n                this.endTemplate(itemBuilder);\r\n            }\r\n        };\r\n\r\n        this.bind(selector, (value, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            this.beginUpdate();\r\n\r\n            if (isUpdate)\r\n                handler.onClear();\r\n\r\n            if (oldValue)\r\n                oldValue.unsubscribe(handler);\r\n\r\n            if (value) {\r\n\r\n                value.subscribe(handler);\r\n\r\n                for (let i = 0; i < value.count; i++)\r\n                    handler.onItemAdded(value.get(i), i, \"add\");\r\n            }\r\n\r\n            this.endUpdate();\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected foreachArray<TItem>(selector: BindValue<TModel, TItem[]>, templateOrName: CatalogTemplate<TItem>): this {\r\n\r\n        let itemsBuilders: TemplateBuilder<TItem>[] = [];\r\n        const template = this.loadTemplate(templateOrName);\r\n        const marker = document.createTextNode(\"\");\r\n\r\n        this.appendChild(marker);\r\n\r\n        this.bind(selector, (value, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            if (isUpdate) {\r\n\r\n                itemsBuilders.forEach(a => a.clear());\r\n                itemsBuilders = [];\r\n            }\r\n\r\n            if (value) {\r\n\r\n                this._lastElement = marker;\r\n\r\n                this.beginUpdate();\r\n\r\n                value.forEach(item => {\r\n\r\n                    const itemBuilder = this.beginTemplate(item);\r\n\r\n                    itemBuilder.index = itemsBuilders.length;\r\n\r\n                    template(itemBuilder);\r\n\r\n                    this.endTemplate(itemBuilder);\r\n\r\n                    itemsBuilders.push(itemBuilder);\r\n\r\n                });\r\n\r\n                this.endUpdate();\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    if(condition: BindValue<TModel, boolean>, trueTemplate: ITemplate<TModel>, falseTemplate?: ITemplate<TModel>): this {\r\n\r\n        const childBuilder = this.beginTemplate(this.model);\r\n\r\n        this.register(childBuilder);\r\n\r\n        this.bind(condition, (value, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            if (isUpdate)\r\n                childBuilder.clear();\r\n\r\n            if (value)\r\n                childBuilder.template(trueTemplate);\r\n            else if (falseTemplate)\r\n                childBuilder.template(falseTemplate);\r\n\r\n        });\r\n\r\n        this.endTemplate(childBuilder);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected replaceContent(nodes: Node[]) {\r\n\r\n        if (this.isInline)\r\n            throw \"'replaceContent' not supported in inline elements\";\r\n\r\n        this.clear();\r\n\r\n        for (const node of nodes)\r\n            this.appendChild(node);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected extractContent(): Node[] {\r\n\r\n        const result: Node[] = [];\r\n        for (const child of linq(this.element.childNodes)) {\r\n            if (child != this._startElement && child != this._endElement)\r\n                result.push(child);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    content<TInnerModel extends ITemplateProvider>(content: BindValue<TModel, TInnerModel>, inline: boolean = false): this {\r\n\r\n        const childBuilder = this.beginTemplate<TInnerModel>(undefined, undefined, undefined, this.createMarker(content));\r\n\r\n        childBuilder.isInline = inline;\r\n        childBuilder.inlineMode = \"explicit\";\r\n\r\n        this.bind(content, (value, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            this.beginUpdate();\r\n\r\n            if (!childBuilder.isInline && isHTMLContainer(value) && value.nodes && value.isCacheEnabled === true)\r\n                childBuilder.replaceContent(value.nodes);\r\n\r\n            else {\r\n\r\n                if (oldValue && value && oldValue.template == value.template)\r\n                    childBuilder.updateModel(value);\r\n                else {\r\n\r\n                    if (isUpdate)\r\n                        childBuilder.clear();\r\n\r\n                    if (value) {\r\n\r\n                        const template = this.templateFor(value);\r\n\r\n                        if (!template)\r\n                            throw \"Template '\" + value.template + \"' not found.\";\r\n\r\n                        childBuilder.updateModel(value);\r\n                        template(childBuilder);\r\n                    }\r\n                }\r\n\r\n                if (isHTMLContainer(value) && value.isCacheEnabled === true)\r\n                    value.nodes = this.extractContent();\r\n            }\r\n\r\n            this.endUpdate();\r\n        });\r\n\r\n        this.endTemplate(childBuilder);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    templateFor<TModel>(value: TModel): ITemplate<TModel> {\r\n\r\n        if (typeof value == \"string\" || typeof value == \"number\")\r\n            return this.loadTemplate<TModel>(\"Text\");\r\n\r\n        if (typeof value == \"object\" && \"template\" in value)\r\n            return this.loadTemplate<TModel>((value as any).template);\r\n\r\n        throw \"cannot determine template for model\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadTemplate<TModel>(templateOrName: CatalogTemplate<TModel>): ITemplate<TModel> {\r\n\r\n        if (typeof templateOrName == \"string\") {\r\n            const result = TemplateCatalog[templateOrName];\r\n            if (!result)\r\n                console.error(\"Template \", templateOrName, \" not found.\");\r\n            return result;\r\n        }\r\n\r\n        return <ITemplate<TModel>>templateOrName;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    template(templateOrName: CatalogTemplate<TModel>): this;\r\n\r\n    template<TInnerModel>(templateOrName: CatalogTemplate<TInnerModel>, model: BindValue<TModel, TInnerModel>): this;\r\n\r\n    template(templateOrName: CatalogTemplate<any>, model?: BindValue<TModel, any>): this {\r\n\r\n        const template = this.loadTemplate(templateOrName);\r\n\r\n        if (model) {\r\n\r\n            const childBuilder = this.beginTemplate(undefined, undefined, undefined, this.createMarker(model, \"template\"));\r\n\r\n            this.bind(model, (value, oldValue, isUpdate, isClear) => {\r\n\r\n                if (isClear)\r\n                    return;\r\n\r\n                childBuilder.updateModel(value);\r\n\r\n                if (!isUpdate)\r\n                    template(childBuilder);\r\n            });\r\n\r\n            this.endTemplate(childBuilder);\r\n        }\r\n        else\r\n            template(this);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    exec(action: (buidler: this) => void): this {\r\n        action(this);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    beginChild<TKey extends keyof HTMLElementTagNameMap>(name: TKey, namespace?: string): ChildTemplateBuilder<TModel, HTMLElementTagNameMap[TKey] | TElement, this> {\r\n\r\n        if (this.isInline && this._childCount > 0)\r\n            throw \"In inline mode you must have a single root element for your template\";\r\n\r\n        const childElement = this.isInline && name.toUpperCase() == this.element.tagName ? this.element : this.createElement(name, namespace);\r\n\r\n        const childBuilder = new ChildTemplateBuilder<TModel, HTMLElementTagNameMap[TKey] | TElement, this>(this.model, childElement, this);\r\n\r\n        if (childElement == this.element)\r\n            childBuilder._lastElement = this._lastElement;\r\n\r\n        this.register(childBuilder);\r\n\r\n        this._childCount++;\r\n\r\n        return childBuilder;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    child<TKey extends keyof HTMLElementTagNameMap>(name: TKey, attributes?: TemplateValueMap<TModel, TElement>, namespace?: string): this\r\n\r\n    child<TKey extends keyof HTMLElementTagNameMap>(name: TKey, builder: (builder: TemplateBuilder<TModel, HTMLElementTagNameMap[TKey]>, namespace?: string) => void): this\r\n\r\n    child<TKey extends keyof HTMLElementTagNameMap>(name: TKey, builderOrAttributes?: any, namespace?: string): this {\r\n\r\n        const childBuilder = new TemplateBuilder<TModel, HTMLElementTagNameMap[TKey]>(this.model, this.createElement(name, namespace), this);\r\n\r\n        this.register(childBuilder);\r\n\r\n        if (typeof builderOrAttributes == \"function\")\r\n            builderOrAttributes(childBuilder);\r\n        else\r\n            childBuilder.attribs(builderOrAttributes);\r\n\r\n        this.appendChild(childBuilder.element);\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set(attribute: string, value: BindValue<TModel, string | number | boolean | Promise<string | number | boolean>>): this {\r\n\r\n        this.bind(value, a => {\r\n            if (a !== null && a !== undefined) {\r\n                if (a instanceof Promise) {\r\n                    a.then(newValue => this.element.setAttribute(attribute, newValue as string));\r\n                }\r\n                else\r\n                    this.element.setAttribute(attribute, a as string);\r\n            }\r\n            else\r\n                this.element.removeAttribute(attribute);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    on<TKey extends keyof HTMLElementEventMap>(event: TKey, handler: (model: TModel, e?: HTMLElementEventMap[TKey]) => void): this {\r\n        this.element.addEventListener(event, ev => handler(this.model, ev));\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    class(name: BindValue<TModel, string>): this;\r\n\r\n    class(name: string, condition: BindValue<TModel, Boolean>): this;\r\n\r\n    class(name: any, condition?: BindValue<TModel, Boolean>): this {\r\n        if (condition) {\r\n            const nameParts: string[] = name ? name.split(\" \") : [];\r\n            this.bind(condition, value => {\r\n                if (value)\r\n                    nameParts.forEach(a => this.element.classList.add(a));\r\n                else\r\n                    nameParts.forEach(a => this.element.classList.remove(a));\r\n            })\r\n        }\r\n        else\r\n            this.bind(name, (value, oldValue) => {\r\n                if (oldValue)\r\n                    oldValue.split(\" \").forEach(item =>\r\n                        this.element.classList.remove(item));\r\n                if (value)\r\n                    value.split(\" \").forEach(item =>\r\n                        this.element.classList.add(item));\r\n            });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    visible(value: BindValue<TModel, boolean>): this {\r\n\r\n        this.bind(value, (newValue, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            if (newValue) {\r\n                this.element.classList.add(\"visible\");\r\n                this.element.classList.remove(\"hidden\");\r\n            }\r\n            else {\r\n                this.element.classList.add(\"hidden\");\r\n                this.element.classList.remove(\"visible\");\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    text(value: BindValue<TModel, string | number>): this {\r\n        const textNode = document.createTextNode(\"\");\r\n\r\n        this.appendChild(textNode);\r\n\r\n        this.bind(value, a => textNode.textContent = <any>a);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    html(value: BindValue<TModel, string>): this {\r\n        this.bind(value, a => this.element.innerHTML = a);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    focus(value: BindValue<TModel, boolean>): this {\r\n\r\n        const valueProp = this.getBindingProperty(value);\r\n\r\n        if (valueProp) {\r\n            this.element.addEventListener(\"focus\", ev =>\r\n                valueProp.set(true));\r\n            this.element.addEventListener(\"focusout\", ev =>\r\n                valueProp.set(false));\r\n        }\r\n        this.bind(value, a => {\r\n            if (a && document.activeElement != this.element)\r\n                this.element.focus();\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(value: BindValue<TModel, string | boolean>): this {\r\n\r\n        const element = <HTMLInputElement><any>this.element;\r\n\r\n        const valueProp = this.getBindingProperty(value);\r\n\r\n        if (valueProp) {\r\n            if (element.tagName == \"INPUT\" || element.tagName == \"TEXTAREA\") {\r\n\r\n                if (element.type == \"checkbox\" || element.type == \"radio\")\r\n                    element.addEventListener(\"change\", ev => {\r\n                        valueProp.set(element.checked);\r\n                    });\r\n                else {\r\n                    element.addEventListener(\"keyup\", ev => {\r\n                        valueProp.set(element.value);\r\n                    });\r\n                    element.addEventListener(\"change\", ev => {\r\n                        valueProp.set(element.value);\r\n                    });\r\n                }\r\n            }\r\n            else if (element.tagName == \"SELECT\") {\r\n                element.addEventListener(\"change\", ev => {\r\n                    valueProp.set(element.value);\r\n                });\r\n            }\r\n\r\n        }\r\n        if (element.tagName == \"INPUT\" || element.tagName == \"TEXTAREA\" || element.tagName == \"SELECT\") {\r\n\r\n            if (element.type == \"checkbox\" || element.type == \"radio\")\r\n                this.bind(value, (a: boolean) => element.checked = a);\r\n            else\r\n                this.bind(value, (a: string) => a ? element.value = a : element.value = null);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    style<TKey extends keyof CSSStyleDeclaration>(name: TKey, value: BindValue<TModel, CSSStyleDeclaration[TKey]>): this {\r\n        this.bind(value, a => this.element.style[name] = a);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    behavoir(value: IBehavoir<TElement, TModel>): this;\r\n\r\n    behavoir(name: string): this;\r\n\r\n    behavoir(nameOrValue: any): this {\r\n\r\n        if (typeof nameOrValue == \"string\")\r\n            behavoirCatalog[<string>nameOrValue]().attach(this.element, this.model);\r\n        else\r\n            (nameOrValue as IBehavoir).attach(this.element, this.model);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    styles(value: TemplateValueMap<TModel, CSSStyleDeclaration>): this {\r\n        for (const name in value)\r\n            this.bind(value[name], a => this.element.style[name] = a);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attribs(value: { [key: string]: BindValue<TModel, string | number | boolean> }): this {\r\n\r\n        for (const name in value)\r\n            this.set(name, value[name]);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    debugger(): this {\r\n\r\n        debugger;\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createElement<TKey extends keyof HTMLElementTagNameMap>(name: TKey, namespace?: string): HTMLElementTagNameMap[TKey] {\r\n        if (!namespace)\r\n            namespace = this.namespace;\r\n        if (namespace)\r\n            return document.createElementNS(namespace, name) as HTMLElementTagNameMap[TKey];\r\n        return document.createElement(name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createMarker(obj: any, baseName: string = \"\"): string {\r\n\r\n        return undefined;\r\n\r\n        if (typeof obj == \"function\")\r\n            return this.createMarker(obj(this.model), baseName);\r\n\r\n        if (typeof obj == \"string\")\r\n            return baseName + obj;\r\n\r\n        if (obj == null)\r\n            return baseName + \"null\";\r\n\r\n        return this.createMarker(getTypeName(obj), baseName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    namespace: string = null;\r\n\r\n    element: TElement = null;\r\n\r\n    parent: TemplateBuilder<any> = null;\r\n\r\n    isInline: boolean = false;\r\n\r\n    inlineMode: TemplateInlineMode = \"never\";\r\n\r\n    index: number = 0;\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass ChildTemplateBuilder<TModel, TElement extends HTMLElement, TParent extends TemplateBuilder<TModel>> extends TemplateBuilder<TModel, TElement> {\r\n\r\n    constructor(model: TModel, element: TElement, parent?: TParent) {\r\n        super(model, element, parent);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    endChild(): TParent {\r\n\r\n        if (this.parent.element != this.element)\r\n            this.parent.appendChild(this.element);\r\n        else {\r\n\r\n            if (this._lastElement)\r\n                this.parent[\"_lastElement\"] = this._lastElement;\r\n        }\r\n\r\n        return <TParent>this.parent;\r\n    }\r\n}\r\n\r\n","import { IList } from \"../Core/Abstraction/IList\";\r\nimport { EqualityComparer } from \"../Core/Types/Types\";\r\nimport { IObservableList, IObservableListHandler } from \"./Abstraction/IObservableList\";\r\n\r\nexport class ObservableList<T> implements IObservableList<T> {\r\n\r\n    protected _items: T[] = [];\r\n    protected _handlers: IObservableListHandler<T>[];\r\n\r\n    /****************************************/\r\n\r\n    constructor(items?: T[], equalityComparer?: EqualityComparer<T>) {\r\n\r\n        this._items = items || [];\r\n        this.equalityComparer = equalityComparer;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    add<T2 extends T>(item: T2): T2 {\r\n        this._items.push(item);\r\n        this.invoke(a => a.onItemAdded ? a.onItemAdded(item, this._items.length - 1, \"add\") : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addRange(items: Iterable<T>) {\r\n        for (const item of items) {\r\n            this._items.push(item);\r\n            this.invoke(a => a.onItemAdded ? a.onItemAdded(item, this._items.length - 1, \"add\") : undefined);\r\n        }\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    insert<T2 extends T>(index: number, item: T2): T2 {\r\n        this._items.splice(index, 0, item);\r\n        this.invoke(a => a.onItemAdded ? a.onItemAdded(item, index, \"insert\") : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove(item: T) {\r\n        const index = this.indexOf(item);\r\n        if (index != -1)\r\n            this.removeAt(index);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeWhen(condition: (T) => boolean) {\r\n        for (let i = this._items.length - 1; i >= 0; i--) {\r\n            if (condition(this._items[i]))\r\n                this.removeAt(i);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeRange(startIndex: number, count: number) {\r\n\r\n        const items = this._items.splice(startIndex, count);\r\n\r\n        let isChanged = false;\r\n\r\n        for (let i = items.length - 1; i >= 0; i--) {\r\n            this.invoke(a => a.onItemRemoved ? a.onItemRemoved(items[i], startIndex + i, \"remove\") : undefined);\r\n            isChanged = true;\r\n        }\r\n\r\n        if (isChanged)\r\n            this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n\r\n        return items;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeAt(index: number): T {\r\n        const item = this._items.splice(index, 1)[0];\r\n        this.invoke(a => a.onItemRemoved ? a.onItemRemoved(item, index, \"remove\") : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n\r\n        if (this._items.length == 0)\r\n            return;\r\n\r\n        for (let i = this._items.length - 1; i >= 0; i--)\r\n            this.invoke(a => a.onItemRemoved ? a.onItemRemoved(this._items[i], i, \"clear\") : undefined);\r\n\r\n        this._items.splice(0, this._items.length);\r\n        this.invoke(a => a.onClear ? a.onClear() : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    contains(item: T): boolean {\r\n        return this.indexOf(item) != -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    indexOf(item: T): number {\r\n\r\n        if (this.equalityComparer) {\r\n\r\n            for (let i = 0; i < this._items.length; i++) {\r\n                if (this.equalityComparer(item, this._items[i]))\r\n                    return i;\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        return this._items.indexOf(item);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    *[Symbol.iterator](): Iterator<T> {\r\n        for (const item of this._items)\r\n            yield item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toArray(): T[] {\r\n        return this._items;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(index: number): T {\r\n        return this._items[index];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set(index: number, value: T) {\r\n        const oldItem = this._items[index];\r\n        if (oldItem == value)\r\n            return;\r\n        this.invoke(a => a.onItemRemoved ? a.onItemRemoved(oldItem, index, \"replace\") : undefined);\r\n        this._items[index] = value;\r\n        this.invoke(a => a.onItemAdded ? a.onItemAdded(value, index, \"replace\") : undefined);\r\n        this.invoke(a => a.onItemReplaced ? a.onItemReplaced(value, oldItem, index) : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    swap(index: number, newIndex: number): void {\r\n        const temp = this._items[newIndex];\r\n        this._items[newIndex] = this._items[index];\r\n        this._items[index] = temp;\r\n        this.invoke(a => a.onItemSwap ? a.onItemSwap(index, newIndex) : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    subscribe(handler: IObservableListHandler<T>) {\r\n        if (!this._handlers)\r\n            this._handlers = [];\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index == -1)\r\n            this._handlers.push(handler);\r\n        return handler;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    unsubscribe(handler: IObservableListHandler<T>) {\r\n        if (!this._handlers)\r\n            return;\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index != -1)\r\n            this._handlers.splice(index, 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    forEach(action: (item: T, index?: number) => void) {\r\n        let index = 0;\r\n        for (const item of this) {\r\n            action(item, index);\r\n            index++;\r\n        }\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected invoke(action: (hander: IObservableListHandler<T>) => void) {\r\n\r\n        if (!this._handlers)\r\n            return;\r\n        this._handlers.forEach(handler =>\r\n            action(handler));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get first() {\r\n        return this._items[0];\r\n    }\r\n\r\n    get last() {\r\n        return this._items[this._items.length -1];\r\n    }\r\n\r\n    get count() {\r\n        return this._items.length;\r\n    }\r\n\r\n    toJSON() {\r\n        return this._items;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    equalityComparer: EqualityComparer<T>;\r\n}\r\n/****************************************/\r\n\r\nexport function listOf<T>(items?: T[]): IList<T> {\r\n    return new ObservableList(items);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport  function observableListOf<T>(items?: T[], equalityComparer?: EqualityComparer<T>): IObservableList<T> {\r\n    return new ObservableList(items, equalityComparer);\r\n}\r\n","﻿import { getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport interface IViewConfig {\r\n\r\n    template?: Bindable<CatalogTemplate<IView>>;\r\n\r\n    parentView?: IView;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class View extends BindableObject implements IView {\r\n\r\n    constructor(config?: IViewConfig) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"template\", config);\r\n\r\n        if (!this.template)\r\n            this.template = getTypeName(this);\r\n\r\n        if (config) {\r\n            if (config.parentView)\r\n                this.parentView = config.parentView;\r\n        }\r\n\r\n        this.debugTypeName();\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected debugTypeName() {\r\n\r\n        const curName = this.constructor.name;\r\n        const regName = this.constructor[\"@typeName\"];\r\n        if (!regName)\r\n            console.warn(\"Type '\" + curName + \"' is not registered.\")\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    template: CatalogTemplate<this> = null;\r\n\r\n    parentView: IView = null;\r\n\r\n    element: HTMLElement;\r\n}\r\n\r\n\r\nregisterType(View, \"View\");","﻿export function discretize(value: number, steps: number): number {\r\n    if (isNaNOrNull(value))\r\n        return undefined;\r\n    return Math.round(value * steps) / steps;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function round(value: number, digits: number): number {\r\n    if (isNaNOrNull(value))\r\n        return undefined;\r\n\r\n    return Math.round(value * Math.pow(10, digits)) / Math.pow(10, digits);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function exponential(value: number, weight: number = 2) {\r\n    if (isNaNOrNull(value))\r\n        return undefined;\r\n    return 1 - Math.pow(1 - value, weight);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isNaNOrNull(a: number): boolean {\r\n    return isNaN(a) || a === null;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function sumNull(a: number, b: number): number {\r\n\r\n    if (isNaNOrNull(a) && isNaNOrNull(b))\r\n        return undefined;\r\n\r\n    if (isNaNOrNull(b))\r\n        return a;\r\n\r\n    if (isNaNOrNull(a))\r\n        return b;\r\n\r\n    return a + b;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function divideNull(a: number, b: number): number {\r\n    if (isNaNOrNull(a) || isNaNOrNull(b) || b == 0)\r\n        return undefined;\r\n    return a / b;\r\n}","import \"Templates/OperationView.html\";\r\n\r\nimport { IOperation, IOperationProgress, OperationType } from \"../Core/Abstraction/IOperation\";\r\nimport { IOperationConfig, IOperationManager } from \"../Core/Abstraction/IOperationManager\";\r\nimport { isObject, isString } from \"../Core/Helpers/TypeCheck\";\r\nimport { LocalString } from \"../Core/Types/DynamicString\";\r\nimport { listOf } from \"../Templating/ObservableList\";\r\nimport { IViewConfig, View } from \"./Components/View\";\r\nimport { AppEvent, event } from \"../Core/Types/Event\";\r\nimport { IList } from \"../Core/Abstraction/IList\";\r\nimport { IViewApplication } from \"./Abstraction/IViewApplication\";\r\nimport { App, Services } from \"../Core/Global\";\r\nimport { registerType } from \"../Core/Utils/ObjectUtils\";\r\nimport { Format } from \"../Core/Helpers/Format\";\r\nimport { round } from \"../Core/Utils/MathUtils\";\r\n\r\nexport interface IOperationViewConfig extends IOperationConfig, IViewConfig {\r\n\r\n    type?: OperationType;\r\n\r\n    parentOperation?: IOperation;\r\n} \r\n\r\n/****************************************/\r\n\r\nclass OperationView extends View implements IOperation {\r\n\r\n    private _progress: IOperationProgress;\r\n    private _type: OperationType;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config: IOperationViewConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"message\", config);\r\n\r\n        if (!config.type)\r\n            this._type = OperationType.Global;\r\n        else\r\n            this._type = config.type;\r\n\r\n        this.parentOperation = config.parentOperation;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    end(): void {\r\n        Services.operation.end(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get type(): OperationType {\r\n        return this._type;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get progress(): IOperationProgress {\r\n        return this._progress;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set progress(value: IOperationProgress) {\r\n\r\n        this._progress = value;\r\n\r\n        if (this._progress) {\r\n\r\n            console.log(this.getProgressDescription(this._progress));\r\n\r\n            if (this._progress.message)\r\n                this.message = Format.text(this._progress.message);\r\n        }\r\n        else\r\n            this.message = undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addSubOperation(operation: IOperation) {\r\n        this.subOperations.add(operation);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeSubOperation(operation: IOperation) {\r\n        this.subOperations.remove(operation);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getProgressDescription(value: IOperationProgress): string {\r\n\r\n        let msg = \"Progress: \";\r\n\r\n        if (value.message)\r\n            msg += \"'\" + value.message + \"'\";\r\n\r\n        if (value.current != null && value.totCount != null)\r\n            msg += \" - \" + value.current + \"/\" + value.totCount + \" (\" + round(100 / value.totCount * value.current, 1) + \"%)\";\r\n\r\n        return msg;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly subOperations = listOf<IOperation>();\r\n\r\n    message: string = null;\r\n\r\n    parentOperation: IOperation = null;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ViewOperationManager implements IOperationManager {\r\n\r\n    progress(progress: IOperationProgress | string) {\r\n\r\n        if (isString(progress))\r\n            progress = { message: progress } as IOperationProgress;\r\n\r\n        if (this.current) {\r\n\r\n            this.current.progress = progress;\r\n\r\n            this.onProgress.raise(this, {\r\n                operation: this.current,\r\n                progress: progress\r\n            });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    begin(configOrMessge: IOperationViewConfig | LocalString): IOperation {\r\n\r\n        if (!isObject(configOrMessge))\r\n            configOrMessge = { message: configOrMessge } as IOperationProgress;\r\n\r\n        const operation = new OperationView(configOrMessge as IOperationViewConfig);\r\n\r\n        console.group(\"Begin operation: \", operation.message);\r\n\r\n        operation.progress = configOrMessge as IOperationViewConfig;\r\n\r\n        if (operation.parentOperation === undefined)\r\n            operation.parentOperation = this.current;\r\n\r\n        this.operations.add(operation);\r\n\r\n        if (operation.parentOperation)\r\n            operation.parentOperation.addSubOperation(operation);\r\n\r\n        if (operation.type != OperationType.Local) {\r\n\r\n            const view = (configOrMessge as IOperationViewConfig).showProgress ? new View({\r\n                template: t => t.template(\"OperationView\", operation)\r\n            }) : undefined;\r\n\r\n            (App as IViewApplication).block(view);\r\n        }\r\n\r\n        return operation;\r\n    } \r\n\r\n    /****************************************/\r\n\r\n    end(operation: IOperation) {\r\n\r\n        console.groupEnd();\r\n\r\n        console.log(\"End operation: \", operation.message);\r\n\r\n        this.operations.remove(operation);\r\n\r\n        if (operation.parentOperation)\r\n            operation.parentOperation.removeSubOperation(operation);\r\n\r\n        if (operation.type != OperationType.Local)\r\n            (App as IViewApplication).unblock();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): IOperation {\r\n        return this.operations.count > 0 ? this.operations.get(this.operations.count - 1) : null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly operations: IList<IOperation> = listOf();\r\n\r\n    readonly onBegin: AppEvent<IOperation> = event();\r\n\r\n    readonly onEnd: AppEvent<IOperation> = event();\r\n\r\n    readonly onProgress: AppEvent<{ operation: IOperation, progress: IOperationProgress }> = event();\r\n}\r\n\r\n/****************************************/\r\n\r\n\r\nregisterType(OperationView, \"OperationView\");","﻿import { IList } from \"../../Core/Abstraction/IList\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { isUpperCase } from \"../../Core/Utils/StringUtils\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { isAsyncLoad } from \"./TypeCheck\";\r\n\r\nexport async function loadAllAsync<T>(items: T[] | IList<T> | Iterator<T>) {\r\n\r\n    const loaders = linq(items as any).ofType<IAsyncLoad>(a => isAsyncLoad(a)).select(a => a.loadAsync()).toArray();\r\n\r\n    return await Promise.all(loaders);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function formatForCss(name: string): string {\r\n    let s = 0;\r\n    let result = \"\";\r\n    for (let i = 0; i < name.length; i++) {\r\n        const c = name.charAt(i);\r\n        switch (s) {\r\n            //upper mode or begin \r\n            case 0:\r\n                result += c.toLowerCase();\r\n                if (!isUpperCase(c) || c == \"-\")\r\n                    s = 1;\r\n                break;\r\n            //first-mode\r\n            case 1:\r\n                if (isUpperCase(c) && c != \"-\") {\r\n                    result += \"-\";\r\n                    s = 0;\r\n                }\r\n                result += c.toLowerCase();\r\n                break;\r\n        }\r\n    }\r\n    return result;\r\n}","import { Type } from \"../../Core/Types/Types\";\r\nimport { getBaseType, getType, getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLContainer } from \"../Abstraction/IHTMLContainer\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { IViewComponent } from \"../Abstraction/IViewComponent\";\r\nimport { formatForCss } from \"../Helpers/ViewUtils\";\r\nimport { IViewConfig, View } from \"./View\";\r\n\r\nexport interface IViewComponentConfig extends IViewConfig {\r\n\r\n    name?: string;\r\n\r\n    enabled?: Bindable<boolean>;\r\n\r\n    visible?: Bindable<boolean>;\r\n\r\n    styles?: ViewStyle[];\r\n}\r\n\r\nexport type ViewComponentStatus = \"\" | \"hidden\" | string;\r\n\r\n/****************************************/\r\n\r\nexport class ViewComponent extends View implements IViewComponent, IHTMLContainer {\r\n\r\n    constructor(config?: IViewComponentConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"enabled\", config);\r\n\r\n        this.bindConfig(\"visible\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.styles)\r\n                this.styles = config.styles;\r\n\r\n            if (config.name)\r\n                this.name = config.name;\r\n        }\r\n\r\n        this.prop(\"styles\").subscribe(() => this.buildStyles());\r\n\r\n        this.buildStyles();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addStyle(value: ViewStyle) {\r\n        if (this.styles.indexOf(value) != -1)\r\n            return;\r\n        this.styles.push(value);\r\n        this.buildStyles();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeStyle(value: ViewStyle) {\r\n        const index = this.styles.indexOf(value);\r\n        if (index == -1)\r\n            return;\r\n        this.styles.splice(index, 1);\r\n        this.buildStyles();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    buildStyles() {\r\n\r\n        let result = \"\";\r\n\r\n        let curType: Type<any> = getType(this);\r\n\r\n        while (curType != ViewComponent) {\r\n            const typeName = getTypeName(curType);\r\n            result += formatForCss(typeName) + \" \";\r\n            curType = getBaseType(curType);\r\n        }\r\n\r\n        if (this.name)\r\n            result += formatForCss(this.name) + \" \";\r\n\r\n        if (this.styles)\r\n            result += this.styles.join(\" \");\r\n\r\n        this.className = result.trim();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get debugName() {\r\n        return getTypeName(this) + \": \" + this.name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    enabled: boolean = true;\r\n\r\n    visible: boolean = true;\r\n\r\n    styles: ViewStyle[] = [];\r\n\r\n    name: string = null;\r\n\r\n    nodes: Node[] = null;\r\n\r\n    isCacheEnabled: boolean = false;\r\n\r\n    className: string;\r\n\r\n    status: ViewComponentStatus = \"\";\r\n\r\n}\r\n\r\n\r\nregisterType(ViewComponent, \"ViewComponent\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { isView } from \"../Helpers/TypeCheck\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IContentViewConfig<TContent> extends IViewComponentConfig {\r\n\r\n    content?: Bindable<TContent>;\r\n\r\n    contentTemplate?: CatalogTemplate<TContent>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ContentView<TContent = any> extends ViewComponent implements IContentView<TContent> {\r\n\r\n    constructor(config?: IContentViewConfig<TContent>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"content\", config, null, () => this.onContentChanged());\r\n\r\n        this.bindConfig(\"contentTemplate\", config);\r\n\r\n        if (this.contentTemplate) \r\n            this.template = t => t.template(t.model.contentTemplate, t.model.content);\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n        if (isView(this.content))\r\n            this.content.parentView = this;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    content: TContent = null;\r\n\r\n    contentTemplate: CatalogTemplate<TContent> = null;\r\n}\r\n\r\nregisterType(ContentView, \"ContentView\");","import { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport \"Templates/ContextMenu.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IContextMenuConfig {\r\n\r\n    actions?: IAction[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ContextMenu extends BindableObject {\r\n\r\n    private _menuContainer: HTMLElement;\r\n    private _clickHandler;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: IContextMenuConfig) {\r\n        super();\r\n\r\n        if (config) {\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n        }\r\n\r\n        this._menuContainer = document.createElement(\"DIV\");\r\n        this._menuContainer.className = \"popup-container\";\r\n\r\n        this._clickHandler = this.onClick.bind(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n\r\n        this.actions.add(ActionView.fromAction(action));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync(element?: HTMLElement, event?: MouseEvent|TouchEvent|PointerEvent) {\r\n\r\n        const curOfs = { x: 0, y: 0 };\r\n\r\n        if (!element && event) {\r\n\r\n            if (event instanceof MouseEvent) {\r\n                element = event.srcElement as HTMLElement;\r\n                curOfs.x = event.offsetX;\r\n                curOfs.y = event.offsetY;\r\n            }\r\n            else {\r\n                curOfs.x = event.touches[0].clientX;\r\n                curOfs.y = event.touches[0].clientY;\r\n            }\r\n        }\r\n\r\n        const builder = new TemplateBuilder(this, this._menuContainer);\r\n\r\n        builder.template(\"ContextMenu\", a => a);\r\n\r\n        document.body.appendChild(this._menuContainer);\r\n\r\n        await delayAsync(0);\r\n\r\n        window.addEventListener(\"pointerdown\", this._clickHandler);\r\n\r\n        if (element) {\r\n\r\n            let curEl = element;\r\n            let offsetEl = element;\r\n\r\n            while (curEl) {\r\n                if (curEl == offsetEl) {\r\n                    curOfs.y += curEl.offsetTop;\r\n                    curOfs.x += curEl.offsetLeft;\r\n                    offsetEl = <HTMLElement>curEl.offsetParent;\r\n                }\r\n                curOfs.y -= curEl.scrollTop;\r\n                curOfs.x -= curEl.scrollLeft;\r\n                curEl = curEl.parentElement;\r\n            }\r\n        }\r\n\r\n        let xTrans = \"\";\r\n        let yTrans = \"\";\r\n\r\n        if (curOfs.x + this._menuContainer.clientWidth > document.body.clientWidth) {\r\n            curOfs.x -= this._menuContainer.clientWidth;\r\n            xTrans = \"right\";\r\n        }\r\n        else\r\n            xTrans = \"left\";\r\n\r\n        if (curOfs.y + this._menuContainer.clientHeight > document.body.clientHeight) {\r\n            curOfs.y -= this._menuContainer.clientHeight;\r\n            yTrans = \"bottom\";\r\n        }\r\n        else\r\n            yTrans = \"top\";\r\n\r\n        this._menuContainer.style.top = curOfs.y + \"px\";\r\n        this._menuContainer.style.left = curOfs.x + \"px\";\r\n        this._menuContainer.style.transformOrigin = xTrans + \" \" + yTrans;\r\n\r\n        await delayAsync(0);\r\n\r\n        this._menuContainer.classList.add(\"visible\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hide() {\r\n\r\n        this._menuContainer.classList.remove(\"visible\");\r\n\r\n        window.removeEventListener(\"pointerdown\", this._clickHandler);\r\n\r\n        setTimeout(() => document.body.removeChild(this._menuContainer), 500);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onClick(e: MouseEvent) {\r\n        setTimeout(() => this.hide(), 200);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    className: string = \"context-menu\";\r\n}\r\n\r\nregisterType(ContextMenu, \"ContextMenu\");","﻿import { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport \"Templates/IconTextView.html\";\r\nimport \"Templates/Icon.html\";\r\n\r\nexport interface IIconTextViewConfig extends IViewComponentConfig {\r\n\r\n    icon?: Bindable<string>;\r\n\r\n    text?: Bindable<LocalString>;\r\n\r\n    badge?: Bindable<LocalString>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class IconTextView extends ViewComponent {\r\n\r\n    constructor(config?: IIconTextViewConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"icon\", config);\r\n\r\n        this.bindConfigString(\"text\", config);\r\n\r\n        this.bindConfigString(\"badge\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    icon: string = null;\r\n\r\n    text: string = null;\r\n\r\n    badge: string = null;\r\n}\r\n\r\nregisterType(IconTextView, \"IconTextView\");","import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { IAsyncTask } from \"../../Core/Abstraction/ITask\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable, Properties } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IItemAction } from \"../Abstraction/IItemAction\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { ContextMenu } from \"./ContextMenu\";\r\nimport { IconTextView } from \"./IconTextView\";\r\nimport \"Templates/ActionView.html\";\r\nimport { App, Services } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { linq } from \"../../Core/Linq\";\r\n\r\nexport interface IActionViewConfig<TContent = any> extends IContentViewConfig<TContent> {\r\n\r\n    name?: string;\r\n\r\n    operation?: OperationType;\r\n\r\n    tooltip?: Bindable<LocalString>;\r\n\r\n    subActions?: IActionViewConfig<any>[];\r\n\r\n    canAggregate?: AggregationMode;\r\n\r\n    executeAsync?: (container: ActionView) => Promise<any>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport enum AggregationMode {\r\n    None,\r\n    Parallel,\r\n    Serial\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ActionView<TContent = any> extends ContentView<TContent>  {\r\n\r\n    constructor(config?: IActionViewConfig<TContent>) {\r\n\r\n        super({ template: \"ActionLink\", ...config });\r\n\r\n        this.bindConfigString(\"tooltip\", config, StringUsage.Tooltip);\r\n\r\n        this.bindConfig(\"operation\", config);\r\n\r\n        this.bindConfig(\"canAggregate\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.executeAsync)\r\n                this.executeWorkAsync = ()=> config.executeAsync(this);\r\n\r\n            if (config.subActions)\r\n                config.subActions.forEach(sub =>\r\n                    this.subActions.add(new ActionView(sub)));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async executeAsync(): Promise<any> {\r\n\r\n        if (window.event)\r\n            window.event.stopPropagation();\r\n\r\n        if (Services.analytics)\r\n            Services.analytics.action(this.name);\r\n\r\n        const op = Services.operation.begin({ message: \"Executing \" + this.name, type: this.operation });\r\n\r\n        this.status = \"executing\";\r\n        try {\r\n\r\n            await this.executeWorkAsync();\r\n\r\n            if (this.subActions.count > 0) {\r\n\r\n                const menu = new ContextMenu();\r\n                this.subActions.forEach(a => menu.actions.add(a));\r\n                menu.showAsync(window.event.srcElement as HTMLElement);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            App.handleError(this, ex);\r\n            throw ex;\r\n        }\r\n        finally {\r\n            this.status = \"\";\r\n            op.end();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected executeWorkAsync(): Promise<any> {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromAction(action: IAction, config?: IActionViewConfig<any>): ActionView {\r\n\r\n        const actionViewConfig = (a: IAction) => ({\r\n            name: a.name,\r\n            operation: a.operation,\r\n            styles: a.styles,\r\n            template: \"ActionLink\",\r\n            subActions: a.subActions ? linq(a.subActions).select(b => actionViewConfig(b)).toArray() : undefined,\r\n            content: new IconTextView({\r\n                template: \"IconTextViewInline\",\r\n                text: Format.action(a.displayName ?? a.name),\r\n                icon: a.icon,\r\n                badge: a.badge\r\n            }),\r\n            executeAsync: a.executeAsync,\r\n            ...config\r\n        } as IActionViewConfig);\r\n\r\n        const result = new ActionView<IconTextView>(actionViewConfig(action));\r\n\r\n        if (action.canExecute)\r\n            Properties.converter(result, \"visible\", () => action.canExecute());\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromItemAction<TItem>(action: IItemAction<TItem>, getItem: () => TItem, config?: IActionViewConfig): ActionView {\r\n        const result = new ActionView({\r\n            name: action.name,\r\n            operation: action.operation,\r\n            styles: action.styles,\r\n            content: new IconTextView({\r\n                template: \"IconTextViewInline\",\r\n                text: Format.action(action.displayName ?? action.name),\r\n                icon: action.icon,\r\n                badge: action.badge\r\n            }),\r\n            executeAsync: () => action.executeAsync(getItem()),\r\n            ...config\r\n        });\r\n\r\n        if (action.canExecute)\r\n            result.bind(\"visible\", result.createComputed(() => action.canExecute(getItem())));\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromActionIcon(action: IAction, config?: IActionViewConfig): ActionView {\r\n        const result = new ActionView({\r\n            name: action.name,\r\n            styles: action.styles,\r\n            operation: action.operation,\r\n            template: \"ActionIcon\",\r\n            content: action.icon,\r\n            tooltip: action.displayName ?? action.name,\r\n            executeAsync: action.executeAsync,\r\n            ...config\r\n        });\r\n\r\n        if (action.canExecute)\r\n            result.bind(\"visible\", result.createComputed(() => action.canExecute()));\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    tooltip: string = null;\r\n\r\n    operation: OperationType = OperationType.Global;\r\n\r\n    canAggregate: AggregationMode = AggregationMode.None;\r\n\r\n    readonly subActions: IObservableList<ActionView> = observableListOf();\r\n}\r\n\r\nregisterType(ActionView, \"ActionView\");","﻿import { DynamicString } from \"../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../Templating/Abstraction/IObservableList\";\r\nimport { BindableObject } from \"../Templating/BindableObject\";\r\nimport { observableListOf } from \"../Templating/ObservableList\";\r\nimport { IItemAction } from \"./Abstraction/IItemAction\";\r\nimport { IMultiItemSelector } from \"./Abstraction/IMultiItemSelector\";\r\nimport { ISelectable } from \"./Abstraction/ISelectable\";\r\nimport { ActionView } from \"./Components/ActionView\";\r\n\r\nexport class SelectionManager<TItem extends ISelectable> extends BindableObject implements IMultiItemSelector<TItem> {\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        this.selectedItems.subscribe({\r\n            onChanged: () => {\r\n                this.updateView();\r\n                if (this.selectedItems.count == 0)\r\n                    this.close();\r\n            }\r\n        })\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    close() {\r\n\r\n        this.isActive = false;\r\n\r\n        for (var i = this.selectedItems.count - 1; i >= 0; i--)\r\n            this.selectedItems.get(i).isSelected = false;\r\n\r\n        this.selectedItems.clear();\r\n        this.actions.clear();\r\n        this.updateView();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    open() {\r\n\r\n        this.isActive = true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IItemAction<TItem[]>) {\r\n\r\n        const result = ActionView.fromItemAction(action, () => this.selectedItems.toArray());\r\n        this.actions.add(result);\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateView() {\r\n        this.selectionText = DynamicString.getValue(\"selection-count\", { params: [this.selectedItems.count.toString()], cardinality: this.selectedItems.count });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly selectedItems: IObservableList<TItem> = observableListOf();\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    selectionText: string = null;\r\n\r\n    isActive: boolean = false;\r\n}","﻿import { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport class AttachBehavoir implements IBehavoir<HTMLElement, IView & IHTMLAttach> {\r\n\r\n    attach(element: HTMLElement, viewModel?: IView & IHTMLAttach) {\r\n\r\n        if (\"attach\" in viewModel) {\r\n            setTimeout(() => viewModel.attach(element));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach(element: HTMLElement, viewModel?: IView & IHTMLAttach) {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static readonly instance = new AttachBehavoir();\r\n}","﻿import { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\n\r\nexport class RippleClickBehavoir implements IBehavoir<HTMLElement> {\r\n\r\n    attach(element: HTMLElement) {\r\n        element.addEventListener(\"pointerdown\", this.onClick, { passive: true });\r\n        element.classList.add(\"ripple\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach(element: HTMLElement) {\r\n        element.removeEventListener(\"pointerdown\", this.onClick);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async onClick(e: Event) {\r\n\r\n        const curTarget = <HTMLElement>e.currentTarget;\r\n        curTarget.classList.remove(\"activated\");\r\n\r\n        await delayAsync(0);\r\n\r\n        curTarget.classList.add(\"activated\");\r\n\r\n        await delayAsync(500);\r\n\r\n        if (curTarget.classList.contains(\"activated\"))\r\n            curTarget.classList.remove(\"activated\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static readonly instance = new RippleClickBehavoir();\r\n}","﻿import { parentOfClass } from \"../../Core/Utils/DomUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\nimport { IScrollListener } from \"../Abstraction/IScrollListener\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport class ScrollCheckBehavoir implements IBehavoir<HTMLElement, IView & IScrollListener> {\r\n\r\n    async attach(element: HTMLElement, viewModel?: IView & IScrollListener) {\r\n\r\n        await delayAsync(0);\r\n\r\n        const scrollParent = element.classList.contains(\"scroll\") || element.classList.contains(\"scroll-v\") ? element : parentOfClass(element, \"scroll\");\r\n\r\n        let isRequested = false;\r\n\r\n        function computeScroll() {\r\n\r\n            if (!viewModel.isScrollCheckActive || isRequested)\r\n                return;\r\n\r\n            isRequested = true;\r\n\r\n            requestAnimationFrame(() => {\r\n\r\n                let found = false;\r\n\r\n                if (scrollParent != document.scrollingElement) {\r\n\r\n                    let curItem: Node = element;\r\n                    found = false;\r\n                    while (curItem != null) {\r\n                        if (curItem == scrollParent) {\r\n                            found = true;\r\n                            break;\r\n                        }\r\n                        curItem = curItem.parentNode;\r\n                    }\r\n                }\r\n                else\r\n                    found = true;\r\n\r\n                if (!found)\r\n                    scrollParent.removeEventListener(\"scroll\", computeScroll);\r\n                else {\r\n\r\n                    viewModel.onScroll({\r\n                        offsetTop: scrollParent.scrollTop,\r\n                        offsetBottom: scrollParent.scrollHeight - (scrollParent.scrollTop + scrollParent.clientHeight),\r\n                        pageBottom: (scrollParent.scrollHeight - (scrollParent.scrollTop + scrollParent.clientHeight)) / scrollParent.clientHeight,\r\n                        pageTop: scrollParent.scrollTop / scrollParent.clientHeight,\r\n                        totPages: scrollParent.scrollHeight / scrollParent.clientHeight\r\n                    });\r\n                }\r\n\r\n                isRequested = false;\r\n            });\r\n        }\r\n\r\n        if (scrollParent != null) {\r\n            if (scrollParent == document.scrollingElement)\r\n                window.addEventListener(\"scroll\", computeScroll, { passive: true });\r\n            else\r\n                scrollParent.addEventListener(\"scroll\", computeScroll, { passive: true });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach(element: HTMLElement, viewModel?: IView & IScrollListener) {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static readonly instance = new ScrollCheckBehavoir();\r\n}","﻿import { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\n\r\nexport class VibrateClickBehavoir implements IBehavoir<HTMLElement> {\r\n\r\n    attach(element: HTMLElement) {\r\n        element.addEventListener(\"click\", this.onClick);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach(element: HTMLElement) {\r\n        element.removeEventListener(\"click\", this.onClick);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private onClick(e: Event) {\r\n        if (\"vibrate\" in navigator)\r\n            navigator.vibrate(50);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static readonly instance = new VibrateClickBehavoir();\r\n}","﻿import \"Templates/Spinner.html\";\r\n\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { ContentView } from \"./ContentView\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { View } from \"./View\";\r\n\r\nexport class Blocker extends ContentView<IView> implements IHTMLAttach {\r\n\r\n    constructor() {\r\n\r\n        super({\r\n            template: \"ContentViewNested\",\r\n            content: new View({template: \"Spinner\"}),\r\n        });\r\n\r\n        this.status = \"hide\";\r\n\r\n        const builder = new TemplateBuilder(this, document.body);\r\n\r\n        builder.content(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n\r\n        this.element = element;\r\n\r\n        element.addEventListener(\"mousedown\", e => e.preventDefault(), { passive: true });\r\n        element.addEventListener(\"touchstart\", e => e.preventDefault(), { passive: true });\r\n\r\n        if (this.status == \"hide\")\r\n            this.element.style.display = \"none\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync(content?: IView) {\r\n\r\n        if (this.element)\r\n            this.element.style.removeProperty(\"display\");\r\n\r\n        this.status = \"showing\"\r\n\r\n        if (content)\r\n            this.content = content;\r\n\r\n        await delayAsync(0);\r\n\r\n        if (this.status == \"showing\")\r\n            this.status = \"show\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async hideAsync() {\r\n\r\n        this.content = new View({ template: \"Spinner\" }),\r\n\r\n        this.status = \"hiding\";\r\n\r\n        await delayAsync(500);\r\n\r\n        if (this.status == \"hiding\") {\r\n            this.status = \"hide\";\r\n            if (this.element)\r\n                this.element.style.display = \"none\";\r\n        }\r\n    }\r\n}\r\n\r\nregisterType(Blocker, \"Blocker\");","﻿import { isString } from \"../../Core/Helpers/TypeCheck\";\r\nimport { Type } from \"../../Core/Types/Types\";\r\nimport { getType, getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IPage } from \"../Abstraction/IPage\";\r\nimport { IMultiPageHost, IPageLoadOptions } from \"../Abstraction/IPageHost\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { IContentViewConfig } from \"./ContentView\";\r\nimport { View } from \"./View\";\r\n\r\ninterface ISelfHostedPageHost extends IContentViewConfig<IView> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SelfHostedPageHost extends View implements IMultiPageHost {\r\n\r\n    private _parentHost: IMultiPageHost;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: ISelfHostedPageHost) {\r\n\r\n        super({ template: \"SinglePageHost\", ...config });\r\n\r\n        this._parentHost = window.parent[\"WebApp\"][\"app\"][\"pageHost\"];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(index: number) {\r\n        return this._parentHost.get(index);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clearAsync() {\r\n        this.current = null;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    goBackAsync() {\r\n        return this._parentHost.goBackAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    goForwardAsync() {\r\n        return this._parentHost.goForwardAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bringFrontAsync(page: IPage) {\r\n\r\n        if (page == this.current)\r\n            return Promise.resolve();\r\n        return this._parentHost.bringFrontAsync(page);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadAsync<TPage extends IPage>(page: TPage, options?: IPageLoadOptions): Promise<TPage> {\r\n\r\n        if (!this.current) {\r\n            page.host = this;\r\n            this.current = page;\r\n            page.loadAsync();\r\n            page.status = \"active\";\r\n            return Promise.resolve(page);\r\n        }\r\n        return this._parentHost.loadAsync(page, options);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    find<TPage extends IPage>(nameOrType: string | Type<TPage>): TPage {\r\n\r\n        if (this.current) {\r\n            if (isString(nameOrType) && nameOrType == getTypeName(this.current))\r\n                return <TPage>this.current;\r\n\r\n            if (getType(this.current) == nameOrType)\r\n                return <TPage>this.current;\r\n        }\r\n        return this._parentHost.find(nameOrType as Type<TPage>);\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    async goToAsync(index: number) {\r\n\r\n        this._parentHost.currentIndex = index;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get canGoBack(): boolean {\r\n        return this._parentHost.canGoBack;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get currentIndex(): number {\r\n        return this._parentHost.currentIndex;\r\n    }\r\n\r\n    set currentIndex(value: number) {\r\n        this._parentHost.currentIndex = value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get pageCount(): number {\r\n        return this._parentHost.pageCount;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    current: IPage;\r\n}\r\n\r\n\r\n\r\nregisterType(SelfHostedPageHost, \"SelfHostedPageHost\");","import { IErrorHandler } from \"../../Core/Abstraction/IErrorHandler\";\r\nimport { App, Services } from \"../../Core/Global\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IPage, PageStatus } from \"../Abstraction/IPage\";\r\nimport { IMultiPageHost, IPageHost } from \"../Abstraction/IPageHost\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport interface IPageConfig<TView extends IView> {\r\n\r\n    name?: string;\r\n\r\n    url?: Bindable<string>;\r\n\r\n    view?: Bindable<TView>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    subTitle?: Bindable<LocalString>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Page<TView extends IView = IView> extends BindableObject implements IPage<TView>, IErrorHandler<Page> {\r\n\r\n    constructor(config?: IPageConfig<TView>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"url\", config);\r\n\r\n        this.bindConfigString(\"title\", config);\r\n\r\n        this.bindConfigString(\"subTitle\", config);\r\n\r\n        this.bindConfig(\"view\", config);\r\n\r\n        if (config) {\r\n            if (config.name)\r\n                this.name = config.name;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): object {\r\n        return {};\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setState(state: object) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    handleError(source: this, error: any) {\r\n        App.handleError(source, error);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadAsync(): Promise<void> {\r\n        if (this.status == \"notloaded\" || this.status == \"error\") {\r\n\r\n            const op = Services.operation.begin({ message: \"Loading page: \" + (this.title ? this.title : (this.url ? this.url : getTypeName(this))) });\r\n            this.status = \"loading\";\r\n            try {\r\n\r\n                await this.loadWorkAsync();\r\n            }\r\n            catch (e) {\r\n                this.status = \"error\";\r\n                App.handleError(this, e);\r\n            }\r\n            finally {\r\n                op.end();\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected loadWorkAsync(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    refreshAsync(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async closeAsync(result?: any) {\r\n\r\n        if (\"goBackAsync\" in this.host)\r\n            await (this.host as IMultiPageHost).goBackAsync();\r\n\r\n        this.status = \"closed\";\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    url: string = null;\r\n\r\n    host: IPageHost = null;\r\n\r\n    view: TView = null;\r\n\r\n    title: string = null;\r\n\r\n    subTitle: string = null;\r\n\r\n    name: string = null;\r\n\r\n    status: PageStatus = \"notloaded\";\r\n\r\n    args: object = null;\r\n}\r\n\r\nregisterType(Page, \"Page\");","﻿import { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { View } from \"./View\";\r\nimport \"Templates/ItemsView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IItemsViewConfig<TItem> extends IContentViewConfig<IObservableList<TItem>> {\r\n\r\n    emptyView?: View;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ItemsView<TItem = any> extends ContentView<IObservableList<TItem>> {\r\n\r\n    protected _updateCount: number = 0;\r\n\r\n    constructor(config?: IItemsViewConfig<TItem>) {\r\n\r\n        super({ content: observableListOf<TItem>(), ...config });\r\n\r\n        this.content.subscribe({\r\n            onItemAdded: (item: TItem) => {\r\n\r\n                if (this._updateCount == 0)\r\n                    this.onItemAdded(item);\r\n            },\r\n\r\n            onItemRemoved: (item: TItem) => {\r\n                if (this._updateCount == 0)\r\n                    this.onItemRemoved(item);\r\n            }\r\n        });\r\n\r\n        this.bindConfig(\"emptyView\", config);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected initItems() {\r\n        if (this.content)\r\n            this.content.toArray().forEach(a => this.onItemAdded(a));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    beginUpdate() {\r\n        this._updateCount++;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    endUpdate() {\r\n        this._updateCount--;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemAdded(item: TItem) {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemRemoved(item: TItem) {\r\n\r\n    }\r\n\r\n    emptyView: View = null;\r\n}\r\n\r\nregisterType(ItemsView, \"ItemsView\");","﻿import { INamedContent } from \"../../Core/Abstraction/INamedContent\";\r\nimport { isString } from \"../../Core/Helpers/TypeCheck\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IPanel } from \"../Abstraction/IPanel\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { loadAllAsync } from \"../Helpers/ViewUtils\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\n\r\nexport interface IPanelConfig extends IItemsViewConfig<IView> {\r\n\r\n    viewContent?: IView | IView[];\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class Panel extends ItemsView<IView> implements IPanel, IAsyncLoad {\r\n\r\n    constructor(config?: IPanelConfig) {\r\n        super({ template: \"ItemsView\", ...config });\r\n\r\n        if (config?.viewContent) {\r\n            if (Array.isArray(config.viewContent))\r\n                config.viewContent.forEach(a => this.addView(a));\r\n            else\r\n                this.addView(config.viewContent);\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    loadAsync(): Promise<any> {\r\n\r\n        return loadAllAsync(this.content);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n        this.content.clear();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    addView<TView extends IView>(view: TView): TView {\r\n        this.content.add(view);\r\n        return view;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    removeView(view: IView) {\r\n        this.content.remove(view);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    replaceView(oldViewName: string, newView: IView)\r\n\r\n    replaceView(oldView: IView, newView: IView)\r\n\r\n    replaceView(oldView: string | IView, newView: IView) {\r\n\r\n        let index: number;\r\n\r\n        if (isString(oldView))\r\n            index = linq(this.content).indexOf(a => \"name\" in a && (a as unknown as INamedContent).name == oldView);\r\n        else\r\n            index = this.content.indexOf(oldView);\r\n\r\n        if (index != -1)\r\n            this.content.set(index, newView);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemAdded(item: IView) {\r\n        if (item)\r\n            item.parentView = this;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemRemoved(item: IView) {\r\n        if (item && item.parentView == this)\r\n            item.parentView = null;\r\n    }\r\n}\r\n\r\nregisterType(Panel, \"Panel\");","﻿import { getTypeName, isInstanceOf, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IActivable } from \"../Abstraction/IActivable\";\r\nimport { IComponent } from \"../Abstraction/IComponent\";\r\nimport { DeactivateContentReason } from \"../Abstraction/IViewContentProvider\";\r\nimport { IPageConfig, Page } from \"../Components/Page\";\r\nimport { Panel } from \"../Components/Panel\";\r\nimport { formatForCss } from \"../Helpers/ViewUtils\";\r\n\r\nexport interface IActivityConfig extends IPageConfig<Panel> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Activity<TResult = void> extends Page<Panel> implements IActivable {\r\n\r\n    protected _viewItems: IComponent[] = [];\r\n    protected _resultResolve: (value: TResult) => void;\r\n\r\n    constructor(config?: IActivityConfig) {\r\n\r\n        super(config);\r\n\r\n        this.view = new Panel({ name: formatForCss(getTypeName(this)), styles: [\"vertical\", \"activity\", \"page\", \"relative\"] });\r\n        //this.view.isCacheEnabled = true;\r\n\r\n        if (this.name)\r\n            this.view.styles.push(this.name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get result(): Promise<TResult> {\r\n        return new Promise<TResult>(res => this._resultResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    activateAsync() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    deactivateAsync(reason: DeactivateContentReason) {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async closeAsync(result?: TResult) {\r\n\r\n        const closeResult = await super.closeAsync(result);\r\n\r\n        if (this._resultResolve)\r\n            this._resultResolve(result);\r\n\r\n        return closeResult;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected loadWorkAsync() {\r\n\r\n        return this.createAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createAsync(): Promise<void> {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static isActivity(obj: any): obj is Activity {\r\n\r\n        return isInstanceOf(obj, Activity);\r\n    }\r\n}\r\n\r\nregisterType(Activity, \"Activity\");","import { linq } from \"../../Core/Linq\";\r\nimport { Type } from \"../../Core/Types/Types\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IPage } from \"../Abstraction/IPage\";\r\nimport { IMultiPageHost, IPageLoadOptions, PageTransactionType } from \"../Abstraction/IPageHost\";\r\nimport { ITransactionListener } from \"../Abstraction/ITransactionListener\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { Activity } from \"../Activities/Activity\";\r\nimport { IViewConfig, View } from \"./View\";\r\nimport { App, Services } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport \"Templates/PageHost.html\"; \r\n\r\ninterface IPageView {\r\n\r\n    content?: IView;\r\n\r\n    className: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IPageStackItem {\r\n\r\n    page: IPage;\r\n\r\n    options?: IPageLoadOptions;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface ISlidePageHostConfig extends IViewConfig {\r\n\r\n    defaultTransaction?: PageTransactionType;\r\n} \r\n\r\n/****************************************/\r\n\r\nexport class SlidePageHost extends View implements IMultiPageHost, ITransactionListener {\r\n\r\n    private _activeViewIndex: number = 0;\r\n    private _pageStack: IPageStackItem[];\r\n    private _currentIndex: number;\r\n    private _hideTimerId: number;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: ISlidePageHostConfig) {\r\n        super(config);\r\n\r\n        this.pageViews = [{ content: null, className: null },\r\n        { content: null, className: null }];\r\n\r\n        this.clearAsync();\r\n\r\n        if (config) {\r\n            if (config.defaultTransaction)\r\n                this.defaultTransaction = config.defaultTransaction;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clearAsync(): void {\r\n        this._pageStack = [];\r\n        this._currentIndex = -1;\r\n        this._activeViewIndex = 0;\r\n\r\n        this.pageViews[0].content = null;\r\n        this.pageViews[0].className = \"immediate next\";\r\n\r\n        this.pageViews[1].content = null;\r\n        this.pageViews[1].className = \"immediate prev\";\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    async goBackAsync() {\r\n        if (this._currentIndex > 0)\r\n            await this.goToAsync(this._currentIndex - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async goForwardAsync() {\r\n        if (this._currentIndex > 0)\r\n            await this.goToAsync(this._currentIndex + 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async bringFrontAsync(page: IPage) {\r\n\r\n        const pageIndex = linq(this._pageStack).indexOf(a => a.page == page);\r\n\r\n        if (pageIndex != -1)\r\n            await (page.host as IMultiPageHost).goToAsync(pageIndex);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadAsync<TPage extends IPage>(page: TPage, options?: IPageLoadOptions): Promise<TPage> {\r\n\r\n        if (this.current == page) {\r\n            await page.refreshAsync();\r\n            return page;\r\n        }\r\n\r\n        this.cancelHidePrev();\r\n\r\n        const op = Services.operation.begin(\"Hosting new page\");\r\n        try {\r\n\r\n            if (this.current && Activity.isActivity(this.current))\r\n                await this.current.deactivateAsync(\"replace\");\r\n\r\n            if (options?.loadMode == \"clear\")\r\n                this._currentIndex = -1;\r\n\r\n            if (options?.loadMode == \"replace\" && this.currentIndex >= 0)\r\n                this._currentIndex--;\r\n\r\n            while (this._pageStack.length > this._currentIndex + 1)\r\n                this._pageStack.splice(this._pageStack.length - 1, 1);\r\n\r\n            this._pageStack.push({ page: page, options: options });\r\n\r\n            if (options && options.transaction)\r\n                this.activeTransaction = options.transaction;\r\n            else\r\n                this.activeTransaction = this.defaultTransaction;\r\n\r\n            this._currentIndex++;\r\n\r\n            page.host = this;\r\n\r\n            page.view.parentView = this;\r\n\r\n            this.pageViews[this.backIndex].className = \"immediate next\";\r\n\r\n            await delayAsync(0);\r\n\r\n            await page.loadAsync();\r\n\r\n            if (this._currentIndex > 0) {\r\n\r\n                this.pageViews[this.backIndex].content = page.view;\r\n\r\n                await delayAsync(0);\r\n\r\n                this.pageViews[this.frontIndex].className = \"animate prev\";\r\n                this.pageViews[this.backIndex].className = \"animate active\";\r\n                this._activeViewIndex = this.backIndex;\r\n\r\n                this.hidePrev();\r\n            }\r\n            else {\r\n\r\n                this.pageViews[this.frontIndex].content = page.view;\r\n\r\n                this.pageViews[this.frontIndex].className = \"active\";\r\n            }\r\n\r\n            page.status = \"active\";\r\n\r\n            if (Activity.isActivity(this.current))\r\n                await this.current.activateAsync();\r\n        }\r\n        catch (e) {\r\n            App.handleError(this, e);\r\n        }\r\n        finally {\r\n            op.end();\r\n        }\r\n\r\n        return page;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(index: number) {\r\n\r\n        return this._pageStack[index].page;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async goToAsync(index: number) {\r\n\r\n        if (index < 0 || index >= this._pageStack.length || index == this._currentIndex)\r\n            return;\r\n\r\n        this.cancelHidePrev();\r\n\r\n        const op = Services.operation.begin(\"Going to \" + index);\r\n        try {\r\n\r\n            if (Activity.isActivity(this.current))\r\n                await this.current.deactivateAsync(\"replace\");\r\n\r\n            this.current.status = \"hidden\";\r\n\r\n            const options = this._pageStack[this._currentIndex].options;\r\n            if (options && options.transaction)\r\n                this.activeTransaction = options.transaction;\r\n            else\r\n                this.activeTransaction = this.defaultTransaction;\r\n\r\n            this._currentIndex = index;\r\n\r\n            if (this.current.view.parentView == this)\r\n                this.current.view.parentView = null;\r\n\r\n            this.pageViews[this.backIndex].content = this._pageStack[this._currentIndex].page.view;\r\n\r\n            this.pageViews[this.backIndex].className = \"immmediate prev\";\r\n\r\n            await delayAsync(0);\r\n\r\n            this.pageViews[this.frontIndex].className = \"animate next\";\r\n            this.pageViews[this.backIndex].className = \"animate active\";\r\n\r\n            this._activeViewIndex = this.backIndex;\r\n\r\n            this.current.status = \"active\";\r\n\r\n            if (Activity.isActivity(this.current))\r\n                await this.current.activateAsync();\r\n\r\n            this.hidePrev();\r\n        }\r\n        catch (e) {\r\n            App.handleError(this, e);\r\n        }\r\n        finally {\r\n            op.end();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private cancelHidePrev() {\r\n\r\n        if (this._hideTimerId) {\r\n            clearTimeout(this._hideTimerId);\r\n            this._hideTimerId = null;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private hidePrev() {\r\n\r\n        this._hideTimerId = window.setTimeout(() => {\r\n\r\n            if (!this._hideTimerId)\r\n                return;\r\n            this.pageViews[this.backIndex].className = \"prev hide\";\r\n        }, 4000);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onActivePageChanged(): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onTransactionEnd(): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    find<TPage extends IPage>(type: Type<TPage>): TPage;\r\n\r\n    find<TPage extends IPage>(name: string): TPage;\r\n\r\n    find<TPage extends IPage>(nameOrType: string | Type<TPage>): TPage {\r\n\r\n        let curPage: IPageStackItem;\r\n\r\n        if (typeof nameOrType == \"string\")\r\n            curPage = linq(this._pageStack).first(a => a.page.name == <string>nameOrType);\r\n        else\r\n            curPage = linq(this._pageStack).first(a => Object.getPrototypeOf(a.page).constructor == nameOrType);\r\n\r\n        if (curPage)\r\n            return <TPage>curPage.page;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    get current(): IPage {\r\n        return this._currentIndex == -1 ? undefined : this._pageStack[this._currentIndex].page;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get canGoBack(): boolean {\r\n        return this._currentIndex > 0;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get frontIndex(): number {\r\n        return this._activeViewIndex;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get backIndex(): number {\r\n        return (this._activeViewIndex + 1) % 2;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get currentIndex(): number {\r\n        return this._currentIndex;\r\n    }\r\n\r\n    set currentIndex(value: number) {\r\n        if (this._currentIndex == value)\r\n            return;\r\n        this.goToAsync(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get pageCount(): number {\r\n        return this._pageStack.length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    defaultTransaction: PageTransactionType = \"pop-up-down\";\r\n\r\n    activeTransaction: PageTransactionType = \"none\";\r\n\r\n    pageViews: IPageView[];\r\n}\r\n\r\n\r\nregisterType(SlidePageHost, \"SlidePageHost\");","﻿export enum GestureType {\r\n    SwipeLeft\r\n}\r\n\r\nexport interface IGestureData {\r\n\r\n    type: GestureType;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IGestureListener {\r\n\r\n    onGesture(data: IGestureData): void;\r\n}","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { IAsyncTask } from \"../../Core/Abstraction/ITask\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IComponent } from \"./IComponent\";\r\nimport { IView, ViewStyle } from \"./IView\";\r\n\r\nexport enum ActionPriority {\r\n\r\n    Primary,\r\n    Secondary,\r\n    Evidence\r\n}\r\n\r\nexport interface IAction extends IComponent {\r\n\r\n    executeAsync: (container?: IView) => Promise<any>;\r\n\r\n    canExecute?: () => boolean;\r\n\r\n    displayName?: LocalString;\r\n\r\n    operation?: OperationType;\r\n\r\n    icon?: Bindable<string>;\r\n\r\n    badge?: Bindable<string>;\r\n\r\n    priority?: ActionPriority;\r\n\r\n    subActions?: IAction[];\r\n\r\n    styles?: ViewStyle[];\r\n}\r\n","﻿import { Type } from \"../../Core/Types/Types\";\r\nimport { IPage } from \"./IPage\";\r\n\r\ndeclare global {\r\n\r\n    export interface IServices {\r\n\r\n        pageHost: IPageHost;\r\n    }\r\n}\r\n\r\n\r\nexport type PageTransactionType = \"none\" | \"dissolve\" | \"h-slide\" | \"pop-up-down\" | \"up-down\";\r\n\r\nexport type PageLoadMode = \"add\" | \"replace\" | \"clear\";\r\n\r\nexport enum PageHostMode {\r\n    Default,\r\n    WebView\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPageLoadOptions {\r\n\r\n    transaction?: PageTransactionType;\r\n\r\n    hostMode?: PageHostMode;\r\n\r\n    loadMode?: PageLoadMode;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPageHost {\r\n\r\n    clearAsync(): void;\r\n\r\n    loadAsync<TPage extends IPage>(page: TPage, options?: IPageLoadOptions): Promise<TPage>;\r\n\r\n    readonly current: IPage;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IMultiPageHost extends IPageHost {\r\n\r\n    find<TPage extends IPage>(type: Type<TPage>): TPage;\r\n\r\n    find<TPage extends IPage>(name: string): TPage;\r\n\r\n    bringFrontAsync(page: IPage): Promise<void>;\r\n\r\n    goBackAsync(): Promise<void>;\r\n\r\n    goForwardAsync(): Promise<void>;\r\n\r\n    goToAsync(index: number): Promise<void>;\r\n\r\n    currentIndex: number;\r\n\r\n    get(index: number): IPage;\r\n\r\n    readonly pageCount: number;\r\n\r\n    readonly canGoBack: boolean;\r\n}","\r\nimport { Services } from \"../../Core/Global\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { mergeArrays } from \"../../Core/Utils/ArrayUtils\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority, IAction } from \"../Abstraction/IAction\";\r\nimport { IMultiPageHost } from \"../Abstraction/IPageHost\";\r\nimport { IPopUpMenu } from \"../Abstraction/IPopUpMenu\";\r\nimport { ISelectable } from \"../Abstraction/ISelectable\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { DeactivateContentReason, IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ActionBar } from \"../Components/ActionBar\";\r\nimport { ActionView, IActionViewConfig } from \"../Components/ActionView\";\r\nimport { NavBar } from \"../Components/NavBar\";\r\nimport { Panel } from \"../Components/Panel\";\r\nimport { SearchView } from \"../Components/SearchView\";\r\nimport { SelectionManager } from \"../SelectionManager\";\r\nimport { Activity, IActivityConfig } from \"./Activity\";\r\n\r\nexport enum ContentSelector {\r\n    Manual = 1,\r\n    Tabs = 2,\r\n    BottomNav = 3\r\n}\r\n\r\n\r\nexport enum PrimaryActionMode {\r\n    Floating = 1,\r\n    Button = 2,\r\n    FloatingFull = 3,\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IContentActivitConfig<TCtx extends ContentActivity> extends IActivityConfig {\r\n\r\n    providers: IViewContentProvider<TCtx>[];\r\n\r\n    selector?: ContentSelector;\r\n\r\n    menu?: IPopUpMenu;\r\n\r\n    actions?: ActionView[];\r\n\r\n    activeContent?: Bindable<string>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ContentActivity<TResult = any> extends Activity<TResult> implements IViewContentHost {\r\n\r\n    private _actionBar: ActionBar;\r\n    private _contentView: Panel;\r\n    private _floatingView: Panel;\r\n    private _isContentLoaded: boolean = false;\r\n    private _navBar: NavBar<IViewContentProvider<this>>;\r\n    private _selector: ContentSelector = ContentSelector.Tabs;\r\n    private _isDeactivating = false;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: IContentActivitConfig<ContentActivity>) {\r\n        super({\r\n            ...config\r\n        });\r\n\r\n        this.bindConfig(\"activeContent\", config);\r\n\r\n        if (config.providers)\r\n            this.providers = config.providers;\r\n\r\n        if (config.menu)\r\n            this.menu = config.menu;\r\n\r\n        if (config.selector)\r\n            this._selector = config.selector;\r\n\r\n        if (config.actions)\r\n            this.actions = config.actions;\r\n\r\n        this.prop(\"host\").subscribe(() => {\r\n\r\n            if (this._actionBar?.mainAction == \"none\" && (this.host as IMultiPageHost)?.canGoBack)\r\n                this._actionBar.mainAction = \"back\";\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async closeAsync(result?: TResult) {\r\n\r\n        await this.deactivateAsync(\"close\");\r\n\r\n        return await super.closeAsync(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    activateAsync() {\r\n\r\n        if (!this._isContentLoaded)\r\n            return this.refreshAsync();\r\n\r\n        if (this.activeContentProvider?.activateAsync)\r\n            return this.activeContentProvider?.activateAsync(\"refresh\");\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async deactivateAsync(reason: DeactivateContentReason) {\r\n\r\n        if (this._isDeactivating)\r\n            return;\r\n\r\n        try {\r\n            this._isDeactivating = true;\r\n            if (this.activeContentProvider?.deactivateAsync)\r\n                await this.activeContentProvider.deactivateAsync(reason);\r\n        }\r\n        finally {\r\n            this._isDeactivating = false;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    refreshAsync(): Promise<void> {\r\n\r\n        if (this.activeContentProvider)\r\n            return this.loadContentAsync(this.activeContentProvider, true);\r\n        return this.loadActiveContentAsync(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notifyContentChanged(provider: IViewContentProvider<this>) {\r\n\r\n        this.loadContentAsync(provider, true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    startSelection?<TItem extends ISelectable>(): SelectionManager<TItem> {\r\n\r\n        return this._actionBar.startSelection<TItem>();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected loadActiveContentAsync(force: boolean) {\r\n\r\n        const provider = linq(this.providers).first(a => a.info.name == this.activeContent);\r\n\r\n        return this.loadContentAsync(provider, force);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async loadWorkAsync(): Promise<void> {\r\n\r\n        await this.createAsync();\r\n\r\n        if (this.activeContentProvider)\r\n            this.activeContent = this.activeContentProvider.info.name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadContentAsync(provider: IViewContentProvider<this>, force: boolean): Promise<void> {\r\n\r\n        const isContentChanged = this.activeContentProvider != provider;\r\n\r\n        if (!isContentChanged && !force)\r\n            return;\r\n\r\n        if (isContentChanged && this.activeContentProvider?.deactivateAsync)\r\n            this.activeContentProvider?.deactivateAsync(\"replace\");\r\n\r\n        this.activeContentProvider = provider;\r\n\r\n        if (!force && (this.status == \"notloaded\" || this.status == \"loading\" || this.status == \"closed\")) {\r\n            console.debug(\"Skip loading content: \" + provider.info.name)\r\n            return;\r\n        }\r\n\r\n        const op = Services.operation.begin({ message: \"Loading content: \" + provider.info.name });\r\n        try {\r\n            const content = await provider.getContentAsync(this);\r\n\r\n            this.title = this.formatTitle(Format.title(content.title));\r\n\r\n            if (content.url)\r\n                this.url = content.url;\r\n\r\n            this._contentView.clear();\r\n            this._contentView.styles = mergeArrays(content.styles ?? this.contentStyle, [\"activity-content\"]);\r\n            this._contentView.name = provider.info.name;\r\n            this._contentView.buildStyles();\r\n\r\n            if (content.views)\r\n                content.views.forEach(a => this._contentView.addView(a));\r\n\r\n            this._actionBar.actions.clear();\r\n\r\n            if (this._floatingView)\r\n                this._floatingView.clear();\r\n\r\n            let actionPanel: Panel;\r\n\r\n            if (content.actions) {\r\n\r\n                content.actions.forEach(action => {\r\n\r\n                    if (action.priority == null || action.priority == ActionPriority.Secondary)\r\n                        this._actionBar.actions.add(this.createActionView(action));\r\n\r\n                    else if (action.priority == ActionPriority.Primary) {\r\n                        if (content.actionMode === undefined || content.actionMode != PrimaryActionMode.Button) {\r\n                            this._floatingView.visible = true;\r\n                            this._floatingView.addView(this.createActionView(action, { styles: [\"floating\", ...action.styles ?? []] }));\r\n                            if (content.actionMode == PrimaryActionMode.FloatingFull)\r\n                                this._floatingView.addStyle(\"full\");\r\n                            else\r\n                                this._floatingView.removeStyle(\"full\");\r\n                        }\r\n                        else {\r\n\r\n                            this._floatingView.visible = false;\r\n\r\n                            const actionView = ActionView.fromAction(action, { template: \"ActionButton\" });\r\n                            if (!actionPanel) {\r\n                                actionPanel = new Panel({\r\n                                    name: \"actions\",\r\n                                    styles: [\"vertical\", \"margin-items-v\"],\r\n                                });\r\n\r\n                                this._contentView.addView(actionPanel);\r\n                            }\r\n\r\n                            actionPanel.addView(actionView);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (content.searchAsync) {\r\n\r\n                const searchView = new SearchView({\r\n                    name: \"search-expanded\",\r\n                    isExpanded: true,\r\n                    searchAsync: content.searchAsync\r\n                });\r\n\r\n                this._actionBar.actions.add(searchView);\r\n            }\r\n\r\n            this._floatingView.visible = this._floatingView.content.count > 0;\r\n\r\n            this.actions.forEach(a => this._actionBar.actions.add(a));\r\n\r\n            await this._contentView.loadAsync();\r\n\r\n            if (provider?.activateAsync)\r\n                await provider.activateAsync(\"loading\");\r\n\r\n            this.onContentChanged(provider);\r\n\r\n            this._isContentLoaded = true;\r\n        }\r\n        catch (e) {\r\n\r\n            this.handleError(this, e);\r\n        }\r\n        finally {\r\n            op.end();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getAction(name: string): ActionView { \r\n\r\n        return linq(this._floatingView.content).first(a => a instanceof ActionView && a.name == name) as ActionView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected formatTitle(value: string) {\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createAsync() {\r\n\r\n        if (this.menu) {\r\n            this._actionBar = this.view.addView(new ActionBar({\r\n                title: this.prop(\"title\"),\r\n                mainAction: \"menu\",\r\n                navigationMenu: this.menu\r\n            }));\r\n        }\r\n        else {\r\n            this._actionBar = this.view.addView(new ActionBar({\r\n                onBack: () => this.closeAsync(),\r\n                title: this.prop(\"title\"),\r\n                mainAction: (this.host as IMultiPageHost).canGoBack ? \"back\" : \"none\"\r\n            }));\r\n        }\r\n\r\n        if (this.providers.length > 1) {\r\n\r\n            if (this._selector == ContentSelector.Manual) {\r\n                this.prop(\"activeContent\").subscribe(() => this.loadActiveContentAsync(false));\r\n            }\r\n            else {\r\n                let navStyle: string;\r\n                let itemTemplate: string;\r\n                let itemBehavoirs: string[];\r\n\r\n                switch (this._selector) {\r\n                    case ContentSelector.Tabs:\r\n                        navStyle = \"tab-view\";\r\n                        itemTemplate = \"TextView\";\r\n                        itemBehavoirs = [\"ripple\"];\r\n                        break;\r\n                    case ContentSelector.BottomNav:\r\n                        navStyle = \"bottom-nav\";\r\n                        itemTemplate = \"IconTextView\";\r\n                        itemBehavoirs = [\"ripple\"];\r\n                        break;\r\n                }\r\n\r\n                this._navBar = new NavBar({\r\n                    styles: [<any>navStyle],\r\n                    itemTemplate: itemTemplate,\r\n                    onItemSelected: a => this.loadContentAsync(a.content, false),\r\n                    selectedItem: this.prop(\"activeContent\"),\r\n                    itemBehavoirs: itemBehavoirs,\r\n                    items: linq(this.providers).select(a => ({\r\n                        name: a.info.name,\r\n                        icon: a.info.icon,\r\n                        text: a.info.displayName,\r\n                        content: a\r\n                    })).toArray()\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this._navBar && this._selector == ContentSelector.Tabs)\r\n            this.view.addView(this._navBar);\r\n\r\n        this._contentView = this.view.addView(new Panel({ styles: this.contentStyle }));\r\n  \r\n        if (this._navBar && this._selector == ContentSelector.BottomNav)\r\n            this.view.addView(this._navBar);\r\n\r\n        this._floatingView = this.view.addView(new Panel({ name: \"floating-container\", template: \"ItemsViewWrapped\", visible: false, styles: this.floatingStyle }));\r\n\r\n        if (this.providers.length == 1)\r\n            this.activeContentProvider = this.providers[0];\r\n\r\n        this.status = \"created\";\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createActionView(action: IAction, config?: IActionViewConfig): ActionView {\r\n        return ActionView.fromAction(action, config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onContentChanged(newContent: IViewContentProvider<this>) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get actionBar() { return this._actionBar; }\r\n\r\n    activeContent: string = null;\r\n\r\n    activeContentProvider: IViewContentProvider<this> = null;\r\n\r\n    providers: IViewContentProvider<this>[] = [];\r\n\r\n    menu: IPopUpMenu = null;\r\n\r\n    actions: ActionView[] = [];\r\n\r\n    floatingStyle: ViewStyle[] = [\"vertical\", \"item-absolute\", \"bottom\", \"fill-h\", \"center-items-h\"];\r\n\r\n    contentStyle: ViewStyle[] = [\"vertical\", \"scroll\"];\r\n}\r\n\r\nregisterType(ContentActivity, \"ContentActivity\");","﻿import { isSmallDevice, isTouchDevice } from \"../../Core/Utils/DomUtils\";\r\nimport { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ContextMenu } from \"../Components/ContextMenu\";\r\n\r\nexport interface IContextActionProvider {\r\n\r\n    getContextActions(): IAction[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ContextMenuBehavoir implements IBehavoir<HTMLElement, IView & IContextActionProvider> {\r\n\r\n    attach(element: HTMLElement, viewModel: IContextActionProvider) {\r\n\r\n        const showMenu = (ev: MouseEvent | TouchEvent | PointerEvent) => {\r\n\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            ev.stopImmediatePropagation();\r\n\r\n            const items = viewModel.getContextActions();\r\n            if (items) {\r\n                const menu = new ContextMenu({ actions: items });\r\n                menu.showAsync(null, ev);\r\n            }\r\n\r\n        };\r\n\r\n        if (isTouchDevice())\r\n            element.addEventListener(\"selectstart\",ev => {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                ev.stopImmediatePropagation();\r\n                return false;\r\n            });\r\n\r\n        element.addEventListener(\"contextmenu\", ev => showMenu(ev));\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach(element: HTMLElement) {\r\n    }\r\n\r\n    static readonly instance = new ContextMenuBehavoir();\r\n}","import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IPopUpMenu } from \"../Abstraction/IPopUpMenu\";\r\nimport { ISelectable } from \"../Abstraction/ISelectable\";\r\nimport { SelectionManager } from \"../SelectionManager\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\nimport \"Templates/ActionBar.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\ntype ActionBarMainActionType = \"none\" | \"menu\" | \"back\";\r\n\r\n/****************************************/\r\n\r\nexport interface IActionBarConfig extends IViewComponentConfig {\r\n\r\n    actions?: IAction[];\r\n\r\n    content?: IView;\r\n\r\n    mainAction?: Bindable<ActionBarMainActionType>;\r\n\r\n    navigationMenu?: Bindable<IPopUpMenu>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    icon?: Bindable<string>;\r\n\r\n    onBack?: () => void;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ActionBar extends ViewComponent {\r\n\r\n    constructor(config?: IActionBarConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"mainAction\", config);\r\n\r\n        this.bindConfig(\"navigationMenu\", config);\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfig(\"icon\", config);\r\n\r\n        this.actions.subscribe({\r\n            onItemAdded: this.onActionAdded.bind(this),\r\n            onItemRemoved: this.onActionRemoved.bind(this)\r\n        });\r\n\r\n\r\n        if (config) {\r\n\r\n            if (config.content)\r\n                this.content = config.content;\r\n\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n\r\n            if (config.onBack)\r\n                this.back = config.onBack;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onActionRemoved(action: ActionView) {\r\n        if (action && action.parentView == this)\r\n            action.parentView = null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onActionAdded(action: ActionView) {\r\n\r\n        if (action)\r\n            action.parentView = this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showNavigationMenu() {\r\n\r\n        if (this.navigationMenu)\r\n            this.navigationMenu.showAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n        this.actions.add(ActionView.fromActionIcon(action));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    back() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    startSelection<TItem extends ISelectable>(): SelectionManager<TItem> {\r\n\r\n        if (!this.selectionManager)\r\n            this.selectionManager = new SelectionManager<any>();\r\n        this.selectionManager.isActive = true;\r\n        return this.selectionManager;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    mainAction: ActionBarMainActionType = \"none\";\r\n\r\n    navigationMenu: IPopUpMenu = null;\r\n\r\n    title: string = null;\r\n\r\n    icon: string = null;\r\n\r\n    content: IView = null;\r\n\r\n    selectionManager: SelectionManager<any> = null;\r\n}\r\n\r\nregisterType(ActionBar, \"ActionBar\");","import { linq } from \"../../Core/Linq\";\r\nimport { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { IconTextView, IIconTextViewConfig } from \"./IconTextView\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\nimport \"Templates/NavBar.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface INavBarItemConfig<TContent> extends IIconTextViewConfig {\r\n\r\n    name?: string;\r\n\r\n    content?: TContent;\r\n\r\n    badge?: Bindable<string>;\r\n\r\n    behavoirs?: Bindable<(IBehavoir | string)[]>;\r\n}\r\n\r\n/****************************************/\r\n\r\ntype NavigationBarItemStatus = \"active\" | \"\";\r\n\r\n/****************************************/\r\n\r\nexport class NavBarItem<TContent> extends IconTextView implements IContentView<TContent> {\r\n\r\n    constructor(config: INavBarItemConfig<TContent>) {\r\n        super(config);\r\n\r\n        this.prop(\"status\");\r\n\r\n        this.bindConfig(\"badge\", config);\r\n\r\n        this.bindConfig(\"behavoirs\", config);\r\n\r\n        this.bindConfig(\"content\", config);\r\n\r\n        if (config)\r\n            this.name = config.name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select() {\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    name: string = null;\r\n\r\n    status: NavigationBarItemStatus = \"\";\r\n\r\n    badge: string = null;\r\n\r\n    behavoirs: (IBehavoir | string)[] = [];\r\n\r\n    content: TContent = null;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface INavBarConfig<TContent> extends IItemsViewConfig<NavBarItem<TContent>> {\r\n\r\n    items?: INavBarItemConfig<TContent>[];\r\n\r\n    itemTemplate?: Bindable<CatalogTemplate<IView>>;\r\n\r\n    itemBehavoirs?: Bindable<(IBehavoir | string)[]>;\r\n\r\n    selectedItem?: Bindable<string>;\r\n\r\n    onItemSelected?: (item?: NavBarItem<TContent>) => void;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class NavBar<TContent = any> extends ItemsView<NavBarItem<TContent>>  {\r\n\r\n    constructor(config?: INavBarConfig<TContent>) {\r\n        super(config);\r\n\r\n        this.bindConfig(\"itemTemplate\", config);\r\n\r\n        this.bindConfig(\"itemBehavoirs\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.items)\r\n                config.items.forEach(a => this.addItem(a));\r\n\r\n            if (config.onItemSelected) {\r\n\r\n                this.onSelectedItemChanged = (a, b) => {\r\n                    NavBar.prototype.onSelectedItemChanged.bind(this)(a, b);\r\n                    config.onItemSelected(a);\r\n                };\r\n            }\r\n        }\r\n\r\n        this.bindConfig(\"selectedItem\", config, {\r\n            convertTo: a => this.getItem(a as string),\r\n            convertFrom: a => a ? a.name : undefined\r\n        }, this.onSelectedItemChanged);\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItem(name: string): NavBarItem<TContent> {\r\n        return linq(this.content).first(a => a.name == name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    selectItem(name: string) {\r\n        this.selectedItem = this.getItem(name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addItem(config: INavBarItemConfig<TContent>) {\r\n\r\n        const item = this.createItem(config);\r\n        this.content.add(item);\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItem(config?: INavBarItemConfig<TContent>): NavBarItem<TContent> {\r\n\r\n        const item = new NavBarItem({ template: this.prop(\"itemTemplate\"), behavoirs: this.prop(\"itemBehavoirs\"), ...config });\r\n        item.parentView = this;\r\n        item.select = () =>\r\n            this.selectedItem = item;\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onSelectedItemChanged(newItem: NavBarItem<TContent>, oldItem: NavBarItem<TContent>) {\r\n        if (oldItem)\r\n            oldItem.status = \"\";\r\n        if (newItem)\r\n            newItem.status = \"active\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    selectedItem: NavBarItem<TContent> = null;\r\n\r\n    itemTemplate: CatalogTemplate<IView> = \"IconTextView\";\r\n\r\n    itemBehavoirs: (IBehavoir | string)[] = [];\r\n}\r\n\r\nregisterType(NavBarItem, \"NavBarItem\");\r\n\r\nregisterType(NavBar, \"NavBar\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionView, IActionViewConfig } from \"./ActionView\";\r\n\r\nexport interface ISearchViewConfig extends IActionViewConfig {\r\n\r\n    searchText?: Bindable<string>;\r\n\r\n    isExpanded?: Bindable<boolean>;\r\n\r\n    poolInterval?: number;\r\n\r\n    searchAsync?: (text: string) => Promise<void>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SearchView extends ActionView {\r\n\r\n    protected _lastSearchText: string = null;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: ISearchViewConfig) {\r\n        super({\r\n            name: \"search\",\r\n            template: \"SearchView\",\r\n            content: \"fas fa-search\",\r\n            tooltip: \"Ricerca\",\r\n            ...config\r\n        });\r\n\r\n        this.bindConfig(\"isExpanded\", config);\r\n\r\n        this.bindConfig(\"searchText\", config);\r\n\r\n        this.prop(\"hasFocus\").subscribe(value => this.onFocusChanged(value));\r\n\r\n        if (config) {\r\n\r\n            if (config.poolInterval)\r\n                this.poolInterval = config.poolInterval;\r\n\r\n            if (config.searchAsync)\r\n                this.doSearchAsync = config.searchAsync;\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected onFocusChanged(value: boolean) {\r\n\r\n        if (value) {\r\n            this._lastSearchText = this.searchText;\r\n            this.poolSearchTextAsync();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async poolSearchTextAsync(): Promise<void> {\r\n\r\n        while (this.hasFocus) {\r\n            if (this.searchText != this._lastSearchText) {\r\n                this._lastSearchText = this.searchText;\r\n                await this.searchAsync(this._lastSearchText);\r\n            }\r\n            await delayAsync(this.poolInterval);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected executeWorkAsync(): Promise<void> {\r\n\r\n        if (!this.isExpanded) {\r\n            this.isExpanded = true;\r\n            this.hasFocus = true;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async searchAsync(text: string) {\r\n\r\n        this.status = \"searching\";\r\n\r\n        await delayAsync(0);\r\n\r\n        try {\r\n            await this.doSearchAsync(text);\r\n        }\r\n        finally {\r\n            this.status = \"loaded\";\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected doSearchAsync(text: string) {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n        this.searchText = \"\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    close() {\r\n        this.isExpanded = false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    searchText: string = null;\r\n\r\n    isExpanded: boolean = false;\r\n\r\n    hasFocus: boolean = false;\r\n\r\n    poolInterval: number = 200;\r\n}\r\n\r\nregisterType(SearchView, \"SearchView\");","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\nimport { forEachAsync } from \"../../Core/Utils/ArrayUtils\";\r\nimport { IItemsContainer, IItemsLoader } from \"../Abstraction/IItemsLoader\";\r\n\r\nexport class FullItemsLoader<TItem = any> implements IItemsLoader<TItem, any>  {\r\n\r\n    async loadItemsAsync(container: IItemsContainer<TItem, any>, chunkSize: number): Promise<void> {\r\n\r\n        container.status = \"loading\";\r\n        const operation = Services.operation.begin({ message: \"Loading items\", type: OperationType.Local });\r\n        try {\r\n\r\n            const items = await container.itemsSource.getItemsAsync(container.filter);\r\n\r\n            container.clear();\r\n\r\n            if (items)\r\n                await forEachAsync(items, chunkSize, a => container.addItem(a));\r\n\r\n        }\r\n        finally {\r\n            operation.end();\r\n            container.status = \"loaded\";\r\n        }\r\n    }\r\n\r\n    static readonly instance = new FullItemsLoader();\r\n}","﻿import { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/TextView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ITextViewConfig extends IContentViewConfig<string> {\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class TextView extends ContentView<string> {\r\n\r\n    constructor(config?: ITextViewConfig) {\r\n\r\n        super({ template: \"TextContent\", ...config });\r\n    }\r\n}\r\n\r\nregisterType(TextView, \"TextView\");\r\n","import { linq } from \"../../Core/Linq\";\r\nimport { getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList, IObservableListHandler } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IItemsContainer, IItemsLoader } from \"../Abstraction/IItemsLoader\";\r\nimport { IScrollData, IScrollListener } from \"../Abstraction/IScrollListener\";\r\nimport { ISingleItemSelector } from \"../Abstraction/ISingleItemSelector\";\r\nimport { IView, IViewFactory } from \"../Abstraction/IView\";\r\nimport { isAsyncLoad, isSelectable } from \"../Helpers/TypeCheck\";\r\nimport { FullItemsLoader } from \"../Items/FulltemsLoader\";\r\nimport { IItemChangeListener } from \"../Items/ItemsObserver\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\nimport { TextView } from \"./TextView\";\r\nimport { ViewComponentStatus } from \"./ViewComponent\";\r\nimport \"Templates/ListView.html\";\r\nimport { Services } from \"../../Core/Global\";\r\n\r\n\r\ntype ListViewStatus = ViewComponentStatus | \"loading\";\r\n\r\nexport type SelectionMode = \"none\" | \"multiple\" | \"single\";\r\n\r\n/****************************************/\r\n\r\nexport interface IListViewConfig<TItem, TView extends IView, TFilter extends {}> extends IItemsViewConfig<TView> {\r\n\r\n    itemsSource?: ItemsSource<TItem, any, any>;\r\n\r\n    createItemView?: IViewFactory<TItem, TView>;\r\n\r\n    itemsLoader?: IItemsLoader<TItem, any>;\r\n\r\n    onSelectdItemChanged?: (item: TItem) => void;\r\n\r\n    isListenerActive?: boolean;\r\n\r\n    items?: Bindable<IObservableList<TItem>>;\r\n\r\n    filter?: TFilter;\r\n\r\n    selectionMode?: SelectionMode;\r\n\r\n    showSeparator?: boolean;\r\n\r\n    isAutoLoad?: boolean;\r\n\r\n    footer?: IView[];\r\n\r\n    header?: IView[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ListView<TItem = any, TView extends IView = any, TFilter extends {} = any> extends ItemsView<TView> implements IScrollListener, IItemsContainer<TItem, any>, IAsyncLoad, ISingleItemSelector<TItem> {\r\n\r\n    protected _isLoaded: boolean = false;\r\n    protected _itemViewMap = new Map<TView, TItem>();\r\n    protected _listener: IItemChangeListener<TItem, any>;\r\n\r\n    constructor(config?: IListViewConfig<TItem, TView, TFilter>) {\r\n\r\n        super({ template: \"ListView\", styles: [\"default\"], ...config });\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"items\", config);\r\n\r\n        this.bindConfig(\"filter\", config);\r\n\r\n        this.bindConfig(\"selectionMode\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.itemsLoader)\r\n                this.itemsLoader = config.itemsLoader;\r\n\r\n            if (config.showSeparator !== undefined)\r\n                this.showSeparator = config.showSeparator;\r\n\r\n            if (config.createItemView)\r\n                this.createItemViewWork = config.createItemView;\r\n\r\n            if (config.header)\r\n                this.header.addRange(config.header);\r\n\r\n            if (config.footer)\r\n                this.footer.addRange(config.footer);\r\n        }\r\n\r\n        if (!config?.items)\r\n            this.items = observableListOf();\r\n\r\n        if (!this.itemsLoader && this.itemsSource)\r\n            this.itemsLoader = FullItemsLoader.instance;\r\n\r\n        if (config && config.isAutoLoad)\r\n            this.loadAsync();\r\n\r\n        const itemsHandler = <IObservableListHandler<TItem>>{\r\n\r\n            onClear: () => {\r\n                this.selectedItem = null;\r\n                this._itemViewMap.clear();\r\n                this.content.clear();\r\n            },\r\n\r\n            onItemAdded: (item, index, reason) => {\r\n                if (reason != \"replace\")\r\n                    this.content.insert(index, this.createItemView(item));\r\n            },\r\n\r\n            onItemRemoved: (item, index, reason) => {\r\n                if (reason == \"remove\")\r\n                    this.content.removeAt(index)\r\n            },\r\n\r\n            onItemReplaced: (newItem, oldItem, index) => this.content.set(index, this.createItemView(newItem)),\r\n\r\n            onItemSwap: (index, newIndex) => this.content.swap(index, newIndex),\r\n        };\r\n\r\n        this.prop(\"items\").subscribe((value, oldValueX) => {\r\n\r\n            if (oldValueX != null)\r\n                oldValueX.unsubscribe(itemsHandler);\r\n\r\n            this.content.clear();\r\n\r\n            if (value) {\r\n                value.subscribe(itemsHandler);\r\n                for (const item of value)\r\n                    this.content.add(this.createItemView(item))\r\n                this.status = \"loaded\";\r\n            }\r\n        });\r\n\r\n        this.prop(\"items\").notifyChanged();\r\n\r\n        this.prop(\"selectedItem\").subscribe((value, oldValue) => {\r\n\r\n            if (this.selectionMode == \"single\")\r\n                this.updateItemSelection(oldValue, false);\r\n\r\n            if (this.selectionMode != \"none\") {\r\n                this.updateItemSelection(value, true);\r\n\r\n                if (config?.onSelectdItemChanged)\r\n                    config.onSelectdItemChanged(value);\r\n            }\r\n        });\r\n\r\n        if (config?.isListenerActive)\r\n            this.activateListener();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    activateListener() {\r\n\r\n        if (!this.itemsSource?.typeName)\r\n            return;\r\n\r\n        if (!this._listener)\r\n\r\n            this._listener = {\r\n\r\n                onItemAdded: args => this.refreshAsync(),\r\n\r\n                onItemRemoved: args => {\r\n                    if (args.value)\r\n                        this.items.removeWhen(a => this.itemsSource.equals(this.itemsSource.getItemValue(a), args.value));\r\n                },\r\n\r\n                onItemChanged: async args => {\r\n\r\n                    const index = linq(this.items).indexOf(a => this.itemsSource.equals(this.itemsSource.getItemValue(a), args.value));\r\n                    if (index != -1) {\r\n                        const newItem = await this.itemsSource.getItemByValueAsync(args.value);\r\n                        if (newItem)\r\n                            this.items.set(index, newItem);\r\n                    }\r\n                }\r\n            };\r\n\r\n        Services.itemsObserver.register(this.itemsSource.typeName, this._listener);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    deactivateListener() {\r\n\r\n        if (this._listener)\r\n            Services.itemsObserver.unregister(this.itemsSource.typeName, this._listener);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateItemSelection(item: TItem, isSelected: boolean) {\r\n\r\n        const view = this.findItemView(item);\r\n\r\n        if (isSelectable(view))\r\n            view.isSelected = isSelected;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    findItemView(item: TItem): TView {\r\n\r\n        if (!item)\r\n            return null;\r\n        return linq(this._itemViewMap.entries()).where(a => a[1] == item).select(a => a[0]).first();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeItem(item: TItem) {\r\n\r\n        this.items.remove(item);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addItem(item: TItem, index?: number) : TView {\r\n\r\n        if (index !== undefined) {\r\n            this.items.insert(index, item);\r\n            return this.content.get(index);\r\n        }\r\n        else {\r\n            this.items.add(item);\r\n            return this.content.last;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n        this.items.clear();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadAsync() {\r\n\r\n        if (this._isLoaded)\r\n            return;\r\n\r\n        await this.refreshAsync(); //TODO await added on 28/09/2021\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async refreshAsync() {\r\n\r\n        let oldSelection = this.selectedItem;\r\n\r\n        if (this.itemsLoader) {\r\n\r\n            this.beginUpdate();\r\n\r\n            await this.itemsLoader.loadItemsAsync(this, 25);\r\n\r\n            if (!oldSelection && this.selectedItem)\r\n                oldSelection = this.selectedItem;\r\n\r\n            this.endUpdate();\r\n        }\r\n\r\n        this._isLoaded = true;\r\n\r\n        if (oldSelection && this.itemsSource)\r\n            this.selectedItem = linq(this.items).first(a => this.itemsSource.itemComparer(a, oldSelection));\r\n        else\r\n            this.selectedItem = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemRemoved(itemView: TView) {\r\n\r\n        if (itemView) {\r\n\r\n            if (itemView.parentView == this)\r\n                itemView.parentView = null;\r\n\r\n            const item = this._itemViewMap.get(itemView);\r\n\r\n            if (item == this.selectedItem)\r\n                this.selectedItem = null;\r\n\r\n            this._itemViewMap.delete(itemView);\r\n\r\n            //TODO remove selection\r\n            /*\r\n            if (ViewUtils.isSelectable(itemView))\r\n                itemView.prop(\"isSelected\").unsubscribe(this.selectionHandler);*/\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem): TView {\r\n\r\n        const itemView = this.createItemViewWork(item);\r\n\r\n        if ((this.status == \"loading\" || this.status == \"loaded\") && isAsyncLoad(itemView)) {\r\n            itemView.loadAsync(); //Not awaited\r\n        }\r\n\r\n        if (itemView) {\r\n            itemView.parentView = this;\r\n            this._itemViewMap.set(itemView, item);\r\n            if (isSelectable(itemView))\r\n                itemView.prop(\"isSelected\").subscribe(value => {\r\n                    if (value)\r\n                        this.selectedItem = item;\r\n                });\r\n        }\r\n\r\n        return itemView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemViewWork(item: TItem): TView {\r\n\r\n        const factory = Services.views[getTypeName(item)];\r\n        if (factory)\r\n            return <TView>factory(item);\r\n\r\n        return <any>new TextView({ content: this.itemsSource ? this.itemsSource.getItemText(item) : item.toString() });\r\n    }\r\n\r\n    /****************************************/\r\n    \r\n    onScroll(data: IScrollData) {\r\n\r\n        if (this.itemsLoader && \"onScroll\" in this.itemsLoader)\r\n            (this.itemsLoader as unknown as IScrollListener).onScroll(data);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get itemsCount() { return this.content.count }\r\n\r\n    get isScrollCheckActive() { return this.itemsLoader && \"onScroll\" in this.itemsLoader }\r\n\r\n    readonly header : IObservableList<IView> = observableListOf();\r\n\r\n    readonly footer: IObservableList<IView> = observableListOf();\r\n\r\n    itemsSource: ItemsSource<TItem, any, TFilter> = null;\r\n\r\n    itemsLoader: IItemsLoader<TItem, TFilter> = null;\r\n\r\n    items: IObservableList<TItem> = null;\r\n\r\n    selectedItem: TItem = null;\r\n\r\n    status: ListViewStatus = \"\";\r\n\r\n    selectionMode: SelectionMode = \"none\";\r\n\r\n    showSeparator: boolean = false;\r\n\r\n    filter: TFilter = null;\r\n}\r\n\r\nregisterType(ListView, \"ListView\");","﻿import { get, getTypeName, set, setTypeName } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IItemCreateOptions<TItem, TValue> {\r\n\r\n    value?: TValue;\r\n\r\n    item?: TItem;\r\n\r\n    text?: string;\r\n\r\n    type?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Item {\r\n\r\n    static create<TItem, TValue = TItem>(options: IItemCreateOptions<TItem, TValue>): TValue {\r\n\r\n        let newValue: any = options.value;\r\n\r\n        if (typeof newValue == \"string\")\r\n            newValue = new String(newValue);\r\n        else if (typeof newValue == \"number\")\r\n            newValue = new Number(newValue);\r\n        else if (typeof newValue == \"boolean\")\r\n            newValue = new Boolean(newValue);\r\n        else if (newValue instanceof Date)\r\n            newValue = new Date(newValue.getTime());\r\n\r\n        if (options.item) {\r\n            options.item.valueOf = () => options.value;\r\n            if (options.value)\r\n                options.item[\"toJSON\"] = () => options.value;\r\n            if (options.text)\r\n                options.item.toString = () => options.text;\r\n            if (options.type)\r\n                options.item[\"$type\"] = () => options.type;\r\n        }\r\n\r\n        if (newValue) {\r\n\r\n            if (options.text)\r\n                newValue.toString = () => options.text;\r\n\r\n            if (options.type)\r\n                setTypeName(newValue, options.type);\r\n\r\n            if (options.item !== undefined)\r\n                set(newValue, \"@item\", options.item);\r\n\r\n            newValue[\"toJSON\"] = () => {\r\n                if ((options.value as any)?.toJSON)\r\n                    return (options.value as any).toJSON();\r\n                return options.value;\r\n            }\r\n        }\r\n\r\n        if (newValue)\r\n            return newValue;\r\n\r\n        return <any>options.item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static getText(value: any): string {\r\n\r\n        if (value == null || value == undefined)\r\n            return \"\";\r\n\r\n        const item = this.getItem(value);\r\n        if (item !== value)\r\n            return item.toString();\r\n\r\n        return value.toString();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static getType(value: any): string {\r\n\r\n        return getTypeName(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static getValue<TValue>(value: any): TValue {\r\n\r\n        if (!value)\r\n            return;\r\n\r\n        if (value.valueOf)\r\n            return <TValue>value.valueOf();\r\n\r\n        return <TValue>value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static getItem<TItem>(value: any): TItem {\r\n        if (!value)\r\n            return;\r\n\r\n        const item = get<TItem>(value, \"@item\");\r\n        if (item)\r\n            return item;\r\n\r\n        return undefined;\r\n    }\r\n}","﻿import { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { EqualityComparer } from \"../../Core/Types/Types\";\r\nimport { Item } from \"./Item\";\r\n\r\nexport interface IItemsSourceConfig<TItem, TValue, TFilter> {\r\n\r\n    getItemsAsync?: (filter: TFilter) => Promise<TItem[]>;\r\n\r\n    getItemByValueAsync?: (value: TValue) => Promise<TItem>;\r\n\r\n    getItemText?: (item: TItem) => string;\r\n\r\n    getItemValue?: (item: TItem) => TValue;\r\n\r\n    countAsync?: (filter: TFilter) => number;\r\n\r\n    getFilter?: (text?: string, offset?: number, pageSize?: number) => TFilter;\r\n\r\n    equals?: (a: TValue, b: TValue) => boolean\r\n\r\n    displayName?: LocalString;\r\n\r\n    typeName?: string;\r\n\r\n    allowZero?: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ItemsSource<TItem, TValue = any, TFilter = any> {\r\n\r\n    protected _typeName: string;\r\n    protected _allowZero: boolean;\r\n\r\n    constructor(config?: IItemsSourceConfig<TItem, TValue, TFilter>) {\r\n\r\n        if (config) {\r\n\r\n            if (config.getItemsAsync)\r\n                this.getItemsAsync = config.getItemsAsync;\r\n\r\n            if (config.allowZero !== undefined)\r\n                this._allowZero = config.allowZero;\r\n\r\n            if (config.getItemValue)\r\n\r\n                this.getItemValue = (a, bindItem) => {\r\n\r\n                    if (bindItem === false)\r\n                        return config.getItemValue(a);\r\n\r\n                    if (!a && (a as any !== 0 || !config.allowZero))\r\n                        return undefined;\r\n                    const value = config.getItemValue(a);\r\n                    if (value === null)\r\n                        return null;\r\n                    return Item.create({ type: this.typeName, value: value, text: this.getItemText(a), item: a });\r\n                }\r\n\r\n            if (config.getItemText)\r\n                this.getItemText = config.getItemText;\r\n\r\n            if (config.getFilter)\r\n                this.getFilter = config.getFilter;\r\n\r\n            if (config.getItemByValueAsync) {\r\n\r\n                this.getItemByValueAsync = value => {\r\n\r\n                    const item = Item.getItem<TItem>(value);\r\n\r\n                    if (item)\r\n                        return Promise.resolve(item);\r\n\r\n                    return config.getItemByValueAsync(value);\r\n                };\r\n            }\r\n\r\n            if (config.equals)\r\n                this.equals = config.equals;\r\n\r\n            this._typeName = config.typeName;\r\n\r\n            this.displayName = config.displayName;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItemsAsync(filter?: TFilter): Promise<TItem[]> {\r\n\r\n        return Promise.resolve([]);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItemText(item: TItem): string {\r\n\r\n        if (item)\r\n            return item.toString();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItemValue(item: TItem, bindItem?: boolean): TValue {\r\n        return <any>item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getFilter(text?: string, offset?: number, pageSize?: number): TFilter {\r\n\r\n        return <TFilter>{};\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async countAsync(filter: TFilter): Promise<number> {\r\n\r\n        return (await this.getItemsAsync(filter)).length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItemByValueAsync(value: TValue): Promise<TItem> {\r\n\r\n        const item = Item.getItem<TItem>(value);\r\n\r\n        if (item)\r\n            return Promise.resolve(item);\r\n\r\n        return Promise.resolve(value as unknown as TItem);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    equals(a: TValue, b: TValue): boolean {\r\n\r\n        if (a == b)\r\n            return true;\r\n        if (a != undefined && a.valueOf && b != undefined && b.valueOf)\r\n            return a.valueOf() == b.valueOf();\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get itemComparer(): EqualityComparer<TItem> {\r\n\r\n        return (a, b) => this.equals(this.getItemValue(a), this.getItemValue(b));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get typeName() {\r\n        return this._typeName;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get allowZero() {\r\n        return this._allowZero;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    displayName: LocalString;\r\n}","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { IItemsContainer, IItemsLoader } from \"../Abstraction/IItemsLoader\";\r\nimport { IScrollData, IScrollListener } from \"../Abstraction/IScrollListener\";\r\n\r\nexport interface IPagedItemsLoaderConfigConfig<TFilter> {\r\n\r\n    pageSize?: number;\r\n\r\n    getFilter?: (offset: number, pageSize: number) => TFilter;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class PagedItemsLoader<TItem = any, TFilter = object> extends BindableObject implements IItemsLoader<TItem, TFilter>, IScrollListener {\r\n\r\n    private _hasMoreItems: boolean = true;\r\n    private _container: IItemsContainer<TItem, TFilter>;\r\n\r\n    constructor(config?: IPagedItemsLoaderConfigConfig<TFilter>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"pageSize\", config);\r\n\r\n        if (config) {\r\n            if (config.getFilter)\r\n                this.getFilter = config.getFilter;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadItemsAsync(container: IItemsContainer<TItem, TFilter>, chunkSize: number): Promise<void> {\r\n\r\n        this._container = container;\r\n\r\n        this._hasMoreItems = true;\r\n\r\n        this._container.clear();\r\n\r\n        return this.loadNextPageAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadNextPageAsync(): Promise<void> {\r\n\r\n        if (!this.canLoadNextPage)\r\n            return;\r\n\r\n\r\n        if (this._container.itemsSource) {\r\n\r\n            const filter = this.getFilter(this._container.itemsCount, this.pageSize);\r\n\r\n            const operation = Services.operation.begin({ message: \"Laoding items from \" + this._container.itemsCount, type: OperationType.Local });\r\n\r\n            try {\r\n\r\n                this._container.status = \"loading\";\r\n\r\n                const newItems = await this._container.itemsSource.getItemsAsync({ ...filter, ...this._container.filter });\r\n\r\n                if (!newItems || newItems.length == 0)\r\n                    this._hasMoreItems = false;\r\n                else {\r\n\r\n                    newItems.forEach(item =>\r\n                        this._container.addItem(item));\r\n\r\n                    this._hasMoreItems = newItems.length == this.pageSize;\r\n                }\r\n            }\r\n            finally {\r\n                operation.end();\r\n                this._container.status = \"loaded\";\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onScroll(data: IScrollData) {\r\n        if (data.pageBottom < 1 && this.canLoadNextPage)\r\n            this.loadNextPageAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getFilter(offset: number, pageSize: number): TFilter {\r\n\r\n        return { ...this._container.filter, ...this._container.itemsSource.getFilter(undefined, offset, pageSize) };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected get canLoadNextPage() {\r\n        return this._hasMoreItems && this._container.status != \"loading\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    pageSize: number = 20;\r\n\r\n    readonly isScrollCheckActive = true;\r\n\r\n\r\n}","import { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IView, IViewFactory, ViewStyle } from \"../Abstraction/IView\";\r\nimport { ActionBar } from \"../Components/ActionBar\";\r\nimport { IconTextView } from \"../Components/IconTextView\";\r\nimport { IListViewConfig, ListView } from \"../Components/ListView\";\r\nimport { SearchView } from \"../Components/SearchView\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { PagedItemsLoader } from \"../Items/PagedItemsLoader\";\r\nimport { Activity, IActivityConfig } from \"./Activity\";\r\n\r\nexport type ItemSearchMode = \"client\" | \"default\";\r\n\r\nexport interface ISearchActivityConfig<TItem, TItemView extends IView> extends IActivityConfig {\r\n\r\n    createItemView?: IViewFactory<TItem, TItemView>;\r\n\r\n    searchAsync?: (query: string, offset?: number, pageSize?: number) => Promise<TItem[]>;\r\n\r\n    searchMode?: ItemSearchMode;\r\n\r\n    tooltip?: LocalString;\r\n\r\n    query?: string;\r\n\r\n    pageSize?: number;\r\n\r\n    listStyles?: ViewStyle[];\r\n\r\n    noMatchingText?: LocalString;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SearchActivity<TItem, TItemView extends IView, TResult = any> extends Activity<TResult> {\r\n\r\n    protected _actionBar: ActionBar;\r\n    protected _listView: ListView<TItem, TItemView>;\r\n    protected _searchView: SearchView;\r\n    protected _emptyView: IconTextView;\r\n    protected _lastItems: TItem[];\r\n\r\n    constructor(config?: ISearchActivityConfig<TItem, TItemView>) {\r\n        super(config);\r\n\r\n        this.bindConfigString(\"tooltip\", config);\r\n\r\n        this.bindConfig(\"pageSize\", config);\r\n\r\n        this.bindConfig(\"noMatchingText\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.createItemView)\r\n                this.createItemView = config.createItemView;\r\n\r\n            if (config.searchAsync)\r\n                this.searchWorkAsync = config.searchAsync;\r\n\r\n\r\n            if (config.query)\r\n                this.searchText = config.query;\r\n\r\n            if (config.listStyles)\r\n                config.listStyles.forEach(a => this.listStyles.push(a));\r\n        }\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    refreshAsync() {\r\n\r\n        return this._listView.refreshAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async createAsync() {\r\n        this._actionBar = this.view.addView(new ActionBar({\r\n            onBack: () => this.closeAsync(),\r\n            title: this.prop(\"title\"),\r\n            mainAction: \"back\"\r\n        }));\r\n\r\n        this._searchView = new SearchView({\r\n            name: \"search-expanded\",\r\n            tooltip: this.prop(\"tooltip\"),\r\n            isExpanded: true,\r\n            searchText: this.prop(\"searchText\"),\r\n            searchAsync: text => this._listView.refreshAsync()\r\n        });\r\n\r\n        this._actionBar.actions.add(this._searchView);\r\n\r\n        this._emptyView = new IconTextView({\r\n            styles: [\"empty-view\"],\r\n            visible: false\r\n        });\r\n\r\n        this._listView = this.view.addView(new ListView({\r\n            name: \"content\",\r\n            styles: this.listStyles,\r\n            template: \"ListViewInline\",\r\n            header: [this._emptyView],\r\n            itemsSource: new ItemsSource({\r\n                getItemsAsync: async () => {\r\n                    const searchText = this.searchText;\r\n                    const items = await this.searchWorkAsync(searchText);\r\n                    if (!searchText)\r\n                        this._lastItems = items;\r\n                    this.updateView(items?.length > 0, searchText);\r\n                    return items;\r\n                }\r\n            }),\r\n            itemsLoader: this.pageSize ? new PagedItemsLoader({\r\n                getFilter: (offset, pageSize) => this.getFilter(this.searchText, offset, pageSize),\r\n                pageSize: this.pageSize\r\n            }) : undefined,\r\n            createItemView: item => this.createItemView(item),\r\n            ...this.configureListView()\r\n        }));\r\n\r\n\r\n\r\n        setTimeout(() =>\r\n            this._searchView.hasFocus = true, 500);\r\n\r\n        await this.refreshAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateView(hasItems: boolean, searchText: string) {\r\n\r\n        if (!hasItems) {\r\n\r\n            this._emptyView.visible = true;\r\n\r\n            if (!this.searchText) {\r\n                this._emptyView.icon = \"fas fa-microscope\";\r\n                this._emptyView.text = \"\";\r\n            }\r\n            else {\r\n\r\n                this._emptyView.icon = \"far fa-sad-cry\";\r\n                if (this.noMatchingText)\r\n                    this._emptyView.text = Format.text(this.noMatchingText, searchText);\r\n            }\r\n        }\r\n        else\r\n            this._emptyView.visible = false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected configureListView() {\r\n\r\n        return <IListViewConfig<TItem, TItemView, any>>{};\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem): TItemView {\r\n        throw \"Not Implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected searchWorkAsync(query: string, offset?: number, pageSize?: number): Promise<TItem[]> {\r\n        throw \"Not Implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getFilter(query: string, offset?: number, pageSize?: number) {\r\n        return {}\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    searchText: string = null;\r\n\r\n    tooltip: string = null;\r\n\r\n    pageSize: number = 0;\r\n\r\n    listStyles: ViewStyle[] = [\"vertical\", \"scroll\", \"compact\"];\r\n\r\n    emptyView: IconTextView;\r\n\r\n    noMatchingText: LocalString = null;\r\n}\r\n\r\nregisterType(SearchActivity, \"SearchActivity\");","import { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport * as Hammer from \"hammerjs\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\ntype BottomSheetStatus = \"close\" | \"open\" | \"head\" | \"moving\";\r\n\r\n\r\n/********************************************/\r\n\r\nexport interface IBottomSheetConfig<TContent extends IView> extends IContentViewConfig<TContent> {\r\n\r\n    headHeight?: Bindable<number>;\r\n\r\n    isShowOpener?: Bindable<boolean>;\r\n\r\n    headSelector?: string;\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class BottomSheet<TContent extends IView = IView> extends ContentView<TContent> implements IHTMLAttach {\r\n\r\n    protected _element: HTMLElement;\r\n    protected _margin: number = 20;\r\n    private _isAnimating = 0;\r\n\r\n    /********************************************/\r\n\r\n    constructor(config?: IBottomSheetConfig<TContent>) {\r\n        super({ template: \"BottomSheet\", ...config });\r\n\r\n        this.bindConfig(\"headHeight\", config);\r\n\r\n        this.bindConfig(\"headSelector\", config);\r\n\r\n        this.bindConfig(\"isShowOpener\", config);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        this._element = element;\r\n\r\n        const hammer = new Hammer(element, {\r\n            recognizers: [[Hammer.Pan, { direction: Hammer.DIRECTION_VERTICAL }]]\r\n        });\r\n\r\n        let startHeight = 0;\r\n        let oldStatus = this.status;\r\n        let startScrollTop = 0;\r\n\r\n        hammer.on(\"panstart\", ev => {\r\n\r\n            oldStatus = this.status;\r\n            this.status = \"moving\";\r\n\r\n            startScrollTop = element.scrollTop;\r\n            startHeight = element.clientHeight;\r\n        });\r\n\r\n        hammer.on(\"panend\", ev => {\r\n\r\n            if (element.clientHeight < this.headHeight - this._margin)\r\n                this.close();\r\n            else {\r\n\r\n                if (oldStatus == \"open\") {\r\n                    if (ev.deltaY > this._margin && this._element.scrollTop <= 0)\r\n                        this.head();\r\n                    else\r\n                        this.open();\r\n                }\r\n                else {\r\n                    if (element.clientHeight > this.headHeight + this._margin)\r\n                        this.open();\r\n                    else\r\n                        this.head();\r\n                }\r\n            }\r\n        });\r\n\r\n        hammer.on(\"panmove\", ev => {\r\n\r\n            let deltaY = ev.deltaY;\r\n\r\n            //Scroll when is opened\r\n\r\n            if (oldStatus == \"open\") {\r\n                const newScrollTop = startScrollTop - deltaY;\r\n                if (deltaY < 0) {\r\n                    this._element.scrollTop = newScrollTop;\r\n                    return;\r\n                }\r\n                else {\r\n\r\n                    if (newScrollTop >= 0) {\r\n                        this._element.scrollTop = newScrollTop;\r\n                        return;\r\n                    }\r\n                    this._element.scrollTop = 0;\r\n                    deltaY = -newScrollTop;\r\n                }\r\n            }\r\n\r\n            //Oopen, close, head\r\n\r\n            let newHeight = startHeight - deltaY;\r\n            const panHeight = newHeight;\r\n            let enableScrolling = false;\r\n\r\n            if (newHeight < this._margin)\r\n                newHeight = 0;\r\n\r\n            else if (newHeight > (element.parentNode as HTMLElement).clientHeight - this._margin && newHeight < this._element.scrollHeight) {\r\n                newHeight = (element.parentNode as HTMLElement).clientHeight;\r\n                enableScrolling = true;\r\n            }\r\n\r\n            else if (newHeight > this._element.scrollHeight)\r\n                newHeight = this._element.scrollHeight;\r\n\r\n            else if (newHeight > this.headHeight - this._margin && newHeight < this.headHeight + this._margin)\r\n                newHeight = this.headHeight;\r\n\r\n            element.style.height = newHeight + \"px\";\r\n\r\n            //Scroll while opening\r\n\r\n            if (panHeight - newHeight > 0 && enableScrolling)\r\n                this._element.scrollTop = panHeight - newHeight;\r\n            else\r\n                this._element.scrollTop = 0;\r\n        });\r\n\r\n        switch (this.status) {\r\n            case \"head\":\r\n                this.head();\r\n                break;\r\n            case \"open\":\r\n                this.open();\r\n                break;\r\n            case \"close\":\r\n                this.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected async setHeightAsync(value: number) {\r\n\r\n        this._isAnimating++;\r\n\r\n        if (this._isAnimating == 1)\r\n            this._element.classList.add(\"animate\");\r\n\r\n        await delayAsync(0);\r\n\r\n        this._element.style.height = value.toString() + \"px\";\r\n\r\n        await delayAsync(500);\r\n\r\n        this._isAnimating--;\r\n\r\n        if (this._isAnimating == 0)\r\n            this._element.classList.remove(\"animate\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    toggle() {\r\n\r\n        if (this.status == \"open\" || this.status == \"close\")\r\n            this.head();\r\n        else\r\n            this.open();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    open() {\r\n\r\n        this.status = \"open\";\r\n\r\n        if (this._element)\r\n            this.setHeightAsync(this._element.scrollHeight);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    head() {\r\n\r\n        this.status = \"head\";\r\n\r\n        if (this._element) {\r\n\r\n            if (this.headSelector) {\r\n\r\n                const headEl = this._element.querySelector(this.headSelector);\r\n                if (headEl) {\r\n                    this.headHeight = headEl.clientHeight;\r\n                    if (this.isShowOpener)\r\n                        this.headHeight += this._element.querySelector(\".opener\").clientHeight;\r\n                }\r\n            }\r\n\r\n            this.setHeightAsync(this.headHeight);\r\n        }\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    close() {\r\n\r\n        this.status = \"close\";\r\n\r\n        if (this._element)\r\n            this.setHeightAsync(0);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    isShowOpener: boolean = false;\r\n\r\n    headHeight: number = 100;\r\n\r\n    headSelector: string = null;\r\n\r\n    status: BottomSheetStatus = \"close\";\r\n}\r\n\r\nregisterType(BottomSheet, \"BottomSheet\");","﻿import { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/RemovableItemView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IRemovableItemViewConfig<TItem, TView extends IView> extends IContentViewConfig<TView> {\r\n\r\n    item?: TItem;\r\n\r\n    removeAsync?: () => Promise<void>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class RemovableItemView<TItem, TView extends IView = any> extends ContentView<TView> {\r\n\r\n    constructor(config?: IRemovableItemViewConfig<TItem, TView>) {\r\n        super(config);\r\n\r\n        this.bindConfig(\"item\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.removeAsync)\r\n                this.removeWorkAsync = config.removeAsync;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async removeAsync(): Promise<void> {\r\n\r\n        this.status = \"removed\";\r\n        await delayAsync(150);\r\n        await this.removeWorkAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected removeWorkAsync(): Promise<void> {\r\n\r\n        throw \"Not supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    item: TItem = null;\r\n}\r\n\r\nregisterType(RemovableItemView, \"RemovableItemView\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ISelectable } from \"../Abstraction/ISelectable\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/SelectableItemView.html\";\r\n\r\nexport interface ISelectableItemViewConfig<TItem, TContent> extends IContentViewConfig<TContent> {\r\n\r\n    isSelected?: Bindable<boolean>;\r\n\r\n    item?: TItem;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SelectableItemView<TItem, TContent> extends ContentView<TContent> implements ISelectable {\r\n    constructor(config?: ISelectableItemViewConfig<TItem, TContent>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"isSelected\", config);\r\n\r\n        this.bindConfig(\"item\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select() {\r\n\r\n        this.isSelected = true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toggle() {\r\n\r\n        this.isSelected = !this.isSelected;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isSelected: boolean = false;\r\n\r\n    item: TItem = null;\r\n}\r\n\r\nregisterType(SelectableItemView, \"SelectableItemView\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/Container.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IContainerConfig<TContent> extends IContentViewConfig<TContent> {\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    isExpanded?: Bindable<boolean>;\r\n\r\n    canExpand?: boolean;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class Container<TContent = any> extends ContentView<TContent> implements IHTMLAttach {\r\n\r\n    protected _element: HTMLDivElement;\r\n\r\n    constructor(config?: IContainerConfig<TContent>) {\r\n        super({ template: \"Container\", ...config });\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfig(\"isExpanded\", config);\r\n\r\n        this.bindConfig(\"canExpand\", config);\r\n\r\n        this.prop(\"content\").subscribe(() => this.checkOverflow());\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        this._element = <HTMLDivElement>element;\r\n\r\n        if (this.canExpand) {\r\n            this._element.addEventListener(\"resize\", () => this.checkOverflow());\r\n            this.checkOverflow();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    checkOverflow() {\r\n        if (this._element != null) {\r\n            const wrapper = this._element.querySelector(\".content-wrapper\");\r\n            if (wrapper != null) {\r\n                this.isOverflow = wrapper.scrollHeight > wrapper.clientHeight;\r\n                if (!this.isOverflow)\r\n                    this.isExpanded = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    toggleExpand() {\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    title: string = \"\";\r\n\r\n    isOverflow: boolean = true;\r\n\r\n    canExpand: boolean = false;\r\n\r\n    isExpanded: boolean = true;\r\n}\r\n\r\n\r\nregisterType(Container, \"Container\");\r\n","import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority, IAction } from \"../Abstraction/IAction\";\r\nimport { IActivable } from \"../Abstraction/IActivable\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { IViewContent } from \"../Abstraction/IViewContent\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { IViewContentInfo } from \"../Abstraction/IViewContentInfo\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { Container } from \"../Components/Container\";\r\nimport { isActivable } from \"../Helpers/TypeCheck\";\r\n\r\nexport interface IItemEditContentConfig<TItem, TEdit> {\r\n\r\n    editor?: IItemEditor<TItem, TEdit>;\r\n\r\n    value?: TItem;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    actions?: IAction[];\r\n\r\n    url?: string;\r\n\r\n    saveLabel?: LocalString;\r\n\r\n    savePriority?: ActionPriority;\r\n\r\n    styles?: ViewStyle[];\r\n\r\n    saveOnCommit?: boolean;\r\n\r\n    saveItemAsync?: (item: TEdit) => Promise<TItem>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ItemEditContent<TItem, TEdit> extends BindableObject implements IViewContentProvider {\r\n\r\n    private _host: IViewContentHost;\r\n\r\n    constructor(config: IItemEditContentConfig<TItem, TEdit>) {\r\n        super();\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfig(\"value\", config);\r\n\r\n        this.bindConfig(\"styles\", config);\r\n\r\n        this.bindConfig(\"url\", config);\r\n\r\n        this.bindConfig(\"actions\", config);\r\n\r\n        this.bindConfig(\"savePriority\", config);\r\n\r\n        this.bindConfig(\"saveOnCommit\", config);\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfigString(\"saveLabel\", config, StringUsage.Action);\r\n\r\n        if (config) {\r\n            if (config.saveItemAsync)\r\n                this.saveItemAsync = config.saveItemAsync;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async getContentAsync(host: IViewContentHost) {\r\n\r\n        this._host = host;\r\n\r\n        await this.editor.beginEditAsync(this.value);\r\n\r\n        const container = new Container({\r\n            name: \"editor-container\",\r\n            title: this.title,\r\n            content: this.editor.view\r\n        });\r\n\r\n        if (isActivable(this.editor))\r\n            setTimeout(() => (this.editor as unknown as IActivable).activateAsync(), 200);\r\n\r\n        const actions: IAction[] = [];\r\n\r\n        if (this.saveOnCommit) {\r\n            this.editor.prop(\"value\").subscribe(value =>\r\n                this.saveAsync());\r\n        }\r\n        else {\r\n            actions.push({\r\n                name: \"save\",\r\n                icon: \"fas fa-save\",\r\n                displayName: this.saveLabel,\r\n                operation: OperationType.Global,\r\n                priority: this.savePriority,\r\n                executeAsync: () => this.saveAsync()\r\n            });\r\n        }\r\n\r\n        return {\r\n            views: [container],\r\n            actions: [...this.actions, ...actions],\r\n            styles: this.styles,\r\n            title: this.title,\r\n            url: this.url\r\n        } as IViewContent;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async saveItemAsync(item: TEdit): Promise<TItem> {\r\n\r\n        return item as unknown as TItem;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async saveAsync() {\r\n\r\n        //TODO check why it was needed before\r\n        //(App as IViewApplication).unblock(true);\r\n\r\n        if (this.saveOnCommit) {\r\n\r\n            if (!this.editor.isValid)\r\n                return;\r\n        }\r\n        else {\r\n\r\n            if (!await this.editor.commitAsync(true))\r\n                return;\r\n        }\r\n\r\n        const result = await this.saveItemAsync(this.editor.value);\r\n\r\n        if (result == null)\r\n            return;\r\n\r\n        await this._host.closeAsync(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    editor: IItemEditor<TItem, TEdit> = null;\r\n\r\n    title: string = null;\r\n\r\n    url: string = null;\r\n\r\n    value: TItem = null;\r\n\r\n    saveLabel: string = \"Save\";\r\n\r\n    saveOnCommit: boolean = false;\r\n\r\n    savePriority: ActionPriority = null;\r\n\r\n    actions: IAction[] = [];\r\n\r\n    styles: ViewStyle[] = [\"vertical\", \"scroll\", \"fill-h\", \"fit-items-h\"];\r\n\r\n    readonly info = {\r\n        name: \"item-edit\",\r\n        icon: \"fas fa-edit\",\r\n        displayName: \"Edit\",\r\n    } as IViewContentInfo;\r\n}","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\n\r\nexport interface IWebViewConfig extends IContentViewConfig<string> {\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class WebView extends ContentView<string> implements IHTMLAttach {\r\n\r\n    constructor(config?: IWebViewConfig) {\r\n\r\n        super({ template: \"WebView\", ...config });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLFrameElement): void {\r\n        this.window = element.contentWindow;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    window: Window;\r\n}\r\n\r\n\r\nregisterType(WebView, \"WebView\");","﻿import { App } from \"../../Core/Global\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { Uri } from \"../../Core/Helpers/Uri\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IMultiPageHost } from \"../Abstraction/IPageHost\";\r\nimport { IPageConfig, Page } from \"./Page\";\r\nimport { WebView } from \"./WebView\";\r\n\r\nexport interface IWebPageConfig extends IPageConfig<WebView> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class WebPage extends Page<WebView> {\r\n\r\n    constructor(config?: IWebPageConfig) {\r\n\r\n        super(config);\r\n\r\n        this.view = new WebView();\r\n        this.updateUrl();\r\n\r\n        this.prop(\"url\").subscribe(() => this.updateUrl());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateUrl() {\r\n        this.view.content = Uri.absolute(Format.replaceArgs(this.url, App.startupArgs));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected loadWorkAsync(): Promise<void> {\r\n\r\n        if (!this.view.window || this.view.window.document.readyState == \"complete\")\r\n            return Promise.resolve();\r\n\r\n        return new Promise((res, rej) => {\r\n\r\n            function onLoad(ev: Event) {\r\n                this.view.window.removeEventListener(\"load\", onLoad);\r\n                res();\r\n            }\r\n\r\n            function onError(ev: Event) {\r\n                this.view.window.removeEventListener(\"error\", onError);\r\n                rej();\r\n            }\r\n\r\n            this.view.window.addEventListener(\"load\", onLoad);\r\n            this.view.window.addEventListener(\"error\", onError);\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    refreshAsync(): Promise<void> {\r\n\r\n        if (!this.view.window)\r\n            return Promise.resolve();\r\n\r\n        return new Promise((res, rej) => {\r\n\r\n            function onLoad(ev: Event) {\r\n                this.view.window.removeEventListener(\"load\", onLoad);\r\n                res();\r\n            }\r\n\r\n            function onError(ev: Event) {\r\n                this.view.window.removeEventListener(\"error\", onError);\r\n                rej();\r\n            }\r\n\r\n            this.view.window.addEventListener(\"load\", onLoad);\r\n            this.view.window.addEventListener(\"error\", onError);\r\n\r\n            this.view.window.document.location.reload();\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async closeAsync() {\r\n\r\n        this.view.window.close();\r\n\r\n        if (\"goBackAsync\" in this.host)\r\n            await (this.host as IMultiPageHost).goBackAsync();\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nregisterType(WebPage, \"WebPage\");","﻿import { App } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IViewApplication } from \"../Abstraction/IViewApplication\";\r\nimport { IViewConfig, View } from \"./View\";\r\n\r\nexport interface IBasePopUpMessageConfig extends IViewConfig {\r\n    className?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport abstract class BasePopUpMessage extends View {\r\n\r\n    protected _container: HTMLElement;\r\n\r\n    protected _showResolve: (value: string) => void;\r\n\r\n    protected _isVisible = false;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: IBasePopUpMessageConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"className\", config);\r\n\r\n        this._container = document.createElement(\"DIV\");\r\n        this._container.className = this.className + \"-container\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync() {\r\n\r\n        if (this._isVisible)\r\n            return;\r\n\r\n        this._isVisible = true;\r\n\r\n        (App as IViewApplication).unblock(true);\r\n\r\n        const builder = new TemplateBuilder(this, this._container);\r\n\r\n        builder.template(this.template, a => a);\r\n\r\n        document.body.appendChild(this._container);\r\n\r\n        await delayAsync(0);\r\n\r\n        this._container.classList.add(\"visible\");\r\n\r\n        return new Promise<string>(res => this._showResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hide(actionName: string) {\r\n\r\n        if (!this._isVisible)\r\n            return;\r\n\r\n        this._isVisible = false;\r\n\r\n        (App as IViewApplication).restoreBlock();\r\n\r\n        this._container.classList.remove(\"visible\");\r\n\r\n        if (this._showResolve) {\r\n\r\n            this._showResolve(actionName);\r\n            this._showResolve = null;\r\n        }\r\n\r\n        setTimeout(() => {\r\n\r\n            if (!this._isVisible)\r\n                document.body.removeChild(this._container);\r\n\r\n        }, 500);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    className: string = null;\r\n}\r\n\r\n\r\nregisterType(BasePopUpMessage, \"BasePopUpMessage\");","import { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority, IAction } from \"../Abstraction/IAction\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { BasePopUpMessage, IBasePopUpMessageConfig } from \"./BasePopUpMessage\";\r\nimport { Panel } from \"./Panel\";\r\nimport \"Templates/PopUpContent.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\n\r\nexport interface IPopUpContentConfig extends IBasePopUpMessageConfig {\r\n\r\n    contentProvider?: IViewContentProvider;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    contentStyle?: ViewStyle[]\r\n\r\n    closeLabel?: LocalString;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class PopUpContent<TResult = any> extends BasePopUpMessage implements IViewContentHost {\r\n\r\n    protected _resultResolve: (value: TResult) => void;\r\n\r\n    constructor(config?: IPopUpContentConfig) {\r\n\r\n        super({ template: \"PopUpContent\", className: \"pop-up-content\", ...config });\r\n\r\n        this.bindConfig(\"contentProvider\", config);\r\n\r\n        this.bindConfig(\"contentStyle\", config);\r\n\r\n        this.bindConfigString(\"title\", config);\r\n\r\n        this.bindConfigString(\"closeLabel\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async createAsync() {\r\n\r\n        const viewContent = await this.contentProvider.getContentAsync(this);\r\n\r\n        if (this.closeLabel) {\r\n            this.addAction({\r\n                name: \"close\",\r\n                icon: \"fas fa-close\",\r\n                displayName: this.closeLabel,\r\n                executeAsync: () => this.closeAsync()\r\n            });\r\n        }\r\n\r\n        if (viewContent.actions) \r\n            viewContent.actions.forEach(a => this.addAction(a));\r\n\r\n        if (!this.title && viewContent.title)\r\n            this.title = Format.title(viewContent.title);\r\n\r\n        this.contentView.content.clear();\r\n\r\n        if (viewContent.views)\r\n            viewContent.views.forEach(a => this.contentView.addView(a));\r\n\r\n        this.contentView.styles = [...this.contentStyle, ...viewContent.styles];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get result(): Promise<TResult> {\r\n        return new Promise<TResult>(res => this._resultResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async openAsync() {\r\n\r\n        await this.createAsync();\r\n\r\n        await this.contentView.loadAsync();\r\n\r\n        this.showAsync(); //Not awaited\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notifyContentChanged(provider: IViewContentProvider) {\r\n\r\n        this.createAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    closeAsync(result?: any) {\r\n\r\n        if (this._resultResolve)\r\n            this._resultResolve(result);\r\n\r\n        this.hide(\"\");\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n\r\n        const actionView = ActionView.fromAction(action);\r\n\r\n        if (action.priority == ActionPriority.Evidence) {\r\n            actionView.styles.push(\"primary\");\r\n            actionView.buildStyles();\r\n        }\r\n\r\n        this.actions.add(actionView);\r\n\r\n        return actionView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    contentProvider: IViewContentProvider = null;\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    readonly contentView = new Panel();\r\n\r\n    title: string = null;\r\n\r\n    contentStyle: ViewStyle[] = [\"vertical\", \"fill-h\", \"fit-items-h\"];\r\n\r\n    closeLabel?: string = \"Cancel\";\r\n}\r\n\r\n\r\nregisterType(PopUpContent, \"PopUpContent\");","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { ActionPriority, IAction } from \"../Abstraction/IAction\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { PopUpContent } from \"../Components/PopUpContent\";\r\nimport { IItemEditContentConfig, ItemEditContent } from \"../Content/ItemEditContent\";\r\n\r\nexport interface IPopUpEditorConfig<TItem, TEdit> extends IItemEditContentConfig<TItem, TEdit> {\r\n\r\n    closeLabel?: LocalString;\r\n\r\n    editToItemAsync?: (edit: TEdit) => Promise<TItem>;\r\n\r\n    name?: string;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class PopUpEditor<TItem, TEdit = TItem> extends BindableObject implements IAsyncEditor<TItem, TEdit> {\r\n\r\n    constructor(config?: IPopUpEditorConfig<TItem, TEdit>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"name\", config);\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfig(\"actions\", config);\r\n\r\n        this.bindConfig(\"styles\", config);\r\n\r\n        this.bindConfig(\"saveOnCommit\", config);\r\n\r\n        this.bindConfig(\"savePriority\", config);\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfigString(\"closeLabel\", config, StringUsage.Action);\r\n\r\n        this.bindConfigString(\"saveLabel\", config, StringUsage.Action);\r\n\r\n        if (config) {\r\n\r\n            if (config.editToItemAsync)\r\n                this.editToItemAsync = config.editToItemAsync;\r\n        }\r\n\r\n        if (!this.closeLabel)\r\n            this.closeLabel = Format.action(\"cancel\");\r\n\r\n        if (!this.saveLabel)\r\n            this.saveLabel = Format.action(\"ok\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async editAsync(value: TItem, validate?: (edit: TEdit) => Promise<boolean|null>): Promise<TEdit> {\r\n\r\n        const popUp = new PopUpContent<TItem>({\r\n            title: this.title,\r\n            contentProvider: new ItemEditContent<TItem, TEdit>({\r\n                editor: this.editor,\r\n                value: value,\r\n                actions: this.actions,\r\n                styles: this.styles,\r\n                savePriority: this.savePriority,\r\n                saveOnCommit: this.saveOnCommit,\r\n                saveLabel: this.saveLabel,\r\n                saveItemAsync: async edit => {\r\n                    if (validate) {\r\n                        const valResult = await validate(edit);\r\n                        if (valResult == null)\r\n                            return null;\r\n                    }\r\n                    return await this.editToItemAsync(edit);\r\n                }\r\n            }),\r\n            closeLabel: this.closeLabel\r\n        });\r\n\r\n        const result = await (await popUp.openAsync()).result;\r\n\r\n        if (!result)\r\n            return null;\r\n\r\n        return this.editor.value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToItemAsync(edit: TEdit): Promise<TItem> {\r\n        return Promise.resolve(edit as unknown as TItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    editor: IItemEditor<TItem, TEdit> = null;\r\n\r\n    title: string = \"Edit\";\r\n\r\n    saveLabel?: string = null;\r\n\r\n    actions?: IAction[] = [];\r\n\r\n    savePriority: ActionPriority = null;\r\n\r\n    closeLabel: string = null;\r\n\r\n    saveOnCommit: boolean = false;\r\n\r\n    styles: ViewStyle[] = [];\r\n\r\n    name: string = null;\r\n}\r\n\r\nregisterType(PopUpEditor, \"PopUpEditor\");","﻿import { generateId } from \"../../Core/Utils/Identifier\";\r\nimport { getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { setEnumerable } from \"../../Templating/Functions\";\r\nimport { Bindable, IValueConverter } from \"../../Templating/Properties\";\r\nimport { EditorCommitMode, EditorStatus, IEditor } from \"../Abstraction/IEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IViewComponentConfig, ViewComponent } from \"../Components/ViewComponent\";\r\nimport { formatForCss } from \"../Helpers/ViewUtils\";\r\n\r\nexport type ValidationMode = \"onchanged\" | \"always\" | \"manual\";\r\n\r\nexport interface IBaseEditorConfig<TValue, TEdit = any> extends IViewComponentConfig {\r\n\r\n    allowNull?: boolean;\r\n\r\n    value?: Bindable<TValue>;\r\n\r\n    hasFocus?: Bindable<boolean>;\r\n\r\n    validationMode?: ValidationMode;\r\n\r\n    commitMode?: EditorCommitMode;\r\n\r\n    onCommit?: (editor: BaseEditor<TValue, any>) => boolean;\r\n\r\n    converter?: IValueConverter<TValue, TEdit>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport abstract class BaseEditor<TValue, TEdit = TValue> extends ViewComponent implements IEditor<TValue, TEdit>, IItemEditor<TValue, TValue> {\r\n\r\n    protected _needValidation: boolean = false;\r\n    protected _isEditing: number = 0;\r\n    protected _onCommit: (editor: this) => boolean;\r\n    protected _editValue: TEdit = null;\r\n\r\n    /********************************************/\r\n\r\n    constructor(config?: IBaseEditorConfig<TValue, TEdit>) {\r\n\r\n        super({ ...config });\r\n\r\n        //TODO: hack, props are not enumerable in ts 3.9\r\n        setEnumerable(this, \"editValue\");\r\n\r\n        this._onCommit = config?.onCommit;\r\n\r\n        this.bindConfig(\"allowNull\", config);\r\n\r\n        this.bindConfig(\"hasFocus\", config);\r\n\r\n        this.bindConfig(\"value\", config);\r\n\r\n        this.bindConfig(\"commitMode\", config);\r\n\r\n        this.bindConfig(\"validationMode\", config);\r\n\r\n        this.prop(\"displayValue\");\r\n\r\n        this.prop(\"value\").subscribe((value, old) =>\r\n            this.onValueChanged(value, old));\r\n\r\n        this.prop(\"name\").subscribe(() => this.updateUid());\r\n\r\n        if (config.converter) {\r\n            this.editToValue = config.converter.convertFrom;\r\n            this.valueToEdit = config.converter.convertTo;\r\n        }\r\n\r\n        this.updateUid();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected updateUid() {\r\n        this.uid = generateId(formatForCss(this.name ?? getTypeName(this)));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createEditValueProp() {\r\n\r\n        this.prop(\"editValue\").subscribe(() => this.notifyEditValueChangedAsync());\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async notifyEditValueChangedAsync() {\r\n\r\n        console.debug(\"value changed: \", this.debugName);\r\n\r\n        this._needValidation = true;\r\n\r\n        this.isDirty = true;\r\n\r\n        if (!this._isEditing) {\r\n\r\n            if (this.commitMode == \"onchange\")\r\n                await this.commitAsync();\r\n            else\r\n                await this.validateAsync();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onValueChanged(value: TValue, oldValue?: TValue) {\r\n\r\n        if (this.status == \"commiting\")\r\n            return;\r\n\r\n        this.beginEditAsync(value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n        this.value = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async loadAsync(): Promise<void> {\r\n\r\n        console.group(\"begin load: \", this.debugName, \" - status: \", this.status);\r\n\r\n        try {\r\n\r\n            if (this.status != \"none\")\r\n                return;\r\n\r\n            this.status = \"loading\";\r\n\r\n            try {\r\n\r\n                await this.loadAsyncWork();\r\n            }\r\n            finally {\r\n\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n        finally {\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearError() {\r\n        this.error = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected loadAsyncWork(): Promise<void> {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async beginEditAsync(value: TValue) {\r\n\r\n        if (this._isEditing)\r\n            return;\r\n\r\n        console.group(\"begin edit: \", this.debugName);\r\n\r\n        this._isEditing++;\r\n\r\n        try {\r\n\r\n            if (this.status == \"none\")\r\n                await this.loadAsync();\r\n\r\n            this.value = value;\r\n\r\n            this.editValue = this.valueToEdit(value);\r\n\r\n            await this.beginEditWorkAsync(value);\r\n\r\n            this._needValidation = true;\r\n        }\r\n        finally {\r\n            this._isEditing--;\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: TValue): TEdit {\r\n        return <any>value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: TEdit): TValue {\r\n        return <any>value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected beginEditWorkAsync(value: TValue) {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async validateAsync(force?: boolean): Promise<boolean> {\r\n\r\n\r\n        console.group(\"begin validation: \" + this.debugName, \" - needValidation: \", this._needValidation);\r\n\r\n        try {\r\n\r\n            if (this._isEditing)\r\n                return undefined;\r\n\r\n            if (!this._needValidation && this.validationMode == \"onchanged\" && !force)\r\n                return this.isValid;\r\n\r\n            this.clearError();\r\n\r\n            const validationResult = await this.validateAsyncWork(force);\r\n\r\n            if (validationResult !== undefined) {\r\n\r\n                this.isValid = validationResult;\r\n                this._needValidation = false;\r\n            }\r\n\r\n            console.debug(\"validation: \", this.debugName, \" = \", this.isValid);\r\n\r\n            return this.isValid;\r\n        }\r\n        finally {\r\n            console.groupEnd();\r\n        }\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected validateAsyncWork(force?: boolean): Promise<boolean> {\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async commitAsync(force?: boolean): Promise<boolean> {\r\n\r\n        console.group(\"begin commit: \", this.debugName, \" isDirty: \", this.isDirty, \" - status: \", this.status);\r\n        try {\r\n\r\n            if (this._isEditing)\r\n                return false;\r\n\r\n            if (!force && this.commitMode != \"manual\" && !this.isDirty)\r\n                return true;\r\n\r\n            if (this.status != \"loaded\")\r\n                return this.status == \"commiting\";\r\n\r\n            this.status = \"commiting\";\r\n\r\n            try {\r\n                if (!await this.validateAsync(force))\r\n                    return false;\r\n\r\n                if (!await this.commitAsyncWork(force))\r\n                    return false;\r\n\r\n                const newValue = this.editToValue(this.editValue);\r\n                if (newValue !== undefined)\r\n                    this.value = newValue;\r\n\r\n                if (this._onCommit)\r\n                    this._onCommit(this);\r\n\r\n                this.isDirty = false;\r\n\r\n                return true;\r\n            }\r\n            finally {\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n        finally {\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    activateAsync() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected commitAsyncWork(force?: boolean): Promise<boolean> {\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    rollback(): void {\r\n\r\n        this.editValue = this.valueToEdit(this.value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get view() {\r\n        return this;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get editValue() {\r\n        return this._editValue;\r\n    }\r\n\r\n    set editValue(value: TEdit) {\r\n        this._editValue = value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    isValid: boolean = true\r\n\r\n    status: EditorStatus = \"none\";\r\n\r\n    commitMode: EditorCommitMode = \"onchange\";\r\n\r\n    validationMode: ValidationMode = \"onchanged\";\r\n\r\n    allowNull: boolean = true;\r\n\r\n    displayValue: string = null;\r\n\r\n    value: TValue = null;\r\n\r\n    hasFocus: boolean = false;\r\n\r\n    isDirty: boolean = false;\r\n\r\n    uid: string = null;\r\n\r\n    error: string = null;\r\n}\r\n\r\nregisterType(BaseEditor, \"BaseEditor\");","﻿import { getBaseType, getType } from \"../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"./Abstraction/ITemplateProvider\";\r\nimport { Properties } from \"./Properties\";\r\nimport { TemplateBuilder } from \"./TemplateBuilder\";\r\n\r\nexport function model<T extends Object>(obj: T): T {\r\n    Properties.createAll(obj);\r\n    return obj;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function template<TModel>(root: HTMLElement, template: CatalogTemplate<TModel>, model: TModel) {\r\n\r\n    root.innerHTML = \"\";\r\n\r\n    const builder = new TemplateBuilder(model, root);\r\n\r\n    builder.begin();\r\n\r\n    builder.loadTemplate(template)(builder);\r\n\r\n    builder.end();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function setEnumerable<T>(obj: T, propName: keyof T) {\r\n    let curType = getType(obj); \r\n    while (true) {\r\n        const desc = Object.getOwnPropertyDescriptor(curType.prototype, propName);\r\n        if (desc) {\r\n            if (!desc.enumerable) {\r\n                desc.enumerable = true;\r\n                Object.defineProperty(obj, propName, desc);\r\n            }\r\n            return;\r\n        } \r\n        curType = getBaseType(curType);\r\n    }\r\n}","import { linq } from \"../../Core/Linq\";\r\nimport { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { PopUpEditor } from \"./PopupEditor\";\r\nimport { SelectableItemView } from \"../Components/SelectableItemView\";\r\nimport { ISelectableItemView } from \"../Abstraction/ISelectableItemView\";\r\n\r\nimport \"Templates/SingleItemSelector.html\";\r\nimport \"Templates/ItemSelector.html\";\r\n\r\n\r\nexport interface ISingleItemSelectorConfig<TItem, TValue> extends IBaseEditorConfig<TValue> {\r\n\r\n    itemsSource?: Bindable<ItemsSource<TItem, TValue>>;\r\n\r\n    items?: TItem[];\r\n\r\n    createItemView?: (item: TItem) => ISelectableItemView<TValue>;\r\n\r\n    placeholder?: Bindable<LocalString>;\r\n\r\n    emptyText?: LocalString;\r\n\r\n    itemTemplate?: CatalogTemplate<ISelectableItemView<TValue>>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SingleItemSelector<TItem, TValue> extends BaseEditor<TValue>  {\r\n\r\n    private _isSelecting: boolean;\r\n\r\n    constructor(config?: ISingleItemSelectorConfig<TItem, TValue>) {\r\n\r\n        super({ template: \"SelectEditor\", ...config });\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"itemTemplate\", config);\r\n\r\n        this.bindConfigString(\"placeholder\", config);\r\n\r\n        this.bindConfigString(\"emptyText\", config, StringUsage.Title);\r\n\r\n        if (config?.createItemView)\r\n            this.createItemViewWork = config?.createItemView;\r\n\r\n        if (config?.items) {\r\n\r\n            if (this.allowNull)\r\n                this.items.add(this.createEmptyItem());\r\n\r\n            config.items.forEach(a => this.items.add(this.createItemView(a)));\r\n\r\n            this.status = \"loaded\";\r\n        }\r\n\r\n        this.prop(\"selectedItem\").subscribe(async (value, oldValue) => {\r\n\r\n            if (this._isSelecting)\r\n                return;\r\n\r\n            if (!value && this.emptyText) {\r\n                this.selectedItemText = this.emptyText;\r\n                this.selectedItem = this.items.get(0);\r\n                return;\r\n            }\r\n\r\n            this._isSelecting = true;\r\n            try {\r\n                if (oldValue)\r\n                    oldValue.isSelected = false;\r\n\r\n                if (value)\r\n                    value.isSelected = true;\r\n\r\n                this.selectedIndex = this.items.indexOf(value);\r\n\r\n                if (this.itemsSource)\r\n                    this.selectedItemText = value?.content ?? \"\";\r\n\r\n                if (this.status != \"loading\")\r\n                    await this.notifyEditValueChangedAsync();\r\n\r\n            }\r\n            finally {\r\n                this._isSelecting = false;\r\n            }\r\n        });\r\n\r\n        this.prop(\"selectedIndex\").subscribe(value => {\r\n\r\n            if (value == -1 && this.emptyText) {\r\n                this.selectedIndex = 0;\r\n                return;\r\n            }\r\n\r\n            this.selectedItem = value == -1 ? null : this.items.get(value);\r\n\r\n            if (this.element?.tagName == \"SELECT\")\r\n                (this.element as HTMLSelectElement).selectedIndex = value;\r\n        });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n\r\n        this.element = element;\r\n\r\n        if (element.tagName == \"SELECT\") {\r\n\r\n            (this.element as HTMLSelectElement).selectedIndex = this.selectedIndex;\r\n\r\n            this.element.addEventListener(\"change\",\r\n                () => this.selectedIndex = (element as HTMLSelectElement).selectedIndex);\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async selectAsync() {\r\n        const editor = new PopUpEditor({\r\n\r\n            editor: new SingleItemSelector({\r\n                template: \"ItemSelectorList\",\r\n                itemsSource: this.itemsSource,\r\n                allowNull: false,\r\n                styles: [\"no-padding-items-h\"]\r\n            }),\r\n            saveOnCommit: true,\r\n            saveLabel: \"select\",\r\n            closeLabel: \"cancel\",\r\n            title: \"select-an-item\",\r\n            styles: [\"\"]\r\n        });\r\n\r\n        const result = await editor.editAsync(this.value)\r\n        if (result !== null)\r\n            this.editValue = result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    findItemByValue(value: TValue) {\r\n\r\n        if (this.itemsSource)\r\n            return linq(this.items).first(a => this.itemsSource.equals(a.item, value));\r\n        return linq(this.items).first(a => a.item == value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: TValue) {\r\n\r\n        if (this.editValue == value)\r\n            return;\r\n\r\n        if (value == null && this.emptyText)\r\n            this.selectedItem = this.items[0];\r\n        else\r\n            this.selectedItem = this.findItemByValue(value);\r\n    }\r\n\r\n    get editValue(): TValue {\r\n\r\n        return this.selectedItem?.item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async loadAsyncWork() {\r\n\r\n        if (this.itemsSource) {\r\n\r\n            this.items.clear();\r\n\r\n            if (this.allowNull)\r\n                this.items.add(this.createEmptyItem());\r\n\r\n            const items = await this.itemsSource.getItemsAsync(this.itemsSource.getFilter());\r\n            if (items)\r\n                items.forEach(a => this.items.add(this.createItemView(a)));\r\n        }\r\n\r\n        this.selectedIndex = 0;\r\n        this.isDirty = true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createEmptyItem() {\r\n\r\n        const result = new SelectableItemView({\r\n            item: null,\r\n            content: this.emptyText ?? \"\",\r\n            template: this.itemTemplate,\r\n            styles: [\"single\", \"checkbox\"]\r\n        });\r\n\r\n        result.prop(\"isSelected\").subscribe(value => {\r\n\r\n            if (value)\r\n                this.selectedItem = null\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemViewWork(item: TItem): ISelectableItemView<TValue> {\r\n\r\n        if (this.itemsSource)\r\n            return new SelectableItemView({\r\n                item: this.itemsSource.getItemValue(item),\r\n                content: this.itemsSource.getItemText(item),\r\n                template: this.itemTemplate,\r\n                styles: [\"single\", \"checkbox\"] \r\n            });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem) {\r\n\r\n        const itemView = this.createItemViewWork(item);\r\n\r\n        itemView.prop(\"isSelected\").subscribe(value => {\r\n\r\n            if (value)\r\n                this.selectedItem = itemView\r\n        });\r\n\r\n        return itemView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    itemTemplate: CatalogTemplate<ISelectableItemView<TValue>> = \"SelectableItemView\";\r\n\r\n    placeholder: string = null;\r\n\r\n    emptyText: string = null;\r\n\r\n    selectedItemText: string = null;\r\n\r\n    selectedItem: ISelectableItemView<TValue> = null;\r\n\r\n    selectedIndex: number = -1;\r\n\r\n    itemsSource: ItemsSource<TItem, TValue> = null;\r\n\r\n    readonly items: IObservableList<ISelectableItemView<TValue>> = observableListOf();\r\n}\r\n\r\n\r\nregisterType(SingleItemSelector, \"SingleItemSelector\");","import { App } from \"../../Core/Global\";\r\nimport { Type } from \"../../Core/Types/Types\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IPage } from \"../Abstraction/IPage\";\r\nimport { IPageLoadOptions } from \"../Abstraction/IPageHost\";\r\nimport { ISelectOptions } from \"../Abstraction/ISelectOptions\";\r\nimport { IViewApplication } from \"../Abstraction/IViewApplication\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ContentActivity, IContentActivitConfig } from \"../Activities/ContentActivity\";\r\nimport { WebPage } from \"../Components/WebPage\";\r\nimport { PopUpEditor } from \"../Editors/PopupEditor\";\r\nimport { SingleItemSelector } from \"../Editors/SingleItemSelector\";\r\nimport { ILocation } from \"../Types/Location\";\r\n\r\n\r\ninterface ISelectFileOptions {\r\n\r\n}\r\n\r\nexport const Actions: IActions = {} as IActions;\r\n\r\ndeclare global {\r\n\r\n    export interface IActions {\r\n\r\n        loadPageAsync<TPage extends IPage>(page: TPage, options?: IPageLoadOptions): Promise<TPage>;\r\n\r\n        go(url: string): Promise<void>;\r\n\r\n        content<TContent extends IViewContentProvider>(conetent: TContent | Type<TContent>, contentOptions?: Partial<IContentActivitConfig<ContentActivity>>, pageOptions?: IPageLoadOptions): Promise<ContentActivity>;\r\n\r\n        call(phoneNumber: string): Promise<void>;\r\n\r\n        email(email: string): Promise<void>;\r\n\r\n        webPage(url: string): Promise<WebPage>;\r\n\r\n        navigate(uri: string): Promise<void>;\r\n\r\n        facebookPage(pageId: string): Promise<void>;\r\n\r\n        selectFileAsync(options?: ISelectFileOptions): Promise<File>;\r\n\r\n        maps(location: ILocation, zoomLevel?: number): Promise<void>;\r\n\r\n        selectOptionAsync<TItem, TValue>(options: ISelectOptions<TItem, TValue>): Promise<TValue>;\r\n    }\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nActions.selectFileAsync = options => {\r\n\r\n    return new Promise<File>((res, rej) => {\r\n\r\n        const input = document.createElement(\"input\");\r\n\r\n        input.type = \"file\";\r\n\r\n        let isSelected = false;\r\n\r\n        input.onchange = () => {\r\n            isSelected = true;\r\n            res(input.files[0]);\r\n        }\r\n\r\n        input.click();\r\n\r\n        const handler = async () => {\r\n            window.removeEventListener(\"focus\", handler);\r\n            await delayAsync(500);\r\n            if (!isSelected || input.files.length == 0)\r\n                res(undefined);\r\n        };\r\n\r\n        window.addEventListener(\"focus\", handler);\r\n    });\r\n};\r\n\r\n/****************************************/\r\n\r\nActions.selectOptionAsync = async options => {\r\n\r\n    const editor = new PopUpEditor({\r\n\r\n        editor: new SingleItemSelector({\r\n            template: \"ItemSelectorList\",\r\n            itemsSource: options.itemsSource,\r\n            styles: [\"no-padding-items-h\"]\r\n        }),\r\n        saveOnCommit: options.saveOnCommit == undefined ? true : options.saveOnCommit,\r\n        saveLabel: options.saveLabel,\r\n        closeLabel: options.closeLabel,\r\n        title: options.title,\r\n        styles: options.styles\r\n    });\r\n\r\n    return await editor.editAsync(options.value)\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.loadPageAsync = async (page, options) => {\r\n\r\n    return await (App as IViewApplication).pageHost.loadAsync(page, options);\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.content = (content,  contentOptions, pageOptions) => {\r\n\r\n    const value = typeof content == \"function\" ? new content() : content;\r\n\r\n    const activity = new ContentActivity({\r\n        providers: [\r\n            value\r\n        ],\r\n        ...contentOptions\r\n    });\r\n    return Actions.loadPageAsync(activity, pageOptions);\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.go = url => {\r\n\r\n    window.location.href = url;\r\n    return Promise.resolve();\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.call = phoneNumber => {\r\n\r\n    window.location.href = \"tel:\" + phoneNumber;\r\n    return Promise.resolve();\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.email = email => {\r\n\r\n    window.location.href = \"mailto:\" + email;\r\n    return Promise.resolve();\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.webPage = url => {\r\n\r\n    return Actions.loadPageAsync(new WebPage({ url: url }));\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.navigate = uri => {\r\n\r\n    return new Promise((res, rej) => {\r\n        const newWindows = window.open(uri, \"_blank\");\r\n        newWindows.addEventListener(\"load\", ev => {\r\n            res();\r\n        });\r\n        newWindows.addEventListener(\"error\", ev => {\r\n            rej();\r\n        });\r\n    });\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.facebookPage = pageId =>  {\r\n\r\n    window.location.href = \"https://www.facebook.com/\" + pageId;\r\n    //window.location.href = \"fb://page/\" + pageId;\r\n    return Promise.resolve();\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.maps = (location, zoomLevel = 17) => {\r\n\r\n    if (location.position)\r\n        window.location.href = \"https://www.google.com/maps/search/?api=1&query=\" + location.position.latitude + \",\" + location.position.longitude;\r\n    //window.location.href = \"geo:\" + location.position.latitude + \",\" + location.position.longitude;\r\n    else\r\n        window.location.href = \"https://www.google.com/maps/search/?api=1&query=\" + encodeURIComponent(location.address);\r\n\r\n    return Promise.resolve();\r\n}","﻿import { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { ContentActivity } from \"../Activities/ContentActivity\";\r\nimport { ItemEditContent } from \"../Content/ItemEditContent\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\n\r\nexport interface IActivityEditorConfig<TItem, TEdit> {\r\n\r\n    editor: IItemEditor<TItem, TEdit>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    editToItemAsync?: (edit: TEdit) => Promise<TItem>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ActivityEditor<TItem, TEdit = TItem> extends BindableObject implements IAsyncEditor<TItem, TEdit> {\r\n\r\n    constructor(config?: IActivityEditorConfig<TItem, TEdit>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfigString(\"title\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.editToItemAsync)\r\n                this.editToItemAsync = config.editToItemAsync;\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async editAsync(value: TItem, validate?: (edit: TEdit) => Promise<boolean>): Promise<TEdit> {\r\n\r\n        const activity = new ContentActivity<TItem>({\r\n            providers: [new ItemEditContent<TItem, TEdit>({\r\n                editor: this.editor,\r\n                title: this.title,\r\n                value: value,\r\n                saveItemAsync: async edit => {\r\n                    if (validate) {\r\n                        const valResult = await validate(edit);\r\n                        if (valResult == null)\r\n                            return null;\r\n                    }\r\n                    return await this.editToItemAsync(edit);\r\n                }\r\n            })]\r\n        });\r\n\r\n        const result = await (await Actions.loadPageAsync(activity, { loadMode: \"add\" })).result;\r\n        if (result == null)\r\n            return null;\r\n\r\n        return this.editor.value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToItemAsync(edit: TEdit): Promise<TItem> {\r\n        return Promise.resolve(edit as unknown as TItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    editor: IItemEditor<TItem, TEdit> = null;\r\n\r\n    title: string = \"Edit\";\r\n}\r\n\r\n\r\nregisterType(ActivityEditor, \"ActivityEditor\");","﻿import { INamedContent } from \"../../Core/Abstraction/INamedContent\";\r\nimport { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { DynamicString, LocalString, StringUsage, WordNumber } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { BottomSheet } from \"../Components/BottomSheet\";\r\nimport { ItemsView } from \"../Components/ItemsView\";\r\nimport { RemovableItemView } from \"../Components/RemovableItemView\";\r\nimport { SelectableItemView } from \"../Components/SelectableItemView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { ActivityEditor } from \"../Editors/ActivityEditor\";\r\nimport { isAsyncEditor } from \"../Helpers/TypeCheck\";\r\nimport { EditableItemsSource } from \"../Items/EditableItemsSource\";\r\nimport { ISearchActivityConfig, SearchActivity } from \"./SearchActivity\";\r\n\r\nexport interface ISelectMultipleItemsActivityConfig<TItem, TValue, TFilter, TEdit> extends ISearchActivityConfig<TItem, SelectableItemView<TItem, IView>> {\r\n\r\n    itemsSource?: EditableItemsSource<TItem, TValue, TFilter, TEdit>;\r\n\r\n    filters?: INamedContent<TFilter>[];\r\n\r\n    createItemEditor?: () => IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit>;\r\n\r\n    createItemContentView?: (item: TItem) => IView;\r\n\r\n    createItemListView?: (item: TItem) => IView;\r\n\r\n    canAdd?: boolean;\r\n\r\n    addLabel?: LocalString;\r\n\r\n    emptyLabel?: LocalString;\r\n\r\n    selectedItems?: TItem[];\r\n\r\n    showEmptyItem?: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SelectMultipleItemsActivity<TItem, TValue, TFilter, TEdit = TItem> extends SearchActivity<TItem, SelectableItemView<TItem, IView>, TItem[]>   {\r\n\r\n    protected _bottomSheet: BottomSheet;\r\n    protected _emptyItem: SelectableItemView<TItem, IView>;\r\n\r\n\r\n    constructor(config?: ISelectMultipleItemsActivityConfig<TItem, TValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"canAdd\", config);\r\n\r\n        this.bindConfigString(\"emptyLabel\", config, StringUsage.Title);\r\n\r\n        this.bindConfig(\"showEmptyItem\", config);\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfigString(\"addLabel\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.createItemView)\r\n                this.createItemContentView = config.createItemContentView;\r\n\r\n            if (config.createItemListView)\r\n                this.createItemListView = config.createItemListView;\r\n\r\n            if (config.createItemEditor)\r\n                this.createItemEditor = config.createItemEditor;\r\n\r\n            if (config.filters)\r\n                this.filters.addRange(config.filters);\r\n\r\n            if (config.selectedItems)\r\n                this.setSelectedItems(config.selectedItems);\r\n\r\n            if (config.searchMode == \"client\") {\r\n                this.searchWorkAsync = async query => {\r\n\r\n                   if (!this._lastItems)\r\n                        this._lastItems = await this.itemsSource.getItemsAsync(this.getFilter(undefined));\r\n\r\n                    if (query) {\r\n                        query = query.toLowerCase();\r\n                        return linq(this._listView.items).where(a => {\r\n                            const text = this.itemsSource.getItemText(a).toLowerCase();\r\n                            return text && text.indexOf(query) != -1;\r\n                        }).toArray();\r\n                    }\r\n                    else\r\n                        return this._lastItems;\r\n                };\r\n            }\r\n        }\r\n\r\n        if (!config?.tooltip)\r\n            this.tooltip = DynamicString.get(\"select-item\")({ params: [this.itemsSource.displayName], number: WordNumber.Plural, usage: StringUsage.Tooltip });\r\n\r\n        if (!config?.addLabel)\r\n            this.addLabel = Format.action(\"new-item\", this.itemsSource.displayName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setSelectedItems(items: TItem[]) {\r\n\r\n        this.selectedItems.clear();\r\n\r\n        if (items) {\r\n            items.forEach(a =>\r\n                this.addSelection(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async createAsync() {\r\n\r\n        await super.createAsync();\r\n\r\n        this._actionBar.addAction({\r\n            name: \"confirm\",\r\n            icon: \"fas fa-check\",\r\n            displayName: \"confirm\",\r\n            executeAsync: () => this.confirmAsync(),\r\n            priority: ActionPriority.Primary\r\n        });\r\n\r\n        this._bottomSheet = new BottomSheet({\r\n            headHeight: 50,\r\n            content: new ItemsView({\r\n                styles: [\"padding\", \"horizontal-wrap\"],\r\n                content: this.selectedItems\r\n            })\r\n        });\r\n\r\n        this.view.addView(this._bottomSheet);\r\n\r\n        this.updateView();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async confirmAsync() {\r\n\r\n        await this.closeAsync(linq(this.selectedItems).select(a => a.item).toArray());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected configureListView() {\r\n\r\n        const header: IView[] = [];\r\n\r\n        if (this.canAdd)\r\n            header.push(ActionView.fromAction({\r\n                name: \"add-item\",\r\n                icon: \"fas fa-plus\",\r\n                operation: OperationType.Local,\r\n                executeAsync: () => this.addItemAsync(),\r\n                displayName: this.addLabel,\r\n            }));\r\n\r\n        if (this.showEmptyItem) {\r\n\r\n            this._emptyItem = new SelectableItemView({\r\n                content: new TextView({ content: this.emptyLabel }),\r\n                item: null,\r\n            });\r\n\r\n            this._emptyItem.toggle = () =>\r\n                this.closeAsync([]);\r\n\r\n            header.push(this._emptyItem);\r\n        }\r\n\r\n        const result = <any>{\r\n            header: header,\r\n            selectionMode: \"multiple\"\r\n        };\r\n\r\n        if (this.pageSize > 0)\r\n            result.itemsSource = this.itemsSource;\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected searchWorkAsync(query: string) {\r\n\r\n        return this.itemsSource.getItemsAsync(this.getFilter(query));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getFilter(query: string, offset?: number, pageSize?: number) {\r\n\r\n        let filter = this.itemsSource.getFilter(query, offset, pageSize);\r\n        if (this.filters.count == 1)\r\n            filter = { ...filter, ...this.filters.get(0).content };\r\n        return filter;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemListView(item: TItem): IView {\r\n        return new TextView({ content: this.itemsSource.getItemText(item) });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemContentView(item: TItem): IView {\r\n        return new TextView({ content: this.itemsSource.getItemText(item) });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemEditor(): IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem) {\r\n\r\n        const view = new SelectableItemView({\r\n            content: this.createItemListView(item),\r\n            item: item\r\n        });\r\n\r\n        view.prop(\"isSelected\").subscribe(value => this.updateSelection(view, item, value));\r\n\r\n        const exItem = this.findItem(item);\r\n\r\n        if (exItem != null)\r\n            view.isSelected = true;\r\n\r\n        return view;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateSelection(selView: SelectableItemView<TItem, IView>, item: TItem, isSelected: boolean) {\r\n\r\n        if (!isSelected)\r\n            this.removeSelection(item);\r\n        else\r\n            this.addSelection(item, selView);\r\n\r\n        this.updateView();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateView() {\r\n\r\n        if (this._bottomSheet) {\r\n            if (this.selectedItems.count > 0)\r\n                this._bottomSheet.open();\r\n            else\r\n                this._bottomSheet.close();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeSelection(item: TItem) {\r\n        const exItem = this.findItem(item);\r\n        if (exItem)\r\n            this.selectedItems.remove(exItem);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addSelection(item: TItem, selView?: SelectableItemView<TItem, IView>) {\r\n\r\n        const exItem = this.findItem(item);\r\n\r\n        if (exItem)\r\n            return;\r\n\r\n        const itemView = new RemovableItemView({\r\n            content: this.createItemContentView(item),\r\n            removeAsync: () => {\r\n\r\n                this.selectedItems.remove(itemView);\r\n\r\n                const selItem = this.findSelectable(item);\r\n                if (selItem)\r\n                    selItem.isSelected = false;\r\n\r\n                return Promise.resolve();\r\n            },\r\n            item: item\r\n        });\r\n\r\n        this.selectedItems.add(itemView);\r\n\r\n        return itemView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected findItem(item: TItem) {\r\n\r\n        return linq(this.selectedItems).first(a => this.itemsSource.itemComparer(a.item, item));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected findSelectable(item: TItem) {\r\n\r\n        return linq(this._listView.content).first(a => this.itemsSource.itemComparer(a.item, item));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async addItemAsync() {\r\n\r\n        const editor = this.createItemEditor();\r\n\r\n        let editValue: TEdit;\r\n\r\n        if (isAsyncEditor(editor))\r\n\r\n            editValue = await editor.editAsync(this.itemsSource.newItem());\r\n\r\n        else {\r\n            const activity = new ActivityEditor<TItem, TEdit>({\r\n                editor: editor,\r\n                title: this.addLabel\r\n            });\r\n\r\n            editValue = await activity.editAsync(this.itemsSource.newItem());\r\n        }\r\n\r\n        if (!editValue)\r\n            return;\r\n\r\n        const newItem = await this.itemsSource.addItemAsync(editValue);\r\n        if (!newItem)\r\n            return;\r\n\r\n        const itemView = this.createItemView(newItem);\r\n\r\n        itemView.isSelected = true;\r\n\r\n        this._listView.content.insert(0, itemView);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAdd: boolean = false;\r\n\r\n    showEmptyItem: boolean = false;\r\n\r\n    emptyLabel: string = \"[None]\";\r\n\r\n    itemsSource: EditableItemsSource<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    addLabel: string = \"Add New\";\r\n\r\n    filters:  IObservableList< INamedContent<TFilter>> = observableListOf();\r\n\r\n    readonly selectedItems: IObservableList<RemovableItemView<TItem>> = observableListOf();\r\n}\r\n\r\n\r\nregisterType(SelectMultipleItemsActivity, \"SelectMultipleItemsActivity\");","import { INamedContent } from \"../../Core/Abstraction/INamedContent\";\r\nimport { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { SelectableItemView } from \"../Components/SelectableItemView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { ActivityEditor } from \"../Editors/ActivityEditor\";\r\nimport { isAsyncEditor } from \"../Helpers/TypeCheck\";\r\nimport { EditableItemsSource } from \"../Items/EditableItemsSource\";\r\nimport { ISearchActivityConfig, SearchActivity } from \"./SearchActivity\";\r\n\r\nexport interface ISelectSingleItemActivityConfig<TItem, TValue, TFilter, TEdit> extends ISearchActivityConfig<TItem, IView> {\r\n\r\n    itemsSource?: EditableItemsSource<TItem, TValue, TFilter, TEdit>;\r\n\r\n    filters?: INamedContent<TFilter>[];\r\n\r\n    createItemEditor?: () => IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit>;\r\n\r\n    createItemContentView?: (item: TItem) => IView;\r\n\r\n    canAdd?: boolean;\r\n\r\n    addLabel?: LocalString;\r\n\r\n    selectedValue?: TValue;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SelectSingleItemActivity<TItem, TValue, TFilter, TEdit = TItem> extends SearchActivity<TItem, IView, TItem>    {\r\n\r\n    constructor(config?: ISelectSingleItemActivityConfig<TItem, TValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"canAdd\", config);\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"selectedValue\", config);\r\n\r\n        this.bindConfigString(\"addLabel\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.createItemContentView)\r\n                this.createItemContentView = config.createItemContentView;\r\n\r\n            if (config.createItemEditor)\r\n                this.createItemEditor = config.createItemEditor;\r\n\r\n            if (config.filters)\r\n                this.filters.addRange(config.filters);\r\n        }\r\n\r\n        if (!config?.tooltip)\r\n            this.tooltip = Format.tooltip(\"select-item\", this.itemsSource.displayName);\r\n\r\n        if (!config?.addLabel)\r\n            this.addLabel = Format.action(\"new-item\", this.itemsSource.displayName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async createAsync() {\r\n\r\n        await super.createAsync();\r\n\r\n        this._actionBar.addAction({\r\n            name: \"confirm\",\r\n            icon: \"fas fa-check\",\r\n            displayName: \"confirm\",\r\n            executeAsync: () => this.confirmAsync(),\r\n            priority: ActionPriority.Primary\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async confirmAsync() {\r\n\r\n        await this.closeAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected configureListView() {\r\n\r\n        const header: IView[] = [];\r\n\r\n        if (this.canAdd)\r\n            header.push(ActionView.fromAction({\r\n                name: \"add-item\",\r\n                icon: \"fas fa-plus\",\r\n                operation: OperationType.Local,\r\n                executeAsync: () => this.addItemAsync(),\r\n                displayName: this.addLabel\r\n            }));\r\n\r\n        const result = <any>{\r\n            header: header,\r\n        };\r\n\r\n        if (this.pageSize > 0)\r\n            result.itemsSource = this.itemsSource;\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected searchWorkAsync(query: string) {\r\n\r\n        return this.itemsSource.getItemsAsync(this.getFilter(query));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getFilter(query: string, offset?: number, pageSize?: number) {\r\n\r\n        let filter = this.itemsSource.getFilter(query, offset, pageSize);\r\n        if (this.filters.count == 1)\r\n            filter = { ...filter, ...this.filters.get(0).content };\r\n        return filter;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemContentView(item: TItem): IView {\r\n\r\n        return new TextView({ content: this.itemsSource.getItemText(item) });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemEditor(): IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem) {\r\n\r\n        const view = new SelectableItemView({\r\n            content: this.createItemContentView(item),\r\n            styles: [\"single\"],\r\n            item: item\r\n        });\r\n\r\n        if (this.itemsSource.equals(this.itemsSource.getItemValue(item), this.selectedValue))\r\n            view.isSelected = true;\r\n\r\n        view.prop(\"isSelected\").subscribe(value => {\r\n\r\n            if (value)\r\n                this.setSelectionAsync(item);\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setSelectionAsync(item: TItem) {\r\n\r\n        return this.closeAsync(item);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async addItemAsync() {\r\n\r\n        const editor = this.createItemEditor();\r\n\r\n        let editValue: TEdit;\r\n\r\n        if (isAsyncEditor(editor))\r\n\r\n            editValue = await editor.editAsync(this.itemsSource.newItem());\r\n\r\n        else {\r\n            const activity = new ActivityEditor<TItem, TEdit>({\r\n                editor: editor,\r\n                title: this.addLabel\r\n            });\r\n\r\n            editValue = await activity.editAsync(this.itemsSource.newItem());\r\n        }\r\n\r\n        if (!editValue)\r\n            return;\r\n\r\n        const newItem = await this.itemsSource.addItemAsync(editValue);\r\n\r\n        if (newItem)\r\n            await this.setSelectionAsync(newItem);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAdd: boolean = false;\r\n\r\n    itemsSource: EditableItemsSource<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    addLabel: string = \"Add New\";\r\n\r\n    filters: IObservableList<INamedContent<TFilter>> = observableListOf();\r\n\r\n    selectedValue: TValue = null;\r\n\r\n}\r\n\r\nregisterType(SelectSingleItemActivity, \"SelectSingleItemActivity\");","import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { View } from \"./View\";\r\nimport { ViewComponent } from \"./ViewComponent\";\r\n\r\ntype ConsoleMessageType = \"warn\" | \"log\" | \"info\" | \"trace\" | \"error\" | \"debug\";\r\n\r\nclass ConsoleItem extends View {\r\n\r\n    constructor(args?: any[]) {\r\n        super();\r\n        this.content = args;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected debugTypeName() {\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    content: any[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ConsoleMessageView extends ConsoleItem {\r\n\r\n    constructor(type: ConsoleMessageType, ...args: any[]) {\r\n        super(args)\r\n\r\n        this.type = type;\r\n        this.template = \"ConsoleMessageView\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    type: ConsoleMessageType;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ConsoleGroupView extends ConsoleItem {\r\n\r\n    constructor(...args: any[]) {\r\n        super(args)\r\n        this.template = \"ConsoleGroupView\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    items: IObservableList<ConsoleItem> = observableListOf();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ConsoleView extends ViewComponent {\r\n\r\n    private _oldConsole: Console;\r\n    private _groups: ConsoleGroupView[] = [];\r\n    private _activeGroup: ConsoleGroupView;\r\n    private _isCreated = false;\r\n\r\n    constructor() {\r\n\r\n        super({ template: \"ConsoleView\" });\r\n\r\n        this.root = new ConsoleGroupView();\r\n        this._activeGroup = this.root;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected debugTypeName() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    show() {\r\n        if (!this._isCreated) {\r\n            var builder = new TemplateBuilder(this, document.body);\r\n            builder.content(this);\r\n        }\r\n        this.visible = true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hide() {\r\n        this.visible = false;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    attach() {\r\n\r\n        if (this._oldConsole)\r\n            return;\r\n\r\n        this._oldConsole = <any>{};\r\n\r\n        for (const key in console)\r\n            this._oldConsole[key] = console[key];\r\n\r\n        console.log = (...args) => this.write(\"log\", args);\r\n        console.warn = (...args) => this.write(\"warn\", args);\r\n        console.info = (...args) => this.write(\"info\", args);\r\n        console.trace = (...args) => this.write(\"trace\", args);\r\n        console.error = (...args) => this.write(\"error\", args);\r\n        console.debug = (...args) => this.write(\"debug\", args);\r\n        console.clear = () => this.clear();\r\n        console.group = (...args) => this.group(args);\r\n        console.groupEnd = () => this.groupEnd();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach() {\r\n\r\n        if (!this._oldConsole)\r\n            return;\r\n\r\n        for (const key in console)\r\n            console[key] = this._oldConsole[key];\r\n        this._oldConsole = null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    write(logType: ConsoleMessageType, args: any[]) {\r\n\r\n        this._oldConsole[logType].apply(console, args);\r\n\r\n        this._activeGroup.items.add(new ConsoleMessageView(logType, args));\r\n\r\n        if (logType == \"error\")\r\n            this._activeGroup.items.add(new ConsoleMessageView(logType, new Error().stack));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    group(args: any[]) {\r\n\r\n        this._oldConsole.group.apply(console, args);\r\n\r\n        const newGroup = new ConsoleGroupView(args);\r\n        this._activeGroup.items.add(newGroup);\r\n        this._groups.push(newGroup);\r\n        this._activeGroup = newGroup;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    groupEnd() {\r\n\r\n        this._oldConsole.groupEnd.apply(console);\r\n\r\n        if (this._groups.length > 0)\r\n            this._activeGroup = this._groups.pop();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n        this._oldConsole.clear.apply(console);\r\n\r\n        this._groups = [];\r\n        this.root.items.clear();\r\n        this._activeGroup = this.root;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    root: ConsoleGroupView;\r\n}\r\n\r\nregisterType(ConsoleView, \"ConsoleView\");\r\n","﻿export interface ITimeFunction {\r\n    (time: number): number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IAnimateOptions {\r\n    duration: number;\r\n    timeFunction: ITimeFunction;\r\n    step: (time: number) => void;\r\n    stepTime: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport namespace Animation {\r\n\r\n    export function cubic(p0: number, p1: number, p2: number, p3: number): ITimeFunction {\r\n        return t =>\r\n            Math.pow(1 - t, 3) * p0 +\r\n            3 * Math.pow(1 - t, 2) * t * p1 +\r\n            3 * (1 - t) * Math.pow(t, 2) * p2 +\r\n            Math.pow(t, 3) * p3;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function linear(): ITimeFunction {\r\n        return t => t;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function animate(options: IAnimateOptions) {\r\n\r\n        let curTime = 0;\r\n\r\n        const handler = setInterval(() => {\r\n            if (curTime > options.duration)\r\n                curTime = options.duration;\r\n\r\n            options.step(options.timeFunction(curTime / options.duration));\r\n\r\n            if (curTime == options.duration)\r\n                clearInterval(handler);\r\n\r\n            curTime += options.stepTime;\r\n\r\n        }, options.stepTime);\r\n    }\r\n}","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { IPanelConfig, Panel } from \"./Panel\";\r\n\r\nexport interface IContentHostViewConfig<TProvider extends IViewContentProvider> extends IPanelConfig {\r\n\r\n    contentProvider?: Bindable<TProvider>;\r\n\r\n    actionTemplate?: CatalogTemplate<ActionView>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ContentHostView<TProvider extends IViewContentProvider = any> extends Panel implements IViewContentHost {\r\n\r\n    private _body: Panel;\r\n    private _actions: Panel;\r\n\r\n    constructor(config?: IContentHostViewConfig<TProvider>) {\r\n\r\n        super({\r\n            ...config\r\n        });\r\n\r\n        this.bindConfig(\"contentProvider\", config);\r\n\r\n        this.bindConfig(\"actionTemplate\", config);\r\n\r\n        this._body = new Panel({ name: \"body\" });\r\n\r\n        this._actions = new Panel({ name: \"actions\" });\r\n\r\n        this.addView(this._body);\r\n\r\n        this.addView(this._actions);\r\n\r\n        this._body.emptyView = this.emptyView;\r\n\r\n        this.emptyView = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async loadAsync() {\r\n\r\n        if (this.contentProvider) {\r\n\r\n            await this.closeAsync();\r\n\r\n            const content = await this.contentProvider.getContentAsync(this);\r\n\r\n            if (content.styles)\r\n                this._body.styles = content.styles;\r\n\r\n            this.name = this.contentProvider.info.name;\r\n\r\n            this.title = Format.title(content.title);\r\n\r\n            content.views.forEach(a => this._body.addView(a));\r\n\r\n            if (content.actions)\r\n                content.actions.forEach(a => this.addAction(a));\r\n\r\n            await super.loadAsync();\r\n\r\n            if (this.contentProvider.activateAsync)\r\n                await this.contentProvider.activateAsync();\r\n        }\r\n\r\n        this._actions.visible = this._actions.content.count > 0;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected addAction(action: IAction) {\r\n\r\n        this._actions.addView(ActionView.fromAction(action, { template: this.actionTemplate }));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    notifyContentChanged(provider: IViewContentProvider<this>) {\r\n\r\n        this.loadAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async closeAsync(result?: any) {\r\n\r\n        if (this.contentProvider?.deactivateAsync)\r\n            await this.contentProvider.deactivateAsync();\r\n\r\n        this._body.clear();\r\n\r\n        this._actions.clear();\r\n\r\n        this.title = null;\r\n\r\n        return true;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    title: string = null;\r\n\r\n    actionTemplate: CatalogTemplate<ActionView> = \"ActionButton\";\r\n\r\n    contentProvider: TProvider = null;\r\n}\r\n\r\nregisterType(ContentHostView, \"ContentHostView\");","import { Bindable } from \"../../Templating/Properties\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { Animation } from \"../Helpers/Animation\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ICounterViewConfig extends IContentViewConfig<number> {\r\n\r\n    value?: Bindable<number>;\r\n\r\n    title: Bindable<string>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class CounterView extends ContentView<number> {\r\n\r\n    constructor(config?: ICounterViewConfig) {\r\n        super({ template: \"CounterView\", ...config });\r\n\r\n        this.bindConfig(\"value\", config);\r\n        this.bindConfig(\"title\", config);\r\n\r\n        this.prop(\"value\").subscribe(() => this.animate());\r\n\r\n        if (this.value != null)\r\n            this.animate();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected animate() {\r\n\r\n        this.content = 0;\r\n\r\n        const duration = this.value / 200;\r\n\r\n        return Animation.animate({\r\n            timeFunction: Animation.linear(),// Animation.cubic(0.000, 0.610, 0.610, 0.795),\r\n            duration: isNaN(duration) || duration < 1 ? 1 : duration,\r\n            stepTime: 1 / 20,\r\n            step: t =>\r\n                this.content = Math.round(this.value * t)\r\n        });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    title: string = null;\r\n\r\n    value: number = 0;\r\n}\r\n\r\nregisterType(CounterView, \"CounterView\");","﻿import { IContext } from \"../../Core/Abstraction/IContext\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { IPopUpMenu } from \"../Abstraction/IPopUpMenu\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { IViewConfig, View } from \"./View\";\r\nimport \"Templates/Drawer.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { GestureType, IGestureData, IGestureListener } from \"../Abstraction/IGestureListener\";\r\n\r\nexport interface IDrawerGroupConfig {\r\n\r\n    label?: LocalString;\r\n\r\n    actions: IAction[];\r\n\r\n    icon?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDrawerConfig extends IViewConfig {\r\n\r\n    groups: IDrawerGroupConfig[];\r\n\r\n    header?: Bindable<IView>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport type DrawerStatus = \"hidden\" | \"visible\" | \"hiding\" | \"showing\";\r\n\r\n/****************************************/\r\n\r\nexport class DrawerGroup {\r\n\r\n    private _host: Drawer;\r\n\r\n    constructor(host: Drawer, config?: IDrawerGroupConfig) {\r\n        this._host = host;\r\n\r\n        if (config) {\r\n\r\n            this.label = Format.action(config.label);\r\n\r\n            config.actions.forEach(a =>\r\n                this.addAction(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n\r\n        const actionView = ActionView.fromAction(action, {\r\n            executeAsync: async () => {\r\n                this._host.hideAsync();\r\n                await action.executeAsync();\r\n            }\r\n        });\r\n\r\n        this.actions.add(actionView);\r\n\r\n        return actionView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    label: string = null;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Drawer extends View implements IPopUpMenu, IHTMLAttach, IGestureListener {\r\n\r\n    constructor(config?: IDrawerConfig) {\r\n        super({ template: \"Drawer\", ...config });\r\n\r\n        this.bindConfig(\"header\", config);\r\n\r\n        if (config) {\r\n            config.groups.forEach(a =>\r\n                this.addGroup(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onGesture(data: IGestureData) {\r\n\r\n        if (data.type == GestureType.SwipeLeft)\r\n            this.hideAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getGroup(label: LocalString) {\r\n\r\n        const labelTxt = Format.action(label);\r\n        return linq(this.groups).first(a => a.label == labelTxt);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addGroup(config: IDrawerGroupConfig) {\r\n\r\n        const group = new DrawerGroup(this, config);\r\n\r\n        this.groups.add(group);\r\n\r\n        return group;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n\r\n        element.addEventListener(\"click\", e => {\r\n\r\n            if (e.srcElement == e.currentTarget)\r\n                this.hideAsync();\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync(ctx?: IContext) {\r\n\r\n        this.status = \"showing\";\r\n\r\n        await delayAsync(0);\r\n\r\n        this.status = \"visible\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async hideAsync() {\r\n\r\n        this.status = \"hiding\";\r\n\r\n        await delayAsync(500);\r\n\r\n        if (this.status == \"hiding\")\r\n            this.status = \"hidden\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    status: DrawerStatus = \"hidden\";\r\n\r\n    header: IView = null;\r\n\r\n    readonly groups: IObservableList<DrawerGroup> = observableListOf();\r\n}\r\n\r\nregisterType(Drawer, \"Drawer\");","import { Http } from \"../../Core/Helpers/Http\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\nimport \"Templates/FileUploadView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport type FileStatus = \"empty\" | \"selected\" | \"uploading\" | \"uploaded\";\r\n\r\nexport interface IFileUploadViewConfig extends IViewComponentConfig {\r\n\r\n    onChanged?(): void;\r\n}\r\n\r\n/****************************************/\r\n/* FileViewModel                        */\r\n/****************************************/\r\n\r\nexport class FileUploadView extends ViewComponent {\r\n\r\n    private _input: HTMLInputElement;\r\n\r\n    constructor(config?: IFileUploadViewConfig) {\r\n\r\n        super(config);\r\n\r\n        this._input = document.createElement(\"input\");\r\n        this._input.type = \"file\";\r\n\r\n        this._input.addEventListener(\"change\", () => {\r\n\r\n            this.update();\r\n\r\n            if (config?.onChanged)\r\n                config.onChanged();\r\n        });\r\n\r\n        this.update();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected update() {\r\n\r\n        const file = this._input.files[0];\r\n\r\n        if (file) {\r\n            this.text = file.name;\r\n            this.status = \"selected\";\r\n        }\r\n        else {\r\n            this.text = \"Seleziona file\";\r\n            this.status = \"empty\";\r\n        }\r\n\r\n        this.isSelected = this._input.files[0] != null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select() {\r\n        this._input.click();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async uploadAsync<T>(url: string): Promise<T> {\r\n        this.status = \"uploading\";\r\n\r\n        const result = await Http.postBinaryAsync<T>(url, this._input.files[0], ev => {\r\n\r\n            this.progress = ev.loaded / ev.total;\r\n            return true;\r\n        });\r\n\r\n        this.status = \"uploaded\";\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get file() {\r\n        if (!this._input.files || this._input.files.length == 0)\r\n            return null;\r\n        return this._input.files[0];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    progress: number = 0;\r\n\r\n    text: string = null;\r\n\r\n    progressText: string = null;\r\n\r\n    status: FileStatus = \"empty\";\r\n\r\n    error: string = null;\r\n\r\n    isSelected: boolean = false;\r\n}\r\n\r\nregisterType(FileUploadView, \"FileUploadView\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { IListViewConfig, ListView } from \"./ListView\";\r\n\r\nexport interface IGridViewConfig<TItem, TView extends IView, TFilter extends {}> extends IListViewConfig<TItem, TView, TFilter> {\r\n\r\n    colsCount?: number;\r\n\r\n    rowsCount?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class GridView<TItem = any, TView extends IView = any, TFilter extends {} = any> extends ListView<TItem, TView, TFilter> {\r\n\r\n    constructor(config?: IGridViewConfig<TItem, TView, TFilter>) {\r\n\r\n        super({ styles: [\"grid\"], ...config });\r\n\r\n        this.bindConfig(\"colsCount\", config); \r\n\r\n        this.bindConfig(\"rowsCount\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    colsCount: number = 0;\r\n\r\n    rowsCount: number = 0;\r\n}\r\n\r\nregisterType(GridView, \"GridView\");","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { ContentActivity } from \"../Activities/ContentActivity\";\r\nimport { MessageBox } from \"../Components/MessageBox\";\r\nimport { Toast } from \"../Components/Toast\";\r\nimport { MessageContent } from \"../Content/MessageContent\";\r\nimport { Actions } from \"./Actions\";\r\n\r\nexport type MessageAction = \"yes\" | \"no\" | \"cancel\" | \"retry\" | \"ok\" | \"abort\";\r\n\r\nexport interface IMessageOptions {\r\n\r\n    message: LocalString,\r\n\r\n    title: LocalString;\r\n\r\n    icon?: string;\r\n\r\n    actions?: MessageAction[];\r\n\r\n    customActions?: IAction[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport namespace Interaction {\r\n\r\n    export async function showMessageAsync(options: IMessageOptions): Promise<MessageAction | string> {\r\n\r\n        const msgActions = options.actions ?? (options.customActions ? [] : [\"ok\"]);\r\n\r\n        const msgBox = new MessageBox({ message: options.message, icon: options.icon, title: options.title });\r\n\r\n        msgActions.forEach(a => {\r\n\r\n            msgBox.addAction({\r\n                name: a,\r\n                displayName: Format.action(a),\r\n                executeAsync: () => Promise.resolve()\r\n            })\r\n        })\r\n\r\n        if (options.customActions)\r\n            options.customActions.forEach(a => msgBox.addAction(a));\r\n\r\n        const result = await msgBox.showAsync();\r\n\r\n        return <MessageAction>result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export async function confirmAsync(message: LocalString): Promise<boolean> {\r\n        const result = await showMessageAsync({\r\n            message: message,\r\n            title: \"confirm\",\r\n            actions: [\"yes\", \"no\"]\r\n        });\r\n        return result == \"yes\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function info(message: LocalString) {\r\n\r\n        const toast = new Toast({ message: message });\r\n\r\n        toast.showAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function warning(message: LocalString) {\r\n\r\n        const toast = new Toast({ message: message, styles: [\"warning\"] });\r\n\r\n        toast.showAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function error(message: LocalString) {\r\n\r\n        const toast = new Toast({ message: message, styles: [\"error\"], icon: \"fas fa-exclamation\" });\r\n\r\n        toast.showAsync();\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    export async function succeed(message: IMessageOptions) {\r\n\r\n        const page = await Actions.loadPageAsync(new ContentActivity<string>({\r\n            providers: [new MessageContent({\r\n                icon: \"far fa-smile\",\r\n                customActions: [{\r\n                    name: \"close\",\r\n                    displayName: \"close\",\r\n                    executeAsync: () => Promise.resolve(),\r\n                }],\r\n                ...message\r\n            })],\r\n            name: \"message\"\r\n        }));\r\n\r\n        return await page.result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export async function fail(message: IMessageOptions) {\r\n\r\n        const page = await Actions.loadPageAsync(new ContentActivity<string>({\r\n            providers: [new MessageContent({\r\n                icon: \"far fa-sad-tear\",\r\n                customActions: [{\r\n                    name: \"close\",\r\n                    displayName: \"close\",\r\n                    executeAsync: () => Promise.resolve(),\r\n                }], ...message\r\n            })],\r\n            name: \"message\"\r\n        }));\r\n\r\n        return await page.result;\r\n    }\r\n}","﻿import { ISectionsViewConfig, SectionsView } from \"../Components/SectionsView\";\r\n\r\nexport namespace Components {\r\n\r\n    export function sections(config: ISectionsViewConfig) {\r\n        return new SectionsView(config);\r\n    }\r\n}","﻿import { IEditor } from \"../Abstraction/IEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { BooleanEditor, IBooleanEditorConfig } from \"../Editors/BooleanEditor\";\r\nimport { DateEditorCombo, IDateEditorComboConfig } from \"../Editors/DateEditorCombo\";\r\nimport { ItemEditorConverter } from \"../Editors/ItemEditorConverter\";\r\nimport { IItemsEditorConfig, ItemsEditor } from \"../Editors/ItemsEditor\";\r\nimport { INumberEditorConfig, NumberEditor } from \"../Editors/NumberEditor\";\r\nimport { IObjectEditorConfig, ObjectEditor } from \"../Editors/ObjectEditor\";\r\nimport { RichTextEditor } from \"../Editors/RichTextEditor\";\r\nimport { ISingleItemSelectorConfig, SingleItemSelector } from \"../Editors/SingleItemSelector\";\r\nimport { ITextEditorConfig, TextEditor } from \"../Editors/TextEditor\";\r\n\r\nexport namespace Editors {\r\n\r\n    export function richText() {\r\n\r\n        return new RichTextEditor();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function currency() {\r\n        return new NumberEditor({\r\n            allowNull: false,\r\n            min: 0.01,\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function converter<TItem, TEdit>(editor: IEditor<TEdit, any>, itemToEdit: (item: TItem) => TEdit, editToItem?: (item: TItem, editValue: TEdit) => void): IItemEditor<TItem, TEdit> {\r\n\r\n        return new ItemEditorConverter({\r\n            editor: editor,\r\n            editToItem: editToItem,\r\n            itemToEdit: itemToEdit\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function items<TItem, TValue, TUpdate, TCreate>(config?: IItemsEditorConfig<TItem, TValue, TUpdate, TCreate>) {\r\n\r\n        return new ItemsEditor({ ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function text(config?: ITextEditorConfig) {\r\n        return new TextEditor({ ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function textMultiLine(config?: ITextEditorConfig) {\r\n\r\n        return new TextEditor({ template: \"TextEditorMultiLine\", ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function number(config?: INumberEditorConfig) {\r\n        return new NumberEditor({ ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function boolean(config?: IBooleanEditorConfig) {\r\n        return new BooleanEditor({ ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function password(config?: ITextEditorConfig) {\r\n        return new TextEditor({ template: \"PasswordEditor\", ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function object<TObj extends {}>(config?: IObjectEditorConfig<TObj>) {\r\n        return new ObjectEditor(config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function address(config?: ITextEditorConfig) {\r\n        return new TextEditor({ template: \"TextEditorMultiLine\", ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function birthDate(minAge?: number, config?: IDateEditorComboConfig) {\r\n        return new DateEditorCombo({ maxYear: new Date().getFullYear() - (minAge ?? 0), minYear: new Date().getFullYear() - 100 });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function singleItemSelector<TItem, TValue>(config: ISingleItemSelectorConfig<TItem, TValue>) {\r\n\r\n        return new SingleItemSelector(config);\r\n    }\r\n}","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/HeadedContentView.html\";\r\n\r\nexport interface IHeadedContentViewConfig<TContent, THeader> extends IContentViewConfig<TContent> {\r\n\r\n    header?: Bindable<THeader>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class HeadedContentView<TContent, THeader> extends ContentView<TContent> {\r\n\r\n    constructor(config?: IHeadedContentViewConfig<TContent, THeader>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"header\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    header: THeader = null;\r\n\r\n    headerTemplate: CatalogTemplate<THeader> = null;\r\n}\r\n\r\nregisterType(HeadedContentView, \"HeadedContentView\");","﻿import { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/HtmlView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport class HtmlView extends ContentView<string> {\r\n\r\n    constructor(config?: IContentViewConfig<string>) {\r\n\r\n        super({ template: \"Html\", ...config });\r\n    }\r\n}\r\n\r\nregisterType(HtmlView, \"HtmlView\");","﻿import { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\n\r\nimport \"Templates/ImageView.html\";\r\nimport { loadImageAsync } from \"../Helpers/ImageLoade\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IImageViewConfig extends IContentViewConfig<string> {\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ImageView extends ContentView<string> implements IAsyncLoad {\r\n\r\n    constructor(config?: IImageViewConfig) {\r\n\r\n        super({ template: \"Image\", ...config });\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    loadAsync() {\r\n\r\n        if (this.content)\r\n            return loadImageAsync(this.content);\r\n        return Promise.resolve();\r\n    }\r\n}\r\n\r\nregisterType(ImageView, \"ImageView\");","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\n\r\nexport function loadImageAsync(src: string): Promise<HTMLImageElement> {\r\n\r\n    const op = Services.operation.begin({ message: \"Loading image: \" + src.substring(0, 50), type: OperationType.Local });\r\n\r\n    return new Promise((res, rej) => {\r\n\r\n        const img = document.createElement(\"img\");\r\n\r\n        img.addEventListener(\"load\", () => {\r\n            res(img);\r\n            op.end()\r\n        });\r\n\r\n        img.addEventListener(\"error\", ev => {\r\n            rej(ev?.error);\r\n            op.end();\r\n        });\r\n\r\n        img.src = src;\r\n\r\n    });\r\n}","import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IItemAction } from \"../Abstraction/IItemAction\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { ContextMenu } from \"./ContextMenu\";\r\nimport { IPanelConfig, Panel } from \"./Panel\";\r\nimport { View } from \"./View\";\r\nimport \"Templates/ItemView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IItemViewConfig<TItem> extends IPanelConfig {\r\n\r\n    item?: Bindable<TItem>;\r\n\r\n    actions?: IItemAction<TItem>[];\r\n\r\n    itemTemplate?: CatalogTemplate<ItemView<TItem>>;\r\n\r\n    canOpen?: Bindable<boolean>;\r\n\r\n    open?(): void;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ItemView<TItem> extends Panel {\r\n\r\n    protected _otherAction: ActionView;\r\n\r\n    constructor(config: IItemViewConfig<TItem>) {\r\n        super({ template: \"ItemView\", ...config });\r\n\r\n        this.bindConfig(\"item\", config);\r\n\r\n        this.bindConfig(\"canOpen\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.open)\r\n                this.openWork = config.open;\r\n\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n\r\n            if (config.itemTemplate)\r\n                this.content.add(new View({ template: t => t.template(config.itemTemplate, this) }));\r\n        }\r\n\r\n        this.computed(\"hasActions\",\r\n            m => linq(m.contextActions).any(a => a.visible));\r\n\r\n        this.create();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IItemAction<TItem>) {\r\n\r\n        const view = ActionView.fromItemAction(action, () => this.item);\r\n\r\n        if (action.priority == ActionPriority.Primary) {\r\n            if (this.mainActions.length >= 3) {\r\n\r\n                if (!this._otherAction) {\r\n\r\n                    this._otherAction = ActionView.fromAction({\r\n                        name: \"other\",\r\n                        icon: \"fas fa-ellipsis-h\",\r\n                        operation: OperationType.Local,\r\n                        executeAsync: () => Promise.resolve()\r\n                    });\r\n                    this._otherAction.subActions.add(this.mainActions.pop());\r\n                    this.mainActions.push(this._otherAction);\r\n                }\r\n\r\n                this._otherAction.subActions.add(view);\r\n            }\r\n            else\r\n                this.mainActions.push(view);\r\n        }\r\n        else {\r\n            this.contextActions.push(view);\r\n            this.prop(\"hasActions\").notifyChanged();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    create() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    open() {\r\n        if (this.canOpen)\r\n            this.openWork();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected openWork() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    showMenu() {\r\n\r\n        const menu = new ContextMenu();\r\n        this.contextActions.forEach(a => menu.actions.add(a));\r\n        menu.showAsync(window.event.srcElement as HTMLElement);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    item: TItem = null;\r\n\r\n    contextActions: ActionView[] = [];\r\n\r\n    mainActions: ActionView[] = [];\r\n\r\n    status: string = null;\r\n\r\n    canOpen: boolean = false;\r\n\r\n    hasActions: boolean = null;\r\n}\r\n\r\n\r\nregisterType(ItemView, \"ItemView\");","import { Services } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\nimport { ILocation } from \"../Types/Location\";\r\nimport { ISize } from \"../Types/Size\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\n\r\nexport interface ILocationViewConfig extends IContentViewConfig<ILocation> {\r\n\r\n    mapSize?: ISize;\r\n\r\n    zoomLevel?: number;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class LocationView extends ContentView<ILocation>  {\r\n\r\n    constructor(config?: ILocationViewConfig) {\r\n        super({ template: \"LocationView\", ...config });\r\n\r\n        if (config) {\r\n\r\n            if (config.mapSize)\r\n                this.mapSize = config.mapSize;\r\n\r\n            if (config.zoomLevel)\r\n                this.zoomLevel = config.zoomLevel;\r\n        }\r\n\r\n        this.updateAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n        this.updateAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    showMap() {\r\n        Actions.maps(this.content);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async updateAsync(): Promise<void> {\r\n\r\n        const manager = Services.mapManager();\r\n        let pos = this.content.position;\r\n\r\n        if (!pos)\r\n            pos = await manager.getLocationAsync(this.content.address);\r\n\r\n        this.map = manager.staticMap({\r\n            center: pos,\r\n            size: this.mapSize,\r\n            zoomLevel: this.zoomLevel,\r\n            pins: [{\r\n                center: pos,\r\n                icon: 113,\r\n                name: this.content.name\r\n            }]\r\n        });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    map: string;\r\n\r\n    mapSize: ISize = { width: 1280, height: 720 };\r\n\r\n    zoomLevel: number = 16;\r\n}\r\n\r\nregisterType(LocationView, \"LocationView\");","﻿import { TimeSpan } from \"./TimeSpan\";\r\n\r\nexport class Signal {\r\n\r\n    private _waitHandlers: ((res: boolean) => void)[] = [];\r\n    private _isSet: boolean;\r\n    private _autoReset: boolean;\r\n\r\n    /****************************************/\r\n\r\n    constructor(isSet: boolean = false, autoReset = true) {\r\n        this._isSet = isSet;\r\n        this._autoReset = autoReset;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set() {\r\n        this._isSet = true;\r\n        for (let i = this._waitHandlers.length - 1; i >= 0; i--)\r\n            this._waitHandlers[i](true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset() {\r\n        this._isSet = false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    waitFor(timeout?: TimeSpan): Promise<boolean> {\r\n\r\n        if (this._isSet) {\r\n            if (this._autoReset && this._waitHandlers.length == 0)\r\n                this.reset();\r\n            return Promise.resolve(true);\r\n        }\r\n\r\n        return new Promise((res) => {\r\n\r\n            const handler = isSuccess => {\r\n                res(isSuccess);\r\n                const index = this._waitHandlers.indexOf(handler);\r\n                if (index != -1)\r\n                    this._waitHandlers.splice(index, 1);\r\n                if (this._waitHandlers.length == 0 && this._autoReset)\r\n                    this.reset();\r\n            };\r\n\r\n            if (timeout) {\r\n                setTimeout(() => {\r\n                    const index = this._waitHandlers.indexOf(handler);\r\n                    if (index != -1) {\r\n                        this._waitHandlers.splice(index, 1);\r\n                        res(false);\r\n                    }\r\n                }, timeout.totalMilliseconds);\r\n            }\r\n\r\n\r\n            this._waitHandlers.push(handler);\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get isSet() {\r\n        return this._isSet;\r\n    }\r\n}","import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { Signal } from \"../../Core/Types/Signal\";\r\nimport { get, registerType, set } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { ICreateMapItemOptions, IMapItem, IMapManager } from \"../Abstraction/IMapManager\";\r\nimport { ISingleItemSelector } from \"../Abstraction/ISingleItemSelector\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\n\r\nexport interface IMapItemsViewConfig<TItem extends object, TFilter> extends IItemsViewConfig<TItem> {\r\n\r\n    manager?: IMapManager;\r\n\r\n    onItemSelected?: (item: TItem) => void;\r\n\r\n    createMapItem?: (item: TItem) => ICreateMapItemOptions;\r\n\r\n    itemsSource?: ItemsSource<TItem, TItem, TFilter>\r\n\r\n    showCurrentPosition?: Bindable<boolean>;\r\n}\r\n\r\n/********************************************/\r\n\r\ntype ItemsMapViewStatus = \"\" | \"loading\";\r\n\r\n/********************************************/\r\n\r\nexport class MapItemsView<TItem extends object, TFilter = any> extends ItemsView<TItem> implements IHTMLAttach, ISingleItemSelector<TItem> {\r\n\r\n    private _manager: IMapManager;\r\n\r\n    /********************************************/\r\n\r\n    constructor(config?: IMapItemsViewConfig<TItem, TFilter>) {\r\n        super({ template: \"Attach\", ...config });\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"showCurrentPosition\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.manager)\r\n                this._manager = config.manager;\r\n\r\n            if (config.createMapItem)\r\n                this.createMapItem = config.createMapItem;\r\n        }\r\n\r\n        if (!this._manager)\r\n            this._manager = Services.mapManager();\r\n\r\n        this.prop(\"selectedItem\").subscribe(value => {\r\n            if (!value)\r\n                this._manager.selectedItem = null;\r\n            else\r\n                this._manager.selectedItem = value[\"@mapItem\"];\r\n\r\n            if (config && config.onItemSelected)\r\n                config.onItemSelected(value as TItem);\r\n        });\r\n\r\n        this._manager.onSelectionChanged = () => {\r\n            if (this._manager.selectedItem)\r\n                this.selectedItem = this._manager.selectedItem[\"@item\"];\r\n            else\r\n                this.selectedItem = null;\r\n        };\r\n\r\n\r\n        this.prop(\"showCurrentPosition\").subscribe(value => {\r\n            this.manager.showCurrentPositionAsync(value);\r\n        })\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadItemsAsync(filter?: TFilter): Promise<void> {\r\n\r\n        if (!this.itemsSource)\r\n            return;\r\n\r\n        this.beginUpdate();\r\n\r\n        this.content.clear();\r\n\r\n        this.status = \"loading\";\r\n        const operation = Services.operation.begin({ message: \"Loading items\", type: OperationType.Local });\r\n        try {\r\n\r\n            const items = await this.itemsSource.getItemsAsync(filter);\r\n\r\n            if (items)\r\n                items.forEach(a => this.content.add(a));\r\n\r\n            if (this.mapReady.isSet)\r\n                this.initItems();\r\n        }\r\n        finally {\r\n            operation.end();\r\n            this.status = \"\";\r\n            this.endUpdate();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        Services.operation.progress(\"Map attacched\");\r\n\r\n        if (this._manager)\r\n            this._manager.attach(element);\r\n\r\n        this.mapReady.set();\r\n\r\n        if (this.status != \"loading\")\r\n            this.initItems();\r\n\r\n        this._manager.showCurrentPositionAsync(this.showCurrentPosition);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected initItems() {\r\n\r\n        const mapOptions = linq(this.content).select(a => this.createMapItem(a)).toArray();\r\n        const mapItems = this._manager.addItems(mapOptions);\r\n\r\n        for (let i = 0; i < mapItems.length; i++) {\r\n            set(this.content.get(i), \"@mapItem\", mapItems[i]);\r\n            set(mapItems[i], \"@item\", this.content.get(i));\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createMapItem(item: TItem): ICreateMapItemOptions {\r\n        return undefined;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemAdded(item: TItem) {\r\n\r\n        if (!this.mapReady.isSet)\r\n            return;\r\n\r\n        const options = this.createMapItem(item);\r\n\r\n        if (!options.location || isNaN(options.location.latitude) || isNaN(options.location.longitude)) {\r\n            console.warn(\"Invalid location for \" + options.title);\r\n            return;\r\n        }\r\n\r\n        const mapItem = this._manager.addItems([options]);\r\n\r\n        set(item, \"@mapItem\", mapItem);\r\n        set(mapItem, \"@item\", item);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemRemoved(item: TItem) {\r\n\r\n        if (!this.mapReady.isSet)\r\n            return;\r\n        const mapItem = get<IMapItem>(item, \"@mapItem\");\r\n        if (mapItem)\r\n            this._manager.removeItem(mapItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    itemsSource: ItemsSource<TItem, TItem, TFilter> = null;\r\n\r\n    status: ItemsMapViewStatus = \"\";\r\n\r\n    selectedItem: TItem = null;\r\n\r\n    showCurrentPosition: boolean = false;\r\n\r\n    mapReady = new Signal();\r\n\r\n    get manager() { return this._manager; }\r\n}\r\n\r\nregisterType(MapItemsView, \"MapItemsView\");","﻿import { Services } from \"../../Core/Global\";\r\nimport { Signal } from \"../../Core/Types/Signal\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { IMapManager } from \"../Abstraction/IMapManager\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IMapViewConfig extends IViewComponentConfig {\r\n\r\n    manager?: IMapManager;\r\n\r\n    showCurrentPosition?: Bindable<boolean>;\r\n\r\n    onMapLoaded?: () => void;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class MapView extends ViewComponent implements IHTMLAttach {\r\n\r\n    constructor(config?: IMapViewConfig) {\r\n        super({ template: \"Attach\", ...config });\r\n\r\n        if (config) {\r\n            if (config.onMapLoaded)\r\n                this.onMapLoaded = config.onMapLoaded;\r\n            if (config.manager)\r\n                this.manager = config.manager;\r\n            this.bindConfig(\"showCurrentPosition\", config);\r\n        }\r\n\r\n        if (!this.manager)\r\n            this.manager = Services.mapManager();\r\n\r\n        this.prop(\"showCurrentPosition\").subscribe(value => {\r\n            this.manager.showCurrentPositionAsync(value);\r\n        })\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        if (this.manager)\r\n            this.manager.attach(element);\r\n\r\n        this.mapReady.set();\r\n        this.onMapLoaded();\r\n\r\n        this.manager.showCurrentPositionAsync(this.showCurrentPosition);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    onMapLoaded() {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    showCurrentPosition: boolean = false;\r\n\r\n    manager: IMapManager;\r\n\r\n    mapReady = new Signal();\r\n}\r\n\r\nregisterType(MapView, \"MapView\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";import { loadVideoAsync, loadVideoIntoAsync } from \"../Helpers/VideoLoader\";\r\n;\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\n\r\nexport interface IVideoViewConfig extends IContentViewConfig<string> {\r\n    isAutoPlay?: Bindable<boolean>;\r\n\r\n    isMuted?: Bindable<boolean>;\r\n\r\n    showControls?: Bindable<boolean>;\r\n\r\n    isLoop?: Bindable<boolean>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class VideoView extends ContentView<string> implements IHTMLAttach, IAsyncLoad {\r\n\r\n    protected _video: HTMLVideoElement;\r\n\r\n    constructor(config?: IVideoViewConfig) {\r\n\r\n        super({ template: \"VideoView\", ...config });\r\n\r\n        this.bindConfig(\"isAutoPlay\", config);\r\n\r\n        this.bindConfig(\"isMuted\", config);\r\n\r\n        this.bindConfig(\"showControls\", config);\r\n\r\n        this.bindConfig(\"isLoop\", config);\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n        this.updateVideo();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n\r\n        this._video = element as any;\r\n\r\n        this.updateVideo();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    loadAsync() {\r\n\r\n        if (this.content) {\r\n            if (this._video)\r\n                return loadVideoIntoAsync(this.content, this._video);\r\n            else\r\n                return loadVideoAsync(this.content);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected updateVideo() {\r\n\r\n        if (!this._video)\r\n            return;\r\n\r\n        this._video.muted = this.isMuted;\r\n        this._video.autoplay = this.isAutoPlay;\r\n        this._video.controls = this.showControls;\r\n        this._video.loop = this.isLoop;\r\n\r\n        if (this.content)\r\n            this._video.load();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    play() {\r\n        if (this._video)\r\n            this._video.play();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    pause() {\r\n        if (this._video)\r\n            this._video.pause();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    isAutoPlay: boolean = true;\r\n\r\n    isMuted?: boolean = true;\r\n\r\n    showControls: boolean = false;\r\n\r\n    isLoop: boolean = true;\r\n}\r\n\r\nregisterType(VideoView, \"VideoView\");","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\n\r\n export function loadVideoAsync(src: string): Promise < HTMLVideoElement > {\r\n\r\n    const op = Services.operation.begin({ message: \"Loading video: \" + src.substring(0, 50), type: OperationType.Local });\r\n\r\n    return new Promise((res, rej) => {\r\n\r\n        const video = document.createElement(\"video\");\r\n\r\n        video.addEventListener(\"playing\", () => {\r\n            video.pause();\r\n            op.end()\r\n            res(video);\r\n        });\r\n\r\n        video.addEventListener(\"error\", ev => {\r\n            op.end();\r\n            rej(\"error\" in ev ? ev.error : \"video load error\");\r\n        });\r\n\r\n        video.src = src;\r\n        video.muted = true;\r\n        video.play();\r\n        if (video.readyState >= 2)\r\n            res(video);\r\n    });\r\n}\r\n\r\nexport function loadVideoIntoAsync(src: string, video: HTMLVideoElement) {\r\n\r\n    if (!video.paused || video.played)\r\n        return Promise.resolve();\r\n\r\n    const op = Services.operation.begin({ message: \"Loading image: \" + src, type: OperationType.Local });\r\n\r\n    return new Promise((res, rej) => {\r\n\r\n        function removeListeners() {\r\n            video.removeEventListener(\"playing\", loadListener);\r\n            video.removeEventListener(\"error\", errorListener);\r\n        }\r\n\r\n        const loadListener = () => {\r\n            op.end();\r\n            removeListeners();\r\n            res(undefined);\r\n        };\r\n\r\n        const errorListener = ev => {\r\n            op.end();\r\n            removeListeners();\r\n            rej(ev.error);\r\n        };\r\n\r\n        video.addEventListener(\"playing\", loadListener);\r\n        video.addEventListener(\"error\", errorListener);\r\n        video.src = src;\r\n        video.play();\r\n    });\r\n}","﻿import { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { IImageViewConfig, ImageView } from \"./ImageView\";\r\nimport { IVideoViewConfig, VideoView } from \"./VideoView\";\r\nimport \"Templates/MediaView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport type MediaType = \"empty\" | \"image\" | \"video\";\r\n\r\nexport interface IMediaContent {\r\n\r\n    type: MediaType;\r\n\r\n    src?: string;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport interface IMediaViewConfig extends IContentViewConfig<IMediaContent> {\r\n\r\n    image?: IImageViewConfig;\r\n\r\n    video?: IVideoViewConfig;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class MediaView extends ContentView<IMediaContent> {\r\n\r\n    private _imageConfig: IImageViewConfig = {};\r\n    private _videoConfig: IVideoViewConfig = {};\r\n\r\n    constructor(config?: IMediaViewConfig) {\r\n\r\n        super({ template: \"MediaView\", ...config });\r\n\r\n        if (config) {\r\n\r\n            if (config.image)\r\n                this._imageConfig = config.image;\r\n\r\n            if (config.video)\r\n                this._videoConfig = config.video;\r\n        }\r\n\r\n        this.updateContent();\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    loadAsync() {\r\n\r\n        if (this.activeView)\r\n            return this.activeView.loadAsync();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n        this.updateContent();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected updateContent() {\r\n\r\n        if (this.content && this.content.type == \"image\")\r\n            this.activeView = new ImageView({ ...this._imageConfig, content: this.content.src });\r\n\r\n        if (this.content && this.content.type == \"video\")\r\n            this.activeView = new VideoView({ ...this._videoConfig, content: this.content.src });\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    activeView: VideoView | ImageView = null;\r\n}\r\n\r\nregisterType(MediaView, \"MediaView\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority, IAction } from \"../Abstraction/IAction\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { BasePopUpMessage, IBasePopUpMessageConfig } from \"./BasePopUpMessage\";\r\n\r\nexport interface IMessageBoxConfig extends IBasePopUpMessageConfig {\r\n\r\n    actions?: IAction[];\r\n\r\n    message?: Bindable<LocalString>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    icon: Bindable<string>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class MessageBox extends BasePopUpMessage {\r\n\r\n\r\n    constructor(config?: IMessageBoxConfig) {\r\n\r\n        super({ template: \"MessageBox\", className: \"message-box\", ...config });\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfigString(\"message\", config, StringUsage.Message);\r\n\r\n        this.bindConfig(\"icon\", config);\r\n\r\n        if (config) {\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n\r\n        const styles: ViewStyle[] = action.styles ?? [];\r\n\r\n        if (action.priority == ActionPriority.Evidence)\r\n            styles.push(\"primary\");\r\n\r\n        this.actions.add(ActionView.fromAction(action,\r\n            {\r\n                template: \"ActionButton\",\r\n                styles: styles,\r\n                executeAsync: async () => {\r\n                    await action.executeAsync();\r\n                    this.hide(action.name);\r\n                }\r\n            }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    message: string = null;\r\n\r\n    title: string = null;\r\n\r\n    icon: string = null;\r\n}\r\n\r\nregisterType(MessageBox, \"MessageBox\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IProgressViewConfig extends IViewComponentConfig {\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ProgressView extends ViewComponent {\r\n\r\n    constructor(config?: IProgressViewConfig) {\r\n        super(config);\r\n    }\r\n}\r\n\r\nregisterType(ProgressView, \"ProgressView\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\nexport type TextEditorTrackMode = \"onchange\" | \"onlostfocus\";\r\n\r\nexport interface IBaseTextEditorConfig<TValue> extends IBaseEditorConfig<TValue> {\r\n\r\n    trackMode?: Bindable<TextEditorTrackMode>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport abstract class BaseTextEditor<TValue> extends BaseEditor<TValue, string> implements IHTMLAttach {\r\n\r\n    protected _element: HTMLElement;\r\n\r\n    constructor(config?: IBaseTextEditorConfig<TValue>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"trackMode\", config);\r\n\r\n        this.prop(\"hasFocus\").subscribe(a => this.onFocusChanged(a));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n        this._element = element;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async activateAsync() {\r\n\r\n        if (this._element.nodeName == \"INPUT\" || this._element.nodeName == \"TEXTAREA\") {\r\n            while (true) {\r\n\r\n                const input = <HTMLTextAreaElement>this._element;\r\n                input.selectionStart = 0;\r\n                input.selectionEnd = input.value?.length;\r\n                this._element.focus();\r\n\r\n                if (this.hasFocus)\r\n                    break;\r\n\r\n                await delayAsync(100);\r\n            }\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onFocusChanged(value: boolean) {\r\n\r\n        if (!value && this.trackMode == \"onlostfocus\")\r\n            this.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected notifyEditValueChangedAsync() {\r\n\r\n        if (this.hasFocus && this.trackMode == \"onlostfocus\") {\r\n\r\n            this._needValidation = true;\r\n\r\n            this.isDirty = true;\r\n\r\n            return Promise.resolve();\r\n        }\r\n        return super.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    trackMode: TextEditorTrackMode = \"onlostfocus\";\r\n}\r\n\r\nregisterType(BaseTextEditor, \"BaseTextEditor\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\n\r\nexport interface INumberEditorConfig extends IBaseTextEditorConfig<number> {\r\n\r\n    placeholder?: Bindable<string>;\r\n\r\n    min?: number;\r\n\r\n    max?: number;\r\n\r\n    precision?: number;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class NumberEditor extends BaseTextEditor<number> {\r\n\r\n    constructor(config?: INumberEditorConfig) {\r\n\r\n        super({ template: \"NumberEditor\", ...config });\r\n\r\n        this.bindConfig(\"placeholder\", config);\r\n\r\n        this.bindConfig(\"precision\", config);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: number): string {\r\n\r\n        return isNaN(value) ? \"\" : (this.precision != null ? value.toFixed(this.precision) : value.toString()).replace(\".\", \",\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: string): number {\r\n\r\n        const result = parseFloat(value?.replace(\",\", \".\"));\r\n        return isNaN(result) ? null : result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    placeholder: string = null;\r\n\r\n    min?: number = null;\r\n\r\n    max?: number = null;\r\n\r\n    precision: number = null;\r\n}\r\n\r\nregisterType(NumberEditor, \"NumberEditor\");","import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { equals, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IEditor } from \"../Abstraction/IEditor\";\r\nimport { IHasLabel } from \"../Abstraction/IHasLabel\";\r\nimport { IValidationContext, IValidator } from \"../Abstraction/IValidator\";\r\nimport { NumberEditor } from \"../Editors/NumberEditor\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\nimport \"Templates/PropertyView.html\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { IPropertiesHost } from \"../Abstraction/IPropertiesHost\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\n\r\ntype NewType<TValue, TObj extends object> = IValidator<TValue, TObj>;\r\n\r\nexport type PropertyChangeReason = \"editor\" | \"setter\";\r\n\r\nexport interface IPropertyViewConfig<TValue, TObj extends object = any> extends IViewComponentConfig {\r\n\r\n    host?: IPropertiesHost<TObj>;\r\n\r\n    editor: Bindable<IEditor<TValue, any>>;\r\n\r\n    value?: Bindable<TValue>;\r\n\r\n    label?: Bindable<LocalString>;\r\n\r\n    readonly?: Bindable<boolean>;\r\n\r\n    showLabel?: Bindable<boolean>;\r\n\r\n    validators?: NewType<TValue, TObj>[];\r\n\r\n    onChanged?: (newValue: TValue, oldValue: TValue, target: TObj, reason: PropertyChangeReason) => void;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class PropertyView<TValue, TEditor extends IEditor<TValue, any> = IEditor<TValue, any>, TObj extends object = any> extends ViewComponent implements IHasLabel, IAsyncLoad {\r\n\r\n    protected _lastValidationValue: TValue = undefined;\r\n\r\n    constructor(config?: IPropertyViewConfig<TValue, TObj>) {\r\n\r\n        super({ template: \"PropertyView\", ...config });\r\n\r\n        this.bindConfig(\"host\", config);\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfig(\"readonly\", config);\r\n\r\n        this.bindConfig(\"showLabel\", config);\r\n\r\n        this.bindConfig(\"value\", config);\r\n\r\n        this.bindConfigString(\"label\", config, StringUsage.Label);\r\n\r\n        this.prop(\"error\");\r\n\r\n        if (config) {\r\n\r\n            if (config.onChanged)\r\n                this.prop(\"value\").subscribe((o, n) => config.onChanged(o, n, this.host?.editValue, \"editor\"));\r\n\r\n            if (config.validators)\r\n                this.validators = config.validators;\r\n        }\r\n\r\n        this.prop(\"editor\").subscribe(() => this.bindEditor());\r\n\r\n        this.bindEditor();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected bindEditor() {\r\n\r\n        if (this.editor) {\r\n            this.editor.name = this.name;\r\n            this.editor.value = this.value;\r\n\r\n            this.bind(\"value\", this.editor.prop(\"value\"));\r\n\r\n            this.bind(\"isDirty\", this.editor.prop(\"isDirty\"));\r\n\r\n            if (\"label\" in this.editor) {\r\n                this.bind(\"label\", (this.editor as unknown as IHasLabel & IEditor<TValue, any>).prop(\"label\"));\r\n                this.showLabel = false;\r\n            }\r\n\r\n            this.editor.prop(\"isValid\").subscribe(value => {\r\n\r\n                if (!value)\r\n                    this.isValid = false;\r\n\r\n                this.error = this.editor.error;\r\n            });\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearError() {\r\n\r\n        this.editor.error = null;\r\n        this.error = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async validateAsync(target: TObj, force?: boolean): Promise<boolean> {\r\n\r\n        console.group(\"begin validation: \" + this.label, \" - needValidation: \", this.isDirty);\r\n\r\n        try {\r\n\r\n            await delayAsync(0);\r\n\r\n            //TODO fix this, sometimes is editValue other time value\r\n            const curValue = this.editor instanceof NumberEditor ? this.editor.value : this.editor.editValue;\r\n\r\n            if (!force && this._lastValidationValue !== undefined && equals(this._lastValidationValue, curValue))\r\n                return this.isValid;\r\n\r\n            this.clearError();\r\n\r\n            this._lastValidationValue = curValue;\r\n\r\n            if (!await this.editor.validateAsync(force)) {\r\n\r\n                this.isValid = false;\r\n                this.error = this.editor.error;\r\n                return false;\r\n            }\r\n\r\n            const ctx: IValidationContext<TValue, TObj> = {\r\n                value: curValue,\r\n                fieldName: this.label,\r\n                target: target\r\n            };\r\n\r\n            for (const validator of this.validators) {\r\n                const result = await validator.validateAsync(ctx);\r\n                if (!result.isValid) {\r\n                    this.error = Format.message(result.error);\r\n                    this.isValid = false;\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            this.isValid = true;\r\n            return true;\r\n        }\r\n        finally {\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    loadAsync() {\r\n\r\n        return this.editor.loadAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n        this.editor.clear();\r\n        this.clearError();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    isDirty: boolean = null;\r\n\r\n    isValid: boolean = true;\r\n\r\n    value: TValue = null;\r\n\r\n    editor: TEditor = null;\r\n\r\n    error: string = null;\r\n\r\n    label: string = null;\r\n\r\n    readonly: boolean = false;\r\n\r\n    showLabel: boolean = true;\r\n\r\n    host: IPropertiesHost<TObj> = null;\r\n\r\n    validators: IValidator<TValue, TObj>[] = [];\r\n}\r\n\r\n\r\nregisterType(PropertyView, \"PropertyView\");","﻿import { linq } from \"../../Core/Linq\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\nimport { TextView } from \"./TextView\";\r\n\r\ninterface ISectionViewConfig<TContent extends IView, THeader extends IView> extends IContentViewConfig<TContent> {\r\n\r\n    header?: LocalString | THeader;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class SectionView<TContent extends IView = any, THeader extends IView = any> extends ContentView<TContent> {\r\n\r\n    constructor(config?: ISectionViewConfig<TContent, THeader>) {\r\n\r\n        super(config)\r\n\r\n        if (typeof config?.header == \"string\")\r\n            this.header = <any>new TextView({ content: config.header });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    header: THeader;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport interface ISectionsViewConfig extends IItemsViewConfig<SectionView<any, any>> {\r\n\r\n    sections?: ISectionViewConfig<any, any>[];\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class SectionsView extends ItemsView<SectionView<IView, IView>> {\r\n\r\n    constructor(config?: ISectionsViewConfig) {\r\n\r\n        super(config);\r\n\r\n        if (config?.sections)\r\n            config.sections.forEach(a => this.content.add(new SectionView(a)));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    section(name: string) {\r\n        return linq(this.content).first(a => a.name == name);\r\n    }\r\n}\r\n\r\nregisterType(SectionsView, \"SectionsView\");","﻿import { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IconTextView, IIconTextViewConfig } from \"./IconTextView\";\r\nimport \"Templates/SimpleItemView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ISimpleItemViewConfig<TITem, TStatus> extends IIconTextViewConfig {\r\n\r\n    subText?: Bindable<LocalString>;\r\n\r\n    status?: Bindable<TStatus>;\r\n\r\n    item?: Bindable<TITem>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SimpleItemView<TITem = any, TStatus extends string = any> extends IconTextView {\r\n\r\n    constructor(config?: ISimpleItemViewConfig<TITem, TStatus>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfigString(\"subText\", config);\r\n\r\n        this.bindConfig(\"status\", config);\r\n\r\n        this.bindConfig(\"item\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    subText: string = null;\r\n\r\n    status: TStatus = null;\r\n\r\n    item: TITem = null;\r\n}\r\n\r\nregisterType(SimpleItemView, \"SimpleItemView\");\r\n","﻿import { App } from \"../../Core/Global\";\r\nimport { TimeSpan } from \"../../Core/Types/TimeSpan\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IViewApplication } from \"../Abstraction/IViewApplication\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface ISnackBarOptions<TContent> {\r\n\r\n    showTime?: TimeSpan;\r\n\r\n    content: TContent;\r\n\r\n    action: IAction | string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SnackBar<TContent> extends ViewComponent {\r\n\r\n    protected _showResolve: (value: string) => void;\r\n\r\n    private constructor() {\r\n\r\n        super({ template: \"SnackBar\" });\r\n\r\n        this.status = \"close\";\r\n\r\n        new TemplateBuilder(this, document.body).content(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync() {\r\n\r\n        if (this.status == \"open\")\r\n            return;\r\n\r\n        (App as IViewApplication).unblock(true);\r\n\r\n        await delayAsync(0);\r\n\r\n        this.status = \"open\";\r\n\r\n        return new Promise<string>(res => this._showResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n\r\n    hide(actionName: string) {\r\n\r\n        if (this.status != \"open\")\r\n            return;\r\n\r\n        this.status = \"close\";\r\n\r\n        (App as IViewApplication).restoreBlock();\r\n\r\n        if (this._showResolve) {\r\n\r\n            this._showResolve(actionName);\r\n            this._showResolve = null;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static showAsync<TContent>(options: ISnackBarOptions<TContent>) {\r\n\r\n        const instanceId = new Date().valueOf();\r\n\r\n        if (!SnackBar.instance)\r\n            SnackBar.instance = new SnackBar();\r\n\r\n        SnackBar.instance.content = options.content;\r\n\r\n        SnackBar.instance.instanceId = instanceId;\r\n\r\n        if (options.action) {\r\n\r\n            let action: IAction;\r\n\r\n            if (typeof options.action == \"string\")\r\n                action = {\r\n                    name: options.action,\r\n                    executeAsync: () => Promise.resolve()\r\n                };\r\n            else\r\n                action = options.action;\r\n\r\n            SnackBar.instance.action = ActionView.fromAction(action, {\r\n                executeAsync: async () => {\r\n                    await action.executeAsync();\r\n                    SnackBar.instance.hide(action.name);\r\n                }\r\n            });\r\n        }\r\n        else\r\n            SnackBar.instance.action = null;\r\n\r\n        if (options.showTime) {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (SnackBar.instance.instanceId == instanceId && SnackBar.instance._isVisible)\r\n                    SnackBar.instance.hide(null);\r\n\r\n            }, options.showTime.totalMilliseconds)\r\n        }\r\n\r\n        return SnackBar.instance.showAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    action: ActionView = null;\r\n\r\n    content: TContent = null;\r\n\r\n    showTime?: TimeSpan = TimeSpan.fromSeconds(0);\r\n\r\n    instanceId: number = null;\r\n\r\n    private static instance = null;\r\n}\r\n\r\nregisterType(SnackBar, \"SnackBar\");","﻿import { Services } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { IStaticMapOptions } from \"../Abstraction/IMapManager\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IStaticMapViewConfig extends IViewComponentConfig {\r\n\r\n    options?: Bindable<IStaticMapOptions>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class StaticMapView extends ViewComponent implements IContentView<string>  {\r\n\r\n    constructor(config?: IStaticMapViewConfig) {\r\n        super({ template: \"ImageView\", ...config });\r\n\r\n        this.bindConfig(\"options\", config);\r\n\r\n        this.update();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    update() {\r\n        this.content = Services.mapManager().staticMap(this.options);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    options: IStaticMapOptions;\r\n\r\n    content: string;\r\n}\r\n\r\nregisterType(StaticMapView, \"StaticMapView\");\r\n","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { TimeSpan } from \"../../Core/Types/TimeSpan\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IToastConfig extends IViewComponentConfig {\r\n\r\n    showTime?: Bindable<TimeSpan>;\r\n\r\n    message: Bindable<LocalString>;\r\n\r\n    icon?: Bindable<string>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Toast extends ViewComponent {\r\n\r\n    private static _container: HTMLElement;\r\n\r\n    private static _items = observableListOf<Toast>();\r\n\r\n    protected _showResolve: (res?: string) => void;\r\n\r\n    constructor(config?: IToastConfig) {\r\n\r\n        super({ template: \"Toast\", visible: false, ...config });\r\n\r\n        if (Toast._container == null)\r\n            Toast.init();\r\n\r\n        this.bindConfigString(\"message\", config, StringUsage.Tooltip);\r\n\r\n        this.bindConfig(\"showTime\", config);\r\n\r\n        this.bindConfig(\"icon\", config);\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static init() {\r\n\r\n        Toast._container = document.createElement(\"div\");\r\n\r\n        Toast._container.className = \"toast-container\";\r\n\r\n        const builder = new TemplateBuilder(Toast._items, Toast._container);\r\n\r\n        builder.template(\"ToastContainer\", a => a);\r\n\r\n        document.body.appendChild(Toast._container);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync() {\r\n\r\n        Toast._items.add(this);\r\n\r\n        await delayAsync(10);\r\n\r\n        this.visible = true;\r\n\r\n        let showMs = this.showTime.totalMilliseconds;\r\n\r\n        if (showMs == 0)\r\n            showMs = Math.min(Math.max(this.message.length * 70, 2000), 7000);\r\n\r\n        setTimeout(() => this.hideAsync(), showMs);\r\n\r\n        return new Promise<string>(res => this._showResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async hideAsync() {\r\n\r\n        this.visible = false;\r\n\r\n        await delayAsync(600);\r\n\r\n        Toast._items.remove(this);\r\n\r\n        if (this._showResolve) {\r\n\r\n            this._showResolve();\r\n            this._showResolve = null;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    message: string = null;\r\n\r\n    icon: string = null;\r\n\r\n    showTime?: TimeSpan = TimeSpan.fromSeconds(0);\r\n}\r\n\r\n\r\nregisterType(Toast, \"Toast\");","import { IDictionary } from \"../../Core/Abstraction/IDictionary\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IValidable } from \"../Abstraction/IValidator\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { isAsyncLoad, isValidable } from \"../Helpers/TypeCheck\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { IconTextView } from \"./IconTextView\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\n\r\n\r\ninterface IWizardStepConfig<TContent extends IView> extends IContentViewConfig<TContent> {\r\n\r\n    loadAsync?(step: WizardStepView<TContent>): Promise<void>;\r\n\r\n    validateAsync?(step: WizardStepView<TContent>): Promise<boolean>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    actions?: IAction[];\r\n\r\n    nextLabel?: LocalString;\r\n\r\n    coverImage?: string;\r\n\r\n    index?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class WizardStepView<TContent extends IView> extends ContentView<TContent> implements IValidable {\r\n\r\n    constructor(config?: IWizardStepConfig<TContent>) {\r\n\r\n        super({ template: \"ContentView\", ...config });\r\n\r\n        this.bindConfig(\"index\", config);\r\n\r\n        this.bindConfig(\"coverImage\", config);\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfigString(\"nextLabel\", config, StringUsage.Action);\r\n\r\n        if (config) {\r\n\r\n            if (config.loadAsync)\r\n                this.loadAsync = () => config.loadAsync(this);\r\n\r\n            if (config.validateAsync)\r\n                this.validateAsync = force => config.validateAsync(this);\r\n\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n        const view = ActionView.fromAction(action, { template: \"ActionButton\", styles: [\"primary\"] });\r\n        this.actions.add(view);\r\n        return view;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadAsync(): Promise<void> {\r\n\r\n        if (isAsyncLoad(this.content))\r\n            return this.content.loadAsync();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async validateAsync(force?: boolean) {\r\n\r\n        if (isValidable(this.content))\r\n            this.isValid = await this.content.validateAsync(force);\r\n        return this.isValid;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select(): void {\r\n\r\n        (this.parentView as WizardView).selectStepAsync(this.index);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    error: string = null;\r\n\r\n    isValid: boolean = true;\r\n\r\n    index: number = 0;\r\n\r\n    title: string = \"\";\r\n\r\n    isActive: boolean = false;\r\n\r\n    nextLabel: string = null;\r\n\r\n    coverImage: string = null;\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IWizardConfig extends IItemsViewConfig<WizardStepView<any>> {\r\n\r\n    steps?: IWizardStepConfig<any>[];\r\n\r\n    finishAsync?: () => Promise<any>;\r\n\r\n    finishLabel?: LocalString;\r\n\r\n    nextLabel?: LocalString;\r\n\r\n    prevLabel?: LocalString;\r\n}\r\n\r\n/****************************************/\r\n/* WizardViewModel\r\n/****************************************/\r\n\r\nexport class WizardView extends ItemsView<WizardStepView<any>> implements IAsyncLoad {\r\n\r\n    constructor(config?: IWizardConfig) {\r\n\r\n        super({ template: \"WizardView\", ...config });\r\n\r\n        this.actions = {\r\n            next: new ActionView({\r\n                name: \"next\",\r\n                template: \"ActionButton\",\r\n                styles: [\"secondary\"],\r\n                content: new IconTextView({\r\n                    template: \"IconTextViewInline\",\r\n                    text: this.prop(\"nextLabel\")\r\n                }),\r\n                executeAsync: () => this.nextAsync()\r\n            }),\r\n            prev: new ActionView({\r\n                name: \"prev\",\r\n                template: \"ActionButton\",\r\n                styles: [\"secondary\"],\r\n                content: new IconTextView({\r\n                    template: \"IconTextViewInline\",\r\n                    text: this.prop(\"prevLabel\")\r\n                }),\r\n                executeAsync: () => this.previousAsync()\r\n            }),\r\n            finish: new ActionView({\r\n                name: \"finish\",\r\n                template: \"ActionButton\",\r\n                styles: [\"secondary\"],\r\n                content: new IconTextView({\r\n                    template: \"IconTextViewInline\",\r\n                    text: this.prop(\"finishLabel\")\r\n                }),\r\n                executeAsync: () => this.finishAsync()\r\n            })\r\n        }\r\n\r\n        this.prop(\"currentStepIndex\").subscribe((value, oldValue) => {\r\n\r\n            if (oldValue != -1)\r\n                this.content.get(oldValue).isActive = false;\r\n\r\n            this.content.get(value).isActive = true;\r\n\r\n            this.currentView = this.content.get(value)\r\n\r\n            this.actions.next.visible = this.hasNextStep();\r\n\r\n            this.actions.prev.visible = this.hasPrevStep();\r\n\r\n            this.actions.finish.visible = !this.hasNextStep();\r\n\r\n            if (this.currentView.nextLabel)\r\n                this.nextLabel = this.currentView.nextLabel;\r\n            else\r\n                this.nextLabel = Format.action(config?.nextLabel ?? \"wizard-next\");\r\n        });\r\n\r\n        this.bindConfigString(\"nextLabel\", config, StringUsage.Action);\r\n\r\n        this.bindConfigString(\"prevLabel\", config, StringUsage.Action);\r\n\r\n        this.bindConfigString(\"finishLabel\", config, StringUsage.Action);\r\n\r\n        if (config) {\r\n\r\n            if (config.steps) {\r\n                config.steps.forEach((step, i) =>\r\n                    this.content.add(new WizardStepView({ ...step, index: i })));\r\n\r\n                this.currentStepIndex = 0;\r\n            }\r\n\r\n            if (config.finishAsync)\r\n                this.doFinishAsync = config.finishAsync;\r\n        }\r\n\r\n        if (!config?.prevLabel)\r\n            this.prevLabel = Format.action(\"wizard-prev\");\r\n\r\n        if (!config?.finishLabel)\r\n            this.prevLabel = Format.action(\"wizard-finish\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async finishAsync() {\r\n\r\n        if (await this.validateUntilAsync(this.content.count - 1) !== true)\r\n            return;\r\n\r\n        await this.doFinishAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async doFinishAsync() {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clearErrors() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async validateUntilAsync(targetIndex: number): Promise<boolean | number> {\r\n\r\n        let curStep = this.currentStepIndex;\r\n\r\n        while (curStep <= targetIndex) {\r\n            if (! await this.content.get(curStep).validateAsync())\r\n                return curStep;\r\n            curStep++;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadAsync() {\r\n\r\n        if (this.content.count > 0)\r\n            await this.content.get(this.currentStepIndex).loadAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async selectStepAsync(index: number) {\r\n\r\n        if (index == this.currentStepIndex)\r\n            return;\r\n\r\n        this.clearErrors();\r\n\r\n        if (index > this.currentStepIndex) {\r\n\r\n            const result = await this.validateUntilAsync(index - 1);\r\n\r\n            if (result === true) {\r\n                this.currentStepIndex = index;\r\n                await this.content.get(index).loadAsync();\r\n\r\n            }\r\n            else {\r\n\r\n                this.currentStepIndex = result as number;\r\n\r\n                if (result != this.currentStepIndex)\r\n                    await this.content.get(result as number).loadAsync();\r\n            }\r\n        }\r\n        else\r\n            this.currentStepIndex = index;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async nextAsync() {\r\n\r\n        if (this.currentStepIndex + 1 < this.content.count)\r\n            await this.selectStepAsync(this.currentStepIndex + 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async previousAsync() {\r\n\r\n        if (this.currentStepIndex > 0)\r\n            await this.selectStepAsync(this.currentStepIndex - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async endAsync() {\r\n\r\n        await this.selectStepAsync(this.content.count - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hasPrevStep(): boolean {\r\n        let curIndex = this.currentStepIndex - 1;\r\n        while (curIndex >= 0) {\r\n            if (this.content.get(curIndex).visible)\r\n                return true;\r\n            curIndex--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hasNextStep(): boolean {\r\n        let curIndex = this.currentStepIndex + 1;\r\n        while (curIndex <= this.content.count - 1) {\r\n            if (this.content.get(curIndex).visible)\r\n                return true;\r\n            curIndex++\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isComplete(): boolean {\r\n        return !this.hasNextStep();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    currentStepIndex: number = -1;\r\n\r\n    currentView: WizardStepView<any>;\r\n\r\n    actions: IDictionary<ActionView>;\r\n\r\n    nextLabel: string = \"Next\";\r\n\r\n    prevLabel: string = \"Previous\";\r\n\r\n    finishLabel: string = \"Finish\";\r\n}\r\n\r\nregisterType(WizardStepView, \"WizardStepView\");\r\n\r\nregisterType(WizardView, \"WizardView\");","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { IViewContent } from \"../Abstraction/IViewContent\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { IViewContentInfo } from \"../Abstraction/IViewContentInfo\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { IconTextView } from \"../Components/IconTextView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { View } from \"../Components/View\";\r\nimport { IMessageOptions } from \"../Helpers/Interaction\";\r\n\r\nexport class MessageContent implements IViewContentProvider {\r\n\r\n    protected _options: IMessageOptions;\r\n\r\n    /****************************************/\r\n\r\n    constructor(options: IMessageOptions) {\r\n\r\n        this._options = options;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async getContentAsync(host: IViewContentHost) {\r\n\r\n        const views: View[] = [];\r\n\r\n        views.push(new IconTextView({\r\n            icon: this._options.icon,\r\n            text: this._options.message,\r\n            styles: [\"message-view\"]\r\n        }));\r\n\r\n        if (this._options.customActions) {\r\n            this._options.customActions.forEach(action => views.push(new ActionView({\r\n                name: action.name,\r\n                template: \"ActionButton\",\r\n                styles: [\"primary\"],\r\n                content: new TextView({ content: Format.action(action.displayName) }),\r\n                executeAsync: async () => {\r\n                    await host.closeAsync();\r\n                    await action.executeAsync();\r\n                }\r\n            })));\r\n        }\r\n\r\n        return Promise.resolve({\r\n            views: views,\r\n            title: this._options.title,\r\n            styles: [\"vertical\", \"margin-items-v\", \"scroll\", \"fit-items-h\", \"surface\", \"padding\", \"small\"],\r\n        } as IViewContent);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get info() {\r\n        return {\r\n            name: \"message\",\r\n            icon: null,\r\n            displayName: this._options.title\r\n        } as IViewContentInfo;\r\n    }\r\n}","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport interface IBaseItemEditorConfig<TItem, TEdit> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport abstract class BaseItemEditor<TItem, TEdit> extends BindableObject implements IItemEditor<TItem, TEdit> {\r\n\r\n    constructor(config?: IBaseItemEditorConfig<TItem, TEdit>) {\r\n        super();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    beginEditAsync(item: TItem): Promise<void> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    commitAsync(force?: boolean): Promise<boolean> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly view: IView = null;\r\n\r\n    readonly value: TEdit = null;\r\n\r\n    readonly isValid: boolean = null;\r\n\r\n}\r\n\r\nregisterType(BaseItemEditor, \"BaseItemEditor\");","import { INamedContent } from \"../../Core/Abstraction/INamedContent\";\r\nimport { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ItemSearchMode } from \"../Activities/SearchActivity\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { EditableItemsSource } from \"../Items/EditableItemsSource\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\nexport interface IBasePickerConfig<TItem, TValue, TEditorValue, TFilter, TEdit> extends IBaseEditorConfig<TEditorValue> {\r\n\r\n    itemsSource?: EditableItemsSource<TItem, TValue, TFilter, TEdit>;\r\n\r\n    filters?: INamedContent<TFilter>[];\r\n\r\n    createItemView?: (item: TItem) => IView;\r\n\r\n    createItemListView?: (item: TItem) => IView;\r\n\r\n    createItemEditor?: () => IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit>;\r\n\r\n    pageSize?: number;\r\n\r\n    canAdd?: Bindable<boolean>;\r\n\r\n    addLabel?: LocalString;\r\n\r\n    pickLabel?: LocalString;\r\n\r\n    searchMode?: ItemSearchMode;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport abstract class BasePicker<TItem, TValue, TEditorValue, TFilter = any, TEdit = TItem> extends BaseEditor<TEditorValue> {\r\n\r\n    constructor(config?: IBasePickerConfig<TItem, TValue, TEditorValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"canAdd\", config);\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"pageSize\", config);\r\n\r\n        this.bindConfigString(\"addLabel\", config);\r\n\r\n        this.bindConfigString(\"pickLabel\", config);\r\n\r\n        this.bindConfig(\"searchMode\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.filters)\r\n                this.filters.addRange(config.filters);\r\n\r\n            if (config.createItemView)\r\n                this.createItemView = config.createItemView;\r\n\r\n            if (config.createItemListView)\r\n                this.createItemListView = config.createItemListView;\r\n\r\n            if (config.createItemEditor)\r\n                this.createItemEditor = config.createItemEditor;\r\n        }\r\n\r\n        if (!config?.addLabel)\r\n            this.addLabel = Format.title(\"new-item\", this.itemsSource.displayName);\r\n\r\n        if (!config?.pickLabel)\r\n            this.pickLabel = Format.title(\"select-item\", this.itemsSource.displayName);\r\n\r\n        this.createEditValueProp();\r\n\r\n        this.selectAction = ActionView.fromActionIcon({\r\n            name: \"select\",\r\n            icon: \"fas fa-list\",\r\n            operation: OperationType.Local,\r\n            displayName: this.pickLabel,\r\n            executeAsync: () => this.selectAsync()\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    abstract selectAsync(): Promise<void>;\r\n\r\n    /****************************************/\r\n\r\n    protected abstract updateViewAsync(): Promise<void>;\r\n\r\n    /****************************************/\r\n\r\n    protected createItemEditor(): IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem): IView {\r\n\r\n        return new TextView({ content: this.itemsSource.getItemText(item) });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemListView(item: TItem): IView {\r\n\r\n        return this.createItemView(item);\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected async notifyEditValueChangedAsync() {\r\n\r\n        await super.notifyEditValueChangedAsync();\r\n\r\n        await this.updateViewAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAdd: boolean = false;\r\n\r\n    addLabel: string = \"Add\";\r\n\r\n    pickLabel: string = \"Select\";\r\n\r\n    selectAction: ActionView = null;\r\n\r\n    itemsSource: EditableItemsSource<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    pageSize: number = 0;\r\n\r\n    searchMode?: ItemSearchMode = \"default\";\r\n\r\n    readonly filters: IObservableList<INamedContent<TFilter>> = observableListOf();\r\n}\r\n\r\nregisterType(BasePicker, \"BasePicker\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHasLabel } from \"../Abstraction/IHasLabel\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\nexport interface IBooleanEditorConfig extends IBaseEditorConfig<boolean> {\r\n\r\n    trueLabel?: Bindable<LocalString>;\r\n\r\n    falseLabel?: Bindable<LocalString>;\r\n\r\n    label?: Bindable<LocalString>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class BooleanEditor extends BaseEditor<boolean> implements IHasLabel {\r\n\r\n    constructor(config?: IBooleanEditorConfig) {\r\n\r\n        super({ template: \"CheckBox\", ...config });\r\n\r\n        this.bindConfigString(\"trueLabel\", config);\r\n\r\n        this.bindConfigString(\"falseLabel\", config);\r\n\r\n        this.bindConfigString(\"label\", config, StringUsage.Action);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    toggle() {\r\n\r\n        if (window.event)\r\n            window.event.stopPropagation();\r\n        this.editValue = !this.editValue;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    trueLabel: string = null;\r\n\r\n    falseLabel: string = null;\r\n\r\n    label: string = null;\r\n}\r\n\r\nregisterType(BooleanEditor, \"BooleanEditor\");","﻿import { formatDate, parseDate } from \"../../Core/Utils/DateUtils\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\n\r\nexport interface IDateEditorConfig extends IBaseTextEditorConfig<Date> {\r\n\r\n    placeholder?: Bindable<string>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class DateEditor extends BaseTextEditor<Date> {\r\n\r\n    constructor(config?: IDateEditorConfig) {\r\n\r\n        super({ template: \"DateEditor\", ...config });\r\n\r\n        this.bindConfig(\"placeholder\", config);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: Date): string {\r\n\r\n        return value === null || value === undefined ? \"\" : formatDate(value, \"{YYYY}-{MM}-{DD}\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: string): Date {\r\n\r\n        if (value === undefined || value === null)\r\n            return null;\r\n        return parseDate(value + \" 00:00\");\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    placeholder: string = null;\r\n}\r\n\r\nregisterType(DateEditor, \"DateEditor\");","﻿import { MONTHS } from \"../../Core/Utils/DateUtils\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\nexport interface IDateEditorComboConfig extends IBaseEditorConfig<Date> {\r\n\r\n    minYear?: number;\r\n\r\n    maxYear?: number;\r\n}\r\n\r\ninterface IMonthView {\r\n    number: string;\r\n    name: string;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class DateEditorCombo extends BaseEditor<Date> {\r\n\r\n    constructor(config?: IDateEditorComboConfig) {\r\n        super(config)\r\n\r\n        for (let i = 1; i <= 31; i++)\r\n            this.days.push(i.toString());\r\n\r\n        for (let i = 1; i <= 12; i++)\r\n            this.months.push({ number: i.toString(), name: MONTHS[i - 1] });\r\n\r\n        const maxYear = config?.maxYear ?? new Date().getFullYear();\r\n\r\n        const minYear = config?.minYear ?? new Date().getFullYear() - 100;\r\n\r\n        for (let i = minYear; i <= maxYear; i++)\r\n            this.years.push(i.toString());\r\n\r\n        this.prop(\"selectedDay\").subscribe(() => this.tryCommit());\r\n        this.prop(\"selectedMonth\").subscribe(() => this.tryCommit());\r\n        this.prop(\"selectedYear\").subscribe(() => this.tryCommit());\r\n\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected tryCommit() {\r\n        this.commitAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    commitAsync(force?: boolean) {\r\n        if (this.editValue?.getTime() != this.value?.getTime())\r\n            this.value = this.editValue;\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get editValue(): Date {\r\n\r\n        if (!this.selectedDay || !this.selectedMonth || !this.selectedYear)\r\n            return null;\r\n        return new Date(parseInt(this.selectedYear), parseInt(this.selectedMonth) - 1, parseInt(this.selectedDay));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: Date) {\r\n\r\n        if (value?.getTime() == this.editValue?.getTime())\r\n            return;\r\n\r\n        if (!value) {\r\n            this.selectedDay = null;\r\n            this.selectedMonth = null;\r\n            this.selectedYear = null;\r\n        }\r\n        else {\r\n            this.selectedDay = (value.getDate()).toString();\r\n            this.selectedMonth = (value.getMonth() + 1).toString();\r\n            this.selectedYear = value.getFullYear().toString();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    selectedDay: string = null;\r\n\r\n    selectedMonth: string = null;\r\n\r\n    selectedYear: string = null;\r\n\r\n    days: string[] = [];\r\n\r\n    months: IMonthView[] = [];\r\n\r\n    years: string[] = [];\r\n}\r\n\r\nregisterType(DateEditorCombo, \"DateEditorCombo\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { IActivable } from \"../Abstraction/IActivable\";\r\nimport { IEditor } from \"../Abstraction/IEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { isActivable } from \"../Helpers/TypeCheck\";\r\n\r\nexport interface IItemEditorConverterConfig<TItem, TEdit> {\r\n\r\n    editor?: IEditor<TEdit, any>;\r\n\r\n    itemToEdit?: (item: TItem) => TEdit;\r\n\r\n    editToItem?: (item: TItem, editValue: TEdit) => void\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ItemEditorConverter<TItem, TEdit> extends BindableObject implements IItemEditor<TItem, TEdit>, IActivable {\r\n\r\n    private _item: TItem;\r\n\r\n    constructor(config?: IItemEditorConverterConfig<TItem, TEdit>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.itemToEdit)\r\n                this.itemToEdit = config.itemToEdit;\r\n\r\n            if (config.editToItem)\r\n                this.editToItem = config.editToItem;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    activateAsync() {\r\n\r\n        if (isActivable(this.editor))\r\n            return this.editor.activateAsync();\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    beginEditAsync(item: TItem) {\r\n\r\n        this._item = item;\r\n        return this.editor.beginEditAsync(this.itemToEdit(item));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async commitAsync(force?: boolean) {\r\n\r\n        if (await this.editor.commitAsync(force)) {\r\n            this.editToItem(this._item, this.editor.value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    itemToEdit(item: TItem): TEdit {\r\n\r\n        throw \"Not supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    editToItem(item: TItem, editValue: TEdit): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get value() {\r\n        return this.editor.value;\r\n    }\r\n\r\n    get view() {\r\n        return this.editor;\r\n    }\r\n\r\n    get isValid() {\r\n        return this.editor.isValid;\r\n    }\r\n\r\n    editor: IEditor<TEdit, any> = null;\r\n}\r\n\r\nregisterType(ItemEditorConverter, \"ItemEditorConverter\");","﻿import { IItemsSourceConfig, ItemsSource } from \"./ItemsSource\";\r\n\r\nexport interface IEditableItemsSourceConfig<TItem, TValue, TFilter, TUpdate, TAdd> extends IItemsSourceConfig<TItem, TValue, TFilter> {\r\n\r\n    addItemAsync?: (item: TAdd) => Promise<TItem>;\r\n\r\n    updateItemAsync?: (editItem: TUpdate, item?: TItem) => Promise<TItem>;\r\n\r\n    removeItemAsync?: (item: TItem) => Promise<boolean>;\r\n\r\n    newItem?(): TItem;\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class EditableItemsSource<TItem, TValue = TItem, TFilter = any, TUpdate = TItem, TAdd = TUpdate> extends ItemsSource<TItem, TValue, TFilter>{\r\n\r\n    constructor(config?: IEditableItemsSourceConfig<TItem, TValue, TFilter, TUpdate, TAdd>) {\r\n\r\n        super(config);\r\n\r\n        if (config) {\r\n\r\n\r\n            if (config.addItemAsync)\r\n                this.addItemAsync = config.addItemAsync;\r\n\r\n            if (config.updateItemAsync)\r\n                this.updateItemAsync = config.updateItemAsync;\r\n\r\n            if (config.removeItemAsync)\r\n                this.removeItemAsync = config.removeItemAsync;\r\n\r\n            if (config.newItem)\r\n                this.newItem = config.newItem;\r\n        }\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    newItem(): TItem {\r\n\r\n        return <TItem>{};\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    addItemAsync(item: TAdd): Promise<TItem> {\r\n\r\n        return Promise.resolve(item as unknown as TItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    updateItemAsync(editItem: TUpdate, item?: TItem): Promise<TItem> {\r\n\r\n        return Promise.resolve(item);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    removeItemAsync(item: TItem): Promise<boolean> {\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n\r\n}","import { IList } from \"../../Core/Abstraction/IList\";\r\nimport { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { IItemAction } from \"../Abstraction/IItemAction\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IValidable } from \"../Abstraction/IValidator\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ContentActivity } from \"../Activities/ContentActivity\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { IItemViewConfig, ItemView } from \"../Components/ItemView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { ItemEditContent } from \"../Content/ItemEditContent\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\nimport { Interaction } from \"../Helpers/Interaction\";\r\nimport { isAsyncEditor, isValidable } from \"../Helpers/TypeCheck\";\r\nimport { EditableItemsSource } from \"../Items/EditableItemsSource\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport \"Templates/ItemsEditor.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport type ItemStatus = \"unchanged\" | \"modified\" | \"removed\" | \"added\";\r\n\r\nexport type ItemEditMode = \"inline\" | \"external\";\r\n\r\ntype ItemCapability<TItem> = boolean | { (item: TItem): boolean };\r\n\r\n/********************************************/\r\n\r\nexport interface IItemsEditorConfig<TItem, TValue, TUpdate, TCreate> extends IBaseEditorConfig<TValue[]> {\r\n\r\n    createItemView?(item: TItem): IView;\r\n\r\n    createItemUpdateEditor?(item: TItem): IItemEditor<TItem, TUpdate> | IAsyncEditor<TItem, TUpdate>;\r\n\r\n    createItemAddEditor?(item: TItem): IItemEditor<TItem, TCreate> | IAsyncEditor<TItem, TCreate>;\r\n\r\n    newItem?: () => TItem;\r\n\r\n    itemsSource?: EditableItemsSource<TItem, any, any, TUpdate, TCreate>;\r\n\r\n    openItem?(item: TItem): void;\r\n\r\n    editMode?: Bindable<ItemEditMode>;\r\n\r\n    canAdd?: boolean;\r\n\r\n    canOpen?: ItemCapability<TItem>;\r\n\r\n    canRemove?: ItemCapability<TItem>;\r\n\r\n    canEdit?: ItemCapability<TItem>;\r\n\r\n    isConfirmRemove?: boolean;\r\n\r\n    addActionLabel?: LocalString;\r\n\r\n    editActionLabel?: LocalString;\r\n\r\n    removeActionLabel?: LocalString;\r\n\r\n    editActionsPriority?: Bindable<ActionPriority>;\r\n\r\n    itemActions?: IItemAction<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>>[];\r\n\r\n    isAutoLoad?: boolean;\r\n\r\n    attachItem?(item: TItem, isNew: boolean): void;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport interface IItemsEditorItemViewConfig<TItem, TValue, TUpdate, TCreate> extends IItemViewConfig<TItem> {\r\n\r\n    value?: TValue;\r\n\r\n    editActionsPriority: Bindable<ActionPriority>;\r\n\r\n    editActionLabel: LocalString;\r\n\r\n    removeActionLabel: LocalString;\r\n\r\n    addTitle: LocalString;\r\n\r\n    editTitle: LocalString;\r\n\r\n    itemActions: IItemAction<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>>[];\r\n\r\n    canRemove: boolean;\r\n\r\n    canEdit?: boolean;\r\n\r\n    itemsSource: EditableItemsSource<TItem, any, any, TUpdate, TCreate>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ItemsEditorItemView<TItem, TValue, TUpdate, TCreate> extends ItemView<TItem> {\r\n\r\n\r\n    constructor(config: IItemsEditorItemViewConfig<TItem, TValue, TUpdate, TCreate>) {\r\n\r\n        super({\r\n            ...config\r\n        });\r\n\r\n        if (config.canEdit) {\r\n            this.addAction({\r\n                name: \"edit-item\",\r\n                icon: \"fas fa-edit\",\r\n                operation: OperationType.Local,\r\n                priority: BindableObject.bindValue(config.editActionsPriority),\r\n                displayName: config.editActionLabel,\r\n                executeAsync: () => this.editAsync()\r\n            });\r\n        }\r\n\r\n        if (config.canRemove) {\r\n            this.addAction({\r\n                name: \"remove-item\",\r\n                icon: \"fas fa-trash\",\r\n                operation: OperationType.Local,\r\n                priority: BindableObject.bindValue(config.editActionsPriority),\r\n                displayName: config.removeActionLabel,\r\n                executeAsync: () => this.removeAsync()\r\n            });\r\n        }\r\n\r\n        if (config.itemActions) {\r\n            config.itemActions.forEach(action => this.addAction({\r\n                name: action.name,\r\n                icon: action.icon,\r\n                priority: action.priority,\r\n                operation: action.operation,\r\n                displayName: Format.action(action.displayName, config.itemsSource.displayName),\r\n                canExecute: action.canExecute ? () => action.canExecute(this) : undefined,\r\n                executeAsync: () => action.executeAsync(this)\r\n            }));\r\n        }\r\n\r\n        this.value = config.value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    updateView() {\r\n\r\n        this.content.clear();\r\n\r\n        if (this.isEdit && this.editMode == \"inline\" && !isAsyncEditor(this.editor))\r\n            this.content.add(this.editor.view);\r\n        else\r\n            this.content.add(this.view);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    updateValueAsync(): Promise<void> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    createUpdateEditor(): IItemEditor<TItem, TUpdate> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    createAddEditor(): IItemEditor<TItem, TCreate> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    executeUpdateAsync(item: TUpdate): Promise<TItem> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    executeAddAsync(item: TCreate): Promise<TItem> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async editAsync(): Promise<boolean> {\r\n\r\n        if (this.isEdit)\r\n            return false;\r\n\r\n        if (!this.editor) {\r\n\r\n            if (this.status == \"added\")\r\n                this.editor = this.createAddEditor();\r\n            else\r\n                this.editor = this.createUpdateEditor();\r\n        }\r\n\r\n        this.isEdit = true;\r\n\r\n        if (this.editMode == \"external\") {\r\n\r\n            let newItem: TItem = null;\r\n\r\n            if (isAsyncEditor(this.editor)) {\r\n\r\n                const editValue = await this.editor.editAsync(this.item);\r\n\r\n                if (editValue) {\r\n                    if (this.status == \"added\")\r\n                        newItem = await this.executeAddAsync(editValue as TCreate);\r\n                    else\r\n                        newItem = await this.executeUpdateAsync(editValue as TUpdate)\r\n                }\r\n            }\r\n            else {\r\n\r\n                const activity = new ContentActivity<TItem>({\r\n                    providers: [new ItemEditContent({\r\n                        editor: this.editor,\r\n                        title: item => this.status == \"added\" ? this.addTitle : this.editTitle,\r\n                        value: this.item,\r\n                        saveItemAsync: item => this.status == \"added\" ? this.executeAddAsync(item as TCreate) : this.executeUpdateAsync(item as TUpdate)\r\n                    })]\r\n                });\r\n\r\n                newItem = await (await Actions.loadPageAsync(activity)).result;\r\n            }\r\n\r\n            if (newItem) {\r\n\r\n                this.item = newItem;\r\n\r\n                this.status = \"unchanged\";\r\n\r\n                this.isEdit = false;\r\n\r\n                await this.updateValueAsync();\r\n            }\r\n            else\r\n                this.isEdit = false;\r\n\r\n            this.editor = null;\r\n\r\n            return newItem != null;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    cancelEdit(): void {\r\n\r\n        this.isEdit = false;\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    removeAsync(): Promise<void> {\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearErrors() {\r\n        this.error = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async validateAsync(force?: boolean) {\r\n\r\n        if (this.isEdit) {\r\n\r\n            if (isValidable(this.editor))\r\n                return await this.editor.validateAsync();\r\n        }\r\n        else {\r\n\r\n            if (isValidable(this.view))\r\n                return await this.view.validateAsync();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async loadAsync(): Promise<any> {\r\n        this.updateView();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get itemsEditor() {\r\n        return <ItemsEditor<TItem, TValue, TUpdate, TCreate>>this.parentView;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    error: string = null;\r\n\r\n    addTitle: string = null;\r\n\r\n    editTitle: string = null;\r\n\r\n    editor: IItemEditor<TItem, TUpdate | TCreate> | IAsyncEditor<TItem, TUpdate | TCreate> = null;;\r\n\r\n    view: IView = null;\r\n\r\n    value: TValue = null;\r\n\r\n    status: ItemStatus = \"unchanged\";\r\n\r\n    editMode: ItemEditMode = \"external\";\r\n\r\n    isEdit: boolean = false;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ItemsEditor<TItem, TValue = TItem, TUpdate = TItem, TCreate = TItem> extends BaseEditor<TValue[]> implements IContentView<IList<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>>>, IValidable {\r\n\r\n    protected _changesCount: number = 0;\r\n    protected _isUpdating: number = 0;\r\n\r\n    constructor(config?: IItemsEditorConfig<TItem, TValue, TUpdate, TCreate>) {\r\n\r\n        super({ template: \"ItemsEditor\", ...config });\r\n\r\n        this.bindConfig(\"editMode\", config);\r\n\r\n        this.bindConfig(\"canAdd\", config);\r\n\r\n        this.bindConfig(\"canOpen\", config);\r\n\r\n        this.bindConfig(\"canRemove\", config);\r\n\r\n        this.bindConfig(\"isConfirmRemove\", config);\r\n\r\n        this.bindConfig(\"canEdit\", config);\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"itemActions\", config);\r\n\r\n        this.bindConfig(\"editActionsPriority\", config);\r\n\r\n        this.bindConfig(\"removeActionLabel\", config);\r\n\r\n        this.bindConfig(\"editActionLabel\", config);\r\n\r\n        if (config) {\r\n\r\n            if (!config.editActionLabel)\r\n                this.editActionLabel = Format.action(\"edit-item\", this.itemsSource?.displayName);\r\n\r\n            if (!config.removeActionLabel)\r\n                this.removeActionLabel = Format.action(\"remove-item\", this.itemsSource?.displayName);\r\n\r\n            if (config.createItemAddEditor)\r\n                this.createItemAddEditor = config.createItemAddEditor;\r\n\r\n            if (config.createItemUpdateEditor)\r\n                this.createItemUpdateEditor = config.createItemUpdateEditor;\r\n\r\n            if (config.createItemView)\r\n                this.createItemView = config.createItemView;\r\n\r\n            if (config.attachItem)\r\n                this.attachItem = config.attachItem;\r\n\r\n            if (config.newItem)\r\n                this.newItem = config.newItem;\r\n\r\n            if (config.openItem) {\r\n                this.openItem = config.openItem;\r\n\r\n                if (config.canOpen == undefined)\r\n                    this.canOpen = true;\r\n            }\r\n        }\r\n\r\n        if (!this.itemsSource)\r\n            this.itemsSource = new EditableItemsSource();\r\n\r\n        this.addAction = ActionView.fromAction({\r\n            name: \"add-item\",\r\n            icon: \"fas fa-plus\",\r\n            operation: OperationType.Local,\r\n            displayName: config?.addActionLabel ?? Format.action(\"add-item\", this.itemsSource.displayName),\r\n            executeAsync: async () => await this.addAsync()\r\n        })\r\n\r\n        if (this.value)\r\n            this.beginEditAsync(this.value,);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async loadAsyncWork(): Promise<any> {\r\n\r\n        const awaiters: Promise<void>[] = [];\r\n\r\n        for (const item of this.content)\r\n            awaiters.push(item.loadAsync());\r\n\r\n        await Promise.all(awaiters);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n        this.content.clear();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearErrors() {\r\n        for (const item of this.content)\r\n            item.clearErrors();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    insert() {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async addAsync() {\r\n\r\n        const item = this.newItem();\r\n\r\n        this.attachItem(item, true);\r\n\r\n        const itemView = this.createItem(this.itemToValue(item), item);\r\n\r\n        itemView.item = item;\r\n\r\n        itemView.status = \"added\";\r\n\r\n        if (await itemView.editAsync()) {\r\n\r\n            if (linq(this.content).any(a => this.itemsSource.itemComparer(a.item, itemView.item)))\r\n                return;\r\n\r\n            this.content.add(itemView);\r\n\r\n            await this.notifyEditValueChangedAsync();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected openItem(item: TItem) {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected attachItem(item: TItem, isNew: boolean) {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected isCapable(selector: ItemCapability<TItem>, item: TItem): boolean {\r\n\r\n        if (typeof selector == \"boolean\")\r\n            return selector;\r\n\r\n        return selector(item);\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createItem(value: TValue, item?: TItem) {\r\n\r\n        const result = new ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>({\r\n            value: value,\r\n            item: item,\r\n            addTitle: Format.title(\"add-item\", this.itemsSource.displayName),\r\n            editTitle: \"\",\r\n            itemsSource: this.itemsSource,\r\n            editActionsPriority: this.editActionsPriority,\r\n            editActionLabel: this.editActionLabel,\r\n            removeActionLabel: this.removeActionLabel,\r\n            itemActions: this.itemActions,\r\n            canRemove: this.isCapable(this.canRemove, item),\r\n            canEdit: this.isCapable(this.canEdit, item),\r\n            canOpen: this.isCapable(this.canOpen, item),\r\n            open: () => this.openItem(result.item)\r\n        });\r\n\r\n        result.parentView = this;\r\n\r\n        result.isConfirmRemove = this.isConfirmRemove;\r\n\r\n        result.createAddEditor = () => this.createItemAddEditor(result.item);\r\n\r\n        result.createUpdateEditor = () => this.createItemUpdateEditor(result.item);\r\n\r\n        result.executeAddAsync = item => this.itemsSource.addItemAsync(item);\r\n\r\n        result.executeUpdateAsync = editItem => this.itemsSource.updateItemAsync(editItem, result.item);\r\n\r\n        result.loadAsync = async () => {\r\n\r\n            if (!result.item) {\r\n\r\n                result.item = await this.valueToItemAsync(result.value);\r\n                result.canOpen = this.isCapable(this.canOpen, result.item);\r\n                result.editTitle = Format.title(\"edit-item\", this.itemsSource.getItemText(result.item));\r\n\r\n                this.attachItem(result.item, result.status != \"added\");\r\n            }\r\n\r\n            result.view = this.createItemView(result.item);\r\n\r\n            result.updateView();\r\n        };\r\n\r\n        result.updateValueAsync = async () => {\r\n\r\n            result.canOpen = this.isCapable(this.canOpen, result.item);\r\n\r\n            result.value = this.itemToValue(result.item);\r\n            result.view = this.createItemView(result.item);\r\n            result.editTitle = Format.title(\"edit-item\", this.itemsSource.getItemText(result.item));\r\n\r\n            result.updateView();\r\n\r\n            await this.notifyEditValueChangedAsync();\r\n        }\r\n\r\n        result.removeAsync = async () => {\r\n\r\n            if (result.status == \"added\")\r\n                this.content.remove(result);\r\n            else {\r\n                if (this.isConfirmRemove) {\r\n                    if (!await Interaction.confirmAsync(Format.message(\"msg-remove-confirm\", this.itemsSource.displayName)))\r\n                        return;\r\n                }\r\n\r\n                if (this.status == \"none\")\r\n                    this.status = \"loaded\";\r\n\r\n                result.status = \"removed\";\r\n                await this.notifyEditValueChangedAsync();\r\n            }\r\n        }\r\n\r\n        result.value = value;\r\n\r\n        if (this.status != \"none\")\r\n            result.loadAsync();\r\n\r\n        return result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected itemToValue(item: TItem): TValue {\r\n\r\n        return <any>item;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected valueToItemAsync(value: TValue): Promise<TItem> {\r\n\r\n        return Promise.resolve(value as unknown as TItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemChanged(oldValue: TValue, newValue: TValue) {\r\n\r\n        this._needValidation = true;\r\n\r\n        if (this._isUpdating) {\r\n            this._changesCount++;\r\n            return;\r\n        }\r\n\r\n        this.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: TValue[]) {\r\n\r\n        if (!this.content || this._isUpdating)\r\n            return;\r\n\r\n        this._isUpdating++;\r\n        this._changesCount = 0;\r\n\r\n        this.content.clear();\r\n\r\n        try {\r\n\r\n            if (value) {\r\n                for (const itemValue of value)\r\n                    this.content.add(this.createItem(itemValue));\r\n            }\r\n        }\r\n        finally {\r\n            this._isUpdating--;\r\n        }\r\n\r\n        if (this._changesCount > 0)\r\n            this.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get editValue(): TValue[] {\r\n\r\n        const result: TValue[] = [];\r\n        for (const item of this.content) {\r\n\r\n            if (item.status == \"removed\")\r\n                continue;\r\n\r\n            result.push(item.value);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected async validateAsyncWork(force?: boolean): Promise<boolean> {\r\n\r\n        let isValid = true;\r\n\r\n        for (const item of this.content) {\r\n\r\n            if (!await item.validateAsync(force))\r\n                isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected async commitAsyncWork(force?: boolean) {\r\n\r\n        let isValid = true;\r\n        let isChanged = false;\r\n\r\n        /*\r\n        for (var item of this.content) {\r\n            if (item.isEdit) {\r\n                if (!await item.commitAsync())\r\n                    isValid = false;\r\n            }\r\n        }\r\n        */\r\n\r\n        if (!isValid)\r\n            return false;\r\n\r\n        for (let i = this.content.count - 1; i >= 0; i--) {\r\n\r\n            const item = this.content.get(i);\r\n\r\n            item.clearErrors();\r\n\r\n            if (item.status == \"removed\") {\r\n                if (await this.itemsSource.removeItemAsync(item.item))\r\n                    this.content.removeAt(i);\r\n                else {\r\n                    this.error = \"\";\r\n                    isValid = false;\r\n                }\r\n                isChanged = true;\r\n            }\r\n            else if (item.status == \"modified\" && !isAsyncEditor(item.editor)) {\r\n                const updateItem = await this.itemsSource.updateItemAsync(item.editor.value as TUpdate, item.item);\r\n                if (updateItem) {\r\n                    item.item = updateItem;\r\n                    item.status = \"unchanged\";\r\n                    item.updateView();\r\n                }\r\n                else {\r\n                    this.error = \"\";\r\n                    isValid = false;\r\n\r\n                }\r\n                isChanged = true;\r\n            }\r\n            else if (item.status == \"added\" && !isAsyncEditor(item.editor)) {\r\n                const addItem = await this.itemsSource.addItemAsync(item.editor.value as TCreate);\r\n                if (addItem) {\r\n                    item.item = addItem;\r\n                    item.status = \"unchanged\";\r\n                    item.updateView();\r\n                }\r\n                else {\r\n                    this.error = \"\";\r\n                    isValid = false;\r\n                }\r\n                isChanged = true;\r\n            }\r\n\r\n        }\r\n\r\n        if (isValid) {\r\n\r\n            if (isChanged)\r\n                this.onValueChanged(this.editValue);\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected newItem(): TItem {\r\n\r\n        return this.itemsSource.newItem();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected getItemViewContent(item: TItem): any {\r\n\r\n        return this.itemsSource ? this.itemsSource.getItemText(item) : item.toString();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createItemView(item: TItem): IView {\r\n\r\n        return new TextView({ content: this.getItemViewContent(item) });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createItemUpdateEditor(item: TItem): IItemEditor<TItem, TUpdate> | IAsyncEditor<TItem, TUpdate> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createItemAddEditor(item: TItem): IItemEditor<TItem, TCreate> | IAsyncEditor<TItem, TCreate> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    readonly content: IObservableList<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>> = observableListOf();\r\n\r\n    editActionsPriority: ActionPriority = ActionPriority.Secondary;\r\n\r\n    editActionLabel: string = \"Edit\";\r\n\r\n    removeActionLabel: string = \"Remove\";\r\n\r\n    canAdd: boolean = true;\r\n\r\n    canRemove: ItemCapability<TItem> = true;\r\n\r\n    canEdit: ItemCapability<TItem> = false;\r\n\r\n    canOpen: ItemCapability<TItem> = false;\r\n\r\n    editMode: ItemEditMode = \"inline\";\r\n\r\n    itemActions: IItemAction<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>>[] = [];\r\n\r\n    itemsSource: EditableItemsSource<TItem, any, any, TUpdate, TCreate> = null;\r\n\r\n    addAction: ActionView;\r\n\r\n    isConfirmRemove: boolean = true;\r\n}\r\n\r\n\r\nregisterType(ItemsEditor, \"ItemsEditor\");\r\nregisterType(ItemsEditorItemView, \"ItemsEditorItemView\");\r\n","\r\nimport { Guid } from \"../../Core/Types/Types\";\r\nimport { ContextMenu } from \"../Components/ContextMenu\";\r\nimport { FileUploadView } from \"../Components/FileUploadView\";\r\nimport { IMediaViewConfig, MediaType, MediaView } from \"../Components/MediaView\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport \"Templates/MediaEditor.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\n\r\nexport type ImageEditStatus = \"unchanged\" | \"deleted\" | \"new\" | \"empty\";\r\n\r\nexport interface IMediaData {\r\n\r\n    id?: Guid;\r\n\r\n    type?: MediaType;\r\n\r\n    status: ImageEditStatus;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IMediaUploadConfig extends IBaseEditorConfig<IMediaData> {\r\n\r\n    getUploadUrl: (fileName: string) => string;\r\n\r\n    noMediaUrl: string;\r\n\r\n    getMediaUrl?(data: IMediaData): string;\r\n\r\n    maxFileSize?: number;\r\n\r\n    validMedias?: MediaType[];\r\n\r\n    mediaView?: IMediaViewConfig;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class MediaEditor extends BaseEditor<IMediaData> {\r\n\r\n    constructor(config?: IMediaUploadConfig) {\r\n\r\n        super({ template: \"MediaEditor\", ...config });\r\n\r\n        this.bindConfig(\"noMediaUrl\", config);\r\n\r\n        this.bindConfig(\"maxFileSize\", config);\r\n\r\n        this.bindConfig(\"validMedias\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.getUploadUrl)\r\n                this.getUploadUrl = config.getUploadUrl;\r\n\r\n            if (config.getMediaUrl)\r\n                this.getMediaUrl = () => config.getMediaUrl(this.editValue);\r\n        }\r\n\r\n        this.mediaView = new MediaView({ image: { template: \"ImageInline\" }, video: { template: \"VideoViewInline\" }, ...config?.mediaView });\r\n\r\n        this.fileUpload = new FileUploadView({\r\n\r\n            onChanged: () => this.notifyEditValueChangedAsync()\r\n        });\r\n\r\n        this.fileUpload.visible = false;\r\n\r\n        this.mediaView.content = {\r\n            type: \"empty\"\r\n        };\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected getUploadUrl(fileName: string): string {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected validateAsyncWork(force?: boolean): Promise<boolean> {\r\n\r\n        if (this.fileUpload.status == \"selected\") {\r\n\r\n            if (this.validMedias.indexOf(\"image\") != -1 && this.fileUpload.file.type.startsWith(\"image/\"))\r\n                this.mediaView.content.type = \"image\";\r\n\r\n            else if (this.validMedias.indexOf(\"video\") != -1 && this.fileUpload.file.type.startsWith(\"video/\"))\r\n                this.mediaView.content.type = \"video\";\r\n\r\n            else\r\n                this.error = Format.message(\"msg-invalid-media\");\r\n\r\n            if (this.maxFileSize && this.fileUpload.file.size > this.maxFileSize)\r\n                this.error = Format.message(\"msg-max-size\", (this.maxFileSize / 1024 / 1024).toString());\r\n        }\r\n\r\n        return Promise.resolve(!this.error);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async commitAsyncWork(force?: boolean) {\r\n\r\n        if (this.fileUpload.status == \"selected\") {\r\n\r\n            const result = await this.fileUpload.uploadAsync<Guid>(this.getUploadUrl(this.fileUpload.file.name));\r\n\r\n            this.editValue.id = result;\r\n            this.editValue.status = \"new\";\r\n            this.editValue.type = this.mediaView.content.type;\r\n\r\n            this.mediaView.content = {\r\n                src: this.getMediaUrl(),\r\n                type: this.mediaView.content.type\r\n            };\r\n\r\n            this.notifyEditValueChangedAsync();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected getMediaUrl(): string {\r\n\r\n        throw \"Not Implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async beginEditAsync(value: IMediaData) {\r\n\r\n        await super.beginEditAsync(value);\r\n\r\n        if (!this.editValue)\r\n            this.editValue = {\r\n                id: null,\r\n                type: \"empty\",\r\n                status: \"empty\"\r\n            };\r\n\r\n        if (this.editValue.status == \"empty\")\r\n            this.mediaView.content = {\r\n                type: \"image\",\r\n                src: this.noMediaUrl\r\n            };\r\n\r\n        else {\r\n            this.mediaView.content = {\r\n                type: this.editValue.type,\r\n                src: this.getMediaUrl()\r\n            };\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    change() {\r\n\r\n        this.fileUpload.visible = true;\r\n\r\n        this.fileUpload.select();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove() {\r\n\r\n        this.editValue.status = \"deleted\";\r\n\r\n        this.mediaView.content = {\r\n            type: \"image\",\r\n            src: this.noMediaUrl\r\n        };\r\n\r\n        this.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    showMenu() {\r\n\r\n        const menu = new ContextMenu();\r\n\r\n        if (this.editValue.status == \"new\" || this.editValue.id) {\r\n            menu.addAction({\r\n                name: \"remove-item\",\r\n                icon: \"fas fa-trash\",\r\n                displayName: \"delete\",\r\n                executeAsync: async () => this.remove()\r\n            });\r\n        }\r\n\r\n        menu.addAction({\r\n            name: \"edit-item\",\r\n            icon: \"fas fa-edit\",\r\n            displayName: \"change\",\r\n            executeAsync: async () => this.change()\r\n        })\r\n\r\n        menu.showAsync(undefined, <MouseEvent>window.event);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    fileUpload: FileUploadView = null;\r\n\r\n    mediaView: MediaView = null;\r\n\r\n    noMediaUrl: string = null;\r\n\r\n    maxFileSize: number = null;\r\n\r\n    validMedias: MediaType[] = [\"video\", \"image\"];\r\n}\r\n\r\nregisterType(MediaEditor, \"MediaEditor\");","import { linq } from \"../../Core/Linq\";\r\nimport { equalsArray } from \"../../Core/Utils/ArrayUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { SelectMultipleItemsActivity } from \"../Activities/SelectMultipleItemsActivity\";\r\nimport { RemovableItemView } from \"../Components/RemovableItemView\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\nimport { BasePicker, IBasePickerConfig } from \"./BasePicker\";\r\nimport \"Templates/MultiItemPicker.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IMultiItemPickerConfig<TItem, TValue, TFilter, TEdit> extends IBasePickerConfig<TItem, TValue, TValue[], TFilter, TEdit> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class MultiItemPicker<TItem, TValue, TFilter = any, TEdit = TItem> extends BasePicker<TItem, TValue, TValue[], TFilter, TEdit> {\r\n\r\n    constructor(config?: IMultiItemPickerConfig<TItem, TValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async selectAsync() {\r\n\r\n        let mustRefresh = false;\r\n\r\n        if (this.selector == null) {\r\n            this.selector = new SelectMultipleItemsActivity<TItem, TValue, TFilter, TEdit>({\r\n                createItemEditor: () => this.createItemEditor(),\r\n                createItemContentView: item => this.createItemView(item),\r\n                createItemListView: item => this.createItemListView(item),\r\n                itemsSource: this.itemsSource,\r\n                addLabel: this.addLabel,\r\n                searchMode: this.searchMode,\r\n                tooltip: this.pickLabel,\r\n                canAdd: this.canAdd\r\n            });\r\n\r\n            this.selector.filters = this.filters;\r\n        }\r\n        else\r\n            mustRefresh = true;\r\n\r\n        this.selector.setSelectedItems(linq(this.items).select(a => a.item).toArray());\r\n\r\n        if (mustRefresh)\r\n            await this.selector.refreshAsync();\r\n\r\n        const result = await (await Actions.loadPageAsync(this.selector)).result;\r\n\r\n        if (result != null) {\r\n            const newValue = linq(result).select(a => this.itemsSource.getItemValue(a)).toArray();\r\n            if (!equalsArray(newValue, this.editValue))\r\n                this.editValue = newValue;\r\n        }\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: TValue[]): TValue[] {\r\n        return value ? value.slice() : [];\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: TValue[]): TValue[] {\r\n        return value ? value.slice() : [];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updateViewAsync() {\r\n\r\n        if (this.status == \"loading\")\r\n            return;\r\n\r\n        this.items.clear();\r\n\r\n        if (this.editValue) {\r\n            this.status = \"loading\";\r\n            try {\r\n                for (const value of this.editValue) {\r\n\r\n                    const item = await this.itemsSource.getItemByValueAsync(value);\r\n\r\n                    if (!item)\r\n                        continue;\r\n\r\n                    const itemView = new RemovableItemView({\r\n                        item: item,\r\n                        content: this.createItemView(item),\r\n                        removeAsync: async () => {\r\n\r\n                            this.items.remove(itemView);\r\n\r\n                            const value = this.itemsSource.getItemValue(itemView.item);\r\n\r\n                            const index = linq(this.editValue).indexOf(a => this.itemsSource.equals(a, value));\r\n\r\n                            this.editValue.splice(index, 1);\r\n\r\n                            await this.notifyEditValueChangedAsync();\r\n                        }\r\n                    });\r\n\r\n                    this.items.add(itemView);\r\n                }\r\n            }\r\n            finally {\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    selector: SelectMultipleItemsActivity<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    readonly items: IObservableList<RemovableItemView<TItem>> = observableListOf();\r\n}\r\n\r\n\r\nregisterType(MultiItemPicker, \"MultiItemPicker\");","import { IList } from \"../../Core/Abstraction/IList\";\r\nimport { equals, isEmpty, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { IEditor } from \"../Abstraction/IEditor\";\r\nimport { IPropertiesHost } from \"../Abstraction/IPropertiesHost\";\r\nimport { IPropertyViewConfig, PropertyView } from \"../Components/PropertyView\";\r\nimport { View } from \"../Components/View\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\ntype PropertiesOf<TObj extends object> = {\r\n    [TKey in keyof TObj]: PropertyView<TObj[TKey], IEditor<TObj[TKey], any>, TObj>\r\n};\r\n\r\n\r\n/********************************************/\r\n\r\nexport interface IObjectEditorConfig<TObj extends object> extends IBaseEditorConfig<TObj> {\r\n\r\n    properties?: { [TKey in keyof Partial<TObj>]: IPropertyViewConfig<TObj[TKey], TObj> };\r\n\r\n    propertyTemplateName?: Bindable<string>;\r\n\r\n    defaultProperty?: keyof TObj;\r\n\r\n    emptyView?: View;\r\n\r\n    onPropertyChanged?: <TKey extends keyof TObj>(propName: TKey, value: TObj[TKey], oldValue: TObj[TKey], target: TObj) => void;\r\n}\r\n\r\n/********************************************/\r\n\r\ninterface ICommitPropertyResult {\r\n    isValid: boolean;\r\n    isChanged: boolean;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ObjectEditor<TObj extends object> extends BaseEditor<TObj> implements IContentView<IList<PropertyView<any>>>, IPropertiesHost<TObj> {\r\n\r\n    protected _proxy: TObj;\r\n    protected _changesCount: number = 0;\r\n    protected _isUpdating: number = 0;\r\n    protected _onPropertyChanged?: <TKey extends keyof TObj>(propName: TKey, value: TObj[TKey], oldValue: TObj[TKey], target: TObj) => void;\r\n\r\n    constructor(config?: IObjectEditorConfig<TObj>) {\r\n\r\n        super({ template: \"ItemsViewForm\", validationMode: \"always\", commitMode: \"manual\", ...config });\r\n\r\n        this.bindConfig(\"propertyTemplateName\", config);\r\n\r\n        this.bindConfig(\"defaultProperty\", config);\r\n\r\n        this.bindConfig(\"emptyView\", config);\r\n\r\n        this.prop(\"content\");\r\n\r\n        if (config) {\r\n            this._onPropertyChanged = config.onPropertyChanged;\r\n\r\n            if (config.properties) {\r\n                for (const propName in config.properties) {\r\n                    config.properties[propName].name = propName;\r\n                    this.addProperty(config.properties[propName]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.createProxy();\r\n\r\n        if (!isEmpty(this.value))\r\n            this.beginEditAsync(this.value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    addProperty(config: IPropertyViewConfig<TObj[keyof TObj], TObj>) {\r\n\r\n        const item = new PropertyView({\r\n            name: config.name,\r\n            template: this.prop(\"propertyTemplateName\"),\r\n            ...config,\r\n            host: this\r\n        });\r\n        \r\n\r\n        this.properties[config.name] = item;\r\n\r\n        return item;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async beginEditWorkAsync(value: TObj) {\r\n\r\n        if (!this.value)\r\n            this.value = <any>{};\r\n\r\n        this.isDirty = true\r\n\r\n        for (const propName in this.properties) {\r\n\r\n            const prop = this.properties[propName];\r\n\r\n            if (prop.value != undefined)\r\n                await prop.editor.beginEditAsync(prop.value);\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearErrors() {\r\n        for (const propName in this.properties)\r\n            this.properties[propName].error = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async validateAsyncWork(force?: boolean) {\r\n\r\n        let isValid = true;\r\n\r\n        const curValue = this.editValue;\r\n\r\n        for (const propName in this.properties) {\r\n\r\n            const prop = this.properties[propName];\r\n\r\n            if (!await prop.validateAsync(curValue, force)) {\r\n                this.isValid = false;\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createProxy() {\r\n\r\n        this._proxy = <any>{};\r\n\r\n        this.content.clear();\r\n\r\n        for (const propName in this.properties) {\r\n\r\n            const curProp = this.properties[propName];\r\n\r\n            curProp.prop(\"value\").subscribe((value, oldValue) =>\r\n                this.onPropertyValueChanged(propName, value as any, oldValue as any));\r\n\r\n            curProp.prop(\"isValid\").subscribe(value => {\r\n\r\n                if (!value)\r\n                    this.isValid = false;\r\n            });\r\n\r\n            curProp.prop(\"isDirty\").subscribe(value => {\r\n\r\n                if (value)\r\n                    this.isDirty = true;\r\n            });\r\n\r\n            this.content.add(curProp);\r\n\r\n            Object.defineProperty(this._proxy, propName, {\r\n                enumerable: true,\r\n                get: () => curProp.value,\r\n                set: value => curProp.value = value\r\n            })\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    activateAsync(): Promise<void> {\r\n\r\n        if (this.defaultProperty)\r\n            return this.editor(this.defaultProperty).activateAsync();\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async loadAsyncWork() {\r\n\r\n        const awaiters: Promise<void>[] = [];\r\n\r\n        for (const propName in this.properties)\r\n            awaiters.push(this.properties[propName].loadAsync());\r\n\r\n        await Promise.all(awaiters);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n\r\n        this._isUpdating++;\r\n\r\n        try {\r\n\r\n            for (const propName in this.properties)\r\n                this.property(propName).clear();\r\n        }\r\n        finally {\r\n            this._isUpdating--;\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: TObj): TObj {\r\n        return undefined;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async commitAsyncWork(force?: boolean) {\r\n\r\n        let isChanged = false;\r\n\r\n        let isValid = true;\r\n\r\n        if (!this.value)\r\n            this.value = {} as TObj;\r\n\r\n        for (const propName in this.properties) {\r\n\r\n            const commitResult = await this.commitPropertyAsync(propName, false);\r\n\r\n            if (!commitResult.isValid)\r\n                isValid = false;\r\n\r\n            if (!commitResult.isChanged)\r\n                isChanged = true;\r\n        }\r\n\r\n        if (isValid) {\r\n\r\n            if (isChanged)\r\n                this.onValueChanged(this.value);\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async commitPropertyAsync(propName: keyof TObj, validate: boolean) {\r\n\r\n        const result: ICommitPropertyResult = {\r\n            isValid: true,\r\n            isChanged: false\r\n        };\r\n\r\n        const prop = this.property(propName);\r\n\r\n        if (validate && !await prop.validateAsync(this.editValue, false))\r\n            result.isValid = false;\r\n\r\n        else if (!await prop.editor.commitAsync())\r\n            result.isValid = false;\r\n\r\n        else {\r\n\r\n            if (!equals(prop.value, this.value[propName])) {\r\n                this.value[propName] = prop.value;\r\n                result.isChanged = true;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    editor<TKey extends keyof TObj>(propName: TKey): IEditor<TObj[TKey], any> {\r\n        return this.properties[propName].editor;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    property<TKey extends keyof TObj>(propName: TKey): PropertyView<TObj[TKey]> {\r\n        return this.properties[propName];\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async onPropertyValueChanged<TKey extends keyof TObj>(propName: TKey, value: TObj[TKey], oldValue: TObj[TKey]) {\r\n\r\n        this._needValidation = true;\r\n\r\n        if (this._isUpdating || this._isEditing) {\r\n\r\n            this._changesCount++;\r\n            return;\r\n        }\r\n\r\n        if (this.commitMode == \"onchange\") {\r\n\r\n            const commitResult = await this.commitPropertyAsync(propName as any, true);\r\n            if (commitResult.isChanged) {\r\n                this._needValidation = true;\r\n                this.isDirty = true;\r\n            }\r\n        }\r\n        else\r\n            await this.notifyEditValueChangedAsync();\r\n\r\n        if (this._onPropertyChanged)\r\n            this._onPropertyChanged(propName, value, oldValue, this._proxy as TObj);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: TObj) {\r\n\r\n        if (this._isUpdating)\r\n            return;\r\n\r\n        this._isUpdating++;\r\n\r\n        this._changesCount = 0;\r\n\r\n        try {\r\n\r\n            if (isEmpty(value))\r\n                this.clear();\r\n            else {\r\n\r\n                for (const propName in this.properties)\r\n                    this._proxy[propName] = value[propName];\r\n            }\r\n        }\r\n        finally {\r\n            this._isUpdating--;\r\n        }\r\n\r\n        if (this._changesCount > 0)\r\n            this.notifyEditValueChangedAsync();\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get editValue(): TObj {\r\n        return this._proxy;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    properties: PropertiesOf<TObj> = <any>{};\r\n\r\n    defaultProperty: keyof TObj = null;\r\n\r\n    propertyTemplateName = \"PropertyView\";\r\n\r\n    emptyView: View = null;\r\n\r\n    readonly content: IObservableList<PropertyView<any>> = observableListOf();\r\n}\r\n\r\nregisterType(ObjectEditor, \"ObjectEditor\");","\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\nimport \"Templates/Attach.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\ndeclare var Quill: any;\r\n\r\nexport interface IRichTextEditorConfig extends IBaseTextEditorConfig<string> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class RichTextEditor extends BaseTextEditor<string> implements IHTMLAttach {\r\n\r\n    constructor(config?: IRichTextEditorConfig) {\r\n\r\n        super({ template: \"Attach\", ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        this.editor = new Quill(element, {\r\n            theme: \"snow\",\r\n        });\r\n\r\n        this.editor.root.innerHTML = this.value;\r\n\r\n        this.editor.on(\"text-change\", () => this.notifyEditValueChangedAsync());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set editValue(value: string) {\r\n        if (this.editor)\r\n            this.editor.root.innerHTML = value;\r\n    }\r\n\r\n    get editValue() {\r\n        if (this.editor)\r\n            return this.editor.root.innerHTML;\r\n        return this.value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    editor: any;\r\n}\r\n\r\nregisterType(RichTextEditor, \"RichTextEditor\");","import { linq } from \"../../Core/Linq\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IEditor } from \"../Abstraction/IEditor\";\r\nimport { NavBar } from \"../Components/NavBar\";\r\nimport { IViewComponentConfig, ViewComponent } from \"../Components/ViewComponent\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport \"Templates/SectionEditor.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ISectionEditorViewConfig<TValue> extends IViewComponentConfig {\r\n\r\n    editor?: IEditor<TValue, any>;\r\n\r\n    title?: Bindable<LocalString>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport interface ISectionEditorConfig<TValue> extends IBaseEditorConfig<TValue> {\r\n\r\n    sections?: ISectionEditorViewConfig<TValue>[];\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nclass SectionEditorView<TValue> extends ViewComponent {\r\n\r\n    constructor(config?: ISectionEditorViewConfig<TValue>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfigString(\"title\", config);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    title: string = null;\r\n\r\n    editor?: IEditor<TValue, any>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class SectionEditor<TValue, TEdit = TValue> extends BaseEditor<TValue, TEdit> {\r\n\r\n    constructor(config?: ISectionEditorConfig<TValue>) {\r\n\r\n        super({ template: \"SectionEditor\", ...config });\r\n\r\n        this.navBar = new NavBar<SectionEditorView<TValue>>({\r\n            styles: [\"tab-view\", \"surface\"],\r\n            itemTemplate: \"TextView\",\r\n            itemBehavoirs: [\"ripple\"],\r\n            selectedItem: this.prop(\"activeSectionName\")\r\n        });\r\n\r\n        if (config) {\r\n            if (config.sections)\r\n                config.sections.forEach(a => this.addSection(a));\r\n        }\r\n\r\n        if (this.sections.count > 0)\r\n            this.activeSectionName = this.sections.get(0).name;\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async loadAsyncWork() {\r\n\r\n        for (const section of this.sections) {\r\n            if (section.editor)\r\n                await section.editor.loadAsync();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async beginEditWorkAsync(value: TValue) {\r\n\r\n        for (const section of this.sections) {\r\n            if (section.editor)\r\n                await section.editor.beginEditAsync(value);\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async validateAsyncWork(force?) {\r\n\r\n        let isValid = true;\r\n\r\n        for (const section of this.sections) {\r\n            if (section.editor)\r\n                if (!await section.editor.validateAsync(force)) {\r\n                    isValid = false;\r\n                    this.activeSectionName = section.name;\r\n                }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async commitAsyncWork(force?) {\r\n\r\n        let isValid = true;\r\n\r\n        for (const section of this.sections) {\r\n            if (section.editor)\r\n                if (!await section.editor.commitAsync(force))\r\n                    isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    getSection(name: string) {\r\n\r\n        return linq(this.sections).first(a => a.name == name);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    addSection(config: ISectionEditorViewConfig<TValue>) {\r\n        const item = new SectionEditorView(config);\r\n\r\n        this.sections.add(item);\r\n\r\n        this.navBar.addItem({\r\n            text: item.prop(\"title\"),\r\n            name: item.name,\r\n            content: item\r\n        });\r\n\r\n        return item;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    readonly sections: IObservableList<SectionEditorView<TValue>> = observableListOf();\r\n\r\n    readonly navBar: NavBar<SectionEditorView<TValue>>;\r\n\r\n    activeSectionName: string = null;\r\n}\r\n\r\n\r\nregisterType(SectionEditorView, \"SectionEditorView\");\r\n\r\nregisterType(SectionEditor, \"SectionEditor\");","﻿import { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { SelectSingleItemActivity } from \"../Activities/SelectSingleItemActivity\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\nimport { BasePicker, IBasePickerConfig } from \"./BasePicker\";\r\nimport \"Templates/SingleItemPicker.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ISingleItemPickerConfig<TItem, TValue, TFilter, TEdit> extends IBasePickerConfig<TItem, TValue, TValue, TFilter, TEdit> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SingleItemPicker<TItem, TValue, TFilter = any, TEdit = TItem> extends BasePicker<TItem, TValue, TValue, TFilter, TEdit> {\r\n\r\n    constructor(config?: ISingleItemPickerConfig<TItem, TValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n\r\n        this.clearAction = ActionView.fromActionIcon({\r\n            name: \"clear\",\r\n            icon: \"fas fa-times\",\r\n            displayName: \"clear\",\r\n            executeAsync: () => Promise.resolve(this.clear())\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async selectAsync() {\r\n\r\n        let mustRefresh = false;\r\n\r\n        if (this.selector == null) {\r\n            this.selector = new SelectSingleItemActivity<TItem, TValue, TFilter, TEdit>({\r\n                itemsSource: this.itemsSource,\r\n                createItemEditor: () => this.createItemEditor(),\r\n                createItemContentView: item => this.createItemListView(item),\r\n                pageSize: this.pageSize,\r\n                addLabel: this.addLabel,\r\n                tooltip: this.pickLabel,\r\n                canAdd: this.canAdd\r\n            });\r\n\r\n            this.selector.filters = this.filters;\r\n        }\r\n        else\r\n            mustRefresh = true;\r\n\r\n        this.selector.selectedValue = this.editValue;\r\n\r\n        if (mustRefresh)\r\n            await this.selector.refreshAsync();\r\n\r\n        const result = await (await Actions.loadPageAsync(this.selector)).result;\r\n\r\n        if (result != null)\r\n            this.editValue = this.itemsSource.getItemValue(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemEditor(): IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected async updateViewAsync() {\r\n\r\n        if (this.status == \"loading\")\r\n            return;\r\n\r\n        if (this.editValue) {\r\n\r\n            this.status = \"loading\";\r\n            try {\r\n                const item = await this.itemsSource.getItemByValueAsync(this.editValue);\r\n                this.contentView = this.createItemView(item);\r\n            }\r\n            finally {\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n        else\r\n            this.contentView = null;\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    selector: SelectSingleItemActivity<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    contentView: IView = null;\r\n\r\n    clearAction: ActionView = null;\r\n}\r\n\r\n\r\nregisterType(SingleItemPicker, \"SingleItemPicker\");","import { linq } from \"../../Core/Linq\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { PopUpEditor } from \"./PopupEditor\";\r\nimport { ISelectableItemView } from \"../Abstraction/ISelectableItemView\";\r\nimport \"Templates/ItemSelector.html\";\r\nimport {  SelectableItemView } from \"../Components/SelectableItemView\";\r\nimport { Item } from \"../Items/Item\";\r\n\r\nexport interface IMultiItemSelectorConfig<TItem, TValue> extends IBaseEditorConfig<TValue[]> {\r\n\r\n    itemsSource?: Bindable<ItemsSource<TItem, TValue>>;\r\n\r\n    items?: TItem[];\r\n\r\n    createItemView?: (item: TItem) => ISelectableItemView<TValue>;\r\n\r\n    placeholder?: Bindable<LocalString>;\r\n\r\n    itemTemplate?: CatalogTemplate<ISelectableItemView<TValue>>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class MultiItemSelector<TItem, TValue> extends BaseEditor<TValue[]>  {\r\n\r\n    constructor(config?: IMultiItemSelectorConfig<TItem, TValue>) {\r\n\r\n        super({ template: \"SelectEditor\", ...config });\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"itemTemplate\", config);\r\n\r\n        this.bindConfigString(\"placeholder\", config);\r\n\r\n        if (config?.createItemView)\r\n            this.createItemViewWork = config?.createItemView;\r\n\r\n        if (config?.items) {\r\n\r\n            config.items.forEach(a => this.items.add(this.createItemView(a)));\r\n\r\n            this.status = \"loaded\";\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async selectAsync() {\r\n        const editor = new PopUpEditor({\r\n\r\n            editor: new MultiItemSelector({\r\n                template: \"MultiItemSelectorList\",\r\n                itemsSource: this.itemsSource,\r\n                styles: [\"no-padding-items-h\"]\r\n            }),\r\n            saveOnCommit: true,\r\n            saveLabel: \"select\",\r\n            closeLabel: \"cancel\",\r\n            title: \"select-an-item\",\r\n            styles: [\"\"]\r\n        });\r\n\r\n        const result = await editor.editAsync(this.value)\r\n        if (result !== null)\r\n            this.editValue = result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    findItemByValue(value: TValue) {\r\n\r\n        if (this.itemsSource)\r\n            return linq(this.items).first(a => this.itemsSource.equals(a.item, value));\r\n        return linq(this.items).first(a => a.item == value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: TValue[]) {\r\n\r\n        for (const item of this.items) {\r\n            item.isSelected = value && linq(value).any(a=> Item.getValue(a) == Item.getValue(item.item));\r\n        }\r\n    }\r\n\r\n    get editValue(): TValue[] {\r\n\r\n        return linq(this.items).where(a => a.isSelected).select(a => a.item).toArray();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async loadAsyncWork() {\r\n\r\n        if (this.itemsSource) {\r\n\r\n            this.items.clear();\r\n\r\n            const items = await this.itemsSource.getItemsAsync(this.itemsSource.getFilter());\r\n            if (items)\r\n                items.forEach(a => this.items.add(this.createItemView(a)));\r\n        }\r\n\r\n        this.isDirty = true;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected createItemViewWork(item: TItem): ISelectableItemView<TValue> {\r\n\r\n        if (this.itemsSource)\r\n            return new SelectableItemView({\r\n                item: this.itemsSource.getItemValue(item),\r\n                content: this.itemsSource.getItemText(item),\r\n                template: this.itemTemplate\r\n            });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem) {\r\n\r\n        const itemView = this.createItemViewWork(item);\r\n\r\n        itemView.prop(\"isSelected\").subscribe(value => {\r\n\r\n            if (value)\r\n                this.notifyEditValueChangedAsync();\r\n        });\r\n\r\n        return itemView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    itemTemplate: CatalogTemplate<ISelectableItemView<TValue>> = \"SelectableItemView\";\r\n\r\n    placeholder: string = null;\r\n\r\n    itemsSource: ItemsSource<TItem, TValue> = null;\r\n\r\n    readonly items: IObservableList<ISelectableItemView<TValue>> = observableListOf();\r\n}\r\n\r\nregisterType(MultiItemSelector, \"MultiItemSelector\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\nimport \"Templates/TextEditor.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ITextEditorConfig extends IBaseTextEditorConfig<string> {\r\n\r\n    placeholder?: Bindable<LocalString>;\r\n\r\n    lineCount?: Bindable<number>;\r\n\r\n    maxLength?: Bindable<number>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class TextEditor extends BaseTextEditor<string> {\r\n\r\n    constructor(config?: ITextEditorConfig) {\r\n\r\n        super({ template: \"TextEditor\", ...config });\r\n\r\n        this.bindConfigString(\"placeholder\", config, StringUsage.Tooltip);\r\n\r\n        this.bindConfig(\"lineCount\", config);\r\n\r\n        this.bindConfig(\"maxLength\", config);\r\n\r\n        this.bindConfig(\"trackMode\", config);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    placeholder: string = null;\r\n\r\n    lineCount: number = 1;\r\n\r\n    maxLength: number = null;\r\n}\r\n\r\nregisterType(TextEditor, \"TextEditor\");","﻿import { TimeSpan } from \"../../Core/Types/TimeSpan\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\n\r\nexport interface ITimeEditorConfig extends IBaseTextEditorConfig<TimeSpan> {\r\n\r\n    placeholder?: Bindable<string>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class TimeEditor extends BaseTextEditor<TimeSpan> {\r\n\r\n    constructor(config?: ITimeEditorConfig) {\r\n\r\n        super({ template: \"TimeEditor\", ...config });\r\n\r\n        this.bindConfig(\"placeholder\", config);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: TimeSpan): string {\r\n\r\n        return value === null || value === undefined ? \"\" : value.format(\"{hh}:{mm}\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: string): TimeSpan {\r\n\r\n        if (value === undefined || value === null)\r\n            return null;\r\n        const parts = value.split(':');\r\n        if (parts.length != 2)\r\n            return null;\r\n        return TimeSpan.fromMinutes(parseInt(parts[0]) * 60 + parseInt(parts[1]));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    placeholder: string = null;\r\n}\r\n\r\nregisterType(TimeEditor, \"TimeEditor\");","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { IValidationContext, IValidationResult, IValidator } from \"../Abstraction/IValidator\";\r\n\r\nexport namespace Validators {\r\n\r\n    const EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    const PHONE_REGEXP = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/;\r\n\r\n    export var required: IValidator<any, any> = {\r\n        validateAsync: ctx => Promise.resolve({\r\n            isValid: ctx.value != null && ctx.value != \"\" && (!Array.isArray(ctx.value) || ctx.value.length > 0),\r\n            error: Format.message(\"msg-specify-value\", ctx.fieldName)\r\n        } as IValidationResult)\r\n    };\r\n\r\n    /****************************************/\r\n\r\n    export function minValue(value: number): IValidator<number, any> {\r\n        return {\r\n            validateAsync: ctx => Promise.resolve(({\r\n                isValid: ctx.value >= value,\r\n                error: Format.message(\"msg-insert-greater-than\", value.toString())\r\n            }))\r\n        }\r\n    };\r\n\r\n    /****************************************/\r\n\r\n    export function maxValue(value: number): IValidator<number, any> {\r\n        return {\r\n            validateAsync: ctx => Promise.resolve(({\r\n                isValid: ctx.value <= value,\r\n                error: Format.message(\"msg-insert-less-than\", value.toString()),\r\n            }))\r\n        }\r\n    };\r\n\r\n/****************************************/\r\n\r\n   \r\n\r\n    export var integer: IValidator<number, any> = {\r\n        validateAsync: ctx => Promise.resolve(({\r\n            isValid: Math.round(ctx.value) == ctx.value,\r\n            error: Format.message(\"msg-insert-int-number\"),\r\n        }))\r\n    };\r\n\r\n\r\n    /****************************************/\r\n\r\n    export var phone: IValidator<string, any> = {\r\n\r\n        validateAsync: ctx => Promise.resolve(({\r\n            isValid: ctx.value && ctx.value.length >= 9 && PHONE_REGEXP.test(ctx.value.toLowerCase()),\r\n            error: Format.message(\"msg-invalid-phone\", ctx.value)\r\n        }))\r\n\r\n    };\r\n\r\n\r\n\r\n    /****************************************/\r\n\r\n    export var email: IValidator<string, any> = {\r\n\r\n        validateAsync: ctx => Promise.resolve(({\r\n            isValid: ctx.value && EMAIL_REGEXP.test(ctx.value.toLowerCase()),\r\n            error: Format.message(\"msg-invalid-email\", ctx.value)\r\n        }))\r\n\r\n    };\r\n\r\n    /****************************************/\r\n\r\n    export function custom<TValue, TTarget>(validator: (ctx: IValidationContext<TValue, TTarget>) => Promise<IValidationResult>) {\r\n        return {\r\n            validateAsync: async ctx => await validator(ctx)\r\n        }\r\n    };\r\n\r\n}","import { IDictionary } from \"../../Core/Abstraction/IDictionary\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { IconTextView } from \"../Components/IconTextView\";\r\nimport { ListView } from \"../Components/ListView\";\r\nimport { Panel } from \"../Components/Panel\";\r\nimport { ViewComponent } from \"../Components/ViewComponent\";\r\nimport { BooleanEditor } from \"../Editors/BooleanEditor\";\r\nimport { PopUpEditor } from \"../Editors/PopupEditor\";\r\n\r\n\r\ndeclare global {\r\n\r\n    export interface IServices {\r\n\r\n        permissionManager: PermissionManager;\r\n    }\r\n}\r\n\r\n\r\nexport interface IPermission {\r\n\r\n    name: string;\r\n\r\n    ask(): Promise<boolean>;\r\n\r\n    isGranted(): Promise<boolean>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPermissionRequest {\r\n\r\n    permission: IPermission;\r\n\r\n    description: LocalString;\r\n\r\n    granted?: boolean;\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nexport class PermissionRequestItemView extends ViewComponent {\r\n\r\n    constructor(request: IPermissionRequest) {\r\n        super();\r\n\r\n        this.request = request;\r\n\r\n        this.switchView = new BooleanEditor({\r\n            label: this.request.permission.name,\r\n            template: \"Switch\",\r\n            styles: [\"primary\"]\r\n        });\r\n\r\n        this.switchView.beginEditAsync(request.granted);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    request: IPermissionRequest = null;\r\n\r\n    switchView: BooleanEditor = null;\r\n\r\n    isShowInfo: boolean = false;\r\n}\r\n\r\n/****************************************/\r\n\r\nclass PermissionEditor extends BindableObject implements IItemEditor<IPermissionRequest[]> {\r\n\r\n    private _listView: ListView<IPermissionRequest, PermissionRequestItemView> = null;\r\n\r\n    beginEditAsync(item: IPermissionRequest[]) {\r\n\r\n        const panel = new Panel({\r\n            styles: [\"vertical\"]\r\n        });\r\n\r\n\r\n        this._listView = panel.addView(new ListView({\r\n            styles: [\"surface\"],\r\n            items: observableListOf(item),\r\n            isAutoLoad: true,\r\n            createItemView: item => new PermissionRequestItemView(item)\r\n        }));\r\n\r\n        panel.addView(new IconTextView({ text: \"msg-permission-request\", styles: [\"message warning\"] }));\r\n\r\n        this.view = panel;\r\n\r\n        this.value = item;\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    commitAsync(force?: boolean) {\r\n\r\n        for (const item of this._listView.content)\r\n            item.request.granted = item.switchView.editValue;\r\n\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    view: IView = null;\r\n\r\n    value: IPermissionRequest[] = null;\r\n\r\n    readonly isValid: boolean = true;\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class PermissionManager {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async requireAsync(...permissions: IPermissionRequest[]) {\r\n\r\n        const toAsk: IPermissionRequest[] = [];\r\n\r\n        const result: IDictionary<boolean> = {};\r\n\r\n\r\n        for (const perm of permissions) {\r\n            if (!(await perm.permission.isGranted()))\r\n                toAsk.push(perm);\r\n            else {\r\n                result[perm.permission.name] = true;\r\n                perm.granted = true;\r\n            }\r\n        }\r\n\r\n        if (toAsk.length > 0) {\r\n\r\n            const editor = new PopUpEditor<IPermissionRequest[]>({\r\n                editor: new PermissionEditor(),\r\n                saveLabel: \"accept\",\r\n                savePriority: ActionPriority.Evidence,\r\n                title: \"permission-request\",\r\n            });\r\n\r\n            const editResult = await editor.editAsync(toAsk);\r\n\r\n            if (editResult) {\r\n\r\n                for (const item of editResult) {\r\n\r\n                    if (item.granted)\r\n                        item.granted = await item.permission.ask();\r\n\r\n                    result[item.permission.name] = item.granted;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    geolocation: IPermission = {\r\n\r\n        name: \"geolocation\",\r\n\r\n        ask: () => new Promise(res => {\r\n\r\n            function setResult(result: boolean) {\r\n                localStorage.setItem(\"geolocation\", result ? \"granted\" : \"denied\");\r\n                res(result);\r\n            }\r\n\r\n            navigator.geolocation.getCurrentPosition(\r\n                () => setResult(true),\r\n                error => setResult(error.code != error.PERMISSION_DENIED)\r\n                , { maximumAge: Infinity, timeout: 2000 });\r\n\r\n        }),\r\n\r\n        isGranted: async () => {\r\n            if (\"permissions\" in navigator)\r\n                return (await navigator.permissions.query({ name: \"geolocation\" })).state == \"granted\";\r\n\r\n            return localStorage.getItem(\"geolocation\") == \"granted\";\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notification: IPermission = {\r\n\r\n        name: \"notification\",\r\n\r\n        ask: () => new Promise(res => {\r\n\r\n            if (!(\"Notification\" in window)) {\r\n                console.warn(\"Notification not supported\");\r\n                res(false);\r\n            }\r\n\r\n            Notification.requestPermission(p => {\r\n                res(p == \"granted\");\r\n            });\r\n        }),\r\n\r\n        isGranted: () => Promise.resolve(!(\"Notification\" in window) ? true : Notification.permission == \"granted\")\r\n    }\r\n}\r\n\r\nregisterType(PermissionRequestItemView, \"PermissionRequestItemView\");","﻿import { IOperation, IOperationConfig, IOperationManager, IOperationProgress, isString, LocalString, OperationType, event } from \"../WebApp\";\r\n\r\nclass BaseOperation implements IOperation {\r\n\r\n    private _progress: IOperationProgress;\r\n    private _type: OperationType;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config: IOperationConfig) {\r\n\r\n        if (!config.type)\r\n            this._type = OperationType.Global;\r\n        else\r\n            this._type = config.type;\r\n\r\n        this.parentOperation = config.parentOperation;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    end(): void {\r\n        Operation.end(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get type(): OperationType {\r\n        return this._type;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get progress(): IOperationProgress {\r\n        return this._progress;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set progress(value: IOperationProgress) {\r\n\r\n        this._progress = value;\r\n\r\n        if (this._progress) {\r\n\r\n            console.log(this.getProgressDescription(this._progress));\r\n\r\n            if (this._progress.message)\r\n                this.message = this._progress.message;\r\n\r\n            Operation.onProgress.raise(this, { operation: this, progress: value });\r\n        }\r\n        else\r\n            this.message = undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addSubOperation(op: IOperation) {\r\n\r\n    }\r\n    /****************************************/\r\n\r\n    removeSubOperation(op: IOperation) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getProgressDescription(value: IOperationProgress): string {\r\n\r\n        let msg = \"Progress (\" + this.message + \"): \";\r\n\r\n        if (value.message)\r\n            msg += \"'\" + value.message + \"'\";\r\n\r\n        if (value.current != null && value.totCount != null)\r\n            msg += \" - \" + value.current + \"/\" + value.totCount + \" (\" + Math.round(100 / value.totCount * value.current) + \"%)\";\r\n        else if (value.current != null)\r\n            msg += value.current;\r\n\r\n        return msg;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    message: LocalString = null;\r\n\r\n    parentOperation: IOperation = null;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class BaseOperationManager implements IOperationManager {\r\n\r\n    private _oprations: IOperation[] = [];\r\n\r\n    progress(progress: IOperationProgress | string) {\r\n\r\n        if (isString(progress))\r\n            progress = <IOperationProgress>{ message: progress };\r\n\r\n        if (this.current)\r\n            this.current.progress = <IOperationProgress>progress;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    begin(configOrMessge: IOperationConfig | string): IOperation {\r\n\r\n        if (isString(configOrMessge))\r\n            configOrMessge = <IOperationProgress>{ message: configOrMessge };\r\n\r\n        let operation = new BaseOperation(configOrMessge);\r\n\r\n        console.group(\"Begin operation: \", $string(<string>operation.message ?? \"\"));\r\n\r\n        operation.progress = configOrMessge;\r\n\r\n        if (operation.parentOperation === undefined)\r\n            operation.parentOperation = this.current;\r\n\r\n        this._oprations.push(operation);\r\n\r\n        if (!operation.parentOperation) {\r\n\r\n            if (operation.type == OperationType.Global) {\r\n\r\n            }\r\n        }\r\n        else\r\n            operation.parentOperation.addSubOperation(operation);\r\n\r\n        this.onBegin.raise(this, operation);\r\n\r\n        return operation;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    end(operation: IOperation) {\r\n\r\n        console.groupEnd();\r\n\r\n        console.log(\"End operation: \", $string(<string>operation.message ?? \"\"));\r\n\r\n        const index = this._oprations.indexOf(operation);\r\n        this._oprations.splice(index, 1);\r\n\r\n        if (operation.parentOperation)\r\n            operation.parentOperation.removeSubOperation(operation);\r\n        else {\r\n            if (operation.type == OperationType.Global) {\r\n            }\r\n        }\r\n        this.onEnd.raise(this, operation);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): IOperation {\r\n        return this._oprations.length > 0 ? this._oprations[this._oprations.length - 1] : null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get operations(): Iterable<IOperation> {\r\n        return this._oprations;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly onBegin = event<IOperation>();\r\n    readonly onEnd = event<IOperation>();\r\n    readonly onProgress = event<{ operation: IOperation, progress: IOperationProgress }>();\r\n}\r\n\r\n/****************************************/\r\n\r\n export var Operation: IOperationManager = new BaseOperationManager();\r\n","﻿/****************************************/\r\n/* IDataAdapter\r\n/****************************************/\r\n\r\nimport { delayAsync } from \"../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts\";\r\nimport { IDictionary, linq } from \"../WebApp\";\r\nimport { Operation } from \"./Operation\";\r\nimport { CsvSplitEnumerator, SplitEnumerator } from \"./SplitEnumerator\";\r\n\r\ntype TextParser<T> = (value: string) => T;\r\n\r\ntype TextFormatter<T> = (value: T) => string;\r\n\r\ninterface IDaColumnAnalisys {\r\n    values: IDictionary<number>;\r\n    booleanCount: number;\r\n    stringCount: number;\r\n    emptyCount: number;\r\n    numberCount: number;\r\n    dateCount: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaSeriePoint {\r\n    x: any;\r\n    y: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaSerie {\r\n    name: string;\r\n    values: IDaSeriePoint[];\r\n    colId: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaGroup {\r\n    name: string;\r\n    colId?: string;\r\n    groups?: IDictionary<IDaGroup>;\r\n    series?: IDictionary<IDaSerie>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaMainGroup extends IDaGroup {\r\n}\r\n\r\n/****************************************/\r\n\r\nexport type IDaTable = IDictionary<any>[];\r\n\r\n/****************************************/\r\n\r\nexport enum DaColumnType {\r\n    Exclude,\r\n    XAxis,\r\n    Serie,\r\n    Group\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaColumnFilter<T> {\r\n\r\n    include?: T[];\r\n    exclude?: T[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaColumn<T> {\r\n\r\n    id: string;\r\n    type: DaColumnType;\r\n    name?: string;\r\n    filter?: IDaColumnFilter<T>;\r\n    parser?: TextParser<T>;\r\n    formatter?: TextFormatter<T>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaOptions {\r\n    rowsCount?: number;\r\n    columns?: IDaColumn<any>[];\r\n    source?: () => Promise<string>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDataAdapter<TOptions extends IDaOptions> {\r\n\r\n    loadGroupAsync(text: string, options: TOptions): Promise<IDaMainGroup>;\r\n\r\n    loadTableAsync(text: string, options: ITextTableDaOptions, maxItems?: number): Promise<IDaTable>\r\n\r\n    analyzeAsync(text: string, options?: TOptions, maxRows?: number): Promise<TOptions>;\r\n}\r\n\r\n/****************************************/\r\n\r\nabstract class BaseDataAdapter<TOptions extends IDaOptions> implements IDataAdapter<TOptions> {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    abstract loadGroupAsync(text: string, options: TOptions): Promise<IDaMainGroup>;\r\n\r\n    abstract loadTableAsync(text: string, options: TOptions, maxItems?: number): Promise<IDaTable>;\r\n\r\n    abstract analyzeAsync(text: string, options?: TOptions, maxRows?: number): Promise<TOptions>;\r\n}\r\n\r\n/****************************************/\r\n/* TextTableDataAdapter\r\n/****************************************/\r\n\r\nexport interface ITextTableDaOptions extends IDaOptions {\r\n\r\n    hasHeader?: boolean;\r\n    columnSeparator?: string;\r\n    rowSeparator?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class TextTableDataAdapter extends BaseDataAdapter<ITextTableDaOptions> {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createIdentifier(value: string): string {\r\n        let state = 0;\r\n        let result = \"\";\r\n        for (let i = 0; i < value.length; i++) {\r\n            const c = value[i];\r\n            switch (state) {\r\n                case 0:\r\n                    result += c.toLowerCase();\r\n                    state = 1;\r\n                    break;\r\n                case 1:\r\n                    if (c == \" \" || c == \"-\" || c == \"_\")\r\n                        state = 2;\r\n                    else\r\n                        result += c;\r\n                    break;\r\n                case 2:\r\n                    result += c.toUpperCase();\r\n                    state = 1;\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected extractHeader(text: string, options: ITextTableDaOptions) {\r\n\r\n        const firstRow = linq(new SplitEnumerator(text, options.rowSeparator)).first();\r\n        const cols = linq(new CsvSplitEnumerator(firstRow, options.columnSeparator)).toArray();\r\n\r\n        let headers: string[];\r\n\r\n        if (options.hasHeader !== false) {\r\n\r\n            const rowAnal: IDaColumnAnalisys[] = [];\r\n\r\n            this.analyzeRow(cols, rowAnal);\r\n\r\n            const stringCount = linq(rowAnal).sum(a => a.stringCount);\r\n            const emptyCount = linq(rowAnal).sum(a => a.emptyCount);\r\n\r\n            if (stringCount > 0 && stringCount + emptyCount == cols.length) {\r\n                options.hasHeader = true;\r\n\r\n                headers = linq(cols).select((a, i) => {\r\n                    if (a == \"\")\r\n                        return \"col\" + i;\r\n                    return a;\r\n                }).toArray();\r\n            }\r\n        }\r\n\r\n        if (!headers) {\r\n            options.hasHeader = false;\r\n\r\n            headers = linq(cols).select((a, i) => \"col\" + i).toArray();\r\n        }\r\n        if (!options.columns)\r\n            options.columns = linq(headers).select(a => ({ id: this.createIdentifier(a), name: a, type: DaColumnType.Exclude })).toArray();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected extractRowSeparator(text: string, options: ITextTableDaOptions) {\r\n        if (options.rowSeparator)\r\n            return;\r\n\r\n        const items = [\"\\r\\n\", \"\\n\"];\r\n\r\n        for (var item of items) {\r\n            if (text.indexOf(item) != -1) {\r\n                options.rowSeparator = item;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected extractColumnSeparator(text: string, options: ITextTableDaOptions) {\r\n\r\n        if (options.columnSeparator)\r\n            return;\r\n\r\n        const items = [\"\\t\", \";\", \",\", \" \"];\r\n\r\n        const stats = {};\r\n\r\n        const rows = linq(new SplitEnumerator(text, options.rowSeparator)).take(10);\r\n\r\n        for (let row of rows) {\r\n\r\n            if (row.trim().length == 0)\r\n                continue;\r\n\r\n            for (let item of items) {\r\n\r\n                if (stats[item] === false)\r\n                    continue;\r\n\r\n                const cols = linq(new CsvSplitEnumerator(row, item)).count();\r\n\r\n                if (cols > 1 && !(item in stats))\r\n                    stats[item] = cols;\r\n                else {\r\n                    if (stats[item] != cols)\r\n                        stats[item] = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var key in stats) {\r\n            if (stats[key] !== false) {\r\n                options.columnSeparator = key;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected analyzeRow(cols: string[], result: IDaColumnAnalisys[]) {\r\n\r\n        if (result.length == 0) {\r\n            for (let i = 0; i < cols.length; i++) {\r\n                result.push({\r\n                    values: {},\r\n                    booleanCount: 0,\r\n                    dateCount: 0,\r\n                    emptyCount: 0,\r\n                    numberCount: 0,\r\n                    stringCount: 0\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < cols.length; i++)\r\n            this.analyzeColumn(cols[i], result[i]);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected analyzeColumn(value: string, result: IDaColumnAnalisys) {\r\n\r\n        if (!result.values || Object.keys(result.values).length < 150)\r\n            value in result.values ? result.values[value]++ : result.values[value] = 1;\r\n\r\n        if (value == null || value.length == 0 || value.trim().length == 0)\r\n            result.emptyCount++;\r\n\r\n        else if (!isNaN(<any>value))\r\n            result.numberCount++;\r\n\r\n        else if (Date.parse(value))\r\n            result.dateCount++;\r\n\r\n        else if (value == \"true\" || value == \"false\")\r\n            result.booleanCount++;\r\n        else\r\n            result.stringCount++;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParser(anal: IDaColumnAnalisys): TextParser<any> {\r\n\r\n        if (anal.numberCount > 0 && anal.stringCount == 0)\r\n            return a => isNaN(<any>a) ? null : parseFloat(a);\r\n\r\n        if (anal.booleanCount > 0 && anal.stringCount == 0)\r\n            return a => a == \"true\";\r\n\r\n        if (anal.dateCount > 0 && anal.stringCount == 0)\r\n            return a => !a ? null : new Date(a);\r\n\r\n        if (anal.stringCount > 0)\r\n            return a => {\r\n                if (!a)\r\n                    return \"\";\r\n                if (a.startsWith(\"\\\"\") && a.endsWith(\"\\\"\"))\r\n                    return a.substr(1, a.length - 2);\r\n                return a;\r\n            }\r\n\r\n        return a => null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async analyzeAsync(text: string, options?: ITextTableDaOptions, maxRows?: number): Promise<ITextTableDaOptions> {\r\n\r\n        if (!options)\r\n            options = {};\r\n\r\n        //Separators\r\n        this.extractRowSeparator(text, options);\r\n        this.extractColumnSeparator(text, options);\r\n\r\n        //Header\r\n        this.extractHeader(text, options);\r\n\r\n        //Rows\r\n        let rows = linq(new SplitEnumerator(text, options.rowSeparator));\r\n        if (maxRows)\r\n            rows = rows.take(maxRows);\r\n\r\n        if (options.hasHeader)\r\n            rows = rows.skip(1);\r\n\r\n        let curOp = Operation.begin(\"Analazing rows...\");\r\n\r\n        //col analysis\r\n        const colAnalysis: IDaColumnAnalisys[] = [];\r\n        let rowCount = 0;\r\n\r\n        await rows.foreachAsync(async row => {\r\n            rowCount++;\r\n            this.analyzeRow(linq(new CsvSplitEnumerator(row, options.columnSeparator)).toArray(), colAnalysis);\r\n            if (rowCount % 200 == 0) {\r\n                curOp.progress = { current: rowCount };\r\n                await delayAsync(0);\r\n            }\r\n        });\r\n\r\n        options.rowsCount = rowCount;\r\n\r\n        curOp.end();\r\n\r\n        const columns = linq(options.columns);\r\n\r\n        //Parser\r\n        colAnalysis.forEach((col, i) => {\r\n            if (!options.columns[i].parser)\r\n                options.columns[i].parser = this.createParser(col);\r\n        });\r\n\r\n        //X-axis\r\n        if (!columns.any(a => a.type == DaColumnType.XAxis))\r\n            columns.first(a => a.type == DaColumnType.Exclude).type = DaColumnType.XAxis;\r\n\r\n        //Y-axis\r\n        if (!columns.any(a => a.type == DaColumnType.Serie)) {\r\n            colAnalysis.forEach((col, i) => {\r\n\r\n                if (col.numberCount > 0 && col.stringCount == 0)\r\n                    options.columns[i].type = DaColumnType.Serie;\r\n            });\r\n        }\r\n\r\n        //groups\r\n        if (!columns.any(a => a.type == DaColumnType.Group)) {\r\n\r\n            colAnalysis.forEach((col, i) => {\r\n\r\n                if (col.stringCount > 0 && col.emptyCount == 0) {\r\n                    var values = linq(col.values);\r\n                    if (values.count() > 1 && values.any(a => a.value > 1))\r\n                        options.columns[i].type = DaColumnType.Group;\r\n                }\r\n            });\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    async loadTableAsync(text: string, options: ITextTableDaOptions, maxItems?: number): Promise<IDaTable> {\r\n\r\n        var result: IDaTable = [];\r\n\r\n        var rows = linq(new SplitEnumerator(text, options.rowSeparator));\r\n\r\n        if (options.hasHeader)\r\n            rows = rows.skip(1);\r\n\r\n        for (var row of rows) {\r\n            const cols = linq(new CsvSplitEnumerator(row, options.columnSeparator)).toArray();\r\n\r\n            const item: IDictionary<string> = {};\r\n\r\n            for (let i = 0; i < cols.length; i++) {\r\n                const col = options.columns[i];\r\n                if (col.type == DaColumnType.Exclude)\r\n                    continue;\r\n                item[col.id] = col.parser(cols[i]);\r\n            }\r\n\r\n            result.push(item);\r\n\r\n            if (maxItems && result.length >= maxItems)\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadGroupAsync(text: string, options: ITextTableDaOptions): Promise<IDaMainGroup> {\r\n\r\n        var result: IDaMainGroup = { name: $string(\"$(da-main-group)\") };\r\n        var rows = linq(new SplitEnumerator(text, options.rowSeparator));\r\n\r\n        if (options.hasHeader)\r\n            rows = rows.skip(1);\r\n\r\n        const xColumnIndex = linq(options.columns).where(a => a.type == DaColumnType.XAxis).select((a, i) => i).first();\r\n\r\n        let curOp = Operation.begin(\"Loading groups...\");\r\n        let rowCount = 0;\r\n        let chunkCount;\r\n\r\n        await rows.foreachAsync(async row => {\r\n\r\n            const values = linq(new CsvSplitEnumerator(row, options.columnSeparator)).toArray();\r\n            const xValue = options.columns[xColumnIndex].parser(values[xColumnIndex]);\r\n\r\n            const item: IDictionary<string> = {};\r\n\r\n            let curGroup: IDaGroup = result;\r\n\r\n            for (let i = 0; i < values.length; i++) {\r\n                const col = options.columns[i];\r\n\r\n                if (col.type == DaColumnType.Exclude || col.type == DaColumnType.XAxis)\r\n                    continue;\r\n\r\n                let value = col.parser(values[i]);\r\n\r\n                if (col.type == DaColumnType.Group) {\r\n\r\n                    if (!curGroup.groups)\r\n                        curGroup.groups = {};\r\n\r\n                    if (value === \"\")\r\n                        value = $string(\"<$(empty)>\");\r\n\r\n                    if (!(value in curGroup.groups))\r\n                        curGroup.groups[value] = { name: value, colId: col.id };\r\n\r\n                    curGroup = curGroup.groups[value];\r\n                }\r\n\r\n                else if (col.type == DaColumnType.Serie) {\r\n                    if (!curGroup.series)\r\n                        curGroup.series = {};\r\n\r\n                    if (!(col.id in curGroup.series))\r\n                        curGroup.series[col.id] = { name: col.name, colId: col.id, values: [] };\r\n\r\n                    curGroup.series[col.id].values.push({ x: xValue, y: value });\r\n                }\r\n            }\r\n\r\n            rowCount++;\r\n\r\n            if (rowCount % 200 == 0) {\r\n                curOp.progress = { current: rowCount, totCount: options.rowsCount };\r\n                await delayAsync(0);\r\n            }\r\n        });\r\n\r\n        options.rowsCount = rowCount\r\n\r\n        curOp.end();\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n/* JsonDataAdapter\r\n/****************************************/\r\n\r\nexport interface JsonDaOptions extends IDaOptions {\r\n\r\n    dataPath?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class JsonDataAdapter extends BaseDataAdapter<JsonDaOptions> {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadGroupAsync(text: string, options: JsonDaOptions): Promise<IDaMainGroup> {\r\n\r\n        return null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadTableAsync(text: string, options: JsonDaOptions, maxItems?: number): Promise<IDaTable> {\r\n\r\n        return null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async analyzeAsync(text: string, options?: JsonDaOptions, maxRows?: number): Promise<JsonDaOptions> {\r\n        return null;\r\n    }\r\n\r\n}","﻿import { IEnumerator } from \"../WebApp\";\r\n\r\nexport class SplitEnumerator implements IEnumerator<string> {\r\n    protected _separator: string;\r\n    protected _value: string;\r\n    protected _startIndex: number;\r\n    protected _curIndex: number;\r\n    protected _currentStartIndex: number;\r\n    protected _current: string;\r\n\r\n    constructor(value: string, separator: string, startIndex = 0) {\r\n        this._value = value;\r\n        this._separator = separator;\r\n        this._startIndex = startIndex;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): string {\r\n        if (!this._current)\r\n            this._current = this._value.substring(this._currentStartIndex, this._curIndex - this._separator.length);\r\n        return this._current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        if (this._curIndex > this._value.length)\r\n            return false;\r\n\r\n        this._currentStartIndex = this._curIndex;\r\n\r\n        var index = this._value.indexOf(this._separator, this._curIndex);\r\n\r\n        if (index == -1) {\r\n            this._curIndex = this._value.length + 1;\r\n        }\r\n        else\r\n            this._curIndex = index + this._separator.length;\r\n\r\n        this._current = null;\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curIndex = this._startIndex;\r\n        this._currentStartIndex = this._curIndex;\r\n        this._current = null;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class CsvSplitEnumerator implements IEnumerator<string> {\r\n    protected _state = 0;\r\n    protected _wordLength = 0;\r\n    protected _wordStartIndex: number;\r\n    protected _separator: string;\r\n    protected _value: string;\r\n    protected _startIndex: number;\r\n    protected _curIndex: number;\r\n    protected _current: string;\r\n    protected _hasEscape: boolean;\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: string, separator: string, startIndex = 0) {\r\n        this._value = value;\r\n        this._separator = separator;\r\n        this._startIndex = startIndex;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): string {\r\n        if (!this._current) {\r\n            this._current = this._value.substr(this._wordStartIndex, this._wordLength);\r\n            if (this._hasEscape)\r\n                this._current = this._current.replace(\"\\\"\\\"\", \"\\\"\");\r\n        }\r\n        return this._current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        let found = false;\r\n\r\n        while (true) {\r\n            const c = this._curIndex >= this._value.length ? \"\" : this._value[this._curIndex];\r\n            switch (this._state) {\r\n                case 0:\r\n                    if (c == \"\\\"\") {\r\n                        this._state = 1;\r\n                        this._hasEscape = false;\r\n                        this._wordLength = 0;\r\n                        this._wordStartIndex = this._curIndex + 1;\r\n                    }\r\n                    else if (c == this._separator || !c) {\r\n                        this._wordStartIndex = this._curIndex;\r\n                        this._wordLength = 0;\r\n                        found = this._curIndex <= this._value.length;\r\n                    }\r\n                    else {\r\n                        this._state = 2;\r\n                        this._wordLength = 1;\r\n                        this._wordStartIndex = this._curIndex;\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (c == \"\\\"\")\r\n                        this._state = 3;\r\n                    else\r\n                        this._wordLength++;\r\n                    break;\r\n                case 2:\r\n                    if (c == this._separator || !c) {\r\n                        this._state = 0;\r\n                        found = true;\r\n                    }\r\n                    else\r\n                        this._wordLength++;\r\n                    break;\r\n                case 3:\r\n                    if (c == \"\\\"\") {\r\n                        this._hasEscape = true;\r\n                        this._wordLength += 2;\r\n                        this._state = 1\r\n                    }\r\n                    else if (c == this._separator || !c) {\r\n                        found = true;\r\n                        this._state = 0;\r\n                    }\r\n                    else\r\n                        this._state = 4;\r\n                    break;\r\n                case 4:\r\n                    if (c == this._separator || !c) {\r\n                        found = true;\r\n                        this._state = 0;\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            this._curIndex++;\r\n\r\n            if (!c || found)\r\n                break;\r\n        }\r\n\r\n        this._current = null;\r\n\r\n        return found;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._hasEscape = false;\r\n        this._curIndex = this._startIndex;\r\n        this._wordStartIndex = this._curIndex;\r\n        this._wordLength = 0;\r\n        this._current = null;\r\n        this._state = 0;\r\n    }\r\n}","﻿/****************************************/\r\n/* BaseTreeItem\r\n/****************************************/\r\n\r\nimport { addClass, generateId, removeClass } from \"../WebApp\";\r\n\r\nexport class BaseTreeItem implements ITreeItem {\r\n\r\n    constructor() {\r\n        this.canDrag = false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canReadData(transfer: DataTransfer): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readData(transfer: DataTransfer) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    writeData(transfer: DataTransfer): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(node: TreeNode<ITreeItem>) {\r\n        this.node = node;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove(): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onParentChanged(): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAccept(value: object): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    name = ko.observable<string>();\r\n    color = ko.observable<string>();\r\n    canDrag: boolean;\r\n    itemType: string;\r\n    icon: string;\r\n    node: TreeNode<ITreeItem>;\r\n}\r\n\r\n/****************************************/\r\n/* ITreeItem\r\n/****************************************/\r\n\r\nexport interface IDataTransferReader {\r\n    canReadData(transfer: DataTransfer): boolean;\r\n    readData(transfer: DataTransfer);\r\n}\r\n\r\nexport interface IDataTransferWriter {\r\n    writeData(transfer: DataTransfer): boolean;\r\n}\r\n\r\nexport interface ITreeItem extends IDataTransferWriter, IDataTransferReader {\r\n\r\n    attachNode(node: TreeNode<ITreeItem>);\r\n    remove(): void;\r\n    onParentChanged(): void;\r\n    canAccept(value: object): boolean;\r\n\r\n    name: KnockoutObservable<string>;\r\n    color?: KnockoutObservable<string>;\r\n\r\n    readonly canDrag: boolean;\r\n    readonly itemType: string;\r\n    readonly icon: string;\r\n    readonly node: TreeNode<ITreeItem>;\r\n}\r\n\r\n/****************************************/\r\n/* ActionViewModel\r\n/****************************************/\r\n\r\nexport class ActionView {\r\n    execute() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    text: string;\r\n    icon: string;\r\n}\r\n\r\n/****************************************/\r\n/* TreeNode\r\n/****************************************/\r\n\r\nexport class TreeNode<T extends ITreeItem> {\r\n\r\n    protected _treeView: TreeView<T>;\r\n    protected _parentNode: TreeNode<T>;\r\n    protected _element: HTMLElement;\r\n    protected _dargEnterCount = 0;\r\n    protected _childLoaded = false;\r\n\r\n    constructor(value?: T) {\r\n\r\n\r\n        this.value(value);\r\n\r\n        this.isExpanded.subscribe(async value => {\r\n\r\n            if (value && !this._childLoaded) {\r\n                await this.loadChildNodes();\r\n                this._childLoaded = true;\r\n            }\r\n        });\r\n\r\n        this.isSelected.subscribe(a => {\r\n\r\n            if (a)\r\n                this._treeView.select(this);\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadChildNodes() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n        this._childLoaded = false;\r\n        this.nodes.removeAll();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(element: HTMLElement) {\r\n\r\n        this._element = element;\r\n        this._element.id = generateId(\"id\");\r\n        this._element[\"$model\"] = this;\r\n\r\n        this._element.addEventListener(\"keydown\", ev => this.onKeyDown(ev));\r\n\r\n        let header = <HTMLElement>this._element.querySelector(\"header\");\r\n\r\n        header.ondragstart = ev => this.onDrag(ev);\r\n        header.ondragover = ev => this.onDragOver(ev);\r\n        header.ondragenter = ev => this.onDragEnter(ev);\r\n        header.ondragleave = ev => this.onDragLeave(ev);\r\n        header.ondrop = ev => this.onDrop(ev);\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected onKeyDown(ev: KeyboardEvent) {\r\n\r\n        if (ev.keyCode == 46 && (<HTMLElement>ev.target).tagName != \"INPUT\") {\r\n            ev.preventDefault();\r\n            if (this.isSelected())\r\n                this.value().remove();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDrag(ev: DragEvent) {\r\n\r\n        if (!this.value().writeData(ev.dataTransfer) || !this.value().canDrag) {\r\n            ev.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragEnter(ev: DragEvent) {\r\n        this._dargEnterCount++;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragLeave(ev: DragEvent) {\r\n        this._dargEnterCount--;\r\n        if (this._dargEnterCount == 0)\r\n            removeClass(this._element, \"drop\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragOver(ev: DragEvent) {\r\n        ev.preventDefault();\r\n\r\n        if (this._dargEnterCount == 1) {\r\n\r\n            let canDrop = true;\r\n\r\n            if (!this.value().canReadData(ev.dataTransfer))\r\n                canDrop = false;\r\n\r\n            if (canDrop) {\r\n                if (ev.ctrlKey)\r\n                    ev.dataTransfer.dropEffect = \"copy\";\r\n                else\r\n                    ev.dataTransfer.dropEffect = \"move\";\r\n\r\n                addClass(this._element, \"drop\");\r\n            }\r\n            else\r\n                ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected onDrop(ev: DragEvent) {\r\n        ev.preventDefault();\r\n\r\n        this._dargEnterCount = 0;\r\n\r\n        removeClass(this._element, \"drop\");\r\n\r\n        const elId = ev.dataTransfer.getData(\"text/html+id\");\r\n\r\n        if (elId) {\r\n\r\n            const element = document.getElementById(elId);\r\n            const node = <TreeNode<ITreeItem>>element[\"$model\"];\r\n\r\n            if (!this.value().canAccept(node.value()))\r\n                return;\r\n\r\n            if (ev.ctrlKey) {\r\n\r\n            }\r\n            else {\r\n                if (node._parentNode == this)\r\n                    return;\r\n                node._parentNode.nodes.remove(node);\r\n                node._parentNode = this;\r\n                this.nodes.push(<any>node);\r\n                this.isExpanded(true);\r\n                node.value().onParentChanged();\r\n                return;\r\n            }\r\n        }\r\n        else\r\n            this.value().readData(ev.dataTransfer);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove() {\r\n\r\n        if (this._parentNode)\r\n            this._parentNode.nodes.remove(this);\r\n\r\n        if (this._treeView.selectedNode() == this)\r\n            this._treeView.select(null);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addNode(node: TreeNode<T>) {\r\n        node.attach(this._treeView, this);\r\n        this.nodes.push(node);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attach(treeView: TreeView<T>, parent?: TreeNode<T>) {\r\n        this._treeView = treeView;\r\n        this._parentNode = parent;\r\n        for (let childNode of this.nodes())\r\n            childNode.attach(treeView);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get parentNode(): TreeNode<T> {\r\n        return this._parentNode;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toggleVisible() {\r\n        this.isVisible(!this.isVisible());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select(expand = false) {\r\n        this.isSelected(true);\r\n        if (this._element)\r\n            this._element.focus();\r\n        if (expand) {\r\n            let curNode: TreeNode<ITreeItem> = this;\r\n            while (curNode) {\r\n                curNode.isExpanded(true);\r\n                curNode = curNode.parentNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    expandCollapse() {\r\n        this.isExpanded(!this.isExpanded());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    nodes = ko.observableArray<TreeNode<T>>();\r\n    value = ko.observable<T>();\r\n    isSelected = ko.observable(false);\r\n    isVisible = ko.observable(true);\r\n    isExpanded = ko.observable(false);\r\n    actions = ko.observable<ActionView[]>();\r\n}\r\n\r\n/****************************************/\r\n/* TreeView\r\n/****************************************/\r\n\r\nexport class TreeView<T extends ITreeItem> {\r\n\r\n    private _selectedNode: TreeNode<T>;\r\n\r\n    /****************************************/\r\n\r\n    select(node: TreeNode<T>) {\r\n\r\n        if (this.selectedNode() == node)\r\n            return;\r\n\r\n        if (this.selectedNode())\r\n            this.selectedNode().isSelected(false);\r\n\r\n        this.selectedNode(node);\r\n\r\n        if (this.selectedNode())\r\n            this.selectedNode().isSelected(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setRoot(node: TreeNode<T>) {\r\n        node.attach(this);\r\n        this.root(node);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    root = ko.observable<TreeNode<T>>();\r\n    selectedNode = ko.observable<TreeNode<T>>();\r\n}","﻿\r\n/****************************************/\r\n/* FileDragDrop\r\n/****************************************/\r\n\r\nimport { delayAsync, formatDate, linq } from \"../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts\";\r\nimport { DaColumnType, IDaColumn, IDaGroup, IDaOptions, IDaSerie, IDataAdapter, ITextTableDaOptions, TextTableDataAdapter } from \"../Framework/DataAdapter\";\r\nimport { Operation } from \"../Framework/Operation\";\r\nimport { ITextValue } from \"../Types\";\r\nimport { addClass, IOperation, IOperationProgress, removeClass } from \"../WebApp\";\r\nimport { BaseTreeItem, ITreeItem, TreeNode, TreeView } from \"./TreeView\";\r\n\r\nexport class FileDragDrop {\r\n\r\n    protected _element: HTMLElement;\r\n    protected _dargEnterCount = 0;\r\n\r\n    /****************************************/\r\n\r\n    attachNode(element: HTMLElement) {\r\n\r\n        this._element = element;\r\n        element.ondragover = ev => this.onDragOver(ev);\r\n        element.ondrop = ev => this.onDrop(ev);\r\n        element.ondragenter = ev => this.onDragEnter(ev);\r\n        element.ondragleave = ev => this.onDragLeave(ev);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onFileDropped(content: string) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragEnter(ev: DragEvent) {\r\n        this._dargEnterCount++;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragLeave(ev: DragEvent) {\r\n        this._dargEnterCount--;\r\n        if (this._dargEnterCount == 0)\r\n            removeClass(this._element, \"drop\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragOver(ev: DragEvent) {\r\n        ev.preventDefault();\r\n\r\n        if (this._dargEnterCount == 1)\r\n            addClass(this._element, \"drop\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async onDrop(ev: DragEvent) {\r\n        ev.preventDefault();\r\n\r\n        this._dargEnterCount = 0;\r\n\r\n        removeClass(this._element, \"drop\");\r\n        if (ev.dataTransfer.files.length == 1) {\r\n            const file = ev.dataTransfer.files[0];\r\n            if (file.name.toLowerCase().endsWith(\".csv\")) {\r\n                const text = await ev.dataTransfer.files[0].text();\r\n                this.onFileDropped(text);\r\n                return;\r\n            }\r\n        }\r\n        M.toast({ html: $string(\"$(msg-not-supported-only-csv)\") })\r\n    }\r\n}\r\n\r\n/****************************************/\r\n/* ProgressViewModel\r\n/****************************************/\r\n\r\ntype ProgressStatus = \"hidden\" | \"indefinite\" | \"show\";\r\n\r\nexport class ProgressViewModel {\r\n\r\n    _showCount = 0;\r\n\r\n    /****************************************/\r\n\r\n    constructor() {\r\n        this.status(\"hidden\");\r\n        Operation.onBegin.add((s, op) => this.show(op));\r\n        Operation.onEnd.add((s, op) => this.hide(op));\r\n        Operation.onProgress.add((s, data) => this.update(data.operation, data.progress));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    show(op: IOperation) {\r\n        if (this._showCount == 0) {\r\n            this.status(\"indefinite\");\r\n            this.percentage(100);\r\n        }\r\n        this.message(<string>op.message);\r\n        this._showCount++;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    update(op: IOperation, progress: IOperationProgress) {\r\n\r\n        this.message(op[\"getProgressDescription\"](progress));\r\n        if (progress.totCount != undefined && progress.current != undefined) {\r\n            this.percentage(Math.min(100, (progress.current / progress.totCount) * 100));\r\n            this.status(\"show\");\r\n        }\r\n        else {\r\n            this.status(\"show\");\r\n            this.percentage(100);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hide(op: IOperation) {\r\n        this._showCount--;\r\n        if (this._showCount == 0) {\r\n            //this.message(\"\");\r\n            this.status(\"hidden\");\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    message = ko.observable<string>();\r\n    percentage = ko.observable<number>();\r\n    status = ko.observable<ProgressStatus>();\r\n}\r\n\r\n/****************************************/\r\n/* DataImportControl\r\n/****************************************/\r\n\r\nexport interface IDataImportSerieSource {\r\n    type: \"data-import\";\r\n    options: IDaOptions;\r\n    groups?: { id: string, value: string }[];\r\n    serie: IDaSerie;\r\n    source?: string;\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\ninterface ITableViewModel {\r\n\r\n    header: string[];\r\n    rows: string[][];\r\n}\r\n\r\n/****************************************/\r\n\r\nclass ColumnViewModel<T> {\r\n\r\n    constructor(value: IDaColumn<T>) {\r\n        this.types = [\r\n            { text: $string(\"$(exclude)\"), value: DaColumnType.Exclude },\r\n            { text: $string(\"$(x-axis)\"), value: DaColumnType.XAxis },\r\n            { text: $string(\"$(serie)\"), value: DaColumnType.Serie },\r\n            { text: $string(\"$(group)\"), value: DaColumnType.Group }\r\n        ];\r\n\r\n        this.value = value;\r\n        this.type(value.type);\r\n        this.alias(value.name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value: IDaColumn<T>;\r\n    alias = ko.observable<string>();\r\n    type = ko.observable();\r\n    types: ITextValue<DaColumnType>[];\r\n}\r\n\r\n/****************************************/\r\n\r\nclass GroupItem extends BaseTreeItem {\r\n\r\n    constructor(value: IDaGroup) {\r\n        super();\r\n        this.value = value;\r\n        this.icon = \"folder\";\r\n        this.itemType = \"group\";\r\n        this.color(\"#ffc107\");\r\n        this.name(value.name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(node: TreeNode<ITreeItem>) {\r\n        super.attachNode(node);\r\n        node.isVisible.subscribe(value => {\r\n            for (var childNode of this.node.nodes())\r\n                childNode.isVisible(value);\r\n        })\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    value: IDaGroup;\r\n}\r\n\r\n/****************************************/\r\n\r\nclass SerieItem extends BaseTreeItem {\r\n\r\n    constructor(value: IDaSerie) {\r\n        super();\r\n        this.value = value;\r\n        this.icon = \"insert_chart\";\r\n        this.itemType = \"serie\";\r\n        this.color(\"#4caf50\");\r\n        this.name(value.name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value: IDaSerie;\r\n    colId: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class DataImportControl {\r\n\r\n    private _model: M.Modal;\r\n    private _adapter: IDataAdapter<IDaOptions>;\r\n    private _text: string;\r\n    private _options: ITextTableDaOptions;\r\n    private _onGetData: (data: IDataImportSerieSource[]) => void;\r\n\r\n    constructor() {\r\n\r\n        this.columnSeparators = [\r\n            { text: $string(\"$(tab-key)\"), value: \"\\t\" },\r\n            { text: \",\", value: \",\" },\r\n            { text: \";\", value: \";\" },\r\n            { text: $string(\"$(sapce-key)\"), value: \" \" }\r\n        ];\r\n\r\n        this.treeView.setRoot(new TreeNode<any>());\r\n        this.treeView.selectedNode.subscribe(a => this.onNodeSelected(a));\r\n\r\n        this.fileDrop.onFileDropped = text => this.importText(text);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async importText(text: string, options?: ITextTableDaOptions): Promise<boolean> {\r\n\r\n        M.toast({ html: $string(\"$(msg-start-analysis)\") })\r\n\r\n        this.hasData(true);\r\n\r\n        await delayAsync(0);\r\n\r\n        this._text = text;\r\n        this._adapter = new TextTableDataAdapter();\r\n        this._options = await this._adapter.analyzeAsync(this._text, options, 5000);\r\n\r\n        if (!this._options.columnSeparator || !this._options.rowSeparator || !this._options.columns || this._options.columns.length < 2)\r\n            return false;\r\n\r\n        this.hasHeader(this._options.hasHeader);\r\n        this.columnSeparator(this._options.columnSeparator);\r\n\r\n        const cols: ColumnViewModel<any>[] = [];\r\n\r\n        for (let col of this._options.columns) {\r\n            var model = new ColumnViewModel(col);\r\n            cols.push(model);\r\n        }\r\n\r\n        this.columns(cols);\r\n\r\n        await this.updatePreview();\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async getSelectedData(): Promise<IDataImportSerieSource[]> {\r\n\r\n        const result: IDataImportSerieSource[] = [];\r\n        await this.getSelectedDataWork(this.treeView.root(), [], result);\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async getSelectedDataWork(node: TreeNode<ITreeItem>, groups: { id: string, value: string }[], result: IDataImportSerieSource[]) {\r\n\r\n        if (!node.isVisible())\r\n            return;\r\n\r\n        if (node.value() instanceof SerieItem) {\r\n            const serie = (<SerieItem>node.value()).value;\r\n            const source: IDataImportSerieSource = {\r\n                type: \"data-import\",\r\n                options: this._options,\r\n                serie: serie,\r\n                groups: groups\r\n            };\r\n            result.push(source);\r\n            return;\r\n        }\r\n\r\n        if (!node.isExpanded())\r\n            await node.loadChildNodes();\r\n\r\n        if (node.value() instanceof GroupItem) {\r\n\r\n            const group = (<GroupItem>node.value()).value;\r\n\r\n            let newGroups = groups.slice(0, groups.length);\r\n            newGroups.push({ id: group.colId, value: group.name });\r\n\r\n            groups = newGroups;\r\n        }\r\n\r\n        for (let childNode of node.nodes())\r\n            await this.getSelectedDataWork(childNode, groups, result);\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    async executeImport() {\r\n        const data = await this.getSelectedData();\r\n        if (this._onGetData) {\r\n            this._onGetData(data);\r\n            this._onGetData = null;\r\n        }\r\n        this._model.close();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async applyChanges() {\r\n        this._options.hasHeader = this.hasHeader();\r\n        this._options.columnSeparator = this.columnSeparator();\r\n        this._options.columns.forEach((col, i) => {\r\n            col.name = this.columns()[i].alias();\r\n            col.type = this.columns()[i].type();\r\n        });\r\n\r\n        await this.updatePreview(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updateGroups() {\r\n\r\n        const group = await this._adapter.loadGroupAsync(this._text, this._options);\r\n\r\n        let childNode = new TreeNode<ITreeItem>(new GroupItem(group));\r\n\r\n        this.treeView.root().clear();\r\n        this.treeView.root().addNode(childNode);\r\n        childNode.value().attachNode(childNode);\r\n\r\n        this.updateNode(childNode, group);\r\n\r\n        childNode.isExpanded(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateNode(node: TreeNode<ITreeItem>, group: IDaGroup) {\r\n\r\n        node.clear();\r\n\r\n        if (group.groups) {\r\n            for (let item of linq(group.groups)) {\r\n                let childNode = new TreeNode<ITreeItem>(new GroupItem(item.value));\r\n                childNode.loadChildNodes = async () => this.updateNode(childNode, item.value);\r\n                node.addNode(childNode);\r\n                childNode.value().attachNode(childNode);\r\n            }\r\n        }\r\n\r\n        if (group.series) {\r\n            for (let item of linq(group.series)) {\r\n                let childNode = new TreeNode<ITreeItem>(new SerieItem(item.value));\r\n                node.addNode(childNode);\r\n                childNode.value().attachNode(childNode);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updateTable() {\r\n\r\n        const result = await this._adapter.loadTableAsync(this._text, this._options, 50);\r\n\r\n        const table: ITableViewModel = {\r\n            header: linq(this._options.columns).where(a => a.type != DaColumnType.Exclude).select(a => a.name).toArray(),\r\n            rows: linq(result).select(a => linq(a).select(b => this.format(b.value)).toArray()).toArray()\r\n        }\r\n\r\n        this.table(table);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected format(value: any): string {\r\n        if (typeof value == \"number\")\r\n            return formatNumber(value);\r\n        if (typeof value == \"boolean\")\r\n            return $string(value ? \"$(yes)\" : \"$(no)\");\r\n        if (value instanceof Date)\r\n            return formatDate(value, $string(\"$(date-format)\"));\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updatePreview(force = false) {\r\n\r\n        if (force || this._options.rowsCount < 5000 - 1)\r\n            await this.updateGroups();\r\n        else\r\n            this.treeView.root().clear();\r\n\r\n        await this.updateTable();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onNodeSelected(node: TreeNode<ITreeItem>) {\r\n\r\n        if (node && node.value() instanceof SerieItem) {\r\n\r\n            const serie = (<SerieItem>node.value()).value;\r\n            const xColumn = linq(this._options.columns).where(a => a.type == DaColumnType.XAxis).select(a => a.name).first();\r\n\r\n            const table: ITableViewModel = {\r\n                header: [xColumn, serie.name],\r\n                rows: linq(serie.values).take(50).select(a => [this.format(a.x), this.format(a.y)]).toArray()\r\n            }\r\n            this.table(table);\r\n        }\r\n        else\r\n            this.table(null);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    show(): Promise<IDataImportSerieSource[]> {\r\n\r\n        if (!this._model) {\r\n            this._model = M.Modal.init(document.getElementById(\"dataImport\"), {\r\n                onCloseEnd: el => {\r\n                    if (this._onGetData)\r\n                        this._onGetData([]);\r\n                    this.reset();\r\n                }\r\n            });\r\n        }\r\n\r\n        this._model.open();\r\n\r\n        return new Promise(res => this._onGetData = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset() {\r\n        this._text = null;\r\n        this._options = null;\r\n        this._onGetData = null;\r\n        this.hasData(false);\r\n        this.treeView.root().clear();\r\n        this.table(null);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async importUrl() {\r\n        const op = Operation.begin($string(\"$(msg-download-progress)\"));\r\n        try {\r\n            let request = await fetch(this.sourceUrl());\r\n            if (request.ok) {\r\n                const text = await request.text();\r\n                if (text) {\r\n                    this.importText(text);\r\n                    return;\r\n                }\r\n            }\r\n            M.toast({ html: $string(\"$(msg-download-error): \" + request.statusText) });\r\n        }\r\n        finally {\r\n            op.end();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hasHeader = ko.observable<boolean>();\r\n    columnSeparator = ko.observable<string>();\r\n    columns = ko.observable<ColumnViewModel<any>[]>();\r\n    columnSeparators: ITextValue<string>[];\r\n    table = ko.observable<ITableViewModel>();\r\n    treeView = new TreeView<ITreeItem>();\r\n    progress = new ProgressViewModel();\r\n    hasData = ko.observable(false);\r\n    sourceUrl = ko.observable<string>();\r\n    fileDrop = new FileDragDrop();\r\n}","﻿import { IInfectionData } from \"../Data/InfectionDataSet\";\r\nimport { IndicatorCalculator } from \"../Indicators\";\r\nimport { IFunctionPoint } from \"../Types\";\r\nimport { IDictionary, linq } from \"../WebApp\";\r\nimport { ITreeItem } from \"./TreeView\";\r\n\r\ntype TData = IInfectionData;\r\n\r\ntype GraphVarMap = IDictionary<string>;\r\n\r\nexport interface IGraphItem {\r\n\r\n    attachGraph(ctx: GraphContext);\r\n    updateGraphVisibility(recursive?: boolean);\r\n    updateGraph(recursive?: boolean);\r\n    folderId: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class GraphContext {\r\n\r\n    setExpressions(values: Desmos.Expression[]) {\r\n\r\n        const state = this.calculator.getState();\r\n\r\n        for (let value of values) {\r\n\r\n            const curExp = <Desmos.IFolderExpression>linq(state.expressions.list).first(a => a.id == value.id);\r\n            if (!curExp)\r\n                state.expressions.list.push(value);\r\n            else {\r\n                for (let prop of Object.getOwnPropertyNames(value))\r\n                    curExp[prop] = value[prop];\r\n            }\r\n        }\r\n\r\n        const groups = linq(state.expressions.list).where(a => a.type != \"folder\").groupBy(a => a.folderId ? a.folderId : \"\").toDictionary(a => a.key, a => a.values.toArray());\r\n\r\n        const newList = [];\r\n\r\n        for (let folder of linq(state.expressions.list).where(a => a.type == \"folder\")) {\r\n            newList.push(folder);\r\n            const items = groups[folder.id];\r\n            if (items)\r\n                for (let item of items)\r\n                    newList.push(item);\r\n        }\r\n\r\n        const items = groups[\"\"];\r\n        if (items)\r\n            for (let item of items)\r\n                newList.push(item);\r\n\r\n        state.expressions.list = newList;\r\n\r\n        this.calculator.setState(state);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setSelectedId(id: string) {\r\n        if (this.calculator.controller.listModel.selectedItem && this.calculator.controller.listModel.selectedItem.id == id)\r\n            return;\r\n        this.calculator.controller.dispatch({ type: \"set-selected-id\", id: id });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setColor(id: string, color: string) {\r\n        this.calculator.controller.dispatch({ type: \"set-item-color\", id: id, color: color });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateTable(id: string, values: IFunctionPoint[]) {\r\n        const exp = <Desmos.ITableExpression>linq(this.calculator.getExpressions()).where(a => a.id == id).first();\r\n        if (exp) {\r\n            exp.columns[0].values = linq(values).select(a => a.x.toString()).toArray();\r\n            exp.columns[1].values = linq(values).select(a => a.y.toString()).toArray();\r\n            this.calculator.setExpression(exp);\r\n        }\r\n        /*\r\n\r\n        this.calculator.setExpression({\r\n            id: id,\r\n            type: \"table\",\r\n            columns: [\r\n                {\r\n                    values: linq(values).select(a => a.x.toString()).toArray()\r\n                },\r\n                {\r\n                    values: linq(values).select(a => a.y.toString()).toArray(),\r\n                    hidden: false\r\n                },\r\n            ]\r\n        });*/\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateExpression(value: Desmos.Expression) {\r\n        //const exp = <Desmos.IMathExpression>linq(this.calculator.getExpressions()).where(a => a.id == value.id).first();\r\n        /*if (exp) {\r\n            for (let prop of Object.getOwnPropertyNames(value))\r\n                exp[prop] = value[prop];\r\n            this.calculator.setExpression(exp);\r\n        }*/\r\n        this.calculator.setExpression(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateVariable(id: string, varName, value: number) {\r\n        if (!varName)\r\n            return;\r\n        this.updateExpression(<Desmos.IMathExpression>{ id: id, latex: varName + \"=\" + value.toString() });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    expressionZoomFit(id: string) {\r\n        this.calculator.controller.dispatch({ type: \"expression-zoom-fit\", id: id });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setItemVisibile(id: string, value: boolean) {\r\n        this.updateExpression(<any>{ id: id, hidden: !value });\r\n        //this.calculator.controller._setItemHidden(id, !value);\r\n        //this.calculator.updateSettings({});\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    generateVars(map: GraphVarMap) {\r\n\r\n        for (let key in map) {\r\n            if (!map[key])\r\n                map[key] = this.generateVar(key);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    generateVar(prefix = \"a\"): string {\r\n        if (!this.vars[prefix[0]])\r\n            this.vars[prefix[0]] = 0;\r\n        this.vars[prefix[0]]++;\r\n        return prefix[0] + \"_{\" + this.vars[prefix[0]] + \"}\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    serieCalculator: IndicatorCalculator<TData>;\r\n    calculator: Desmos.IGraphingCalculator;\r\n    vars: IDictionary<number> = {};\r\n    treeItems: IDictionary<ITreeItem> = {};\r\n}\r\n","﻿import { ParameterViewModel } from \"../Pages/StudioPage\";\r\nimport { apply, IDictionary, linq, Linq, uuidv4 } from \"../WebApp\";\r\nimport { GraphContext, IGraphItem } from \"./GraphContext\";\r\nimport { ActionView, BaseTreeItem, ITreeItem, TreeNode } from \"./TreeView\";\r\n\r\nexport interface IStudioItemConfig {\r\n    name?: string;\r\n    color?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioItemState extends IStudioItemConfig {\r\n    folderId?: string;\r\n    visible?: boolean;\r\n    opened?: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport abstract class BaseStudioItem<TState extends IStudioItemState, TParent extends ITreeItem & IGraphItem, TChild extends ITreeItem & IGraphItem> extends BaseTreeItem implements IGraphItem {\r\n\r\n    protected _graphCtx: GraphContext;\r\n    protected _varsMap: IDictionary<string>;\r\n    protected _isUpdating = 0;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createActions(result: ActionView[]) {\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(delete)\");\r\n            action.icon = \"delete\";\r\n            action.execute = () => this.remove();\r\n        }))\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setState(state: TState) {\r\n\r\n        this._isUpdating++;\r\n\r\n        if (state.name)\r\n            this.name(state.name);\r\n\r\n        if (state.visible != undefined)\r\n            this.node.isVisible(state.visible);\r\n\r\n        if (state.color)\r\n            this.color(state.color);\r\n\r\n        if (state.opened != undefined)\r\n            this.node.isExpanded(state.opened);\r\n\r\n        if (state.folderId)\r\n            this.folderId = state.folderId;\r\n\r\n        this.setStateWork(state);\r\n\r\n        this.updateGraph();\r\n\r\n        this.setChildrenStateWork(state);\r\n\r\n        this._isUpdating--;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): TState {\r\n\r\n        return <TState>{\r\n            name: this.name(),\r\n            visible: this.node.isVisible(),\r\n            folderId: this.folderId,\r\n            color: this.color(),\r\n            opened: this.node.isExpanded()\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getVar(name: string): string {\r\n\r\n        return this._varsMap[name];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove(recursive = true) {\r\n\r\n        if (this._graphCtx) {\r\n            this._graphCtx.calculator.removeExpression({ id: this.getGraphId(\"private\") });\r\n            this._graphCtx.calculator.removeExpression({ id: this.getGraphId(\"public\") });\r\n        }\r\n        this.node.remove();\r\n\r\n        if (recursive)\r\n            this.children.foreach(a => a.remove());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(node: TreeNode<ITreeItem>) {\r\n        this.node = node;\r\n        this.node.isVisible.subscribe(value => this.updateGraphVisibility());\r\n        this.node.isSelected.subscribe(value => {\r\n            if (value)\r\n                this.onSelected();\r\n        })\r\n        const actions: ActionView[] = [];\r\n        this.createActions(actions);\r\n        this.node.actions(actions);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachGraph(ctx: GraphContext) {\r\n        this._graphCtx = ctx;\r\n\r\n        this._graphCtx.calculator.observe(\"expressionAnalysis\", () => this.onGraphChanged());\r\n        this.color.subscribe(value => this.updateColor());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isFullVisible(): boolean {\r\n        let curNode = this.node;\r\n\r\n        while (curNode) {\r\n            if (!curNode.isVisible())\r\n                return false;\r\n            curNode = curNode.parentNode;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateGraphVisibility(recorsive = true): boolean {\r\n\r\n        const visible = this.isFullVisible();\r\n\r\n        this._graphCtx.setItemVisibile(this.getGraphId(\"public\"), visible);\r\n        this._graphCtx.setItemVisibile(this.getGraphId(\"private\"), visible);\r\n\r\n        if (recorsive)\r\n            this.children.foreach(a => a.updateGraphVisibility());\r\n\r\n        return visible;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateGraph(recursive = true) {\r\n\r\n        if (!this._graphCtx)\r\n            return;\r\n\r\n        if (!this.folderId)\r\n            this.folderId = uuidv4();\r\n\r\n        this._graphCtx.treeItems[this.folderId] = this;\r\n\r\n        const values = this.getExpressions();\r\n\r\n        this._graphCtx.setExpressions(values);\r\n\r\n        this.updateGraphWork();\r\n\r\n        this.updateGraphVisibility();\r\n\r\n        this.updateParameters();\r\n\r\n        if (recursive)\r\n            this.children.foreach(a => a.updateGraph(recursive));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onParentChanged() {\r\n        this.updateGraphVisibility();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get parent(): TParent {\r\n        return <TParent>this.node.parentNode.value();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get children(): Linq<TChild> {\r\n        return linq(this.node.nodes()).select(a => <TChild>a.value());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected abstract setStateWork(state: TState);\r\n\r\n    protected abstract getExpressions(): Desmos.Expression[];\r\n\r\n    /****************************************/\r\n\r\n    protected replaceVars(value: string): string {\r\n        for (let item in this._varsMap) {\r\n            const reg = new RegExp(\"\\\\$\" + item, \"g\");\r\n            value = value.replace(reg, this._varsMap[item]);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getGraphId(section: string) {\r\n        return this.folderId + \"/\" + section;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected addChildrenWork(value: TChild, updateGraph = true): TChild {\r\n\r\n        const node = new TreeNode(value);\r\n\r\n        this.node.addNode(node);\r\n\r\n        value.attachNode(node);\r\n\r\n        value.attachGraph(this._graphCtx);\r\n\r\n        if (updateGraph)\r\n            value.updateGraph();\r\n\r\n        value.onParentChanged();\r\n\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParameters(result: ParameterViewModel[]): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateParameters() {\r\n        const values: ParameterViewModel[] = [];\r\n        if (this.createParameters(values)) {\r\n            this.parameters.removeAll();\r\n            values.forEach(a => this.parameters.push(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateGraphWork() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setChildrenStateWork(state: TState) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onSelected() {\r\n        if (this.mainExpression && this._graphCtx)\r\n            this._graphCtx.setSelectedId(this.mainExpression);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphChanged() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateColor() {\r\n\r\n    }\r\n\r\n    get mainExpression(): string {\r\n        return undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    folderId: string;\r\n    time = ko.observable(0);\r\n    optionsTemplateName: string;\r\n    parameters = ko.observableArray<ParameterViewModel>();\r\n}","﻿import { ParameterViewModel } from \"../Pages/StudioPage\";\r\nimport * as Desmos from \"desmos\";\r\nimport { apply, IDictionary, linq, round } from \"../WebApp\";\r\nimport { BaseStudioItem, IStudioItemConfig, IStudioItemState } from \"./BaseStudioItem\";\r\nimport { StudioSerie } from \"./StudioSerie\";\r\n\r\nexport type RegressionFunctionType = \"linear\" | \"exponential\" | \"normal\" | \"log-normal\";\r\n\r\nfunction pSBCr(d) {\r\n    let r, g, b, a: string;\r\n    let m = Math.round;\r\n    let i = parseInt;\r\n    let n = d.length, x: any = {};\r\n    if (n > 9) {\r\n        [r, g, b, a] = d = d.split(\",\"), n = d.length;\r\n        if (n < 3 || n > 4) return null;\r\n        x.r = i(r[3] == \"a\" ? r.slice(5) : r.slice(4)), x.g = i(g), x.b = i(b), x.a = a ? parseFloat(a) : -1\r\n    } else {\r\n        if (n == 8 || n == 6 || n < 4) return null;\r\n        if (n < 6) d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (n > 4 ? d[4] + d[4] : \"\");\r\n        d = i(d.slice(1), 16);\r\n        if (n == 9 || n == 5) x.r = d >> 24 & 255, x.g = d >> 16 & 255, x.b = d >> 8 & 255, x.a = m((d & 255) / 0.255) / 1000;\r\n        else x.r = d >> 16, x.g = d >> 8 & 255, x.b = d & 255, x.a = -1\r\n    } return x\r\n}\r\n\r\nfunction blendColor(p, c0, c1, l) {\r\n    let r, g, b, P, f, t, h, i = parseInt, m = Math.round, a: any = typeof (c1) == \"string\";\r\n    if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (c0) != \"string\" || (c0[0] != 'r' && c0[0] != '#') || (c1 && !a)) return null;\r\n    h = c0.length > 9, h = a ? c1.length > 9 ? true : c1 == \"c\" ? !h : false : h, f = pSBCr(c0), P = p < 0, t = c1 && c1 != \"c\" ? pSBCr(c1) : P ? { r: 0, g: 0, b: 0, a: -1 } : { r: 255, g: 255, b: 255, a: -1 }, p = P ? p * -1 : p, P = 1 - p;\r\n    if (!f || !t) return null;\r\n    if (l) r = m(P * f.r + p * t.r), g = m(P * f.g + p * t.g), b = m(P * f.b + p * t.b);\r\n    else r = m((P * f.r ** 2 + p * t.r ** 2) ** 0.5), g = m((P * f.g ** 2 + p * t.g ** 2) ** 0.5), b = m((P * f.b ** 2 + p * t.b ** 2) ** 0.5);\r\n    a = f.a, t = t.a, f = a >= 0 || t >= 0, a = f ? a < 0 ? t : t < 0 ? a : a * P + t * p : 0;\r\n    if (h) return \"rgb\" + (f ? \"a(\" : \"(\") + r + \",\" + g + \",\" + b + (f ? \",\" + m(a * 1000) / 1000 : \"\") + \")\";\r\n    else return \"#\" + (4294967296 + r * 16777216 + g * 65536 + b * 256 + (f ? m(a * 255) : 0)).toString(16).slice(1, f ? undefined : -2)\r\n}\r\n\r\nfunction toSafeString(value: any): string {\r\n    if (value == null || value == undefined)\r\n        return undefined;\r\n    return value.toString();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioRegressionConfig extends IStudioItemConfig {\r\n    function?: IRegressionFunction;\r\n    showIntegration?: boolean;\r\n    startDay?: number;\r\n    endDay?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioRegressionState extends IStudioRegressionConfig, IStudioItemState {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IRegressionFunctionVar {\r\n    name: string;\r\n    label?: string;\r\n    autoCompute: boolean;\r\n    minValue?: number;\r\n    maxValue?: number;\r\n    precision?: number;\r\n    step?: number;\r\n    value?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IRegressionFunction {\r\n    type: RegressionFunctionType\r\n    name: string;\r\n    value: string;\r\n    vars: IRegressionFunctionVar[];\r\n}\r\n\r\n/****************************************/\r\n\r\nclass RegressionFunctionViewModel {\r\n\r\n    select() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    icon: string;\r\n    value: IRegressionFunction;\r\n    vars = ko.observable<RegressionFunctionVarViewModel[]>();\r\n}\r\n\r\n/****************************************/\r\n\r\nclass RegressionFunctionVarViewModel {\r\n\r\n    value: IRegressionFunctionVar;\r\n    curValue = ko.observable<number>();\r\n    autoCompute = ko.observable<boolean>();\r\n    min = ko.observable<number>();\r\n    max = ko.observable<number>();\r\n    step = ko.observable<number>();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class StudioSerieRegression extends BaseStudioItem<IStudioRegressionState, StudioSerie, any> {\r\n\r\n    protected _varsMap: IDictionary<string> = {};\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: IStudioRegressionConfig) {\r\n\r\n        super();\r\n\r\n        this._varsMap = {\r\n            \"fun\": null,\r\n            \"sum\": null,\r\n            \"n1\": null,\r\n            \"n2\": null,\r\n            \"value\": null,\r\n            \"time\": null,\r\n            \"tend\": null,\r\n            \"tstart\": null,\r\n            \"xp\": null,\r\n            \"s\": null,\r\n            \"n3\": null,\r\n        };\r\n\r\n        this.itemType = \"regression\";\r\n        this.icon = \"show_chart\";\r\n        this.optionsTemplateName = \"RegressionOptionsTemplate\";\r\n\r\n        this.functions = [];\r\n\r\n        this.addFunction({\r\n            name: $string(\"$(log-normal)\"),\r\n            type: \"log-normal\",\r\n            value: \"$s\\\\sim $c\\\\cdot\\\\frac{ e^ {-\\\\frac{ \\\\left(\\\\ln\\\\ \\\\left($x - $a\\\\right) \\\\ -$u\\\\right)^ { 2}} { 2$o^ { 2} }}}{ \\\\left($x - $a\\\\right) \\\\sqrt{ 2\\\\pi } $o }\",\r\n            vars: [{\r\n                name: \"a\",\r\n                label: $string(\"$(offset)\"),\r\n                autoCompute: true,\r\n                precision: 0\r\n            },\r\n            {\r\n                name: \"c\",\r\n                label: $string(\"$(total)\"),\r\n                autoCompute: true,\r\n                precision: 0\r\n            },\r\n            {\r\n                name: \"o\",\r\n                label: $string(\"$(variance)\"),\r\n                autoCompute: true,\r\n                precision: 5\r\n            },\r\n            {\r\n                name: \"u\",\r\n                label: $string(\"$(average)\"),\r\n                autoCompute: true,\r\n                precision: 5\r\n            }]\r\n        });\r\n\r\n        this.addFunction({\r\n            name: $string(\"$(normal)\"),\r\n            type: \"normal\",\r\n            value: \"$s\\\\sim $c\\\\cdot\\\\ \\\\left(\\\\frac{1}{\\\\sqrt{2\\\\cdot\\\\pi}\\\\cdot $o}\\\\right)\\\\cdot e^{-\\\\frac{1}{2}\\\\cdot\\\\left(\\\\frac{\\\\left($x-$u\\\\right)}{$o}\\\\right)^{2}}\",\r\n            vars: [\r\n                {\r\n                    name: \"c\",\r\n                    label: $string(\"$(total)\"),\r\n                    autoCompute: true,\r\n                    precision: 0\r\n                },\r\n                {\r\n                    name: \"o\",\r\n                    label: $string(\"$(variance)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                },\r\n                {\r\n                    name: \"u\",\r\n                    label: $string(\"$(avg-peak)\"),\r\n                    autoCompute: true,\r\n                    precision: 0\r\n                }]\r\n        });\r\n\r\n        this.addFunction({\r\n            name: $string(\"$(exponential)\"),\r\n            type: \"exponential\",\r\n            value: \"$s\\\\sim $a^{\\\\left($x-$b\\\\right)}\",\r\n            vars: [\r\n                {\r\n                    name: \"a\",\r\n                    label: $string(\"$(base)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                },\r\n                {\r\n                    name: \"b\",\r\n                    label: $string(\"$(offset)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                }]\r\n        });\r\n\r\n        this.addFunction({\r\n            name: $string(\"$(linear)\"),\r\n            type: \"linear\",\r\n            value: \"$s\\\\sim $a+$m$x\",\r\n            vars: [\r\n                {\r\n                    name: \"a\",\r\n                    label: $string(\"$(offset)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                },\r\n                {\r\n                    name: \"m\",\r\n                    label: $string(\"$(slope)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                }]\r\n        });\r\n\r\n        this.showIntegration.subscribe(() => {\r\n            this._graphCtx.setItemVisibile(this.getGraphId(\"sum-serie\"), this.isFullVisible() && this.showIntegration());\r\n            this._graphCtx.setItemVisibile(this.getGraphId(\"sum-point\"), this.isFullVisible() && this.showIntegration());\r\n\r\n        });\r\n\r\n        this.selectedFunction.subscribe(a => {\r\n            if (!this.name() && a)\r\n                return this.name(a.value.name);\r\n\r\n        });\r\n\r\n        this.startDay.subscribe(a => this.updateStartDay());\r\n        this.endDay.subscribe(a => this.updateEndDay());\r\n        this.maxDay.subscribe(a => {\r\n            this.updateEndDay();\r\n            this.updateStartDay();\r\n        });\r\n\r\n        this.selectedFunction(this.functions[0]);\r\n\r\n        if (config)\r\n            this.setState(config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get mainExpression(): string {\r\n        return this.getGraphId(\"main-func\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected addFunction(value: IRegressionFunction): RegressionFunctionViewModel {\r\n        const model = new RegressionFunctionViewModel();\r\n        model.value = value;\r\n        model.select = () => {\r\n            this.selectedFunction(model);\r\n            this.name(model.value.name);\r\n            this.updateGraph()\r\n        };\r\n\r\n        const vars: RegressionFunctionVarViewModel[] = [];\r\n        for (let item of value.vars) {\r\n            const vModel = new RegressionFunctionVarViewModel();\r\n            vModel.value = item;\r\n\r\n            vModel.curValue(item.value);\r\n            vModel.autoCompute(item.autoCompute);\r\n            vModel.min(item.minValue);\r\n            vModel.max(item.maxValue);\r\n            vModel.step(item.step);\r\n\r\n            vModel.min.subscribe(a => item.minValue = a);\r\n            vModel.max.subscribe(a => item.maxValue = a);\r\n            vModel.step.subscribe(a => item.step = a);\r\n            vModel.curValue.subscribe(a => item.value = a);\r\n            vModel.autoCompute.subscribe(a => {\r\n                item.autoCompute = a;\r\n                this.updateGraph();\r\n            });\r\n\r\n            vModel.curValue.subscribe(value => {\r\n                if (!vModel.autoCompute()) {\r\n                    this._graphCtx.updateVariable(this.getGraphId(item.name + \"-value\"), this.getVar(item.name), value);\r\n                }\r\n            });\r\n\r\n            vars.push(vModel);\r\n        }\r\n\r\n        model.vars(vars);\r\n\r\n        this.functions.push(model);\r\n        return model;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphChanged() {\r\n        /*\r\n        const item = this._graphCtx.calculator.expressionAnalysis[this.getGraphId(\"end-day\")];\r\n        if (item && item.evaluation)\r\n            this.endDay(item.evaluation.value);*/\r\n\r\n        this.updateRegressionVars();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateRegressionVars() {\r\n        let model = this._graphCtx.calculator.controller.getItemModel(this.getGraphId(\"main\"));\r\n        if (model && model.regressionParameters) {\r\n            for (let item of this.selectedFunction().vars()) {\r\n                const varName = this.getVar(item.value.name).replace(\"{\", \"\").replace(\"}\", \"\");\r\n                let value = model.regressionParameters[varName];\r\n                if (value != undefined) {\r\n                    if (item.value.precision != undefined)\r\n                        value = round(value, item.value.precision);\r\n                    item.curValue(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParameters(result: ParameterViewModel[]): boolean {\r\n        result.push(apply(new ParameterViewModel({ value: this.startDay, name: $string(\"$(start-day)\") }), p => {\r\n            p.max = this.maxDay;\r\n            p.min(1);\r\n            p.step(1);\r\n        }));\r\n        result.push(apply(new ParameterViewModel({ value: this.endDay, name: $string(\"$(end-day)\") }), p => {\r\n            p.max = this.maxDay;\r\n            p.min(1);\r\n            p.step(1);\r\n        }));\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setStateWork(state: IStudioRegressionState) {\r\n        if (state.function) {\r\n            const func = linq(this.functions).first(a => a.value.type == state.function.type);\r\n            if (func) {\r\n                for (let item of state.function.vars) {\r\n                    const funcVar = linq(func.vars()).first(a => a.value.name == item.name);\r\n                    if (funcVar) {\r\n                        funcVar.autoCompute(item.autoCompute);\r\n                        funcVar.max(item.maxValue);\r\n                        funcVar.min(item.minValue);\r\n                        funcVar.step(item.step);\r\n                        funcVar.curValue(item.value);\r\n                    }\r\n                }\r\n                this.selectedFunction(func);\r\n            }\r\n        }\r\n        if (state.showIntegration != undefined)\r\n            this.showIntegration(state.showIntegration);\r\n\r\n        if (state.startDay != undefined)\r\n            this.startDay(state.startDay);\r\n\r\n        if (state.endDay != undefined)\r\n            this.endDay(state.endDay);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): IStudioRegressionState {\r\n        const state = super.getState();\r\n        state.function = this.selectedFunction().value;\r\n        state.showIntegration = this.showIntegration();\r\n        state.startDay = this.startDay();\r\n        state.endDay = this.endDay();\r\n\r\n        for (let item of this.selectedFunction().vars()) {\r\n            item.value.value = item.curValue();\r\n            item.value.maxValue = item.max();\r\n            item.value.minValue = item.min();\r\n            item.value.step = item.step();\r\n            item.value.autoCompute = item.autoCompute();\r\n        }\r\n        return state;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onParentChanged() {\r\n        super.onParentChanged();\r\n        this.color(this.parent.color());\r\n        this.maxDay(linq(this.parent.values).max(a => a.x as number));\r\n        if (this.endDay() == undefined)\r\n            this.endDay(this.maxDay());\r\n        if (this.startDay() == undefined)\r\n            this.startDay(1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateEndDay() {\r\n        if (!this._varsMap[\"tend\"])\r\n            return;\r\n        this._graphCtx.updateExpression({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"end-day\"),\r\n            latex: this._varsMap[\"tend\"] + \"=\" + this.endDay(),\r\n            slider: {\r\n                min: \"0\",\r\n                step: \"1\",\r\n                max: (this.maxDay()).toString(),\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateStartDay() {\r\n        if (!this._varsMap[\"tstart\"])\r\n            return;\r\n        this._graphCtx.updateExpression({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"start-day\"),\r\n            latex: this._varsMap[\"tstart\"] + \"=\" + this.startDay(),\r\n            slider: {\r\n                min: \"0\",\r\n                step: \"1\",\r\n                max: (this.maxDay()).toString(),\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateColor() {\r\n        this._graphCtx.setColor(this.getGraphId(\"main-func\"), this.color());\r\n        this._graphCtx.setColor(this.getGraphId(\"sum-serie\"), this.color());\r\n        this._graphCtx.setColor(this.getGraphId(\"sum-point\"), this.color());\r\n        this._graphCtx.setColor(this.getGraphId(\"end-day-line\"), this.color());\r\n        this._graphCtx.setColor(this.getGraphId(\"start-day-line\"), this.color());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateGraphWork() {\r\n        this.updateRegressionVars();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getExpressions(): Desmos.Expression[] {\r\n\r\n        const values: Desmos.Expression[] = [];\r\n\r\n        values.push({\r\n            type: \"folder\",\r\n            id: this.getGraphId(\"public\"),\r\n            title: this.parent.name() + \" - \" + this.name(),\r\n            collapsed: true\r\n        });\r\n        values.push({\r\n            type: \"folder\",\r\n            id: this.getGraphId(\"private\"),\r\n            secret: true,\r\n            title: this.parent.name() + \" - \" + this.name(),\r\n            collapsed: true\r\n        });\r\n\r\n        const func = this.selectedFunction().value;\r\n\r\n        this._varsMap[\"x\"] = \"\";\r\n        this._varsMap[\"y\"] = this.parent.getVar(\"y\");\r\n        this._varsMap[\"time\"] = this.parent.parent.getVar(\"time\");\r\n\r\n        for (let item of func.vars) {\r\n            if (!this._varsMap[item.name])\r\n                this._varsMap[item.name] = null;\r\n        }\r\n\r\n        this._graphCtx.generateVars(this._varsMap);\r\n        this._varsMap[\"x\"] = this.getVar(\"xp\");\r\n\r\n        const regColor = blendColor(-0.3, this.color(), false, true);\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"main\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(func.value),\r\n            hidden: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"main-func\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(func.value.replace(\"$s\\\\sim \", \"$fun\\\\left(x\\\\right)=\").replace(/\\$x/g, \"x\")),\r\n            color: regColor,\r\n            lineStyle: Desmos.Styles.DASHED\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-func\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"$sum\\\\left(x\\\\right)=\\\\sum_{$n1=1}^{x}\\\\operatorname{round}\\\\left($fun\\\\left($n1\\\\right)\\\\right)\"),\r\n            hidden: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"subserie-func\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"$s=\\\\sum_{$n3=$xp}^{$xp}{$y}[$n3+1]\"),\r\n            hidden: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"subserie-hl\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"($xp, $s)\"),\r\n            color: regColor,\r\n            lines: false,\r\n            lineStyle: Desmos.Styles.POINT,\r\n            pointStyle: \"NONE\",\r\n            points: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-x-time\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"$n2=\\\\left[1,...,$time\\\\right]\"),\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-serie\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"\\\\left($n2,\\\\ $sum\\\\left($n2\\\\right)\\\\right)\"),\r\n            color: this.parent.color(),\r\n            lines: true,\r\n            hidden: !this.showIntegration(),\r\n            lineStyle: Desmos.Styles.SOLID,\r\n            pointStyle: \"NONE\",\r\n            points: false\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-value\"),\r\n            folderId: this.getGraphId(\"public\"),\r\n            latex: this.replaceVars(\"$value=$sum\\\\left($time\\\\right)\"),\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-point\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            hidden: !this.showIntegration(),\r\n            latex: this.replaceVars(\"\\\\left($time,$value\\\\right)\"),\r\n            color: this.parent.color(),\r\n            label: this.parent.name(),\r\n            dragMode: \"XY\",\r\n            showLabel: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"end-day\"),\r\n            latex: this._varsMap[\"tend\"] + \"=\" + this.endDay(),\r\n            folderId: this.getGraphId(\"public\"),\r\n            label: \"Fine Previsione\",\r\n            slider: {\r\n                min: (0).toString(),\r\n                max: (this.maxDay()).toString(),\r\n                hardMax: true,\r\n                hardMin: true,\r\n                step: \"1\"\r\n            }\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"start-day\"),\r\n            latex: this._varsMap[\"tstart\"] + \"=\" + this.startDay(),\r\n            folderId: this.getGraphId(\"public\"),\r\n            label: \"Inizio Previsione\",\r\n            slider: {\r\n                min: (0).toString(),\r\n                max: (this.maxDay()).toString(),\r\n                hardMax: true,\r\n                hardMin: true,\r\n                step: \"1\"\r\n            }\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"end-day-line\"),\r\n            color: regColor,\r\n            latex: \"x=\" + this._varsMap[\"tend\"],\r\n            folderId: this.getGraphId(\"private\"),\r\n            lines: true\r\n        });\r\n\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"start-day-line\"),\r\n            color: regColor,\r\n            latex: \"x=\" + this._varsMap[\"tstart\"],\r\n            folderId: this.getGraphId(\"private\"),\r\n            lines: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"end-day-serie\"),\r\n            latex: this.replaceVars(\"$xp=[$tstart,...,$tend]+\" + this.parent.getVar(\"ofs\")),\r\n            folderId: this.getGraphId(\"private\"),\r\n            hidden: true\r\n        });\r\n\r\n        for (let item of this.selectedFunction().vars()) {\r\n            if (item.autoCompute())\r\n                this._graphCtx.calculator.removeExpression({ id: this.getGraphId(item.value.name + \"-value\") });\r\n            else {\r\n                values.push({\r\n                    type: \"expression\",\r\n                    id: this.getGraphId(item.value.name + \"-value\"),\r\n                    latex: this.getVar(item.value.name) + \"=\" + (item.curValue() ? item.curValue().toString() : \"0\"),\r\n                    folderId: this.getGraphId(\"public\"),\r\n                    label: item.value.name,\r\n                    slider: {\r\n                        min: toSafeString(item.value.minValue),\r\n                        max: toSafeString(item.value.maxValue),\r\n                        hardMax: true,\r\n                        hardMin: true,\r\n                        step: toSafeString(item.value.step)\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        return values;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    functions: RegressionFunctionViewModel[];\r\n    selectedFunction = ko.observable<RegressionFunctionViewModel>();\r\n    showIntegration = ko.observable<boolean>(true);\r\n    maxDay = ko.observable<number>();\r\n    endDay = ko.observable<number>();\r\n    startDay = ko.observable<number>();\r\n}","﻿\r\nimport { Api } from \"../Api\";\r\nimport { InfectionDataSet } from \"../Data/InfectionDataSet\";\r\nimport { RangeDayAreaDataSet } from \"../Data/RangeDayAreaDataSet\";\r\nimport { IDaSeriePoint } from \"../Framework/DataAdapter\";\r\nimport { IndicatorCalculator } from \"../Indicators\";\r\nimport { ParameterViewModel, StudioData } from \"../Pages/StudioPage\";\r\nimport { IDayAreaSerieSource, IFunctionPoint, SerieSource } from \"../Types\";\r\nimport { apply, dateDiff, linq } from \"../WebApp\";\r\nimport { BaseStudioItem, IStudioItemConfig, IStudioItemState } from \"./BaseStudioItem\";\r\nimport { ColorPicker } from \"./ColorPicker\";\r\nimport { GraphContext } from \"./GraphContext\";\r\nimport { StudioProject } from \"./StudioProject\";\r\nimport { IStudioRegressionConfig, IStudioRegressionState, StudioSerieRegression } from \"./StudioRegression\";\r\nimport { ActionView } from \"./TreeView\";\r\n\r\ninterface IFunction {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IDiscreteFunction extends IFunction {\r\n    readonly values: IFunctionPoint[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioSerieConfig extends IStudioItemConfig {\r\n    source?: SerieSource;\r\n    values?: IFunctionPoint[];\r\n    offsetX?: number;\r\n    children?: IStudioRegressionConfig[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioSerieState extends IStudioSerieConfig, IStudioItemState {\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class StudioSerie extends BaseStudioItem<IStudioSerieState, StudioProject, StudioSerieRegression> implements IDiscreteFunction {\r\n\r\n    constructor(config?: IStudioSerieConfig) {\r\n        super();\r\n\r\n        this.canDrag = true;\r\n        this.itemType = \"serie\";\r\n        this.icon = \"insert_chart\";\r\n        this.optionsTemplateName = \"StudioOptionsTemplate\";\r\n\r\n        this._varsMap = {\r\n            \"x\": null,\r\n            \"y\": null,\r\n            \"ofs\": null,\r\n            \"xofs\": null,\r\n        };\r\n\r\n        if (config) {\r\n            this.setState(config);\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    importValues(points: IDaSeriePoint[]) {\r\n\r\n        if (points && points.length > 0) {\r\n\r\n            if (points[0].x instanceof Date) {\r\n                const startDate = <Date>points[0].x;\r\n                this.values = linq(points).select(a => (<IFunctionPoint>{\r\n                    x: Math.round(dateDiff(a.x, startDate).totalDays),\r\n                    xLabel: a.x,\r\n                    y: a.y\r\n                })).toArray();\r\n            }\r\n\r\n            else if (isNaN(points[0].x)) {\r\n                this.values = linq(points).select((a, i) => (<IFunctionPoint>{\r\n                    x: i,\r\n                    xLabel: a.x,\r\n                    y: a.y\r\n                })).toArray();\r\n                return;\r\n            }\r\n            else\r\n                this.values = points;\r\n        }\r\n        else\r\n            this.values = [];\r\n\r\n        this.onSerieChanged();\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    writeData(transfer: DataTransfer): boolean {\r\n        var data: StudioData = {\r\n            version: 1,\r\n            type: \"serieState\",\r\n            state: this.getState()\r\n        };\r\n        transfer.setData(\"application/json+studio\", JSON.stringify(data));\r\n        transfer.setData(\"text/html+id\", this.node.element.id);\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createActions(result: ActionView[]) {\r\n\r\n        super.createActions(result);\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(update)\");\r\n            action.icon = \"autorenew\";\r\n            action.execute = () => this.updateSerie();\r\n        }));\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(new-regression)\");\r\n            action.icon = \"add_box\";\r\n            action.execute = () => {\r\n                const reg = this.addRegression(null, false);\r\n                reg.updateGraph();\r\n                this.node.isExpanded(true);\r\n                reg.node.isSelected(true);\r\n            }\r\n        }));\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(zoom)\");\r\n            action.icon = \"zoom_in\";\r\n            action.execute = () => this.zoom();\r\n\r\n        }));\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(align-with-this)\");\r\n            action.icon = \"compare_arrows\";\r\n            action.execute = () => {\r\n                let answer = prompt($string(\"$(tollerance)\"), \"10\");\r\n                this.alignOthers(isNaN(<any>answer) ? 10 : parseInt(answer));\r\n            };\r\n        }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromText(text: string): StudioSerie {\r\n        try {\r\n            const obj = <StudioData>JSON.parse(text);\r\n            if (obj) {\r\n\r\n                if (obj.type == \"serie\")\r\n                    return new StudioSerie({\r\n                        name: obj.title,\r\n                        values: obj.values,\r\n                        source: obj.serie,\r\n                        color: obj.color\r\n                    });\r\n\r\n                if (obj.type == \"serieState\")\r\n                    return new StudioSerie(obj.state);\r\n            }\r\n        }\r\n        catch {\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getExpressions(): Desmos.Expression[] {\r\n\r\n        if (!this.color())\r\n            this.color(\"#0000ff\");\r\n\r\n        this._graphCtx.generateVars(this._varsMap);\r\n\r\n        const values: Desmos.Expression[] = [\r\n            {\r\n                type: \"folder\",\r\n                id: this.getGraphId(\"public\"),\r\n                title: this.parent.name() + \" - \" + this.name(),\r\n                collapsed: true\r\n            }, {\r\n                type: \"folder\",\r\n                id: this.getGraphId(\"private\"),\r\n                title: this.parent.name() + \" - \" + this.name(),\r\n                secret: true,\r\n                collapsed: true\r\n            }, {\r\n                type: \"expression\",\r\n                id: this.getGraphId(\"offset\"),\r\n                latex: this._varsMap[\"ofs\"] + \"=\" + this.offsetX(),\r\n                folderId: this.getGraphId(\"public\"),\r\n                label: \"Scostamento\",\r\n                slider: {\r\n                    min: (-this.values.length).toString(),\r\n                    max: (this.values.length).toString(),\r\n                    hardMax: true,\r\n                    hardMin: true,\r\n                    step: \"1\"\r\n                }\r\n            }, {\r\n                type: \"expression\",\r\n                id: this.getGraphId(\"offset-x\"),\r\n                latex: this._varsMap[\"xofs\"] + \"=\" + this._varsMap[\"x\"] + \"+\" + this._varsMap[\"ofs\"],\r\n                folderId: this.getGraphId(\"private\"),\r\n            }, {\r\n                type: \"expression\",\r\n                id: this.getGraphId(\"offset-x-serie\"),\r\n                latex: \"(\" + this._varsMap[\"xofs\"] + \",\" + this._varsMap[\"y\"] + \")\",\r\n                folderId: this.getGraphId(\"private\"),\r\n                points: true,\r\n                lines: true,\r\n                color: this.color()\r\n            }, {\r\n                type: \"table\",\r\n                id: this.getGraphId(\"table\"),\r\n                folderId: this.getGraphId(\"private\"),\r\n                columns: [\r\n                    {\r\n                        id: this.getGraphId(\"table/x\"),\r\n                        latex: this._varsMap[\"x\"],\r\n                    },\r\n                    {\r\n                        id: this.getGraphId(\"table/y\"),\r\n                        latex: this._varsMap[\"y\"],\r\n                        hidden: true\r\n                    }\r\n                ]\r\n            }];\r\n        return values;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    alignOthers(tollerance: number, ...series: StudioSerie[]) {\r\n        if (!series || series.length == 0)\r\n            series = this.parent.children.where(a => a != this).toArray();\r\n        for (let serie of series)\r\n            serie.alignWith(this, tollerance);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    alignWith(other: StudioSerie, tollerance: number) {\r\n\r\n        let minOfs = 0;\r\n        let minValue = Number.NEGATIVE_INFINITY;\r\n        for (let ofs = -this.values.length; ofs < this.values.length; ofs++) {\r\n\r\n            let value = 0;\r\n            for (let i = 0; i < this.values.length; i++) {\r\n                const ofsX = i - ofs;\r\n\r\n                if (ofsX < 0 || ofsX >= this.values.length)\r\n                    continue;\r\n\r\n                if (i >= other.values.length)\r\n                    continue;\r\n\r\n                if (Math.abs(this.values[ofsX].y - other.values[i].y) < tollerance)\r\n                    value++;\r\n            }\r\n            if (value > minValue) {\r\n                minValue = value;\r\n                minOfs = ofs;\r\n            }\r\n        }\r\n\r\n        other.offsetX(0);\r\n        this.offsetX(minOfs);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get mainExpression(): string {\r\n        return this.getGraphId(\"offset-x-serie\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParameters(result: ParameterViewModel[]): boolean {\r\n        result.push(apply(new ParameterViewModel({ value: this.offsetX, name: $string(\"$(shift)\") }), p => {\r\n            p.max(this.values.length);\r\n            p.min(-this.values.length);\r\n            p.step(1);\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateGraphWork() {\r\n        this._graphCtx.updateTable(this.getGraphId(\"table\"), this.values);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphChanged() {\r\n        /*\r\n        const item = this._graphCtx.calculator.expressionAnalysis[this.getGraphId(\"offset\")];\r\n        if (item && item.evaluation)\r\n            this.offsetX(item.evaluation.value);*/\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onSelected() {\r\n        super.onSelected();\r\n        //this._graphCtx.expressionZoomFit(this.getGraphId(\"table\"));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateColor() {\r\n        this._graphCtx.setColor(this.getGraphId(\"offset-x-serie\"), this.color());\r\n        this.children.foreach(a => a.onParentChanged());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachGraph(ctx: GraphContext) {\r\n        super.attachGraph(ctx);\r\n\r\n        this.offsetX.subscribe(value => {\r\n            this._graphCtx.updateVariable(this.getGraphId(\"offset\"), this._varsMap[\"ofs\"], value);\r\n            this.onSerieChanged();\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onSerieChanged() {\r\n        if (this._isUpdating == 0)\r\n            this.parent.updateAggregate();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setChildrenStateWork(state: IStudioSerieState) {\r\n        if (state.children != undefined) {\r\n\r\n            this.children.foreach(a => a.remove());\r\n\r\n            state.children.forEach(a => {\r\n                const reg = this.addRegression(null, false);\r\n                reg.setState(a);\r\n            });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setStateWork(state: IStudioSerieState) {\r\n\r\n        if (state.offsetX != undefined)\r\n            this.offsetX(state.offsetX);\r\n\r\n        if (state.source)\r\n            this.source = this.upgradeSource(state.source);\r\n\r\n        if (state.values != undefined)\r\n            this.importValues(state.values);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected upgradeSource(source: SerieSource): SerieSource {\r\n\r\n        if (!source.type)\r\n            source.type = \"geoplot\";\r\n\r\n        if (source.type == \"geoplot\") {\r\n\r\n            source.areaId = this.upgradeAreaId(source.areaId);\r\n            if (source.exeludedAreaIds)\r\n                for (let i = 0; i < source.exeludedAreaIds.length; i++)\r\n                    source.exeludedAreaIds[i] = this.upgradeAreaId(source.exeludedAreaIds[i]);\r\n\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected upgradeAreaId(id: string): string {\r\n\r\n        if (id) {\r\n            if (id.startsWith(\"R\") && id.length == 2)\r\n                return \"R0\" + id.substring(1);\r\n            if (id.startsWith(\"D\") && id.length == 2)\r\n                return \"D00\" + id.substring(1);\r\n            if (id.startsWith(\"D\") && id.length == 3)\r\n                return \"D0\" + id.substring(1);\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): IStudioSerieState {\r\n        const state = super.getState();\r\n        state.offsetX = this.offsetX();\r\n        state.source = this.source;\r\n        state.values = this.values;\r\n        state.children = this.children.select(a => a.getState()).toArray();\r\n        return state;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addRegression(configOrState?: IStudioRegressionState | StudioSerieRegression, updateGraph = true): StudioSerieRegression {\r\n        return this.addChildrenWork(configOrState instanceof StudioSerieRegression ? configOrState : new StudioSerieRegression(configOrState), updateGraph);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async changeColor() {\r\n\r\n        const color = await ColorPicker.instance.pick();\r\n        if (color)\r\n            this.color(color);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async updateSerie() {\r\n\r\n        if (this.source.type == \"geoplot\" || !this.source.type) {\r\n\r\n            if (!this._graphCtx.serieCalculator) {\r\n                M.toast({ html: $string(\"$(msg-downloading-data)\") })\r\n                const model = await Api.loadStudioData();\r\n                this._graphCtx.serieCalculator = new IndicatorCalculator(new RangeDayAreaDataSet(model.data), InfectionDataSet, model.geo);\r\n            }\r\n\r\n            const daySource = this.source as IDayAreaSerieSource;\r\n\r\n            if (daySource.range) {\r\n                this._graphCtx.serieCalculator.data.startDay = daySource.range.start;\r\n                this._graphCtx.serieCalculator.data.endDay = daySource.range.end;\r\n            }\r\n            else {\r\n                this._graphCtx.serieCalculator.data.startDay = undefined;\r\n                this._graphCtx.serieCalculator.data.endDay = undefined;\r\n            }\r\n\r\n            this.importValues(this._graphCtx.serieCalculator.getSerie(daySource));\r\n\r\n            this._graphCtx.updateTable(this.getGraphId(\"table\"), this.values);\r\n            this.children.foreach(a => a.onParentChanged());\r\n\r\n            this.onSerieChanged();\r\n\r\n            M.toast({ html: $string(\"$(msg-update-complete)\") })\r\n        }\r\n        else\r\n            M.toast({ html: $string(\"$(msg-update-not-supported)\") })\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    zoom() {\r\n        const minX = linq(this.values).min(a => a.x as number);\r\n        const minY = linq(this.values).min(a => a.y);\r\n        const maxX = linq(this.values).max(a => a.x as number);\r\n        const maxY = linq(this.values).max(a => a.y);\r\n\r\n        this._graphCtx.calculator.setMathBounds({\r\n            top: maxY + (maxY - minY) * 0.1,\r\n            right: maxX + (maxX - minX) * 0.1,\r\n            bottom: minY - (maxY - minY) * 0.1,\r\n            left: minX - (maxX - minX) * 0.1,\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    color = ko.observable<string>();\r\n    offsetX = ko.observable<number>(0);\r\n    source: SerieSource;\r\n    values: IFunctionPoint[] = [];\r\n}","﻿import { ParameterViewModel } from \"../Pages/StudioPage\";\r\nimport { IFunctionPoint, ITextValue } from \"../Types\";\r\nimport { apply, linq } from \"../WebApp\";\r\nimport { BaseStudioItem, IStudioItemConfig, IStudioItemState } from \"./BaseStudioItem\";\r\nimport { GraphContext } from \"./GraphContext\";\r\nimport { IStudioSerieConfig, IStudioSerieState, StudioSerie } from \"./StudioSerie\";\r\nimport { ActionView } from \"./TreeView\";\r\n\r\ntype AggregateMode = \"none\" | \"sum\" | \"avg\";\r\n\r\nexport interface IStudioProjectConfig extends IStudioItemConfig {\r\n    aggregationMode?: AggregateMode;\r\n    children?: IStudioSerieState[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioProjectState extends IStudioProjectConfig, IStudioItemState {\r\n    time?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class StudioProject extends BaseStudioItem<IStudioProjectState, any, StudioSerie> {\r\n\r\n    constructor(config?: IStudioProjectConfig) {\r\n\r\n        super();\r\n\r\n        this.itemType = \"project\";\r\n        this.icon = \"folder\";\r\n        this.optionsTemplateName = \"ProjectOptionsTemplate\";\r\n\r\n        this.aggregationModes = [\r\n            {\r\n                text: $string(\"$(none)\"),\r\n                value: \"none\"\r\n            },\r\n            {\r\n                text: $string(\"$(sum)\"),\r\n                value: \"sum\"\r\n            },\r\n            {\r\n                text: $string(\"$(average)\"),\r\n                value: \"avg\",\r\n            }\r\n        ];\r\n\r\n        this._varsMap = {\r\n            \"time\": null,\r\n            \"xagg\": null,\r\n            \"yagg\": null\r\n        };\r\n\r\n        if (config)\r\n            this.setState(config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    createActions(result: ActionView[]) {\r\n\r\n        super.createActions(result);\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(update-all-proj)\");\r\n            action.icon = \"autorenew\";\r\n            action.execute = () => this.updateAllSerie();\r\n        }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async updateAllSerie() {\r\n\r\n        for (let item of this.children)\r\n            await item.updateSerie();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAccept(value: object): boolean {\r\n        return (value instanceof StudioSerie);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canReadData(transfer: DataTransfer): boolean {\r\n        return transfer.types.indexOf(\"application/json+studio\") != -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readData(transfer: DataTransfer) {\r\n\r\n        const textData = transfer.getData(\"application/json+studio\");\r\n        let serie = StudioSerie.fromText(textData);\r\n        if (serie) {\r\n            this.addSerie(serie);\r\n            this.node.isExpanded(true);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getExpressions(): Desmos.Expression[] {\r\n\r\n        this._graphCtx.generateVars(this._varsMap);\r\n\r\n        const values: Desmos.Expression[] = [\r\n            {\r\n                type: \"folder\",\r\n                id: this.getGraphId(\"public\"),\r\n                title: this.name(),\r\n                collapsed: true\r\n            },\r\n            {\r\n                type: \"folder\",\r\n                id: this.getGraphId(\"private\"),\r\n                title: this.name(),\r\n                secret: true,\r\n                collapsed: true\r\n            },\r\n            {\r\n                type: \"expression\",\r\n                folderId: this.getGraphId(\"public\"),\r\n                id: this.getGraphId(\"time\"),\r\n                latex: this._varsMap[\"time\"] + \"=\" + this.time(),\r\n                slider: {\r\n                    hardMin: true,\r\n                    hardMax: true,\r\n                    min: \"0\",\r\n                    max: \"100\",\r\n                    step: \"1\"\r\n                }\r\n            },\r\n            {\r\n                type: \"table\",\r\n                id: this.getGraphId(\"aggregate\"),\r\n                folderId: this.getGraphId(\"private\"),\r\n                columns: [\r\n                    {\r\n                        id: this.getGraphId(\"table/xagg\"),\r\n                        latex: this._varsMap[\"xagg\"],\r\n                    },\r\n                    {\r\n                        id: this.getGraphId(\"table/yagg\"),\r\n                        latex: this._varsMap[\"yagg\"],\r\n                        lines: true,\r\n                        points: true\r\n                        //hidden: this.aggregationMode() == \"none\"\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n\r\n        return values;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateAggregate() {\r\n\r\n        const values: { [key: number]: number } = {};\r\n\r\n        const children = this.children.toArray();\r\n\r\n        for (var child of children) {\r\n            const ofs = parseInt(<any>child.offsetX());\r\n            for (var item of child.values) {\r\n                const xReal = item.x as number + ofs;\r\n                if (!(xReal in values))\r\n                    values[xReal] = item.y;\r\n                else\r\n                    values[xReal] += item.y;\r\n            }\r\n        }\r\n\r\n        const funValues = linq(values).orderBy(a => a.key).select(a => (<IFunctionPoint>{ x: <any>a.key, y: a.value })).toArray();\r\n        this._graphCtx.updateTable(this.getGraphId(\"aggregate\"), funValues);\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateColor() {\r\n        this._graphCtx.setColor(this.getGraphId(\"aggregate\"), this.color());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get mainExpression() {\r\n        return this.getGraphId(\"aggregate\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParameters(result: ParameterViewModel[]): boolean {\r\n        result.push(apply(new ParameterViewModel({ value: this.time, name: $string(\"$(day)\") }), p => {\r\n            p.max(100);\r\n            p.min(0);\r\n            p.step(1);\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setStateWork(state: IStudioProjectState) {\r\n        if (state.time != undefined)\r\n            this.time(state.time);\r\n        if (state.aggregationMode)\r\n            this.aggregationMode(state.aggregationMode);\r\n        else\r\n            this.aggregationMode(\"none\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setChildrenStateWork(state: IStudioProjectState) {\r\n        if (state.children != undefined) {\r\n\r\n            this.children.foreach(a => a.remove());\r\n\r\n            state.children.forEach(a => {\r\n                const item = this.addSerie(null, false);\r\n                item.setState(a);\r\n            });\r\n        }\r\n        if (this.aggregationMode() != \"none\")\r\n            this.updateAggregate();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): IStudioProjectState {\r\n        const state = super.getState();\r\n        state.time = this.time();\r\n        state.children = this.children.select(a => a.getState()).toArray();\r\n        state.aggregationMode = this.aggregationMode();\r\n        return state;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphChanged() {\r\n        /*\r\n        const item = this._graphCtx.calculator.expressionAnalysis[this.getGraphId(\"time\")];\r\n        if (item)\r\n            this.time(item.evaluation.value);*/\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachGraph(ctx: GraphContext) {\r\n        super.attachGraph(ctx);\r\n\r\n        this.time.subscribe(value =>\r\n            this._graphCtx.updateVariable(this.getGraphId(\"time\"), this._varsMap[\"time\"], this.time()));\r\n\r\n        this.aggregationMode.subscribe(a => this.updateAggregate());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addSerie(configOrSerie?: IStudioSerieConfig | StudioSerie, updateGraph = true): StudioSerie {\r\n        return this.addChildrenWork(configOrSerie instanceof StudioSerie ? configOrSerie : new StudioSerie(configOrSerie), updateGraph);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    time = ko.observable(0);\r\n    aggregationMode = ko.observable<AggregateMode>(\"none\");\r\n    aggregationModes: ITextValue<AggregateMode>[];\r\n}","﻿import { Api } from \"../Api\";\r\nimport { DataImportControl, IDataImportSerieSource } from \"../Components/DataImport\";\r\nimport { GraphContext } from \"../Components/GraphContext\";\r\nimport { IStudioProjectConfig, IStudioProjectState, StudioProject } from \"../Components/StudioProject\";\r\nimport { StudioSerieRegression } from \"../Components/StudioRegression\";\r\nimport { IStudioSerieState, StudioSerie } from \"../Components/StudioSerie\";\r\nimport { ActionView, ITreeItem, TreeNode, TreeView } from \"../Components/TreeView\";\r\nimport { IInfectionData } from \"../Data/InfectionDataSet\";\r\nimport * as Desmos from \"desmos\";\r\n\r\nimport { IDayAreaDataSet, IDayAreaSerieSource, IFunctionPoint, IGeoAreaSet } from \"../Types\";\r\nimport { apply, copyText, Guid, IDictionary, Linq, linq, Uri, uuidv4 } from \"../WebApp\";\r\n\r\ntype TData = IInfectionData;\r\n\r\nexport type StudioData = ISerieStudioData | ISerieStateStudioData;\r\n\r\nexport interface IStudioData {\r\n    version: number;\r\n}\r\n\r\nexport interface ISerieStudioData extends IStudioData {\r\n    type: \"serie\";\r\n    serie: IDayAreaSerieSource;\r\n    title: string;\r\n    values?: IFunctionPoint[];\r\n    color?: string;\r\n}\r\n\r\nexport interface ISerieStateStudioData extends IStudioData {\r\n    type: \"serieState\";\r\n    state: IStudioSerieState;\r\n}\r\n\r\n/****************************************/\r\n/* ParameterViewModel\r\n/****************************************/\r\n\r\ninterface IParameterConfig {\r\n    value: KnockoutObservable<number>;\r\n    name: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ParameterViewModel {\r\n\r\n    constructor(config: IParameterConfig) {\r\n        this.value = config.value;\r\n        this.name = config.name;\r\n    }\r\n\r\n    name: string;\r\n    min = ko.observable<number>();\r\n    max = ko.observable<number>();\r\n    step = ko.observable<number>();\r\n    isSelected = ko.observable<boolean>(true);\r\n    value: KnockoutObservable<number>;\r\n}\r\n\r\n/****************************************/\r\n/* Page\r\n/****************************************/\r\n\r\ninterface IPageState {\r\n    version: number;\r\n    graphState?: Desmos.IGraphState;\r\n    projects?: IStudioProjectState[];\r\n    vars?: IDictionary<number>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioViewModel {\r\n    data: IDayAreaDataSet<TData>;\r\n    geo: IGeoAreaSet;\r\n}\r\n\r\n/****************************************/\r\n\r\n\r\nexport class StudioPage {\r\n\r\n    private _graphCtx: GraphContext;\r\n    private _projectId: Guid;\r\n\r\n    constructor(projectId: Guid) {\r\n\r\n        this._projectId = projectId;\r\n\r\n        this._graphCtx = new GraphContext();\r\n        this._graphCtx.calculator = Desmos.GraphingCalculator(document.getElementById(\"calculator\"), {\r\n            //xAxisArrowMode: Desmos.AxisArrowModes.BOTH,\r\n            pasteGraphLink: false,\r\n            pasteTableData: false,\r\n            expressionsCollapsed: true,\r\n            //lockViewport: false,\r\n            restrictedFunctions: true,\r\n            //restrictGridToFirstQuadrant: true,\r\n            administerSecretFolders: true,\r\n            authorIDE: true,\r\n            advancedStyling: true\r\n        });\r\n\r\n        this._graphCtx.calculator.controller.listModel.onSelectionChanged = item => this.onGraphSelectionChanged(item);\r\n\r\n        const actions: ActionView[] = [];\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(new-project)\"),\r\n                action.icon = \"create_new_folder\";\r\n            action.execute = () => this.newProject();\r\n        }));\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(save)\"),\r\n                action.icon = \"save\";\r\n            action.execute = () => this.saveState();\r\n        }));\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(import)\"),\r\n                action.icon = \"import_export\";\r\n            action.execute = () => this.import();\r\n        }));\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(share) Studio\"),\r\n                action.icon = \"share\";\r\n            action.execute = () => this.share();\r\n        }));\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(options)\"),\r\n            action.icon = \"settings\";\r\n            action.execute = () => this.showOptions();\r\n        }));\r\n\r\n        const root = new TreeNode<any>();\r\n        root.actions(actions);\r\n        this.items.setRoot(root);\r\n\r\n        document.body.addEventListener(\"paste\", async ev => {\r\n            if ((<HTMLElement>ev.target).tagName == \"INPUT\")\r\n                return;\r\n            if (await this.onPaste(ev.clipboardData))\r\n                ev.preventDefault();\r\n        });\r\n\r\n        M.Modal.init(document.getElementById(\"options\"), {\r\n            onCloseEnd: () => this.updateOptions()\r\n        });\r\n\r\n\r\n        setTimeout(() => this.init());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphSelectionChanged(item: { id: string, folderId?: string }) {\r\n        if (!item || !item.folderId)\r\n            return;\r\n        const folderGuid = item.folderId.split(\"/\")[0];\r\n        const treeItem = this._graphCtx.treeItems[folderGuid];\r\n        if (!treeItem)\r\n            return;\r\n        treeItem.node.select(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateOptions() {\r\n        const maxX = parseInt(<any>this.maxX());\r\n        const maxY = parseInt(<any>this.maxY());\r\n        this._graphCtx.calculator.setMathBounds({\r\n            bottom: -maxY / 10,\r\n            left: -maxX / 10,\r\n            right: maxX,\r\n            top: maxY\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async share() {\r\n        const projectId = uuidv4();\r\n        await Api.saveState(projectId, this.getState());\r\n        const url = Uri.absolute(\"~/\" + $language.split(\"-\")[0] + \"/Studio/\" + projectId);\r\n        await copyText(url);\r\n        M.toast({ html: $string(\"$(msg-shared)\") });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    showOptions() {\r\n        const bounds = this._graphCtx.calculator.graphpaperBounds;\r\n        this.maxX(Math.round(bounds.mathCoordinates.width));\r\n        this.maxY(Math.round(bounds.mathCoordinates.height));\r\n        const dialog = M.Modal.getInstance(document.getElementById(\"options\"));\r\n        dialog.open();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getSelectedProject(): StudioProject {\r\n        if (!this.items.selectedNode())\r\n            return;\r\n\r\n        const value = this.items.selectedNode().value();\r\n\r\n        if (value.itemType == \"project\")\r\n            return <StudioProject>value;\r\n\r\n        if (value.itemType == \"serie\")\r\n            return (<StudioSerie>value).parent;\r\n\r\n        if (value.itemType == \"regression\")\r\n            return (<StudioSerieRegression>value).parent.parent;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    newProject(): StudioProject {\r\n        const proj = this.addProject({ name: \"Project \" + (this.projects.count() + 1) });\r\n        proj.node.isSelected(true);\r\n        return proj;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addProject(config?: IStudioProjectConfig, updateGraph = true): StudioProject {\r\n        const project = new StudioProject(config);\r\n        const node = new TreeNode(project);\r\n        this.items.root().addNode(node);\r\n        project.attachNode(node);\r\n        project.attachGraph(this._graphCtx);\r\n        if (updateGraph)\r\n            project.updateGraph();\r\n        return project;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): IPageState {\r\n\r\n        const result: IPageState = { version: 2 };\r\n        result.graphState = this._graphCtx.calculator.getState();\r\n        result.vars = this._graphCtx.vars;\r\n        result.projects = this.projects.select(a => a.getState()).toArray();\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setState(value: IPageState) {\r\n\r\n        if (!value)\r\n            return;\r\n\r\n        if (value.graphState) {\r\n            value.graphState.expressions.list = [];\r\n            this._graphCtx.calculator.setState(value.graphState);\r\n        }\r\n\r\n        if (value.projects != undefined) {\r\n            this.projects.toArray().forEach(a => a.remove());\r\n            value.projects.forEach(a => {\r\n                const proj = this.addProject(null, false);\r\n                proj.setState(a);\r\n            });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadState() {\r\n        if (this._projectId) {\r\n            let result = await Api.loadState<IPageState>(this._projectId);\r\n            this.setState(result);\r\n        }\r\n        else {\r\n            const json = localStorage.getItem(\"studio\");\r\n            if (json)\r\n                this.setState(JSON.parse(json));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async saveState() {\r\n\r\n        if (this._projectId) {\r\n            await Api.saveState(this._projectId, this.getState());\r\n            M.toast({ html: $string(\"$(msg-saved)\") });\r\n        }\r\n        else {\r\n            localStorage.setItem(\"studio\", JSON.stringify(this.getState()));\r\n            M.toast({ html: $string(\"$(msg-saved-device)\") });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected demo() {\r\n        const proj = this.addProject({ name: \"Project 1\" });\r\n        this.addProject({ name: \"Project 2\" });\r\n        this.addProject({ name: \"Project 3\" });\r\n\r\n        proj.addSerie({\r\n            name: \"Serie 1\"\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async onPaste(data: DataTransfer): Promise<boolean> {\r\n\r\n        const text = data.getData(\"text/plain\").toString();\r\n        if (text)\r\n            return await this.importText(text);\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async import() {\r\n        //var text = await (await fetch(\"https://raw.githubusercontent.com/datasets/covid-19/master/data/countries-aggregated.csv\")).text();\r\n        let project = this.getSelectedProject();\r\n        const data = await this.dataImport.show();\r\n        this.addImportedData(data, project);\r\n        return true;\r\n    }\r\n    /****************************************/\r\n\r\n    async importText(text: string): Promise<boolean> {\r\n\r\n        let project = this.getSelectedProject();\r\n        if (!project && !this.projects.any())\r\n            project = this.newProject();\r\n\r\n        if (!project) {\r\n            M.toast({ html: $string(\"$(msg-select-project)\") });\r\n            return false;\r\n        }\r\n\r\n        const serie = StudioSerie.fromText(text);\r\n        if (serie) {\r\n            project.addSerie(serie);\r\n            project.node.isExpanded(true);\r\n            serie.node.isExpanded(true);\r\n            serie.zoom();\r\n            const reg = serie.addRegression(null, false);\r\n            reg.updateGraph();\r\n            reg.node.isSelected(true);\r\n            return true;\r\n        }\r\n\r\n        try {\r\n\r\n            if (await this.dataImport.importText(text))\r\n                await this.import();\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        M.toast({ html: $string(\"$(msg-format-not-reconized)\") });\r\n\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected addImportedData(data: IDataImportSerieSource[], project: StudioProject) {\r\n\r\n        if (data.length == 1) {\r\n            if (this.items.selectedNode() && this.items.selectedNode().value() instanceof StudioSerie) {\r\n                if (confirm($string(\"$(msg-replace-serie)\"))) {\r\n                    const serie = <StudioSerie>this.items.selectedNode().value();\r\n                    serie.source = data[0];\r\n                    serie.importValues(data[0].serie.values);\r\n                    serie.updateGraph(true);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        project.node.isExpanded(true);\r\n\r\n        for (let item of data) {\r\n\r\n            const serie = new StudioSerie({\r\n                name: item.serie.name,\r\n                values: item.serie.values,\r\n                source: item\r\n            });\r\n\r\n            project.addSerie(serie);\r\n            serie.node.isExpanded(true);\r\n\r\n            const reg = serie.addRegression(null, false);\r\n            reg.updateGraph();\r\n            reg.node.isSelected(true);\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    get projects(): Linq<StudioProject> {\r\n\r\n        function* items(this: StudioPage) {\r\n            for (let node of this.items.root().nodes())\r\n                yield (<StudioProject>node.value());\r\n        }\r\n\r\n        return linq(items.apply(this));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async init() {\r\n        this.loadState();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    items = new TreeView<ITreeItem>();\r\n\r\n    maxX = ko.observable<number>();\r\n\r\n    maxY = ko.observable<number>();\r\n\r\n    dataImport = new DataImportControl();\r\n}","﻿import { IDataImportSerieSource } from \"./Components/DataImport\";\r\nimport { ViewMode } from \"./Data/ViewModes\";\r\nimport { IPoly2D, IRect2D, LinearGradient } from \"./Framework/Graphics\";\r\nimport { IDictionary } from \"./WebApp\";\r\n\r\nexport enum AggregationFunc {\r\n    SUm,\r\n    Avg\r\n}\r\n\r\nexport interface IGeoPoint {\r\n    lat: number;\r\n    lng: number;\r\n}\r\n\r\nexport interface IDayAreaGroupItem<TValue> {\r\n    date: string;\r\n    values: IDictionary<TValue>;\r\n}\r\n\r\nexport interface IDayAreaDataSet<TData> {\r\n    days: IDayAreaGroupItem<TData>[];\r\n}\r\n\r\nexport enum GeoAreaType {\r\n    Continent = 0,\r\n    CountryGroup = 1,\r\n    Country = 2,\r\n    State = 3,\r\n    Region = 4,\r\n    District = 5,\r\n    Municipality = 6\r\n}\r\n\r\nexport enum Gender {\r\n    All,\r\n    Male,\r\n    Female\r\n}\r\n\r\nexport interface IAggregateDemography {\r\n    total: number;\r\n    male?: number;\r\n    female?: number;\r\n    over65?: number;\r\n}\r\n\r\nexport interface IGeoArea {\r\n    id: string;\r\n    name: string;\r\n    demography: IAggregateDemography;\r\n    surface: number;\r\n    type: GeoAreaType;\r\n    geography: IPoly2D[];\r\n    parentId: string;\r\n}\r\n\r\nexport interface IGeoAreaSet {\r\n    viewBox: IRect2D;\r\n    areas: IDictionary<IGeoArea>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IIndicatorFunction<TData> {\r\n    value(main: TData, delta: TData, exMain: TData[], exDelta: TData[], area: IGeoArea): number;\r\n}\r\n\r\nexport interface IFactorFunction<TData> {\r\n    value(main: TData[], delta: TData[], exMain: TData[][], exDelta: TData[][], area: IGeoArea, indicator: IIndicatorFunction<TData>): number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IIndicator<TData> {\r\n    id: keyof TData | string;\r\n    name: string;\r\n    description?: string;\r\n    validFor?: ViewMode[];\r\n    colorLight?: string;\r\n    colorDark?: string;\r\n    gradient?: LinearGradient;\r\n    canBeNegative?: boolean;\r\n    showInFavorites?: boolean;\r\n    compute: IIndicatorFunction<TData>;\r\n}\r\n\r\nexport interface IFactor<TData> {\r\n    id: string;\r\n    name: string;\r\n    validFor?: ViewMode[];\r\n    compute: IFactorFunction<TData>;\r\n    format: (value: number) => string,\r\n    reference: (value: TData, area: IGeoArea) => any;\r\n    description: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDataSet<TData> {\r\n    name: string;\r\n    empty: TData;\r\n    indicators: IIndicator<TData>[];\r\n    factors: IFactor<TData>[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport type SerieSource = IDayAreaSerieSource | IDataImportSerieSource;\r\n\r\n/****************************************/\r\n\r\nexport interface IDayAreaSerieSource {\r\n    type: \"geoplot\";\r\n    areaId: string;\r\n    exeludedAreaIds?: string[];\r\n    indicatorId: string;\r\n    factorId?: string;\r\n    groupSize?: number;\r\n    startDay?: number;\r\n    endDay?: number;\r\n    isDelta?: boolean;\r\n    xAxis: \"dayNumber\" | \"date\";\r\n    range?: {\r\n        start: number,\r\n        end: number\r\n    };\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IFunctionPoint {\r\n    x: number | Date;\r\n    y: number;\r\n    xLabel?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IApiResult<T> {\r\n    error: string;\r\n    data: T;\r\n    isSuccess: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface ITextValue<TValue> {\r\n    text: string;\r\n    value: TValue;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport const MATERIAL_COLORS = {\r\n    \"red\": { \"600\": \"#f44336\" },\r\n    \"pink\": { \"600\": \"#e91e63\" },\r\n    \"purple\": { \"600\": \"#9c27b0\" },\r\n    \"deep_purple\": { \"600\": \"#673ab7\" },\r\n    \"indigo\": { \"600\": \"#3f51b5\" },\r\n    \"blue\": { \"600\": \"#2196f3\" },\r\n    \"light_blue\": { \"600\": \"#03a9f4\" },\r\n    \"cyan\": { \"600\": \"#00bcd4\" },\r\n    \"teal\": { \"600\": \"#009688\" },\r\n    \"green\": { \"600\": \"#4caf50\" },\r\n    \"light_green\": { \"600\": \"#8bc34a\" },\r\n    \"lime\": { \"600\": \"#cddc39\" },\r\n    \"yellow\": { \"600\": \"#ffeb3b\" },\r\n    \"amber\": { \"600\": \"#ffc107\" },\r\n    \"orange\": { \"600\": \"#ff9800\" },\r\n    \"depp_orange\": { \"600\": \"#ff5722\" },\r\n    \"brown\": { \"600\": \"#795548\" },\r\n    \"grey\": { \"600\": \"#9e9e9e\" },\r\n    \"blue_gray\": { \"600\": \"#607d8b\" },\r\n};\r\n\r\n\r\ndeclare function gtag(...args: any);","module.exports = __WEBPACK_EXTERNAL_MODULE__2370__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1431__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4396__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3892__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__3892__","__WEBPACK_EXTERNAL_MODULE__4396__","__WEBPACK_EXTERNAL_MODULE__1431__","__WEBPACK_EXTERNAL_MODULE__2370__","__defineTemplate","t","beginChild","class","m","className","visible","set","enabled","selectionManager","isActive","if","icon","t3","template","endChild","mainAction","on","showNavigationMenu","behavoir","back","content","title","t4","text","foreach","actions","name","close","selectionText","navigationMenu","tooltip","executeAsync","value","editValue","focus","hasFocus","uid","label","t2","toggle","status","isShowOpener","hide","clear","items","type","isExpanded","canExpand","isOverflow","toggleExpand","placeholder","selectedDay","WebApp","Format","days","selectedMonth","months","number","selectedYear","years","header","groups","count","t6","t7","select","style","progress","progressText","html","appendChild","model","t1","substr","badge","canOpen","mainActions","length","hasActions","open","get","showMenu","canAdd","addAction","emptyView","injectProxy","showSeparator","footer","address","map","showMap","mediaView","fileUpload","activeView","message","selectAction","activeTransaction","pageViews","current","view","switchView","action","isShowInfo","request","description","contentView","showLabel","editor","readonly","displayValue","error","removeAsync","searchText","navBar","selectedItem","isSelected","subText","clearAction","selectAsync","selectedItemText","maxLength","App","language","lineCount","index","currentStepIndex","currentView","coverImage","next","finish","Services","join","separator","args","result","arg","params","usage","numberWithCommas","undefined","toString","replace","currency","symbol","toFixed","replaceArgs","key","state","curName","i","c","replaceArgs2","paramName","paramValue","JSON","stringify","linkify","replacedText","replacePattern1","replacePattern2","replacePattern3","Http","getStringAsync","url","method","postStringAsync","data","getJsonAsync","responseType","postJsonAsync","postBinaryAsync","onProgress","dataType","isList","obj","isObservableList","isString","isFunction","isObject","Uri","_relativeSegment","_absoluteSegment","isAbsolute","uri","indexOf","getRelativeSegment","lastIndexOf","getAbsoluteSegment","absolute","document","URL","EmptyEnumerator","moveNext","reset","DistinctEnumerator","_selector","_source","_foundItems","_current","constructor","source","selector","this","a","item","push","DictionaryEnumerator","_curIndex","_keyList","_value","Object","getOwnPropertyNames","first","last","ArrayEnumerator","toArray","CollectionEnumerator","SelectManyEnumerator","_index","_curGroup","getEnumerator","SelectEnumerator","WhereEnumerator","_condition","condition","SkipEnumerator","_count","_skipped","elCount","TakeEnumerator","_taken","IteratorEnumerator","done","Linq","_enumerator","selectMany","linq","ofType","typeOrCheck","where","lastItem","sum","parseFloat","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","avg","NaN","concat","orderBy","sort","b","orderByDesc","itemA","distinct","groupBy","comparer","keySelector","itemKey","groupItem","values","async","chunkSize","any","contains","all","take","skip","newItem","toGenerator","generator","array","toDictionary","valueSelector","Symbol","iterator","enumerator","Array","isArray","Strings","StringTable","static","config","sector","_currentConfig","_tables","getKey","curValue","str","currentConfig","WordNumber","WordGender","StringUsage","DynamicString","format","cfg","Column","Label","Action","Title","Question","Tooltip","Message","toUpperCase","simple","getValue","usageOrConfig","complex","curNameParams","curNameParamsDeep","gender","forEach","paramCfg","parse","trim","flagFound","startsWith","Plural","useArticle","useArticleInd","cardinality","parseInt","isNaN","param","adverb","advCfg","Female","female","male","appendArticle","article","charAt","adjective","adjCfg","fullName","plural","singular","detArticle","undetArticle","noun","nameCfg","delayAsync","milliseconds","Promise","res","setTimeout","DynamicPageManager","_struture","pageInfo","curOperation","operation","begin","clientPage","getClientPageAsync","isLoded","loadClientPageAsync","eval","page","baseUrl","end","pageName","src","curStruct","include","file","components","pages","loaders","scripts","ScriptLoader","styles","StyleLoader","loadAsync","loadAppStructureAsync","includeClientPage","GeoPlotApplication","handleError","runAsync","XHRHttpClient","resolve","startupArgs","appName","isDev","ColorPicker","_onSelected","_element","_mouseDown","color","addColor","ev","onMouseDown","attachNode","element","body","colors","isOpened","window","event","mouseEvent","coords","x","pageX","y","pageY","left","top","clientHeight","addEventListener","removeEventListener","target","parentElement","ko","observable","InfectionDataSet","empty","currentPositive","historicDeaths","toatlTests","totalDeath","totalHealed","totalHospedalized","totalPositive","totalSevere","totalCaseTested","newICU","totalAntigenicPositive","totalAntigenicTests","totalMolecularPositive","totalMolecularTests","indicators","id","$string","colorLight","colorDark","validFor","showInFavorites","compute","v","round","surface","demography","total","gradient","canBeNegative","death2019","death2020","isNaNOrNull","over65","factors","formatNumber","reference","divideNull","f","RangeDayAreaDataSet","_days","startIndex","startDay","endIndex","endDay","ViewModes","mapGroup","tab","areaType","validateId","toLowerCase","bindingHandlers","attach","init","valueAccessor","allBindings","viewModel","func","unwrap","call","LinearGradient","RgbColor","valueAt","pos","stepSize","minX","Math","floor","maxX","ceil","minOfs","c1","c2","c3","r","g","fromHex","toHex","capitalizeFirst","expandCollapse","elment","container","querySelector","classList","removeProperty","remove","add","display","defineProperty","HTMLCanvasElement","prototype","callback","quality","canvas","binStr","atob","toDataURL","split","len","arr","Uint8Array","charCodeAt","Blob","ConstIndicatorFunction","main","delta","exMain","exDelta","area","sumNull","SimpleIndicatorFunction","CombineIndicatorFunction","_indicators","SimpleFactorFunction","indicator","DoubleFactorFunction","_factor","factor","curFactor","IndicatorCalculator","dataSet","geo","getDataAtDay","curAreaId","day","getFactorValue","options","areaId","areaOrId","dayGroup","dayNumberOrGroup","dayNumber","isDayDelta","execludedAreas","curExMain","curExDelta","exAreaId","factorId","indicatorId","areas","getIndicatorValue","getSerie","isDelta","groupSize","group","xAxis","Date","date","exeludedAreaIds","TipViewModel","_closeTimeoutId","_closeAfter","closeAfter","dontShowAgain","onActionExecuted","executeAction","showAction","startPulse","elementSelector","relY","centerElement","addClass","tipElement","clientTop","isTransparent","stopPulse","removeClass","understood","onClose","clearTimeout","isVisible","show","TipManager","_getPreferences","_tips","tips","getPreferences","savePreferences","preferences","markAction","actionId","safeCall","gtag","event_category","event_label","markTip","tipId","engageUser","showTips","nextTip","showAfter","showTip","timeout","override","tip","force","order","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","arguments","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","requiredArgs","required","TypeError","toDate","argument","argStr","getTime","console","warn","Error","stack","toInteger","dirtyNumber","startOfUTCWeek","dirtyDate","dirtyOptions","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","isSameUTCWeek","dirtyDateLeft","dirtyDateRight","dateLeftStartOfWeek","dateRightStartOfWeek","weekdays","thisWeek","formatRelativeLocale","lastWeek","baseDate","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","argumentCallback","buildMatchPatternFn","string","matchResult","match","matchPattern","matchedString","parseResult","parsePattern","valueCallback","rest","slice","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","findIndex","pattern","test","findKey","object","predicate","hasOwnProperty","code","formatDistance","token","addSuffix","comparison","formatRelative","localize","ordinalNumber","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","firstWeekContainsDate","tokenValue","_date","_baseDate","_options","rem100","IndicatorViewModel","AreaViewModel","GeoPlotPage","_mainData","_mainGeo","_detailsData","_detailsGeo","_selectedArea","_chart","_daysData","_topAreasVisible","_mapSvg","_execludedArea","Map","_dataSet","_keepState","_debugMode","_preferences","_calculator","areaSelected","featureName","viewMode","selectedArea","indicatorSelected","currentArea","selectedIndicator","dayChanged","indicatorChanged","viewChanged","topAreasOpened","M","Collapsible","getInstance","getElementById","deltaSelected","factorChanged","selectedFactor","groupChanged","FormSelect","querySelectorAll","chartActionExecuted","scaleChanged","isLogScale","maxFactorChanged","autoMaxFactor","maxFactor","regionExcluded","updateIndicator","_specialDates","dash","_dataRanges","debugMode","dataRange","subscribe","findDayIndex","parseDate","updateDays","tipManager","updateDayData","updateChart","getElementsByTagName","e","onMapClick","Tabs","onShow","el","setViewMode","dataset","topCasesView","onOpenStart","updateTopAreas","onCloseEnd","computed","detailsArea","updateDetailsArea","updateMaxFactor","updateMap","updateUrl","baseFactor","computeStartDayForGroup","isZoomChart","urlParams","URLSearchParams","location","search","stateRaw","loadPreferences","loadState","isDefaultState","dayDelta","logScale","showEnvData","dateRangeId","excludedArea","scrollTop","dataRanges","isShowEnvData","saveStata","size","keys","json","localStorage","getItem","version","getDefaultPreferences","isFirstView","setItem","toggleChartZoom","svgText","outerHTML","blob","navigator","svgImage","createElement","clientWidth","height","onload","ctx","getContext","fillStyle","fillRect","drawImage","toBlob","pngBlob","ClipboardItem","clipboard","write","toast","createObjectURL","href","download","click","copyChart","plugins","datasets","formatDate","copyText","serie","range","start","factorDescription","play","isPlaying","nextFrame","pause","mode","fromModel","totalDays","districtGroup","clearMap","parent","changeArea","invModule","isDouble","has","delete","isEmptyArea","updateArea","updateFactorDescription","updateAreaIndicators","desc","curView","list","abs","initChart","referencesPlugIn","afterDraw","chart","xScale","scales","xAxes","offset","getPixelForValue","lineWidth","beginPath","moveTo","chartArea","lineTo","bottom","strokeStyle","setLineDash","dashOffset","lineDashOffset","stroke","Chart","beforeDraw","fill","borderWidth","maintainAspectRatio","legend","position","callbacks","parsed","adapters","$language","it","unit","tooltipFormat","borderColor","backgroundColor","orderedData","update","detailsEl","detailsLoading","waitFor","innerHTML","getSelection","mainData","fetch","mapData","svgMap","isInArea","topAreas","currentData","encodeURIComponent","btoa","history","replaceState","discretize","exponential","Signal","isNoFactorSelected","groupDays","Api","saveState","isSuccess","loadStudioData","OperationType","TimePart","isUpperCase","repeatString","padLeft","char","ticks","totalHours","totalMinutes","totalSeconds","totalMilliseconds","hours","minutes","seconds","formatArgument","WEEK_DAYS","MONTHS","getDate","getDay","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","formatDateArgument","LinqNode","node","childNodes","descendsFrom","curItem","parentNode","hasClass","discendants","child","innerChild","parentNodesOrSelf","parentNodes","nodeName","parentOfClass","linqNode","idMap","equalsArray","equals","isEmpty","valueA","valueB","getOrCreateProperty","propName","getOwnPropertyDescriptor","createProperty","writable","enumerable","defValue","getTypeName","results","exec","getFunctionName","constFunc","getBaseType","objOrFun","proto","getPrototypeOf","getType","typeOrName","parts","curObj","part","registerType","ComputedProperty","_handlers","getter","notifyChanged","forEachRev","handler","unsubscribe","splice","isReadOnly","_descriptor","oldValue","Properties","create","property","newValue","hasProp","prop","isProperty","isObservableProperty","converter","convert","convertBack","conValue","createAll","propDesc","getOrCreate","bind","dest","convertTo","convertFrom","Binder","_bindings","_modelBinders","_depBinders","register","binder","registerDependant","unregisterDependant","getBindValue","binding","subscriptions","lastValue","createProxy","bindValue","cleanValue","sub","onChanged","getBindingProperty","lastProp","propList","proxy","listProxy","_innerProxies","innerProxy","lastValueSet","isInit","cleanBindings","updateModel","_computedBinder","bindConfig","onValueChanged","bindConfigString","configOrUsage","bindString","createComputed","apply","block","MapShapeType","isAsyncEditor","isActivable","isSelectable","isAsyncLoad","isValidable","isHTMLContainer","TemplateCatalog","_endElement","_startElement","_lastElement","_childCount","_updateCount","_updateNode","super","namespaceURI","namespace","beginTemplate","refNode","refNodePos","marker","innerBuilder","inlineMode","isInline","endTemplate","childBuilder","beginUpdate","createTextNode","replaceChild","endUpdate","createComment","nextSibling","insertBefore","nodeType","Node","COMMENT_NODE","textContent","curNode","mustDelete","prev","previousSibling","removeChild","templateOrName","foreachArray","foreachList","itemsBuilders","loadTemplate","onClear","onItemRemoved","reason","onItemSwap","newIndex","onItemReplaced","oldItem","onItemAdded","itemBuilder","createMarker","isUpdate","isClear","trueTemplate","falseTemplate","replaceContent","nodes","extractContent","inline","isCacheEnabled","templateFor","childElement","tagName","ChildTemplateBuilder","builderOrAttributes","attribs","attribute","then","setAttribute","removeAttribute","nameParts","textNode","valueProp","activeElement","checked","nameOrValue","debugger","createElementNS","baseName","ObservableList","_items","equalityComparer","invoke","addRange","insert","removeAt","removeWhen","removeRange","isChanged","swap","temp","toJSON","parentView","debugTypeName","_progress","_type","parentOperation","log","getProgressDescription","addSubOperation","subOperations","removeSubOperation","msg","totCount","digits","pow","s","ViewComponent","buildStyles","addStyle","removeStyle","curType","debugName","ContentView","onContentChanged","contentTemplate","_menuContainer","_clickHandler","onClick","curOfs","MouseEvent","srcElement","offsetX","offsetY","touches","clientX","clientY","curEl","offsetEl","offsetTop","offsetLeft","offsetParent","scrollLeft","xTrans","yTrans","transformOrigin","AggregationMode","executeWorkAsync","subActions","stopPropagation","op","menu","showAsync","ex","actionViewConfig","displayName","canExecute","canAggregate","None","SelectionManager","selectedItems","updateView","detach","passive","curTarget","currentTarget","scrollParent","isRequested","computeScroll","isScrollCheckActive","requestAnimationFrame","found","scrollingElement","onScroll","offsetBottom","scrollHeight","pageBottom","pageTop","totPages","vibrate","preventDefault","_parentHost","clearAsync","goBackAsync","goForwardAsync","bringFrontAsync","host","find","nameOrType","currentIndex","canGoBack","pageCount","Page","getState","setState","loadWorkAsync","refreshAsync","subTitle","initItems","viewContent","addView","loadAllAsync","removeView","replaceView","oldView","newView","Activity","_viewItems","_resultResolve","activateAsync","deactivateAsync","closeResult","closeAsync","createAsync","isInstanceOf","_activeViewIndex","_pageStack","_currentIndex","_hideTimerId","defaultTransaction","goToAsync","pageIndex","cancelHidePrev","isActivity","loadMode","transaction","backIndex","frontIndex","hidePrev","onActivePageChanged","onTransactionEnd","curPage","PageHostMode","ContentSelector","PrimaryActionMode","maxTouchPoints","stopImmediatePropagation","getContextActions","ActionPriority","onActionAdded","onActionRemoved","onBack","startSelection","NavBarItem","behavoirs","addItem","onItemSelected","onSelectedItemChanged","selectItem","createItem","itemTemplate","itemBehavoirs","_lastSearchText","onFocusChanged","poolInterval","searchAsync","doSearchAsync","poolSearchTextAsync","_actionBar","_contentView","_floatingView","_isContentLoaded","_navBar","_isDeactivating","providers","activeContentProvider","loadContentAsync","loadActiveContentAsync","notifyContentChanged","provider","info","activeContent","isContentChanged","debug","getContentAsync","actionPanel","formatTitle","mergeArrays","contentStyle","views","priority","createActionView","actionMode","Button","FloatingFull","actionView","searchView","getAction","Manual","navStyle","BottomNav","floatingStyle","newContent","actionBar","FullItemsLoader","itemsSource","getItemsAsync","filter","forEachAsync","_isLoaded","_itemViewMap","_listener","itemsLoader","createItemView","createItemViewWork","instance","isAutoLoad","itemsHandler","oldValueX","selectionMode","updateItemSelection","onSelectdItemChanged","isListenerActive","activateListener","typeName","getItemValue","onItemChanged","getItemByValueAsync","deactivateListener","findItemView","entries","removeItem","oldSelection","loadItemsAsync","itemComparer","itemView","getItemText","itemsCount","Item","Boolean","valueOf","_typeName","_allowZero","allowZero","bindItem","getFilter","pageSize","_hasMoreItems","_container","loadNextPageAsync","canLoadNextPage","newItems","SearchActivity","_listView","_searchView","_emptyView","_lastItems","searchWorkAsync","query","listStyles","configureListView","hasItems","noMatchingText","_margin","_isAnimating","hammer","recognizers","direction","startHeight","oldStatus","startScrollTop","headHeight","deltaY","head","newScrollTop","newHeight","panHeight","enableScrolling","setHeightAsync","headSelector","headEl","removeWorkAsync","checkOverflow","wrapper","ItemEditContent","_host","saveItemAsync","beginEditAsync","saveOnCommit","saveAsync","saveLabel","savePriority","isValid","commitAsync","contentWindow","WebPage","readyState","rej","onLoad","onError","reload","BasePopUpMessage","_showResolve","_isVisible","actionName","contentProvider","closeLabel","editToItemAsync","validate","popUp","edit","openAsync","BaseEditor","_needValidation","_isEditing","_onCommit","_editValue","setEnumerable","onCommit","old","updateUid","editToValue","valueToEdit","base","createEditValueProp","notifyEditValueChangedAsync","isDirty","commitMode","validateAsync","loadAsyncWork","groupEnd","clearError","beginEditWorkAsync","validationMode","validationResult","validateAsyncWork","commitAsyncWork","rollback","allowNull","_isSelecting","createEmptyItem","emptyText","selectedIndex","editAsync","findItemByValue","input","onchange","files","contentOptions","pageOptions","activity","loadPageAsync","phoneNumber","email","newWindows","pageId","zoomLevel","latitude","longitude","ActivityEditor","SelectMultipleItemsActivity","_bottomSheet","_emptyItem","createItemContentView","createItemListView","createItemEditor","filters","setSelectedItems","searchMode","addLabel","addSelection","confirmAsync","addItemAsync","showEmptyItem","emptyLabel","updateSelection","findItem","selView","removeSelection","exItem","selItem","findSelectable","SelectSingleItemActivity","selectedValue","setSelectionAsync","ConsoleItem","ConsoleMessageView","ConsoleGroupView","_oldConsole","_groups","_activeGroup","_isCreated","trace","logType","newGroup","pop","Animation","_body","_actions","actionTemplate","cubic","p0","p1","p2","p3","linear","animate","curTime","setInterval","duration","step","timeFunction","clearInterval","stepTime","DrawerGroup","hideAsync","addGroup","onGesture","getGroup","labelTxt","_input","loaded","colsCount","rowsCount","Interaction","Components","Editors","headerTemplate","substring","img","loadImageAsync","_otherAction","openWork","contextActions","mapSize","updateAsync","manager","getLocationAsync","staticMap","center","pins","_waitHandlers","_isSet","_autoReset","isSet","autoReset","_manager","createMapItem","onSelectionChanged","showCurrentPositionAsync","mapReady","showCurrentPosition","mapOptions","mapItems","addItems","mapItem","onMapLoaded","_video","updateVideo","video","paused","played","removeListeners","loadListener","errorListener","loadVideoIntoAsync","muted","loadVideoAsync","isMuted","autoplay","isAutoPlay","controls","showControls","loop","isLoop","load","_imageConfig","_videoConfig","image","updateContent","BaseTextEditor","selectionStart","selectionEnd","trackMode","NumberEditor","precision","_lastValidationValue","o","n","validators","bindEditor","fieldName","validator","SectionView","sections","section","instanceId","showTime","showMs","WizardStepView","selectStepAsync","nextLabel","nextAsync","previousAsync","finishAsync","hasNextStep","hasPrevStep","steps","doFinishAsync","prevLabel","finishLabel","validateUntilAsync","clearErrors","targetIndex","curStep","curIndex","isComplete","MessageContent","customActions","BasePicker","pickLabel","updateViewAsync","trueLabel","falseLabel","maxYear","minYear","tryCommit","ItemEditorConverter","_item","itemToEdit","editToItem","showMessageAsync","msgActions","msgBox","warning","succeed","fail","updateItemAsync","removeItemAsync","editItem","ItemsEditorItemView","canEdit","editActionsPriority","editActionLabel","canRemove","removeActionLabel","itemActions","isEdit","editMode","updateValueAsync","createUpdateEditor","createAddEditor","executeUpdateAsync","executeAddAsync","addTitle","editTitle","cancelEdit","itemsEditor","_changesCount","_isUpdating","createItemAddEditor","createItemUpdateEditor","attachItem","openItem","addActionLabel","addAsync","awaiters","itemToValue","isNew","isCapable","isConfirmRemove","valueToItemAsync","itemValue","updateItem","getItemViewContent","getUploadUrl","getMediaUrl","fileName","validMedias","maxFileSize","uploadAsync","noMediaUrl","change","mustRefresh","ObjectEditor","_proxy","_onPropertyChanged","onPropertyChanged","properties","addProperty","curProp","onPropertyValueChanged","defaultProperty","commitResult","commitPropertyAsync","propertyTemplateName","RichTextEditor","Quill","theme","SectionEditorView","addSection","activeSectionName","getSection","MultiItemSelector","richText","textMultiLine","boolean","password","birthDate","minAge","singleItemSelector","Validators","EMAIL_REGEXP","PHONE_REGEXP","minValue","maxValue","integer","phone","custom","permission","granted","BaseOperation","Operation","raise","DaColumnType","_oprations","configOrMessge","onBegin","onEnd","operations","SplitEnumerator","_separator","_startIndex","_currentStartIndex","CsvSplitEnumerator","_state","_wordLength","_wordStartIndex","_hasEscape","BaseDataAdapter","TextTableDataAdapter","createIdentifier","extractHeader","firstRow","rowSeparator","cols","columnSeparator","headers","hasHeader","rowAnal","analyzeRow","stringCount","emptyCount","columns","Exclude","extractRowSeparator","extractColumnSeparator","stats","rows","row","booleanCount","dateCount","numberCount","analyzeColumn","createParser","anal","endsWith","maxRows","curOp","colAnalysis","rowCount","foreachAsync","col","parser","XAxis","Serie","Group","maxItems","xColumnIndex","xValue","curGroup","colId","series","BaseTreeItem","canDrag","canReadData","transfer","readData","writeData","onParentChanged","canAccept","itemType","execute","TreeNode","_treeView","_parentNode","_dargEnterCount","_childLoaded","loadChildNodes","removeAll","generateId","onKeyDown","ondragstart","onDrag","ondragover","onDragOver","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","keyCode","dataTransfer","canDrop","ctrlKey","dropEffect","elId","getData","selectedNode","addNode","treeView","childNode","toggleVisible","expand","observableArray","TreeView","_selectedNode","setRoot","FileDragDrop","onFileDropped","ProgressViewModel","_showCount","percentage","ColumnViewModel","types","alias","GroupItem","SerieItem","DataImportControl","_model","_adapter","_text","_onGetData","columnSeparators","onNodeSelected","fileDrop","importText","hasData","analyzeAsync","updatePreview","getSelectedDataWork","newGroups","getSelectedData","loadGroupAsync","updateNode","loadTableAsync","table","updateGroups","updateTable","Modal","sourceUrl","ok","statusText","GraphContext","setExpressions","calculator","curExp","expressions","folderId","newList","folder","setSelectedId","controller","listModel","dispatch","setColor","exp","getExpressions","setExpression","updateExpression","updateVariable","varName","latex","expressionZoomFit","setItemVisibile","hidden","generateVars","generateVar","prefix","vars","serieCalculator","treeItems","BaseStudioItem","_graphCtx","_varsMap","createActions","opened","setStateWork","updateGraph","setChildrenStateWork","getVar","recursive","removeExpression","getGraphId","children","updateGraphVisibility","onSelected","attachGraph","observe","onGraphChanged","updateColor","isFullVisible","recorsive","uuidv4","updateGraphWork","updateParameters","replaceVars","reg","RegExp","addChildrenWork","createParameters","parameters","mainExpression","optionsTemplateName","pSBCr","d","toSafeString","RegressionFunctionViewModel","RegressionFunctionVarViewModel","autoCompute","StudioSerieRegression","functions","addFunction","showIntegration","selectedFunction","updateStartDay","updateEndDay","maxDay","vModel","updateRegressionVars","getItemModel","regressionParameters","ParameterViewModel","p","function","funcVar","slider","collapsed","secret","regColor","c0","l","P","h","blendColor","lineStyle","lines","pointStyle","points","dragMode","hardMax","hardMin","StudioSerie","importValues","startDate","dateDiff","xLabel","onSerieChanged","setData","updateSerie","addRegression","zoom","answer","prompt","alignOthers","tollerance","alignWith","ofs","ofsX","updateAggregate","upgradeSource","upgradeAreaId","configOrState","daySource","minY","maxY","setMathBounds","right","StudioProject","aggregationModes","updateAllSerie","textData","fromText","addSerie","xReal","funValues","aggregationMode","configOrSerie","StudioPage","_projectId","projectId","pasteGraphLink","pasteTableData","expressionsCollapsed","restrictedFunctions","administerSecretFolders","authorIDE","advancedStyling","onGraphSelectionChanged","newProject","import","share","showOptions","onPaste","clipboardData","updateOptions","folderGuid","treeItem","bounds","graphpaperBounds","mathCoordinates","getSelectedProject","proj","addProject","projects","project","graphState","demo","dataImport","addImportedData","confirm","AggregationFunc","GeoAreaType","Gender","MATERIAL_COLORS","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__esModule","definition","toStringTag"],"sourceRoot":""}