{"version":3,"sources":["../../webpack/universalModuleDefinition","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ActionBar.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ActionView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/Attach.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/Blocker.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/BooleanEditor.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/BottomSheet.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ConsoleView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/Container.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ContentView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ContextMenu.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/CounterView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/DateEditor.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/DateEditorCombo.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/Drawer.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/FileUploadView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/HeadedContentView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/HtmlView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/Icon.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/IconTextView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ImageView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ItemSelector.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ItemView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ItemsEditor.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ItemsView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ListView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/LocationView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/MediaEditor.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/MediaView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/MessageBox.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/MultiItemPicker.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/NavBar.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/PageHost.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/PermissionRequestItemView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/PopUpContent.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/ProgressView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/PropertyView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/RemovableItemView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/SearchView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/SectionEditor.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/SectionsView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/SelectableItemView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/SimpleItemView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/SingleItemPicker.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/SingleItemSelector.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/SnackBar.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/TextEditor.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/TextView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/Toast.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/VideoView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/WebView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Tools/Eusoft/WebApp/src/Eusoft.WebApp/Templates/WizardView.html","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Global.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Helpers/Format.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Helpers/Http.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Helpers/TypeCheck.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Helpers/Uri.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Linq.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/StringTable.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Types/DynamicString.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/PromiseUtils.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Loaders.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Services/DynamicPageManager.ts","../.././Scripts/Application.ts","../.././Scripts/Data/InfectionDataSet.ts","../.././Scripts/Data/RangeDayAreaDataSet.ts","../.././Scripts/Data/ViewModes.ts","../.././Scripts/Framework/Bindings.ts","../.././Scripts/Framework/Graphics.ts","../.././Scripts/Global.ts","../.././Scripts/Indicators.ts","../.././Scripts/Framework/TipManager.ts","../.././node_modules/date-fns/esm/locale/it/_lib/formatDistance/index.js","../.././node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../.././node_modules/date-fns/esm/locale/it/_lib/formatLong/index.js","../.././node_modules/date-fns/esm/_lib/toInteger/index.js","../.././node_modules/date-fns/esm/_lib/requiredArgs/index.js","../.././node_modules/date-fns/esm/toDate/index.js","../.././node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../.././node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","../.././node_modules/date-fns/esm/locale/it/_lib/formatRelative/index.js","../.././node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../.././node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../.././node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../.././node_modules/date-fns/esm/locale/it/index.js","../.././node_modules/date-fns/esm/locale/it/_lib/localize/index.js","../.././node_modules/date-fns/esm/locale/it/_lib/match/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../.././node_modules/date-fns/esm/locale/en-US/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../.././node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../.././Scripts/Pages/GeoPlotPage.ts","../.././Scripts/Api.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Language/IT.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Abstraction/IOperation.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Types/TimeSpan.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/StringUtils.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/DateUtils.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Types/Exception.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/DomUtils.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/Identifier.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/Properties.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Abstraction/IMapManager.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/ArrayUtils.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Utils/ObjectUtils.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/ComputedProperty.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/ObservableProperty.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/Binder.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/BindableObject.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/TypeCheck.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/Abstraction/IBehavoir.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/TemplateBuilder.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/ObservableList.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/View.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Operation.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/ViewUtils.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ViewComponent.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ContentView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ContextMenu.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/IconTextView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ActionView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/SelectionManager.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Behavoirs/AttachBehavoir.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Behavoirs/RippleClickBehavoir.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Behavoirs/ScrollCheckBehavoir.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Behavoirs/VibrateClickBehavoir.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Blocker.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SelfHostedPageHost.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Page.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ItemsView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Panel.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/Activity.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SlidePageHost.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Abstraction/IGestureListener.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Abstraction/IAction.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Abstraction/IPageHost.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/ContentActivity.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ActionBar.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/NavBar.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SearchView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/FulltemsLoader.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/TextView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ListView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/Item.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/ItemsSource.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/PagedItemsLoader.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/SearchActivity.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/BottomSheet.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/RemovableItemView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SelectableItemView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Container.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Content/ItemEditContent.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/WebView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/WebPage.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/BasePopUpMessage.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/PopUpContent.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/PopupEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BaseEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Templating/Functions.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/SingleItemSelector.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Actions.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/ActivityEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/SelectMultipleItemsActivity.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Activities/SelectSingleItemActivity.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ConsoleView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Animation.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ContentHostView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/CounterView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Drawer.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/FileUploadView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/GridView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Interaction.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Components.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Editors.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/HeadedContentView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/HtmlView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ImageView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/ImageLoade.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ItemView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/LocationView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/Core/Types/Signal.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/MapItemsView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/MapView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/VideoView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/VideoLoader.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/MediaView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/MessageBox.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/ProgressView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BaseTextEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/NumberEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/PropertyView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SectionsView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SimpleItemView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/SnackBar.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/StaticMapView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/Toast.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Components/WizardView.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Content/MessageContent.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BaseItemEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BasePicker.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/BooleanEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/DateEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/DateEditorCombo.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/ItemEditorConverter.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Items/EditableItemsSource.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/ItemsEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/MediaEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/MultiItemPicker.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/ObjectEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/RichTextEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/SectionEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/SingleItemPicker.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/MultiItemSelector.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/TextEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Editors/TimeEditor.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Helpers/Validators.ts","../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts/View/Services/PermissionManager.ts","../.././Scripts/Framework/Operation.ts","../.././Scripts/Framework/DataAdapter.ts","../.././Scripts/Framework/SplitEnumerator.ts","../.././Scripts/Components/TreeView.ts","../.././Scripts/Components/DataImport.ts","../.././Scripts/Components/GraphContext.ts","../.././Scripts/Components/BaseStudioItem.ts","../.././Scripts/Components/ColorPicker.ts","../.././Scripts/Components/StudioRegression.ts","../.././Scripts/Components/StudioSerie.ts","../.././Scripts/Components/StudioProject.ts","../.././Scripts/Pages/StudioPage.ts","../.././Scripts/Types.ts","../../external \"Chart\"","../../external \"Desmos\"","../../external \"Hammer\"","../../external \"webapp-core\"","../../webpack/bootstrap","../../webpack/runtime/compat get default export","../../webpack/runtime/define property getters","../../webpack/runtime/hasOwnProperty shorthand","../../webpack/runtime/make namespace object"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__7836__","__WEBPACK_EXTERNAL_MODULE__3794__","__WEBPACK_EXTERNAL_MODULE__1404__","__WEBPACK_EXTERNAL_MODULE__5665__","__defineTemplate","t","beginChild","class","m","className","visible","set","enabled","selectionManager","isActive","if","icon","t3","template","endChild","mainAction","on","showNavigationMenu","behavoir","back","title","text","foreach","actions","name","content","close","selectionText","t4","navigationMenu","tooltip","executeAsync","status","value","editValue","focus","hasFocus","uid","label","t2","toggle","isShowOpener","hide","clear","items","type","isExpanded","canExpand","isOverflow","toggleExpand","placeholder","selectedDay","WebApp","Format","days","selectedMonth","months","number","selectedYear","years","header","groups","count","t6","t7","select","style","progress","progressText","html","appendChild","model","t1","substr","badge","canOpen","mainActions","length","hasActions","open","get","showMenu","canAdd","addAction","emptyView","injectProxy","showSeparator","footer","address","map","showMap","mediaView","fileUpload","activeView","message","selectAction","activeTransaction","pageViews","current","view","switchView","action","isShowInfo","request","description","contentView","showLabel","editor","readonly","displayValue","error","removeAsync","searchText","navBar","selectedItem","isSelected","subText","clearAction","selectAsync","selectedItemText","maxLength","App","language","lineCount","index","currentStepIndex","currentView","coverImage","next","finish","Services","join","separator","args","result","arg","params","usage","currency","symbol","undefined","toFixed","replaceArgs","key","state","curName","i","c","replaceArgs2","paramName","paramValue","JSON","stringify","linkify","replacedText","replacePattern1","replacePattern2","replacePattern3","replace","Http","getStringAsync","url","method","postStringAsync","data","getJsonAsync","responseType","postJsonAsync","postBinaryAsync","onProgress","dataType","isList","obj","isObservableList","isString","isFunction","isObject","Uri","_relativeSegment","_absoluteSegment","isAbsolute","uri","indexOf","getRelativeSegment","lastIndexOf","getAbsoluteSegment","absolute","document","URL","EmptyEnumerator","moveNext","reset","DistinctEnumerator","constructor","source","selector","this","_selector","_source","a","_current","item","_foundItems","push","DictionaryEnumerator","_keyList","Object","getOwnPropertyNames","_value","_curIndex","first","last","ArrayEnumerator","toArray","CollectionEnumerator","SelectManyEnumerator","_curGroup","_index","getEnumerator","SelectEnumerator","WhereEnumerator","condition","_condition","SkipEnumerator","_count","_skipped","elCount","TakeEnumerator","_taken","IteratorEnumerator","done","Linq","_enumerator","selectMany","linq","ofType","typeCheck","where","lastItem","sum","parseFloat","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","avg","NaN","concat","toString","orderBy","sort","b","orderByDesc","itemA","distinct","groupBy","comparer","keySelector","itemKey","groupItem","values","chunkSize","any","contains","all","take","skip","newItem","toGenerator","generator","array","toDictionary","valueSelector","Symbol","iterator","enumerator","Array","isArray","Strings","StringTable","config","sector","_currentConfig","_tables","getKey","curValue","str","WordNumber","WordGender","StringUsage","DynamicString","format","cfg","Column","Label","Action","Title","Question","Tooltip","Message","toUpperCase","simple","getValue","usageOrConfig","complex","curNameParams","curNameParamsDeep","gender","forEach","paramCfg","parse","trim","flagFound","startsWith","Plural","useArticle","useArticleInd","cardinality","parseInt","isNaN","param","adverb","advCfg","Female","female","male","appendArticle","article","charAt","adjective","adjCfg","fullName","plural","singular","detArticle","undetArticle","noun","nameCfg","delayAsync","milliseconds","Promise","res","setTimeout","ScriptLoader","src","isLoaded","scripts","toLowerCase","loadAsync","operation","resolve","reject","curOperation","parentOperation","scriptNode","createElement","onload","end","onerror","body","StyleLoader","styleSheets","href","linkNode","rel","DynamicPageManager","pageInfo","clientPage","getClientPageAsync","isLoded","loadClientPageAsync","eval","page","pageName","curStruct","include","file","components","_struture","pages","loaders","styles","loadAppStructureAsync","includeClientPage","GeoPlotApplication","handleError","runAsync","XHRHttpClient","baseUrl","InfectionDataSet","empty","currentPositive","historicDeaths","toatlTests","totalDeath","totalHealed","totalHospedalized","totalPositive","totalSevere","totalCaseTested","newICU","totalAntigenicPositive","totalAntigenicTests","totalMolecularPositive","totalMolecularTests","indicators","id","$string","colorLight","colorDark","validFor","showInFavorites","compute","v","round","surface","demography","total","gradient","canBeNegative","death2019","death2020","isNaNOrNull","over65","factors","formatNumber","reference","divideNull","f","RangeDayAreaDataSet","_days","startIndex","startDay","endIndex","endDay","ViewModes","mapGroup","tab","areaType","validateId","window","ko","bindingHandlers","attach","init","element","valueAccessor","allBindings","viewModel","func","unwrap","call","LinearGradient","colors","RgbColor","valueAt","pos","stepSize","minX","Math","floor","maxX","ceil","minOfs","c1","c2","c3","r","g","fromHex","toHex","capitalizeFirst","expandCollapse","elment","container","parentElement","querySelector","classList","removeProperty","remove","add","display","defineProperty","HTMLCanvasElement","prototype","callback","quality","canvas","binStr","atob","toDataURL","split","len","arr","Uint8Array","charCodeAt","Blob","ConstIndicatorFunction","main","delta","exMain","exDelta","area","sumNull","SimpleIndicatorFunction","CombineIndicatorFunction","_indicators","SimpleFactorFunction","indicator","DoubleFactorFunction","factor","_factor","curFactor","IndicatorCalculator","dataSet","geo","getDataAtDay","curAreaId","day","getFactorValue","options","areaId","areaOrId","dayGroup","dayNumberOrGroup","dayNumber","isDayDelta","execludedAreas","curExMain","curExDelta","exAreaId","factorId","indicatorId","areas","getIndicatorValue","getSerie","isDelta","groupSize","group","x","xAxis","Date","date","y","exeludedAreaIds","TipViewModel","closeAfter","isVisible","observable","isTransparent","_closeAfter","dontShowAgain","onActionExecuted","executeAction","showAction","startPulse","_element","elementSelector","relY","centerElement","addClass","tipElement","clientTop","clientHeight","stopPulse","removeClass","understood","onClose","clearTimeout","_closeTimeoutId","show","TipManager","tips","getPreferences","savePreferences","tip","_getPreferences","_tips","markAction","actionId","preferences","safeCall","gtag","event_category","event_label","markTip","tipId","engageUser","showTips","nextTip","showAfter","showTip","timeout","override","force","order","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","dirtyOptions","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","toInteger","dirtyNumber","requiredArgs","required","TypeError","toDate","argument","arguments","argStr","getTime","console","warn","Error","stack","startOfUTCWeek","dirtyDate","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","isSameUTCWeek","dirtyDateLeft","dirtyDateRight","dateLeftStartOfWeek","dateRightStartOfWeek","weekdays","thisWeek","formatRelativeLocale","lastWeek","baseDate","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","argumentCallback","buildMatchPatternFn","dirtyString","string","matchResult","match","matchPattern","matchedString","parseResult","parsePattern","valueCallback","rest","slice","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","predicate","findIndex","pattern","test","object","hasOwnProperty","findKey","code","formatDistance","token","addSuffix","comparison","formatRelative","localize","ordinalNumber","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","firstWeekContainsDate","_date","_baseDate","_options","_dirtyOptions","rem100","IndicatorViewModel","AreaViewModel","GeoPlotPage","_topAreasVisible","_execludedArea","Map","_dataSet","_keepState","_debugMode","areaSelected","featureName","viewMode","selectedArea","_calculator","indicatorSelected","currentArea","selectedIndicator","dayChanged","indicatorChanged","viewChanged","topAreasOpened","M","Collapsible","getInstance","getElementById","deltaSelected","factorChanged","selectedFactor","groupChanged","FormSelect","querySelectorAll","chartActionExecuted","scaleChanged","isLogScale","maxFactorChanged","autoMaxFactor","maxFactor","regionExcluded","updateIndicator","_specialDates","color","dash","_dataRanges","totalDays","detailsLoading","Signal","detailsArea","currentData","topAreas","isPlaying","isZoomChart","isShowEnvData","dataRange","isNoFactorSelected","computed","groupDays","factorDescription","_mainData","_mainGeo","debugMode","subscribe","findDayIndex","parseDate","updateDays","tipManager","updateDayData","updateChart","_mapSvg","getElementsByTagName","addEventListener","e","onMapClick","Tabs","onShow","el","setViewMode","dataset","topCasesView","onOpenStart","_daysData","updateTopAreas","onCloseEnd","updateDetailsArea","updateMaxFactor","updateMap","updateUrl","computeStartDayForGroup","urlParams","URLSearchParams","location","search","stateRaw","loadPreferences","_preferences","loadState","isDefaultState","dayDelta","logScale","showEnvData","dateRangeId","excludedArea","scrollTop","dataRanges","saveStata","size","keys","json","localStorage","getItem","version","getDefaultPreferences","isFirstView","setItem","toggleChartZoom","svgText","outerHTML","blob","navigator","svgImage","clientWidth","height","ctx","getContext","fillStyle","fillRect","drawImage","toBlob","async","pngBlob","ClipboardItem","clipboard","write","toast","createObjectURL","target","download","click","copyChart","_chart","plugins","datasets","formatDate","copyText","serie","range","start","play","nextFrame","pause","mode","fromModel","_detailsGeo","_detailsData","districtGroup","clearMap","_selectedArea","parent","changeArea","invModule","isDouble","has","delete","isEmptyArea","updateArea","updateFactorDescription","updateAreaIndicators","desc","curView","list","abs","initChart","referencesPlugIn","afterDraw","chart","xScale","scales","xAxes","offset","getPixelForValue","lineWidth","beginPath","moveTo","chartArea","top","lineTo","bottom","strokeStyle","setLineDash","dashOffset","lineDashOffset","stroke","Chart","beforeDraw","fill","borderWidth","maintainAspectRatio","legend","position","callbacks","parsed","adapters","$language","it","unit","tooltipFormat","borderColor","backgroundColor","update","detailsEl","waitFor","innerHTML","getSelection","mainData","fetch","mapData","svgMap","isInArea","encodeURIComponent","btoa","history","replaceState","discretize","exponential","Api","saveState","isSuccess","loadStudioData","OperationType","TimePart","isUpperCase","repeatString","padLeft","char","ticks","formatArgument","hours","minutes","seconds","WEEK_DAYS","MONTHS","getDate","getDay","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","formatDateArgument","LinqNode","node","childNodes","descendsFrom","curItem","parentNode","hasClass","child","innerChild","parentNodesOrSelf","nodeName","parentOfClass","linqNode","parentNodes","idMap","equalsArray","equals","isEmpty","valueA","valueB","getOrCreateProperty","propName","getOwnPropertyDescriptor","createProperty","writable","enumerable","defValue","getTypeName","results","exec","getFunctionName","constFunc","getBaseType","objOrFun","proto","getPrototypeOf","getType","typeOrName","parts","curObj","part","registerType","ComputedProperty","getter","isReadOnly","notifyChanged","forEachRev","_handlers","handler","unsubscribe","splice","_descriptor","oldValue","Properties","create","property","newValue","hasProp","prop","isProperty","isObservableProperty","converter","convert","convertBack","conValue","createAll","propDesc","getOrCreate","bind","dest","convertTo","convertFrom","Binder","_bindings","_modelBinders","_depBinders","register","binder","registerDependant","unregisterDependant","getBindValue","binding","subscriptions","lastValue","createProxy","bindValue","cleanValue","sub","onChanged","getBindingProperty","lastProp","propList","proxy","listProxy","_innerProxies","innerProxy","lastValueSet","isInit","cleanBindings","updateModel","bindConfig","onValueChanged","bindConfigString","configOrUsage","bindString","createComputed","_computedBinder","apply","block","MapShapeType","isAsyncEditor","isActivable","isSelectable","isAsyncLoad","isValidable","isHTMLContainer","TemplateCatalog","super","_childCount","_updateCount","_updateNode","isInline","inlineMode","beginTemplate","refNode","refNodePos","marker","innerBuilder","_lastElement","begin","endTemplate","childBuilder","beginUpdate","createTextNode","replaceChild","endUpdate","_startElement","createComment","nextSibling","insertBefore","_endElement","nodeType","Node","COMMENT_NODE","textContent","curNode","mustDelete","prev","previousSibling","removeChild","templateOrName","foreachArray","foreachList","itemsBuilders","loadTemplate","onClear","onItemRemoved","reason","onItemSwap","newIndex","onItemReplaced","oldItem","onItemAdded","itemBuilder","createMarker","isUpdate","isClear","trueTemplate","falseTemplate","replaceContent","nodes","extractContent","inline","isCacheEnabled","templateFor","childElement","tagName","ChildTemplateBuilder","builderOrAttributes","attribs","attribute","setAttribute","removeAttribute","event","ev","nameParts","textNode","valueProp","activeElement","checked","nameOrValue","debugger","baseName","ObservableList","equalityComparer","_items","invoke","addRange","insert","removeAt","removeWhen","removeRange","isChanged","swap","temp","toJSON","View","parentView","debugTypeName","OperationView","subOperations","_type","_progress","log","getProgressDescription","addSubOperation","removeSubOperation","msg","totCount","s","ViewComponent","buildStyles","addStyle","removeStyle","curType","ContentView","contentTemplate","onContentChanged","_menuContainer","_clickHandler","onClick","curOfs","srcElement","offsetX","offsetY","curEl","offsetEl","offsetTop","offsetLeft","offsetParent","scrollLeft","xTrans","yTrans","left","transformOrigin","removeEventListener","AggregationMode","canAggregate","None","subActions","executeWorkAsync","stopPropagation","op","menu","showAsync","ex","displayName","canExecute","SelectionManager","selectedItems","updateView","detach","instance","passive","curTarget","currentTarget","scrollParent","isRequested","computeScroll","isScrollCheckActive","requestAnimationFrame","found","scrollingElement","onScroll","offsetBottom","scrollHeight","pageBottom","pageTop","totPages","vibrate","preventDefault","_parentHost","clearAsync","goBackAsync","goForwardAsync","bringFrontAsync","host","find","nameOrType","currentIndex","canGoBack","pageCount","Page","subTitle","getState","setState","loadWorkAsync","refreshAsync","initItems","viewContent","addView","loadAllAsync","removeView","replaceView","oldView","newView","Activity","_viewItems","_resultResolve","activateAsync","deactivateAsync","closeResult","closeAsync","createAsync","isInstanceOf","_activeViewIndex","defaultTransaction","_pageStack","_currentIndex","goToAsync","pageIndex","cancelHidePrev","isActivity","loadMode","transaction","backIndex","frontIndex","hidePrev","_hideTimerId","onActivePageChanged","onTransactionEnd","curPage","PageHostMode","ContentSelector","PrimaryActionMode","ActionPriority","onActionAdded","onActionRemoved","onBack","startSelection","NavBarItem","behavoirs","itemTemplate","itemBehavoirs","addItem","onItemSelected","onSelectedItemChanged","selectItem","createItem","_lastSearchText","poolInterval","onFocusChanged","searchAsync","doSearchAsync","poolSearchTextAsync","_isContentLoaded","_isDeactivating","activeContent","activeContentProvider","providers","floatingStyle","contentStyle","_actionBar","loadContentAsync","loadActiveContentAsync","notifyContentChanged","provider","info","isContentChanged","debug","getContentAsync","actionPanel","formatTitle","_contentView","views","_floatingView","priority","createActionView","actionMode","Button","FloatingFull","actionView","searchView","Manual","navStyle","BottomNav","_navBar","contentWrapper","newContent","FullItemsLoader","itemsSource","getItemsAsync","filter","forEachAsync","_isLoaded","_itemViewMap","itemsLoader","selectionMode","createItemView","createItemViewWork","isAutoLoad","itemsHandler","oldValueX","updateItemSelection","onSelectdItemChanged","isListenerActive","activateListener","typeName","_listener","getItemValue","onItemChanged","getItemByValueAsync","deactivateListener","findItemView","entries","removeItem","oldSelection","loadItemsAsync","itemComparer","itemView","getItemText","Item","Boolean","valueOf","allowZero","_allowZero","bindItem","getFilter","_typeName","pageSize","_hasMoreItems","_container","loadNextPageAsync","canLoadNextPage","itemsCount","newItems","SearchActivity","listStyles","noMatchingText","searchWorkAsync","query","_listView","_searchView","_emptyView","_lastItems","configureListView","hasItems","_margin","_isAnimating","headHeight","headSelector","hammer","recognizers","direction","startHeight","oldStatus","startScrollTop","deltaY","head","newScrollTop","newHeight","panHeight","enableScrolling","setHeightAsync","headEl","removeWorkAsync","checkOverflow","wrapper","ItemEditContent","saveLabel","saveOnCommit","savePriority","saveItemAsync","_host","beginEditAsync","saveAsync","isValid","commitAsync","contentWindow","WebPage","readyState","rej","onLoad","onError","reload","BasePopUpMessage","_isVisible","_showResolve","actionName","contentProvider","closeLabel","editToItemAsync","validate","popUp","edit","openAsync","BaseEditor","_needValidation","_isEditing","_editValue","commitMode","validationMode","allowNull","isDirty","setEnumerable","_onCommit","onCommit","old","updateUid","editToValue","valueToEdit","base","createEditValueProp","notifyEditValueChangedAsync","debugName","validateAsync","loadAsyncWork","groupEnd","clearError","beginEditWorkAsync","validationResult","validateAsyncWork","commitAsyncWork","rollback","emptyText","selectedIndex","createEmptyItem","_isSelecting","editAsync","findItemByValue","input","onchange","files","contentOptions","pageOptions","activity","loadPageAsync","phoneNumber","email","newWindows","pageId","zoomLevel","latitude","longitude","ActivityEditor","SelectMultipleItemsActivity","showEmptyItem","emptyLabel","addLabel","filters","createItemContentView","createItemListView","createItemEditor","setSelectedItems","searchMode","addSelection","confirmAsync","_bottomSheet","addItemAsync","_emptyItem","updateSelection","findItem","selView","removeSelection","exItem","selItem","findSelectable","SelectSingleItemActivity","selectedValue","setSelectionAsync","ConsoleItem","ConsoleMessageView","ConsoleGroupView","_groups","_isCreated","_activeGroup","_oldConsole","trace","logType","newGroup","pop","Animation","actionTemplate","_body","_actions","cubic","p0","p1","p2","p3","pow","linear","animate","curTime","setInterval","duration","step","timeFunction","clearInterval","stepTime","DrawerGroup","hideAsync","addGroup","onGesture","getGroup","labelTxt","_input","loaded","colsCount","rowsCount","Interaction","Components","Editors","headerTemplate","img","loadImageAsync","contextActions","openWork","_otherAction","mapSize","updateAsync","manager","getLocationAsync","staticMap","center","pins","isSet","_waitHandlers","_isSet","totalMilliseconds","showCurrentPosition","mapReady","_manager","createMapItem","onSelectionChanged","showCurrentPositionAsync","mapOptions","mapItems","addItems","mapItem","onMapLoaded","isAutoPlay","isMuted","showControls","isLoop","updateVideo","_video","video","paused","played","removeListeners","loadListener","errorListener","loadVideoIntoAsync","loadVideoAsync","muted","autoplay","controls","loop","load","_imageConfig","_videoConfig","image","updateContent","BaseTextEditor","trackMode","selectionStart","selectionEnd","NumberEditor","precision","_lastValidationValue","validators","o","n","bindEditor","fieldName","validator","SectionView","sections","section","showTime","instanceId","showMs","WizardStepView","nextLabel","selectStepAsync","prevLabel","finishLabel","nextAsync","previousAsync","finishAsync","hasNextStep","hasPrevStep","steps","doFinishAsync","validateUntilAsync","clearErrors","targetIndex","curStep","curIndex","isComplete","MessageContent","customActions","BasePicker","pickLabel","updateViewAsync","trueLabel","falseLabel","maxYear","minYear","tryCommit","ItemEditorConverter","itemToEdit","editToItem","_item","showMessageAsync","msgActions","msgBox","warning","succeed","fail","updateItemAsync","removeItemAsync","editItem","ItemsEditorItemView","addTitle","editTitle","editMode","isEdit","canEdit","editActionsPriority","editActionLabel","canRemove","removeActionLabel","itemActions","updateValueAsync","createUpdateEditor","createAddEditor","executeUpdateAsync","executeAddAsync","cancelEdit","_changesCount","_isUpdating","isConfirmRemove","createItemAddEditor","createItemUpdateEditor","attachItem","openItem","addActionLabel","addAsync","awaiters","itemToValue","isNew","isCapable","valueToItemAsync","itemValue","updateItem","getItemViewContent","noMediaUrl","maxFileSize","validMedias","getUploadUrl","getMediaUrl","fileName","uploadAsync","change","mustRefresh","ObjectEditor","properties","defaultProperty","propertyTemplateName","_onPropertyChanged","onPropertyChanged","addProperty","_proxy","curProp","onPropertyValueChanged","commitResult","commitPropertyAsync","RichTextEditor","Quill","theme","SectionEditorView","activeSectionName","addSection","getSection","MultiItemSelector","richText","textMultiLine","boolean","password","birthDate","minAge","singleItemSelector","Validators","EMAIL_REGEXP","PHONE_REGEXP","minValue","maxValue","integer","phone","custom","permission","granted","BaseOperation","Operation","raise","DaColumnType","_oprations","onBegin","onEnd","configOrMessge","SplitEnumerator","_separator","_startIndex","substring","_currentStartIndex","CsvSplitEnumerator","_state","_wordLength","_wordStartIndex","_hasEscape","BaseDataAdapter","TextTableDataAdapter","createIdentifier","extractHeader","firstRow","rowSeparator","cols","columnSeparator","headers","hasHeader","rowAnal","analyzeRow","stringCount","emptyCount","columns","Exclude","extractRowSeparator","extractColumnSeparator","stats","rows","row","booleanCount","dateCount","numberCount","analyzeColumn","createParser","anal","endsWith","maxRows","curOp","colAnalysis","rowCount","foreachAsync","col","parser","XAxis","Serie","Group","maxItems","xColumnIndex","xValue","curGroup","colId","series","BaseTreeItem","canDrag","canReadData","transfer","readData","writeData","attachNode","onParentChanged","canAccept","execute","TreeNode","_dargEnterCount","_childLoaded","observableArray","loadChildNodes","_treeView","removeAll","generateId","onKeyDown","ondragstart","onDrag","ondragover","onDragOver","ondragenter","onDragEnter","ondragleave","onDragLeave","ondrop","onDrop","keyCode","dataTransfer","canDrop","ctrlKey","dropEffect","elId","getData","_parentNode","selectedNode","addNode","treeView","childNode","toggleVisible","expand","TreeView","setRoot","FileDragDrop","onFileDropped","ProgressViewModel","_showCount","percentage","ColumnViewModel","alias","types","GroupItem","itemType","SerieItem","DataImportControl","table","hasData","sourceUrl","fileDrop","columnSeparators","onNodeSelected","importText","_text","_adapter","analyzeAsync","updatePreview","getSelectedDataWork","newGroups","getSelectedData","_onGetData","_model","loadGroupAsync","updateNode","loadTableAsync","updateGroups","updateTable","Modal","ok","statusText","GraphContext","vars","treeItems","setExpressions","calculator","curExp","expressions","folderId","newList","folder","setSelectedId","controller","listModel","dispatch","setColor","exp","getExpressions","setExpression","updateExpression","updateVariable","varName","latex","expressionZoomFit","setItemVisibile","hidden","generateVars","generateVar","prefix","BaseStudioItem","parameters","createActions","opened","setStateWork","updateGraph","setChildrenStateWork","getVar","_varsMap","recursive","_graphCtx","removeExpression","getGraphId","children","updateGraphVisibility","onSelected","attachGraph","observe","onGraphChanged","updateColor","isFullVisible","recorsive","uuidv4","updateGraphWork","updateParameters","replaceVars","reg","RegExp","addChildrenWork","createParameters","mainExpression","ColorPicker","isOpened","addColor","_mouseDown","onMouseDown","_onSelected","mouseEvent","coords","pageX","pageY","toSafeString","RegressionFunctionViewModel","RegressionFunctionVarViewModel","autoCompute","StudioSerieRegression","selectedFunction","showIntegration","maxDay","optionsTemplateName","functions","addFunction","updateStartDay","updateEndDay","vModel","updateRegressionVars","getItemModel","regressionParameters","ParameterViewModel","p","function","funcVar","slider","collapsed","secret","regColor","c0","l","P","h","pSBCr","d","blendColor","lineStyle","lines","pointStyle","points","dragMode","hardMax","hardMin","StudioSerie","importValues","startDate","dateDiff","xLabel","onSerieChanged","setData","updateSerie","addRegression","zoom","answer","prompt","alignOthers","tollerance","alignWith","ofs","ofsX","updateAggregate","upgradeSource","upgradeAreaId","configOrState","pick","serieCalculator","daySource","minY","maxY","setMathBounds","right","StudioProject","aggregationMode","aggregationModes","updateAllSerie","textData","fromText","addSerie","xReal","funValues","configOrSerie","StudioPage","projectId","dataImport","_projectId","pasteGraphLink","pasteTableData","expressionsCollapsed","restrictedFunctions","administerSecretFolders","authorIDE","advancedStyling","onGraphSelectionChanged","newProject","import","share","showOptions","onPaste","clipboardData","updateOptions","folderGuid","treeItem","bounds","graphpaperBounds","mathCoordinates","getSelectedProject","proj","addProject","projects","project","graphState","demo","addImportedData","confirm","AggregationFunc","GeoAreaType","Gender","MATERIAL_COLORS","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__esModule","definition","toStringTag"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"webapp-core\"), require(\"Hammer\"), require(\"Desmos\"), require(\"Chart\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"GeoPlot\", [\"webapp-core\", \"Hammer\", \"Desmos\", \"Chart\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GeoPlot\"] = factory(require(\"webapp-core\"), require(\"Hammer\"), require(\"Desmos\"), require(\"Chart\"));\n\telse\n\t\troot[\"GeoPlot\"] = factory(root[\"webapp-core\"], root[\"Hammer\"], root[\"Desmos\"], root[\"Chart\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__7836__, __WEBPACK_EXTERNAL_MODULE__3794__, __WEBPACK_EXTERNAL_MODULE__1404__, __WEBPACK_EXTERNAL_MODULE__5665__) {\nreturn ","__defineTemplate(\"ActionBar\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(\"context-mode\", m => m.selectionManager && m.selectionManager.isActive)\n      .beginChild(\"ul\").set(\"class\",\"nav main\")\n         .if(m => m.icon != null, t3 => t3\n            .beginChild(\"li\").set(\"class\",\"icon\").template(\"Icon\", m => m.icon).endChild()\n         )\n         .if(m => m.mainAction == 'menu', t3 => t3\n            .beginChild(\"li\").set(\"class\",\"main-action menu\").on(\"click\", m => m.showNavigationMenu()).behavoir(\"ripple\")\n               .beginChild(\"i\").set(\"class\",\"icon fas fa-bars\").endChild()\n            .endChild()\n         )\n         .if(m => m.mainAction == 'back', t3 => t3\n            .beginChild(\"li\").set(\"class\",\"main-action back\").on(\"click\", m => m.back()).behavoir(\"ripple\")\n               .beginChild(\"i\").set(\"class\",\"icon fas fa-chevron-left\").endChild()\n            .endChild()\n         )\n         .if(m => m.title != null, t3 => t3\n            .beginChild(\"li\").set(\"class\",\"title\").text(m => m.title).endChild()\n         )\n         .foreach(m => m.actions, t3 => t3\n            .beginChild(\"li\").set(\"class\",\"action-item\").class(m => m.name).content(m => m).endChild()\n         )\n      .endChild()\n      .beginChild(\"ul\").set(\"class\",\"nav context\")\n         .beginChild(\"li\").set(\"class\",\"main-action close\").on(\"click\", m => m.selectionManager ? m.selectionManager.close() : null).behavoir(\"ripple\")\n            .beginChild(\"i\").set(\"class\",\"icon fas fa-times\").endChild()\n         .endChild()\n         .if(m => m.selectionManager != null, t3 => t3\n            .beginChild(\"li\").set(\"class\",\"title\").text(m => m.selectionManager.selectionText).endChild()\n            .foreach(m => m.selectionManager.actions, t4 => t4\n               .beginChild(\"li\").set(\"class\",\"action-item\").class(m => m.name).content(m => m).endChild()\n            )\n         )\n      .endChild()\n   .endChild()\n   .content(m => m.navigationMenu)\n});","__defineTemplate(\"ActionIcon\", t => { t\n   .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"action button-text\").set(\"tooltip\",m => m.tooltip).on(\"click\", m => m.executeAsync()).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"ripple\").template(\"Icon\", m => m.content).endChild()\n});\n__defineTemplate(\"ActionLink\", t => { t\n   .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"action button-text\").on(\"click\", m => m.executeAsync()).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"ripple\").content(m => m.content).endChild()\n});\n__defineTemplate(\"ActionButton\", t => { t\n   .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"action button\").on(\"click\", m => m.executeAsync()).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"ripple\").content(m => m.content).endChild()\n});","__defineTemplate(\"Attach\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"attach\").endChild()\n});","__defineTemplate(\"Blocker\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).class(m => m.status).behavoir(\"attach\")\n      .beginChild(\"div\").set(\"class\",\"spinner-container\")\n         .beginChild(\"i\").set(\"class\",\"spinner fas fa-circle-notch fa-spin fa-3x fa-fw\").endChild()\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"DefaultCheckBox\", t => { t\n   .beginChild(\"label\")\n      .beginChild(\"input\").set(\"type\",\"checkbox\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).endChild()\n      .beginChild(\"span\").text(m => m.label).endChild()\n   .endChild()\n});\n__defineTemplate(\"Switch\", t => { t\n   .beginChild(\"div\").set(\"class\",\"switch\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).class(\"selected\", m => m.editValue)\n      .beginChild(\"div\").set(\"class\",\"checkbox-container\")\n         .beginChild(\"div\").set(\"class\",\"unselected-half\").on(\"click\", m => m.editValue = false).endChild()\n         .beginChild(\"div\").set(\"class\",\"selected-half\").on(\"click\", m => m.editValue = true).endChild()\n         .beginChild(\"div\").set(\"class\",\"switch-button\").endChild()\n      .endChild()\n      .if(m => m.label != null, t2 => t2\n         .beginChild(\"label\").text(m => m.label).endChild()\n      )\n   .endChild()\n});\n__defineTemplate(\"CheckBox\", t => { t\n   .beginChild(\"div\").set(\"class\",\"checkbox\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).on(\"click\", m => m.toggle()).class(\"selected\", m => m.editValue)\n      .beginChild(\"div\").set(\"class\",\"checkbox-container\")\n         .beginChild(\"i\").set(\"class\",\"fas fa-check\").endChild()\n      .endChild()\n      .if(m => m.label != null, t2 => t2\n         .beginChild(\"label\").text(m => m.label).endChild()\n      )\n   .endChild()\n});","__defineTemplate(\"BottomSheet\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status).behavoir(\"attach\")\n      .if(m => m.isShowOpener, t2 => t2\n         .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"opener button-text\").on(\"click\", m => m.toggle())\n            .beginChild(\"i\").set(\"class\",\"fas fa-caret-up\").endChild()\n         .endChild()\n      )\n      .content(m => m.content).endChild()\n});","__defineTemplate(\"ConsoleView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible)\n      .beginChild(\"div\").set(\"class\",\"toolbar\")\n         .beginChild(\"button\").set(\"type\",\"button\").on(\"click\", m => m.hide()).text(\"Hide\").endChild()\n         .beginChild(\"button\").set(\"type\",\"button\").on(\"click\", m => m.clear()).text(\"Clear\").endChild()\n      .endChild()\n      .beginChild(\"div\").set(\"class\",\"body\")\n         .foreach(m => m.root.items, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});\n__defineTemplate(\"ConsoleMessageView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"console-item console-message\").class(m => m.type)\n      .if(m => m.content != null, t2 => t2\n         .foreach(m => m.content, t3 => t3\n            .beginChild(\"span\").text(m => m).endChild()\n         )\n      )\n   .endChild()\n});\n__defineTemplate(\"ConsoleGroupView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"console-item console-group\")\n      .beginChild(\"header\").template(\"ConsoleMessageView\", m => m).endChild()\n      .beginChild(\"section\")\n         .foreach(m => m.items, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"Container\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"attach\")\n      .if(m => m.title != null, t2 => t2\n         .beginChild(\"header\")\n            .beginChild(\"label\").text(m => m.title).endChild()\n         .endChild()\n      )\n      .beginChild(\"div\").set(\"class\",\"content\").class(\"expanded\", m => m.isExpanded).class(\"expandible\", m => m.canExpand)\n         .if(m => m.canExpand, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"content-wrapper\").content(m => m.content, true).endChild()\n            .if(m => m.isOverflow, t4 => t4\n               .beginChild(\"a\").set(\"class\",\"base-button expand-collapse\").on(\"click\", m => m.toggleExpand()).visible(m => m.canExpand).behavoir(\"ripple\")\n                  .beginChild(\"i\").set(\"class\",\"fas fa-angle-down\").endChild()\n               .endChild()\n            )\n         , t3 => t3\n            .content(m => m.content, true)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"ContentView\", t => { t\n   .content(m => m.content)\n});\n__defineTemplate(\"ContentViewNested\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status).behavoir(\"attach\").content(m => m.content).endChild()\n});","__defineTemplate(\"ContextMenu\", t => { t\n   .beginChild(\"ul\").class(m => m.className)\n      .foreach(m => m.actions, t2 => t2\n         .beginChild(\"li\").content(m => m).endChild()\n      )\n   .endChild()\n});","__defineTemplate(\"CounterView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"action\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"label\").set(\"class\",\"title\").text(m => m.title).endChild()\n      .beginChild(\"span\").set(\"class\",\"value\").text(m => m.content).endChild()\n   .endChild()\n});","__defineTemplate(\"DateEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"type\",\"date\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).endChild()\n});","__defineTemplate(\"DateEditorCombo\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"select\").set(\"class\",\"input-element day\").value(m => m.selectedDay)\n         .beginChild(\"option\").set(\"value\",\"\").text(m => WebApp.Format.text('day-label')).endChild()\n         .foreach(m => m.days, t3 => t3\n            .beginChild(\"option\").set(\"value\",m => m).text(m => m).endChild()\n         )\n      .endChild()\n      .beginChild(\"select\").set(\"class\",\"input-element month\").value(m => m.selectedMonth)\n         .beginChild(\"option\").set(\"value\",\"\").text(m => WebApp.Format.text('month-label')).endChild()\n         .foreach(m => m.months, t3 => t3\n            .beginChild(\"option\").set(\"value\",m => m.number).text(m => m.name).endChild()\n         )\n      .endChild()\n      .beginChild(\"select\").set(\"class\",\"input-element year\").value(m => m.selectedYear)\n         .beginChild(\"option\").set(\"value\",\"\").text(m => WebApp.Format.text('year-label')).endChild()\n         .foreach(m => m.years, t3 => t3\n            .beginChild(\"option\").set(\"value\",m => m).text(m => m).endChild()\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"Drawer\", t => { t\n   .beginChild(\"div\").set(\"class\",\"drawer-container\").class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"drawer\").behavoir(\"gesture\")\n         .if(m => m.header != null, t3 => t3\n            .beginChild(\"header\").content(m => m.header).endChild()\n         )\n         .foreach(m => m.groups, t3 => t3\n            .if(m => m.actions.count > 0, t4 => t4\n               .beginChild(\"section\")\n                  .if(m => m.label != null, t6 => t6\n                     .beginChild(\"label\").text(m => m.label).endChild()\n                  )\n                  .beginChild(\"div\").set(\"class\",\"menu\")\n                     .foreach(m => m.actions, t7 => t7\n                        .content(m => m)\n                     )\n                  .endChild()\n               .endChild()\n            )\n         )\n      .endChild()\n      .behavoir(\"attach\").endChild()\n});","__defineTemplate(\"FileUploadView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"content\")\n         .beginChild(\"div\").set(\"class\",\"header\")\n            .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"select button-text\").on(\"click\", m => m.select()).text(m => m.text).set(\"enabled\",m => m.status == 'selected' || m.status== 'empty').endChild()\n         .endChild()\n         .beginChild(\"div\").set(\"class\",\"progress\")\n            .beginChild(\"div\").set(\"class\",\"bar\").style(\"width\", m => (m.progress * 100) + '%').endChild()\n            .beginChild(\"div\").set(\"class\",\"text\").text(m => m.progressText).endChild()\n         .endChild()\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"HeadedContentView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible)\n      .beginChild(\"header\").content(m => m.header).endChild()\n      .beginChild(\"div\").set(\"class\",\"content\").content(m => m.content).endChild()\n   .endChild()\n});","__defineTemplate(\"Html\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).html(m => m.content).endChild()\n});\n__defineTemplate(\"HtmlNode\", t => { t\n   .appendChild(t.model.content)\n});","__defineTemplate(\"Icon\", t => { t\n   .if(m => m != null, t1 => t1\n      .if(m => m.substr(0, 4) == 'fas ' || m.substr(0, 4) == 'fab ' || m.substr(0, 4) == 'far ' || m.substr(0, 4) == 'fal '|| m.substr(0, 4) == 'fad ', t2 => t2\n         .beginChild(\"i\").set(\"class\",\"icon\").class(m => m).endChild()\n      , t2 => t2\n         .beginChild(\"img\").set(\"class\",\"icon\").set(\"src\",m => m).endChild()\n      )\n   )\n});","__defineTemplate(\"IconTextView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status)\n      .if(m => m.icon != null, t2 => t2\n         .template(\"Icon\", m => m.icon)\n      )\n      .if(m => m.text != null, t2 => t2\n         .beginChild(\"span\").set(\"class\",\"text\").text(m => m.text).endChild()\n      )\n      .if(m => m.badge != null, t2 => t2\n         .beginChild(\"span\").set(\"class\",\"badge\").text(m => m.badge).endChild()\n      )\n   .endChild()\n});\n__defineTemplate(\"IconTextViewInline\", t => { t\n   .class(m => m.status)\n   .if(m => m.icon != null, t1 => t1\n      .template(\"Icon\", m => m.icon)\n   )\n   .if(m => m.text != null, t1 => t1\n      .beginChild(\"span\").set(\"class\",\"text\").text(m => m.text).endChild()\n   )\n   .if(m => m.badge != null, t1 => t1\n      .beginChild(\"span\").set(\"class\",\"badge\").text(m => m.badge).endChild()\n   )\n});","__defineTemplate(\"ImageInline\", t => { t\n   .beginChild(\"img\").class(m => m.className).set(\"src\",m => m.content).visible(m => m.visible).set(\"enabled\",m => m.enabled).endChild()\n});\n__defineTemplate(\"Image\", t => { t\n   .beginChild(\"div\").set(\"class\",\"image-container\").visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"img\").class(m => m.className).set(\"src\",m => m.content).endChild()\n   .endChild()\n});","__defineTemplate(\"ItemSelectorList\", t => { t\n   .beginChild(\"div\").set(\"class\",\"items-view\").class(m => m.className)\n      .foreach(m => m.items, t2 => t2\n         .content(m => m)\n      )\n   .endChild()\n});","__defineTemplate(\"ItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).class(m => m.status).class(\"activable\", m => m.canOpen).class(\"compact\", m => !(m.mainActions && m.mainActions.length > 0))\n      .if(m => m.mainActions && m.mainActions.length > 0, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"body-container\").template(\"ItemViewBody\", m => m).endChild()\n         .beginChild(\"div\").set(\"class\",\"main-actions\")\n            .foreach(m => m.mainActions, t4 => t4\n               .content(m => m)\n            )\n         .endChild()\n      , t2 => t2\n         .template(\"ItemViewBody\", m => m)\n      )\n   .endChild()\n});\n__defineTemplate(\"ItemViewBody\", t => { t\n   .class(\"with-menu\", m => m.hasActions)\n   .beginChild(\"div\").on(\"click\", m => m.open()).class(\"body\", m => true)\n      .if(m => m.content.count <= 1, t2 => t2\n         .content(m => m.content.get(0), true), t2 => t2\n         .foreach(m => m.content, t3 => t3\n            .content(m => m)\n         )\n      )\n   .endChild()\n   .if(m => m.canOpen, t1 => t1\n      .beginChild(\"i\").set(\"class\",\"open-icon fas fa-angle-right\").endChild()\n   )\n   .if(m => m.hasActions, t1 => t1\n      .beginChild(\"a\").set(\"class\",\"menu\").on(\"click\", m => m.showMenu())\n         .beginChild(\"i\").set(\"class\",\"fas fa-ellipsis-v\").endChild()\n      .endChild()\n   )\n});","__defineTemplate(\"ItemsEditor\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .foreach(m => m.content, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"list-item\").content(m => m, true).endChild()\n      )\n      .if(m => m.canAdd, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"add-item\").content(m => m.addAction).endChild()\n      )\n   .endChild()\n});","__defineTemplate(\"ItemsView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .foreach(m => m.content, t2 => t2\n         .content(m => m)\n      )\n      .if(m => m.content.count == 0 && m.emptyView != null, t2 => t2\n         .content(m => m.emptyView)\n      )\n   .endChild()\n});\n__defineTemplate(\"ItemsViewWrapped\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"div\").set(\"class\",\"wrapper\")\n         .foreach(m => m.content, t3 => t3\n            .content(m => m)\n         )\n         .if(m => m.content.count == 0 && m.emptyView != null, t3 => t3\n            .content(m => m.emptyView)\n         )\n      .endChild()\n   .endChild()\n});\n__defineTemplate(\"ItemsViewForm\", t => { t\n   .beginChild(\"form\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .foreach(m => m.content, t2 => t2\n         .content(m => m)\n      )\n      .if(m => m.content.count == 0 && m.emptyView != null, t2 => t2\n         .content(m => m.emptyView)\n      )\n   .endChild()\n});","__defineTemplate(\"ListView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"scroll-check\").class(m => m.status)\n      .foreach(m => m.header, t2 => t2\n         .beginChild(\"header\").set(\"class\",\"header-item\").content(m => m).endChild()\n         .if(m => WebApp.injectProxy(m, \"$parent\", t.model).showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .if(m => m.content.count == 0 && m.emptyView != null && m.status == 'loaded', t2 => t2\n         .content(m => m.emptyView)\n      )\n      .foreach(m => m.content, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"list-item\").content(m => m, true).endChild()\n         .if(m => WebApp.injectProxy(m, \"$parent\", t.model).showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .foreach(m => m.footer, t2 => t2\n         .beginChild(\"footer\").set(\"class\",\"footer-item\").content(m => m).endChild()\n         .if(m => WebApp.injectProxy(m, \"$parent\", t.model).showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .beginChild(\"div\").set(\"class\",\"loading-item\")\n         .beginChild(\"i\").set(\"class\",\"fas fa-circle-notch fa-spin fa-3x fa-fw\").endChild()\n      .endChild()\n   .endChild()\n});\n__defineTemplate(\"ListViewInline\", t => { t\n   .beginChild(\"div\").set(\"class\",\"list-view-inline\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).behavoir(\"scroll-check\").class(m => m.status)\n      .if(m => m.header.count > 0, t2 => t2\n         .foreach(m => m.header, t3 => t3\n            .content(m => m)\n         )\n         .if(m => m.showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .if(m => m.content.count == 0 && m.emptyView != null && m.status == 'loaded', t2 => t2\n         .content(m => m.emptyView)\n      )\n      .foreach(m => m.content, t2 => t2\n         .content(m => m)\n         .if(m => WebApp.injectProxy(m, \"$parent\", t.model).showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .if(m => m.footer.count > 0, t2 => t2\n         .foreach(m => m.footer, t3 => t3\n            .content(m => m)\n         )\n         .if(m => m.showSeparator, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"separator\").endChild()\n         )\n      )\n      .beginChild(\"div\").set(\"class\",\"loading-item\")\n         .beginChild(\"i\").set(\"class\",\"fas fa-circle-notch fa-spin fa-3x fa-fw\").endChild()\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"LocationView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"address\")\n         .if(m => m.content.name != null, t3 => t3\n            .beginChild(\"label\").text(m => m.content.name).endChild()\n         )\n         .beginChild(\"span\").text(m => m.content.address).endChild()\n      .endChild()\n      .beginChild(\"img\").set(\"src\",m => m.map).on(\"click\", m => m.showMap()).endChild()\n   .endChild()\n});","__defineTemplate(\"MediaEditor\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible)\n      .beginChild(\"div\").set(\"class\",\"media-container\").on(\"click\", m => m.showMenu()).content(m => m.mediaView).endChild()\n      .content(m => m.fileUpload).endChild()\n});","__defineTemplate(\"MediaView\", t => { t\n   .content(m => m.activeView)\n});","__defineTemplate(\"MessageBox\", t => { t\n   .beginChild(\"div\").class(m => m.className)\n      .beginChild(\"h5\").set(\"class\",\"title\").text(m => m.title).endChild()\n      .beginChild(\"div\").set(\"class\",\"body\")\n         .if(m => m.icon != null, t3 => t3\n            .template(\"Icon\", m => m.icon)\n         )\n         .beginChild(\"div\").set(\"class\",\"text\").text(m => m.message).endChild()\n      .endChild()\n      .beginChild(\"div\").set(\"class\",\"actions\")\n         .foreach(m => m.actions, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"MultiItemPicker\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"items-container\")\n         .beginChild(\"i\").set(\"class\",\"loading-item fas fa-circle-notch fa-spin fa-fw\").endChild()\n         .foreach(m => m.items, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n      .content(m => m.selectAction).endChild()\n});","__defineTemplate(\"NavBar\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"nav\").set(\"class\",\"nav\")\n         .foreach(m => m.content, t3 => t3\n            .beginChild(\"button\").set(\"class\",\"button-text\").class(m => m.status).on(\"click\", m => m.select()).visible(m => m.visible).behavoir(\"ripple\").content(m => m).endChild()\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"SlidePageHost\", t => { t\n   .beginChild(\"div\").set(\"class\",\"slide-page-host\").class(m => m.activeTransaction)\n      .beginChild(\"div\").set(\"class\",\"page-container\").class(m => m.pageViews[0].className).content(m => m.pageViews[0].content).endChild()\n      .beginChild(\"div\").set(\"class\",\"page-container\").class(m => m.pageViews[1].className).content(m => m.pageViews[1].content).endChild()\n   .endChild()\n});\n__defineTemplate(\"SinglePageHost\", t => { t\n   .beginChild(\"div\").set(\"class\",\"single-page-host\").content(m => m.current.view).endChild()\n});","__defineTemplate(\"PermissionRequestItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className)\n      .beginChild(\"div\").set(\"class\",\"item-content\")\n         .beginChild(\"div\").set(\"class\",\"main\").content(m => m.switchView).endChild()\n         .beginChild(\"span\").set(\"class\",\"right bold uppercase\").text(m => WebApp.Format.action('permission-why')).on(\"click\", m => m.isShowInfo = true).class(\"hidden\", m => m.isShowInfo).endChild()\n      .endChild()\n      .beginChild(\"div\").set(\"class\",\"info-message on-surface-smaller\").text(m => WebApp.Format.message(m.request.description)).class(\"hidden\", m => !m.isShowInfo).endChild()\n   .endChild()\n});","__defineTemplate(\"PopUpContent\", t => { t\n   .beginChild(\"div\").class(m => m.className)\n      .beginChild(\"h5\").set(\"class\",\"title\").text(m => m.title).endChild()\n      .beginChild(\"div\").set(\"class\",\"body\").content(m => m.contentView).endChild()\n      .beginChild(\"div\").set(\"class\",\"actions\")\n         .foreach(m => m.actions, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"ProgressView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(\"visible\", m => m.visible)\n      .beginChild(\"i\").set(\"class\",\"spinner fas fa-circle-notch fa-spin fa-3x fa-fw\").endChild()\n   .endChild()\n});","__defineTemplate(\"PropertyView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"action\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .if(m => m.showLabel && m.label != null, t2 => t2\n         .beginChild(\"label\").set(\"for\",m => m.editor.uid).text(m => m.label).endChild()\n      )\n      .if(m => m.readonly, t2 => t2\n         .beginChild(\"div\").set(\"class\",\"display-value\").text(m => m.editor.displayValue).endChild()\n      , t2 => t2\n         .content(m => m.editor)\n         .if(m => m.error != null, t3 => t3\n            .beginChild(\"span\").set(\"class\",\"error\").text(m => m.error).endChild()\n         )\n      )\n   .endChild()\n});","__defineTemplate(\"RemovableItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"content\").content(m => m.content).endChild()\n      .beginChild(\"button\").set(\"type\",\"button\").set(\"class\",\"remove button-text\").set(\"href\",\"#!\").on(\"click\", m => m.removeAsync())\n         .beginChild(\"i\").set(\"class\",\"fas fa-times\").endChild()\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"SearchView\", t => { t\n   .if(m => m.isExpanded, t1 => t1\n      .beginChild(\"div\").set(\"class\",\"search-container\").class(m => m.className).visible(m => m.visible).class(m => m.status)\n         .beginChild(\"input\").set(\"type\",\"text\").focus(m => m.hasFocus).set(\"enabled\",m => m.enabled).value(m => m.searchText).set(\"placeholder\",m => m.tooltip).endChild()\n         .beginChild(\"i\").set(\"class\",\"loading-item fas fa-circle-notch fa-spin fa-fw\").endChild()\n      .endChild()\n   , t1 => t1\n      .template(\"ActionIcon\", m => m)\n   )\n});","__defineTemplate(\"SectionEditor\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).content(m => m.navBar)\n      .if(m => m.navBar.selectedItem && m.navBar.selectedItem.content && m.navBar.selectedItem.content.editor != null, t2 => t2\n         .content(m => m.navBar.selectedItem.content.editor)\n      )\n   .endChild()\n});","__defineTemplate(\"SectionsView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .foreach(m => m.content, t2 => t2\n         .beginChild(\"section\")\n            .beginChild(\"h5\").set(\"class\",\"header\").content(m => m.header).endChild()\n            .beginChild(\"div\").set(\"class\",\"content\").content(m => m.content).endChild()\n         .endChild()\n      )\n   .endChild()\n});","__defineTemplate(\"SelectableItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).on(\"click\", m => m.toggle()).class(\"selected\", m => m.isSelected).class(\"checkbox\", m => true)\n      .beginChild(\"div\").set(\"class\",\"checkbox-container\").value(m => m.isSelected)\n         .beginChild(\"i\").set(\"class\",\"fas fa-check\").endChild()\n      .endChild()\n      .content(m => m.content).endChild()\n});\n__defineTemplate(\"SelectableItemViewText\", t => { t\n   .beginChild(\"div\").class(m => m.className).on(\"click\", m => m.toggle()).class(\"selected\", m => m.isSelected).content(m => m.content, true).endChild()\n});","__defineTemplate(\"SimpleItemView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).class(m => m.status).template(\"Icon\", m => m.icon)\n      .beginChild(\"div\").set(\"class\",\"details\")\n         .beginChild(\"h6\").text(m => m.text).endChild()\n         .if(m => m.subText != null, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"sub-text\").text(m => m.subText).endChild()\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"SingleItemPicker\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.status)\n      .beginChild(\"div\").set(\"class\",\"items-container\")\n         .beginChild(\"i\").set(\"class\",\"loading-item fas fa-circle-notch fa-spin fa-fw\").endChild()\n         .content(m => m.contentView).endChild()\n      .if(m => m.editValue != null, t2 => t2\n         .content(m => m.clearAction)\n      )\n      .content(m => m.selectAction).endChild()\n});","__defineTemplate(\"SelectEditor\", t => { t\n   .beginChild(\"select\").set(\"class\",\"input-element\").focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).behavoir(\"attach\")\n      .if(m => m.placeholder != null, t2 => t2\n         .beginChild(\"option\").set(\"value\",\"\").text(m => m.placeholder).endChild()\n      )\n      .foreach(m => m.items, t2 => t2\n         .beginChild(\"option\").text(m => m.content).endChild()\n      )\n   .endChild()\n});\n__defineTemplate(\"SingleItemSelectorButton\", t => { t\n   .beginChild(\"button\").set(\"type\",\"button\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).on(\"click\", m => m.selectAsync())\n      .beginChild(\"span\").text(m => m.selectedItemText).endChild()\n      .beginChild(\"i\").set(\"class\",\"fas fa-caret-down\").endChild()\n   .endChild()\n});","__defineTemplate(\"SnackBar\", t => { t\n   .beginChild(\"div\").set(\"class\",\"snack-bar-container\").class(m => m.status)\n      .beginChild(\"div\").class(m => m.className)\n         .beginChild(\"div\").set(\"class\",\"content\").on(\"click\", m => m.hide(null)).content(m => m.content).endChild()\n         .if(m => m.action != null, t3 => t3\n            .content(m => m.action)\n         )\n      .endChild()\n   .endChild()\n});","__defineTemplate(\"TextEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"class\",\"input-element\").set(\"type\",\"text\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).set(\"maxlength\",m => m.maxLength).endChild()\n});\n__defineTemplate(\"NumberEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"class\",\"input-element\").set(\"inputmode\",\"decimal\").set(\"type\",\"text\").set(\"pattern\",m => WebApp.Format.text('decimal-input')).set(\"lang\",m => WebApp.App.language).value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).endChild()\n});\n__defineTemplate(\"TimeEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"class\",\"input-element\").set(\"type\",\"time\").set(\"lang\",m => WebApp.App.language).value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).set(\"min\",\"00:00\").set(\"max\",\"24:00\").endChild()\n});\n__defineTemplate(\"PasswordEditor\", t => { t\n   .beginChild(\"input\").behavoir(\"attach\").set(\"class\",\"input-element\").set(\"type\",\"password\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"placeholder\",m => m.placeholder).set(\"maxlength\",m => m.maxLength).endChild()\n});\n__defineTemplate(\"TextEditorMultiLine\", t => { t\n   .beginChild(\"textarea\").set(\"class\",\"input-element\").behavoir(\"attach\").value(m => m.editValue).focus(m => m.hasFocus).class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"id\",m => m.uid).set(\"rows\",m => m.lineCount).set(\"placeholder\",m => m.placeholder).set(\"maxlength\",m => m.maxLength).endChild()\n});","__defineTemplate(\"TextContent\", t => { t\n   .beginChild(\"span\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).text(m => m.content).endChild()\n});\n__defineTemplate(\"TextView\", t => { t\n   .beginChild(\"span\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).text(m => m.text).endChild()\n});\n__defineTemplate(\"Text\", t => { t\n   .beginChild(\"span\").text(m => m).endChild()\n});","__defineTemplate(\"ToastContainer\", t => { t\n   .foreach(m => m, t1 => t1\n      .content(m => m)\n   )\n});\n__defineTemplate(\"Toast\", t => { t\n   .beginChild(\"div\").class(m => m.className)\n      .if(m => m.icon != null, t2 => t2\n         .template(\"Icon\", m => m.icon)\n      )\n      .beginChild(\"span\").text(m => m.message).endChild()\n      .class(\"visible\", m => m.visible).endChild()\n});","__defineTemplate(\"VideoView\", t => { t\n   .beginChild(\"div\").set(\"class\",\"video-container\").visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.className)\n      .beginChild(\"video\").set(\"src\",m => m.content).behavoir(\"attach\").endChild()\n   .endChild()\n});\n__defineTemplate(\"VideoViewInline\", t => { t\n   .beginChild(\"video\").visible(m => m.visible).set(\"enabled\",m => m.enabled).class(m => m.className).set(\"src\",m => m.content).behavoir(\"attach\").endChild()\n});","__defineTemplate(\"WebView\", t => { t\n   .beginChild(\"iframe\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled).set(\"src\",m => m.content).behavoir(\"attach\").endChild()\n});","__defineTemplate(\"WizardView\", t => { t\n   .beginChild(\"div\").class(m => m.className).visible(m => m.visible).set(\"enabled\",m => m.enabled)\n      .beginChild(\"div\").set(\"class\",\"wizard-steps\")\n         .beginChild(\"ul\")\n            .foreach(m => m.content, t4 => t4\n               .beginChild(\"li\").text(m => m.index + 1).class(\"active\", m => m.isActive).class(\"done\", m => m.index < WebApp.injectProxy(m, \"$parent\", t.model).currentStepIndex).endChild()\n            )\n         .endChild()\n      .endChild()\n      .if(m => m.currentView != null, t2 => t2\n         .beginChild(\"h5\").set(\"class\",\"title\").text(m => m.currentView.title).endChild()\n         .if(m => m.currentView.coverImage != null, t3 => t3\n            .beginChild(\"div\").set(\"class\",\"cover-image\").template(\"Icon\", m => m.currentView.coverImage).endChild()\n         )\n         .content(m => m.currentView)\n      )\n      .beginChild(\"div\").set(\"class\",\"actions\").content(m => m.actions.next).content(m => m.actions.finish)\n         .foreach(m => m.currentView.actions, t3 => t3\n            .content(m => m)\n         )\n      .endChild()\n   .endChild()\n});","import { IAppArgs, IApplication } from \"./Abstraction/IApplication\";\r\nimport { Type } from \"./Types/Types\";\r\n\r\nexport var App: IApplication<IAppArgs> = null;\r\n\r\nexport const Services: IServices = {} as IServices;\r\n\r\n/****************************************/\r\n\r\nexport async function runAsync<TApp extends IApplication<TArgs>, TArgs extends IAppArgs>(app: Type<TApp> | TApp, args: TArgs, action: () => void) {\r\n\r\n    if (typeof app == \"function\")\r\n        App = new app();\r\n    else\r\n        App = app;\r\n\r\n    window.addEventListener(\"load\", async () => {\r\n\r\n        await App.runAsync(args);\r\n\r\n        action();\r\n    });\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nexport async function install(workerUri: string, versionUri: string) {\r\n\r\n    if (\"serviceWorker\" in navigator) {\r\n\r\n        const curVer = localStorage.getItem(\"AppVer\");\r\n        const newVer = JSON.parse(await (await fetch(versionUri)).text());\r\n        const curReg = await navigator.serviceWorker.getRegistration(workerUri);\r\n\r\n        if (curVer != newVer || !curReg) {\r\n\r\n            const registrations = await navigator.serviceWorker.getRegistrations();\r\n            for (let registration of registrations)\r\n                await registration.unregister();\r\n\r\n            await navigator.serviceWorker.register(workerUri);\r\n\r\n            localStorage.setItem(\"AppVer\", newVer);\r\n\r\n            if (curVer && curVer != newVer) {\r\n                //Interaction.info(\"msg-upgrading\");\r\n                document.location.reload();\r\n            }\r\n        }\r\n    };\r\n}","﻿import { IDictionary } from \"../Abstraction/IDictionary\";\r\nimport { IMap } from \"../Abstraction/IMap\";\r\nimport { DynamicString, LocalString, StringUsage } from \"../Types/DynamicString\";\r\n\r\nexport namespace Format {\r\n\r\n    export function join(separator: string, ...args: LocalString[]) {\r\n\r\n        let result = \"\";\r\n\r\n        for (let arg of args) {\r\n            if (!arg)\r\n                continue;\r\n            if (result.length > 0)\r\n                result += separator;\r\n            result += DynamicString.getValue(arg);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function text(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function title(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args, usage: StringUsage.Title });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function action(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args, usage: StringUsage.Action });\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    export function tooltip(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args, usage: StringUsage.Tooltip });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function message(value: LocalString, ...args: LocalString[]) {\r\n\r\n        return DynamicString.getValue(value, { params: args, usage: StringUsage.Message });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function currency(value: number, symbol: string = \"€. \") {\r\n        if (value == null || value == undefined)\r\n            return \"\";\r\n        return symbol + \" \" + value.toFixed(2);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function replaceArgs(value: string, args: IDictionary<any> | IMap<any, string>): string {\r\n\r\n        if (!value)\r\n            return;\r\n\r\n        let map: IMap<any, string>;\r\n\r\n        if (typeof (args) != \"function\")\r\n            map = key => args[key];\r\n        else\r\n            map = <any>args;\r\n\r\n        let state = 0;\r\n        let result = \"\";\r\n        let curName = \"\";\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            const c = value[i];\r\n            switch (state) {\r\n                case 0:\r\n                    if (c == \"{\") {\r\n                        curName = \"\";\r\n                        state = 1;\r\n                    }\r\n                    else\r\n                        result += c;\r\n                    break;\r\n                case 1:\r\n                    if (c == \"}\" || c == \":\" || c == \"=\") {\r\n                        state = 0;\r\n\r\n                        if (args)\r\n                            result += map(curName);\r\n\r\n                        if (c == \":\" || c == \"=\")\r\n                            state = 2;\r\n                        else\r\n                            state = 0;\r\n                    }\r\n                    else if (c != \"?\")\r\n                        curName += c;\r\n                    break;\r\n                case 2:\r\n                    if (c == \"}\")\r\n                        state = 0;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function replaceArgs2(value: string, args: IDictionary<any> | IMap<any, string>): string {\r\n\r\n        if (!value)\r\n            return value;\r\n\r\n        let map: IMap<any, string>;\r\n\r\n        if (typeof (args) != \"function\")\r\n            map = key => args[key];\r\n        else\r\n            map = <any>args;\r\n\r\n        let result = \"\";\r\n        let paramName = \"\";\r\n        let state = 0;\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            let c = value[i];\r\n\r\n            switch (state) {\r\n                case 0:\r\n                    if (c == '$')\r\n                        state = 1;\r\n                    else\r\n                        result += c;\r\n                    break;\r\n                case 1:\r\n                    if (c == '(') {\r\n                        state = 2;\r\n                        paramName = \"\";\r\n                    }\r\n                    else {\r\n                        result += \"$\" + c;\r\n                        state = 0;\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    if (c == ')') {\r\n                        const paramValue = map(paramName);\r\n                        result += JSON.stringify(paramValue);\r\n                        state = 0;\r\n                    }\r\n                    else\r\n                        paramName += c;\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function linkify(value: string): string {\r\n\r\n        if (!value)\r\n            return \"\";\r\n\r\n        let replacedText, replacePattern1, replacePattern2, replacePattern3;\r\n\r\n        //URLs starting with http://, https://, or ftp://\r\n        replacePattern1 = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\r\n        replacedText = value.replace(replacePattern1, '<a href=\"$1\" target=\"_blank\">$1</a>');\r\n\r\n        //URLs starting with \"www.\" (without // before it, or it'd re-link the ones done above).\r\n        replacePattern2 = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\r\n        replacedText = replacedText.replace(replacePattern2, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\r\n\r\n        //Change email addresses to mailto:: links.\r\n        replacePattern3 = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\r\n        replacedText = replacedText.replace(replacePattern3, '<a href=\"mailto:$1\">$1</a>');\r\n\r\n        return replacedText;\r\n    }\r\n}","﻿import { Services } from \"../Global\";\r\n\r\n\r\nexport namespace Http {\r\n\r\n    export function getStringAsync(url: string): Promise<string> {\r\n        return Services.httpClient.requestAsync<string>({\r\n            url: url,\r\n            method: \"GET\",\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function postStringAsync(url: string, data: any): Promise<string> {\r\n        return Services.httpClient.requestAsync<string>({\r\n            url: url,\r\n            method: \"POST\",\r\n            data: data,\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function getJsonAsync<T>(url: string): Promise<T> {\r\n\r\n        return Services.httpClient.requestAsync<T>({\r\n            url: url,\r\n            method: \"GET\",\r\n            responseType: \"application/json\",\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function postJsonAsync<T>(url: string, data: any): Promise<T> {\r\n\r\n        return Services.httpClient.requestAsync<T>({\r\n            url: url,\r\n            method: \"POST\",\r\n            responseType: \"application/json\",\r\n            data: data,\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function postBinaryAsync<T>(url: string, data: Blob | File | ArrayBuffer, onProgress?: (ev: ProgressEvent) => void): Promise<T> {\r\n\r\n        return Services.httpClient.requestAsync<T>({\r\n            url: url,\r\n            method: \"POST\",\r\n            responseType: \"application/json\",\r\n            dataType: \"application/octet-stream\",\r\n            data: data,\r\n            onProgress: onProgress\r\n        });\r\n    }\r\n}","﻿import { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { ICloneable } from \"../Abstraction/ICloneable\";\r\nimport { IList } from \"../Abstraction/IList\";\r\nimport { IStateManager } from \"../Abstraction/IStateManager\";\r\nimport { Guid } from \"../Types/Types\";\r\n\r\nconst GUID_REGEXP = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n\r\nexport function isList(obj: any): obj is IList<any> {\r\n\r\n    return obj && typeof obj == \"object\" && \"add\" in obj && \"get\" in obj && \"count\" in obj;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isCloneable(obj: any): obj is ICloneable {\r\n\r\n    return obj && typeof obj == \"object\" && \"clone\" in obj && typeof obj[\"clone\"] == \"function\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isObservableList(obj: any): obj is IObservableList<any> {\r\n\r\n    return isList(obj) && \"subscribe\" in obj;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isString(obj: any): obj is string {\r\n\r\n    return typeof obj == \"string\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isFunction(obj: any): obj is Function {\r\n\r\n    return typeof obj == \"function\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isObject(obj: any): obj is object {\r\n\r\n    return typeof obj == \"object\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isStateManager(obj: any): obj is IStateManager {\r\n\r\n    return obj && typeof obj == \"object\" && \"setState\" in obj && \"getState\" in obj;\r\n}\r\n\r\n\r\nexport function isGuid(obj: any): obj is Guid {\r\n\r\n    return GUID_REGEXP.test(obj?.toString());\r\n\r\n}\r\n","﻿import { App } from \"../Global\";\r\n\r\nexport namespace Uri {\r\n\r\n    var _relativeSegment: string;\r\n    var _absoluteSegment: string;\r\n\r\n    /****************************************/\r\n\r\n    export function absolute(uri: string): string {\r\n\r\n        if (uri.substr(0, 2) == \"./\" || uri.substr(0, 2) == \"~/\")\r\n            return getAbsoluteSegment(document.URL) + App.baseUrl.substr(1) + uri.substr(2);\r\n\r\n        else if (uri.substr(0, 1) == \"/\")\r\n            return getAbsoluteSegment(document.URL) + uri.substr(1);\r\n\r\n        else if (isAbsolute(uri))\r\n            return uri;\r\n\r\n        return getRelativeSegment(document.URL) + uri.substr(1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function isAbsolute(uri: string): boolean {\r\n        return uri.indexOf(\"://\") != -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function getRelativeSegment(uri: string): string {\r\n\r\n        if (!_relativeSegment) {\r\n\r\n            _relativeSegment = \"\";\r\n\r\n            let index = uri.lastIndexOf(\"/\");\r\n            if (index != -1)\r\n                _relativeSegment = uri.substr(0, index + 1);\r\n        }\r\n        return _relativeSegment;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function getAbsoluteSegment(uri: string): string {\r\n\r\n        if (!_absoluteSegment) {\r\n\r\n            _absoluteSegment = \"\";\r\n\r\n            let index = uri.indexOf(\"://\");\r\n            if (index != -1) {\r\n                index = uri.indexOf(\"/\", index + 4);\r\n                if (index != -1)\r\n                    _absoluteSegment = uri.substr(0, index + 1);\r\n            }\r\n        }\r\n\r\n        return _absoluteSegment;\r\n    }\r\n}","﻿import { IDictionary } from \"./Abstraction/IDictionary\";\r\nimport { IKeyValue } from \"./Abstraction/IKeyValue\";\r\nimport { IList } from \"./Abstraction/IList\";\r\nimport { isList } from \"./Helpers/TypeCheck\";\r\nimport { delayAsync } from \"./Utils/PromiseUtils\";\r\n\r\nexport interface IEnumerator<T> {\r\n\r\n    current: T;\r\n\r\n    moveNext(): boolean;\r\n\r\n    reset(): void;\r\n\r\n    toArray?(): T[];\r\n\r\n    count?(): number;\r\n\r\n    first?(): T;\r\n\r\n    last?(): T;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IGroupItem<TKey, TValue> {\r\n    key: TKey;\r\n    values: Linq<TValue>;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface ICollection<T> {\r\n\r\n    length: number;\r\n\r\n    item(index: number): T;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IEnumerable<T> {\r\n\r\n    getEnumerator(): IEnumerator<T>;\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass EmptyEnumerator<T> implements IEnumerator<T> {\r\n\r\n    get current(): T {\r\n        return undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(): number {\r\n        return 0;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass DistinctEnumerator<TSrc, TDest> implements IEnumerator<TDest>{\r\n\r\n    private _selector: (item: TSrc) => TDest;\r\n    private _source: IEnumerator<TSrc>;\r\n    private _foundItems: TDest[];\r\n    private _current: TDest;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<TSrc>, selector?: (item: TSrc) => TDest) {\r\n\r\n        this._selector = selector;\r\n        this._source = source;\r\n\r\n        if (!this._selector)\r\n            this._selector = a => <any>a;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): TDest {\r\n        return this._current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        while (this._source.moveNext()) {\r\n            const item = this._selector(this._source.current);\r\n            if (this._foundItems.indexOf(item) == -1) {\r\n                this._foundItems.push(item);\r\n                this._current = item;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._source.reset();\r\n        this._foundItems = [];\r\n        this._current = undefined;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass DictionaryEnumerator<T> implements IEnumerator<IKeyValue<T>> {\r\n\r\n    private _curIndex: number;\r\n    private _keyList: string[];\r\n    private _value: IDictionary<T>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: IDictionary<T>) {\r\n        this._keyList = Object.getOwnPropertyNames(value);\r\n        this._value = value;\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): IKeyValue<T> {\r\n        return {\r\n            key: this._keyList[this._curIndex],\r\n            value: this._value[this._keyList[this._curIndex]]\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        this._curIndex++;\r\n        return this._curIndex < this._keyList.length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curIndex = -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    first(): IKeyValue<T> {\r\n        return {\r\n            key: this._keyList[0],\r\n            value: this._value[this._keyList[0]]\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    last(): IKeyValue<T> {\r\n        return {\r\n            key: this._keyList[this._keyList.length - 1],\r\n            value: this._value[this._keyList[this._keyList.length - 1]]\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(): number {\r\n        return this._keyList.length;\r\n    }\r\n\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass ArrayEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _curIndex: number;\r\n    private _value: T[];\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: T[]) {\r\n        this._value = value;\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._value[this._curIndex];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toArray() {\r\n        return this._value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        this._curIndex++;\r\n        return this._curIndex < this._value.length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curIndex = -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    first(): T {\r\n        return this._value[0];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    last(): T {\r\n        return this._value[this._value.length - 1];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(): number {\r\n        return this._value.length;\r\n    }\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nclass CollectionEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _curIndex: number;\r\n    private _value: ICollection<T>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: ICollection<T>) {\r\n        this._value = value;\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._value.item(this._curIndex);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        this._curIndex++;\r\n        return this._curIndex < this._value.length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curIndex = -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    first(): T {\r\n        return this._value.item(0);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    last(): T {\r\n        return this._value.item(this._value.length - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(): number {\r\n        return this._value.length;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass SelectManyEnumerator<TSrc, TDest> implements IEnumerator<TDest> {\r\n\r\n    private _selector: (item: TSrc, index?: number) => IEnumerable<TDest>;\r\n    private _source: IEnumerator<TSrc>;\r\n    private _index: number;\r\n    private _curGroup: IEnumerator<TDest>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<TSrc>, selector: (item: TSrc, index?: number) => IEnumerable<TDest>) {\r\n\r\n        this._selector = selector;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): TDest {\r\n        return this._curGroup?.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        while (true) {\r\n\r\n            while (!this._curGroup) {\r\n\r\n                if (!this._source.moveNext())\r\n                    return false;\r\n\r\n                this._curGroup = this._selector(this._source.current, this._index)?.getEnumerator();\r\n            }\r\n\r\n            if (this._curGroup) {\r\n\r\n                if (!this._curGroup.moveNext())\r\n                    this._curGroup = null;\r\n                else {\r\n                    this._index++;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curGroup = null;\r\n        this._index = -1;\r\n        this._source.reset();\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass SelectEnumerator<TSrc, TDest> implements IEnumerator<TDest> {\r\n\r\n    private _selector: (item: TSrc, index?: number) => TDest;\r\n    private _source: IEnumerator<TSrc>;\r\n    private _index: number;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<TSrc>, selector: (item: TSrc, index?: number) => TDest) {\r\n\r\n        this._selector = selector;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): TDest {\r\n        return this._selector(this._source.current, this._index);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n        this._index++;\r\n        return this._source.moveNext();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._index = -1;\r\n        this._source.reset();\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass WhereEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _condition: (item: T) => boolean;\r\n    private _source: IEnumerator<T>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<T>, condition: (item: T) => boolean) {\r\n\r\n        this._condition = condition;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._source.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        while (this._source.moveNext()) {\r\n            if (this._condition(this._source.current))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._source.reset();\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nclass SkipEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _source: IEnumerator<T>;\r\n    private _count: number;\r\n    private _skipped: boolean;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<T>, count: number) {\r\n\r\n        this._count = count;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._source.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        if (!this._skipped) {\r\n            let elCount = 0;\r\n            while (elCount < this._count) {\r\n                if (!this._source.moveNext())\r\n                    return false;\r\n                elCount++;\r\n            }\r\n            this._skipped = true;\r\n        }\r\n\r\n        return this._source.moveNext();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._source.reset();\r\n        this._skipped = false;\r\n    }\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass TakeEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _source: IEnumerator<T>;\r\n    private _count: number;\r\n    private _taken: number;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: IEnumerator<T>, count: number) {\r\n\r\n        this._count = count;\r\n        this._source = source;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._source.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        if (this._taken >= this._count)\r\n            return false;\r\n\r\n        if (!this._source.moveNext())\r\n            return false;\r\n\r\n        this._taken++;\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._source.reset();\r\n        this._taken = 0;\r\n    }\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass IteratorEnumerator<T> implements IEnumerator<T> {\r\n\r\n    private _source: Iterator<T>;\r\n    private _current: T;\r\n\r\n    /****************************************/\r\n\r\n    constructor(source: Iterator<T>) {\r\n        this._source = source;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): T {\r\n        return this._current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        const result = this._source.next();\r\n        if (result.done)\r\n            return false;\r\n        this._current = result.value;\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Linq<T> implements IEnumerable<T> {\r\n\r\n    private _enumerator: IEnumerator<T>;\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: IEnumerator<T>) {\r\n\r\n        this._enumerator = value;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    selectMany<TResult>(selector: (item: T, index?: number) => IEnumerable<TResult>): Linq<TResult> {\r\n\r\n        return linq(new SelectManyEnumerator(this._enumerator, selector));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select<TResult>(selector: (item: T, index?: number) => TResult): Linq<TResult> {\r\n\r\n        return linq(new SelectEnumerator(this._enumerator, selector));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    ofType<TCheck>(typeCheck: (item: T) => boolean): Linq<TCheck> {\r\n\r\n        return linq<TCheck>(new WhereEnumerator(this._enumerator, typeCheck) as any);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    where(condition: (item: T) => boolean): Linq<T> {\r\n\r\n        return linq(new WhereEnumerator(this._enumerator, condition));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    first(condition?: (item: T) => boolean): T {\r\n\r\n        if (condition)\r\n            return this.where(condition).first();\r\n\r\n        if (this._enumerator.first)\r\n            return this._enumerator.first();\r\n\r\n        this._enumerator.reset();\r\n        if (this._enumerator.moveNext())\r\n            return this._enumerator.current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    last(): T {\r\n\r\n        if (this._enumerator.last)\r\n            return this._enumerator.last();\r\n\r\n        this._enumerator.reset();\r\n\r\n        let lastItem: T;\r\n\r\n        while (this._enumerator.moveNext())\r\n            lastItem = this._enumerator.current;\r\n\r\n        return lastItem;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    sum(selector?: (item: T) => number): number {\r\n\r\n        if (selector)\r\n            return this.select(selector).sum();\r\n\r\n        let result = 0;\r\n\r\n        this.foreach(a => {\r\n            result += parseFloat(a as any);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    min(selector?: (item: T) => number): number {\r\n\r\n        if (selector)\r\n            return this.select(selector).min();\r\n        let result = Number.POSITIVE_INFINITY;\r\n        this.foreach(a => {\r\n            const number = parseFloat(a as any);\r\n            if (number < result)\r\n                result = number;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    max(selector?: (item: T) => number): number {\r\n\r\n        if (selector)\r\n            return this.select(selector).max();\r\n        let result = Number.NEGATIVE_INFINITY;\r\n        this.foreach(a => {\r\n            const number = parseFloat(a as any);\r\n            if (number > result)\r\n                result = number;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    avg(selector?: (item: T) => number): number {\r\n\r\n        if (selector)\r\n            return this.select(selector).avg();\r\n\r\n        let result = 0;\r\n        let count = 0;\r\n\r\n        this.foreach(a => {\r\n            result += parseFloat(a as any);\r\n            count++;\r\n        });\r\n\r\n        if (count)\r\n            return result / count;\r\n        return NaN;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    count(condition?: (item: T) => boolean): number {\r\n\r\n        if (condition)\r\n            return this.where(condition).count();\r\n\r\n        if (this._enumerator.count)\r\n            return this._enumerator.count();\r\n\r\n        this._enumerator.reset();\r\n\r\n        let count = 0;\r\n        while (this._enumerator.moveNext())\r\n            count++;\r\n\r\n        return count;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    concat(separator: string, selector?: (item: T) => any): string {\r\n\r\n        let result = \"\";\r\n        let index = 0;\r\n\r\n        if (!selector)\r\n            selector = a => a.toString();\r\n\r\n        this.foreach(a => {\r\n            if (index > 0)\r\n                result += separator;\r\n            result += selector(a);\r\n            index++;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    orderBy(selector: (item: T) => any): Linq<T> {\r\n\r\n        const result = this.toArray();\r\n        result.sort((a, b) => {\r\n            const itemA = selector(a);\r\n            const itemB = selector(b);\r\n            return itemA - itemB;\r\n        });\r\n        return linq(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    orderByDesc(selector: (item: T) => any): Linq<T> {\r\n\r\n        const result = this.toArray();\r\n        result.sort((a, b) => {\r\n            const itemA = selector(a);\r\n            const itemB = selector(b);\r\n            return itemB - itemA;\r\n        });\r\n        return linq(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    distinct<TDest>(selector?: (item: T) => TDest): Linq<TDest> {\r\n\r\n        return linq(new DistinctEnumerator<T, TDest>(this._enumerator, selector));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    groupBy<TKey>(key: (item: T) => TKey, comparer?: (a: TKey, b: TKey) => boolean): Linq<IGroupItem<TKey, T>>;\r\n\r\n    groupBy<TKey extends IDictionary<(item: T) => any>>(key: (item: T) => TKey, comparer?: (a: TKey, b: TKey) => boolean): Linq<IGroupItem<TKey, T>>;\r\n\r\n    groupBy<TKey>(key: any, comparer?: (a: TKey, b: TKey) => boolean): Linq<IGroupItem<TKey, T>> {\r\n\r\n        const result: Array<IGroupItem<TKey, T>> = [];\r\n\r\n        if (!comparer)\r\n            comparer = (a, b) => a == b;\r\n\r\n        if (typeof key == \"function\") {\r\n\r\n            const keySelector = <(item: T) => TKey>key;\r\n\r\n            this.foreach(item => {\r\n                const itemKey = keySelector(item);\r\n                let groupItem = linq(result).first(a => comparer(a.key, itemKey));\r\n                if (!groupItem) {\r\n                    groupItem = {\r\n                        key: itemKey,\r\n                        values: linq(new ArrayEnumerator([]))\r\n                    };\r\n                    result.push(groupItem);\r\n                }\r\n                groupItem.values._enumerator.toArray().push(item);\r\n\r\n            });\r\n        }\r\n\r\n        return linq(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    indexOf(condition: (item: T) => boolean): number {\r\n\r\n        let index = 0;\r\n\r\n        this._enumerator.reset();\r\n        while (this._enumerator.moveNext()) {\r\n            if (condition(this._enumerator.current))\r\n                return index;\r\n            index++;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    foreach(action: (item: T, index?: number) => void): Linq<T> {\r\n\r\n        this._enumerator.reset();\r\n\r\n        let index = 0;\r\n        while (this._enumerator.moveNext()) {\r\n            action(this._enumerator.current, index);\r\n            index++;\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /****************************************/\r\n\r\n    async foreachAsync(action: (item: T, index?: number) => Promise<void>, chunkSize = 1): Promise<Linq<T>> {\r\n\r\n        this._enumerator.reset();\r\n\r\n        let index = 0;\r\n        while (this._enumerator.moveNext()) {\r\n            await action(this._enumerator.current, index);\r\n            index++;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    any(condition?: (item: T) => boolean): boolean {\r\n\r\n        if (!condition)\r\n            return this._enumerator.moveNext();\r\n\r\n        return this.where(condition).any();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    contains(item: T, comparer?: (a: T, b: T) => boolean) {\r\n\r\n        if (!comparer)\r\n            comparer = (a, b) => a == b;\r\n\r\n        this._enumerator.reset();\r\n\r\n        while (this._enumerator.moveNext())\r\n            if (comparer(this._enumerator.current, item))\r\n                return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    all(condition: (item: T) => boolean): boolean {\r\n\r\n        return !this.where(a => !condition(a)).any();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    take(count: number): Linq<T> {\r\n        return linq(new TakeEnumerator(this._enumerator, count));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    skip(count: number): Linq<T> {\r\n        return linq(new SkipEnumerator(this._enumerator, count));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    replace(condition: (item: T) => boolean, newItem: T) {\r\n        if (!(this._enumerator instanceof ArrayEnumerator))\r\n            throw \"Invalid enumerator, expected array\";\r\n        const items = this._enumerator.toArray();\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (condition(items[i]))\r\n                items[i] == newItem;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toGenerator() {\r\n\r\n        function* generator(self: Linq<T>) {\r\n\r\n            self._enumerator.reset();\r\n            while (self._enumerator.moveNext())\r\n                yield self._enumerator.current;\r\n        }\r\n\r\n        return generator(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async toArrayAsync(chunkSize = 1) {\r\n\r\n        if (this._enumerator.toArray)\r\n            return this._enumerator.toArray();\r\n\r\n        let array: T[] = [];\r\n\r\n        let index = 0;\r\n\r\n        for (let item of this.toGenerator()) {\r\n\r\n            array.push(item);\r\n\r\n            if (index % chunkSize == 0)\r\n                await delayAsync(0);\r\n\r\n            index++;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toArray(): T[] {\r\n\r\n        if (this._enumerator.toArray)\r\n            return this._enumerator.toArray();\r\n\r\n        const result: T[] = [];\r\n        this.foreach(a => result.push(a));\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toDictionary(keySelector: (item: T) => string): IDictionary<T>;\r\n\r\n    toDictionary<TValue>(keySelector: (item: T) => string, valueSelector: (item: T) => TValue): IDictionary<TValue>;\r\n\r\n    toDictionary(keySelector: (item: T) => string, valueSelector?: (item: T) => any): IDictionary<any> {\r\n\r\n        if (!valueSelector)\r\n            valueSelector = a => a;\r\n\r\n        const result = {};\r\n        this.foreach(a =>\r\n            result[keySelector(a)] = valueSelector(a));\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getEnumerator(): IEnumerator<T> {\r\n\r\n        return this._enumerator;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    [Symbol.iterator]() {\r\n        this._enumerator.reset();\r\n        return ({\r\n            next: (value?: any): IteratorResult<T> => {\r\n                const isDone = !this._enumerator.moveNext();\r\n                return {\r\n                    done: isDone,\r\n                    value: this._enumerator.current\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function linq<T>(enumerator: IEnumerator<T>): Linq<T>;\r\nexport function linq<T>(enumerable: IEnumerable<T>): Linq<T>;\r\nexport function linq<T>(array: T[]): Linq<T>;\r\nexport function linq<T>(list: ICollection<T>): Linq<T>;\r\nexport function linq<T>(iterator: Iterator<T>): Linq<T>;\r\nexport function linq<T>(dictionary: IDictionary<T>): Linq<IKeyValue<T>>;\r\nexport function linq<T extends Node>(nodeList: NodeListOf<T>): Linq<T>;\r\nexport function linq<T>(iterable: IList<T>): Linq<T>;\r\n\r\nexport function linq<T>(value: any): Linq<any> {\r\n\r\n    let enumerator: IEnumerator<any>;\r\n\r\n    if (!value)\r\n        enumerator = new EmptyEnumerator<T>();\r\n    else if (Array.isArray(value))\r\n        enumerator = new ArrayEnumerator<T>(value);\r\n    else if (\"getEnumerator\" in value)\r\n        enumerator = (value as IEnumerable<T>).getEnumerator();\r\n    else if (isList(value))\r\n        enumerator = new ArrayEnumerator(value.toArray());\r\n    else if (\"item\" in value)\r\n        enumerator = new CollectionEnumerator<T>(value);\r\n    else if (\"next\" in value && typeof (value[\"next\"]) == \"function\")\r\n        enumerator = new IteratorEnumerator(value);\r\n    else if (\"current\" in value && \"reset\" in value && \"moveNext\" in value)\r\n        enumerator = value;\r\n    else\r\n        enumerator = new DictionaryEnumerator<T>(value);\r\n\r\n    return new Linq(enumerator);\r\n}","﻿import { IDictionary } from \"./Abstraction/IDictionary\";\r\nimport { IDynamicString } from \"./Types/DynamicString\";\r\n\r\ndeclare global {\r\n    interface IStringTable {\r\n        [key: string]: IDynamicString|string;\r\n    }\r\n}\r\n\r\ninterface IStringTableConfig {\r\n    language: string;\r\n    sector?: string;\r\n}\r\n\r\nexport var Strings: IStringTable;\r\n\r\n/****************************************/\r\n\r\nexport class StringTable {\r\n\r\n    private static _tables: IDictionary<IStringTable> = {};\r\n    private static _currentConfig: IStringTableConfig;\r\n\r\n    /****************************************/\r\n\r\n    private static getKey(config: IStringTableConfig): string {\r\n        let key = config.language;\r\n        if (config.sector)\r\n            key += \"|\" + config.sector;\r\n        return key;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static get(config?: IStringTableConfig): IStringTable {\r\n\r\n        if (!config)\r\n            config = this._currentConfig;\r\n\r\n        let result = StringTable._tables[this.getKey(config)];\r\n        if (!result && config.sector)\r\n            result = StringTable._tables[this.getKey({ language: config.language })];\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static add(value: Partial<IStringTable>, config: IStringTableConfig): void {\r\n        const key = this.getKey(config);\r\n        let curValue = this._tables[key];\r\n        if (!curValue)\r\n            this._tables[key] = value as IStringTable;\r\n        else {\r\n            for (let str in value)\r\n                curValue[str] = value[str];\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static get currentConfig(): IStringTableConfig {\r\n        return this._currentConfig;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static set currentConfig(value: IStringTableConfig) {\r\n        this._currentConfig = value;\r\n        Strings = StringTable.get();\r\n    }\r\n}","﻿import { Strings } from \"../StringTable\";\r\n\r\nexport type LocalString = IDynamicString | string | keyof IStringTable;\r\n\r\nexport enum WordNumber {\r\n    Singular,\r\n    Plural\r\n}\r\n\r\n/****************************************/\r\n\r\nexport enum WordGender {\r\n    Male,\r\n    Female\r\n}\r\n\r\n/****************************************/\r\n\r\nexport enum StringUsage {\r\n    General,\r\n    Label,\r\n    Column,\r\n    Action,\r\n    Message,\r\n    Question,\r\n    Title,\r\n    Tooltip\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDynamicStringConfig {\r\n    useArticle?: boolean;\r\n    useArticleInd?: boolean;\r\n    cardinality?: number;\r\n    number?: WordNumber;\r\n    gender?: WordGender;\r\n    scope?: string;\r\n    language?: string;\r\n    usage?: StringUsage;\r\n    params?: Array<LocalString>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDynamicString {\r\n    (config?: IDynamicStringConfig): string;\r\n};\r\n\r\n\r\n/****************************************/\r\n\r\ninterface IFullNameConfig {\r\n    detArticle?: string;\r\n    undetArticle?: string;\r\n    name: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAdverbConfig {\r\n    male?: string;\r\n    female?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface INameConfig {\r\n    gender?: WordGender;\r\n    singular: IFullNameConfig;\r\n    plural?: IFullNameConfig;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAdjectiveConfig {\r\n    male?: INameConfig;\r\n    female?: INameConfig;\r\n}\r\n\r\n/****************************************/\r\n\r\nclass DynamicStringManager {\r\n\r\n    format(Strings: IDynamicString): IDynamicString {\r\n        return cfg => {\r\n            let curValue = Strings(cfg);\r\n\r\n            if (cfg) {\r\n\r\n                if (cfg.usage === StringUsage.Column ||\r\n                    cfg.usage === StringUsage.Label ||\r\n                    cfg.usage === StringUsage.Action ||\r\n                    cfg.usage === StringUsage.Title ||\r\n                    cfg.usage === StringUsage.Question ||\r\n                    cfg.usage === StringUsage.Tooltip ||\r\n                    cfg.usage === StringUsage.Message)\r\n                    curValue = curValue.substr(0, 1).toUpperCase() + curValue.substr(1);\r\n\r\n                if (cfg.usage === StringUsage.Label)\r\n                    curValue += \":\";\r\n\r\n                if (cfg.usage === StringUsage.Message)\r\n                    curValue += \".\";\r\n\r\n                if (cfg.usage === StringUsage.Question)\r\n                    curValue += \"?\";\r\n            }\r\n\r\n            return curValue;\r\n        };\r\n    }\r\n\r\n    get(name: string): IDynamicString {\r\n        const value = Strings[name];\r\n        if (typeof value == \"string\")\r\n            return DynamicString.simple(value);\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getValue(value: LocalString, config?: IDynamicStringConfig): string;\r\n\r\n    getValue(value: LocalString, usage?: StringUsage): string;\r\n\r\n    getValue(value: LocalString, usageOrConfig?: any): string {\r\n\r\n        if (typeof value == \"function\") {\r\n\r\n            let cfg: IDynamicStringConfig;\r\n\r\n            if (usageOrConfig) {\r\n                if (StringUsage[usageOrConfig])\r\n                    cfg = {\r\n                        usage: usageOrConfig\r\n                    };\r\n                else\r\n                    cfg = usageOrConfig;\r\n            }\r\n\r\n            return (value as IDynamicString)(cfg);\r\n        }\r\n        else {\r\n\r\n            if (value && Strings && value in Strings)\r\n                return this.getValue(this.get(value as string), usageOrConfig);\r\n        }\r\n\r\n        return <string>value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    complex(value: string): IDynamicString {\r\n        return DynamicString.format(cfg => {\r\n\r\n            let state = 0;\r\n            let result = \"\";\r\n            let curName = \"\";\r\n            let curNameParams: string = null;\r\n            let curNameParamsDeep = 0;\r\n\r\n            if (!cfg)\r\n                cfg = {};\r\n\r\n            if (!cfg.gender && cfg.params) {\r\n                //Forzo la valutazione dei parametri x estrarre il genere\r\n                cfg.params.forEach(a => {\r\n                    if (typeof a === \"function\")\r\n                        (a as IDynamicString)({ ...cfg, params: [] });\r\n                });\r\n            }\r\n\r\n            for (let i = 0; i < value.length; i++) {\r\n                let c = value[i];\r\n                switch (state) {\r\n                    case 0:\r\n                        if (c == \"{\") {\r\n                            curName = \"\";\r\n                            curNameParams = null;\r\n                            state = 1;\r\n                        }\r\n                        else\r\n                            result += c;\r\n                        break;\r\n                    case 1:\r\n                        if (c == \"}\") {\r\n                            state = 3;\r\n                            i--;\r\n                            break;\r\n                        }\r\n                        else if (c == \":\") {\r\n                            curNameParams = \"\";\r\n                            curNameParamsDeep = 0;\r\n                            state = 2;\r\n                        }\r\n                        else\r\n                            curName += c;\r\n                        break;\r\n                    case 2:\r\n                        if (c == \"{\")\r\n                            curNameParamsDeep++;\r\n\r\n                        if (c == \"}\") {\r\n                            curNameParamsDeep--;\r\n                            if (curNameParamsDeep < 0) {\r\n                                state = 3;\r\n                                i--;\r\n                            }\r\n                            else\r\n                                curNameParams += c;\r\n                        }\r\n                        else\r\n                            curNameParams += c;\r\n                        break;\r\n                    case 3:\r\n\r\n                        let paramCfg: IDynamicStringConfig;\r\n\r\n                        if (curNameParams)\r\n                            paramCfg = <IDynamicStringConfig>JSON.parse(curNameParams.trim());\r\n                        else\r\n                            paramCfg = {};\r\n\r\n                        let flagFound = true;\r\n\r\n                        while (flagFound) {\r\n\r\n                            flagFound = false;\r\n\r\n                            if (curName.startsWith(\"*\")) {\r\n                                paramCfg.number = WordNumber.Plural;\r\n                                curName = curName.substr(1);\r\n                                flagFound = true;\r\n                            }\r\n\r\n                            if (curName.startsWith(\"!\")) {\r\n                                paramCfg.useArticle = true;\r\n                                curName = curName.substr(1);\r\n                                flagFound = true;\r\n                            }\r\n\r\n                            if (curName.startsWith(\".\")) {\r\n                                paramCfg.useArticleInd = true;\r\n                                curName = curName.substr(1);\r\n                                flagFound = true;\r\n                            }\r\n                        }\r\n\r\n                        if (cfg.gender && !paramCfg.gender)\r\n                            paramCfg.gender = cfg.gender;\r\n\r\n                        if (cfg.cardinality && !paramCfg.cardinality)\r\n                            paramCfg.cardinality = cfg.cardinality;\r\n\r\n                        if (cfg.number && !paramCfg.number)\r\n                            paramCfg.number = cfg.number;\r\n\r\n                        if (cfg.useArticle !== undefined && paramCfg.useArticle === undefined)\r\n                            paramCfg.useArticle = cfg.useArticle;\r\n\r\n\r\n                        const number = parseInt(curName);\r\n\r\n                        if (!isNaN(number)) {\r\n                            if (cfg.params && number < cfg.params.length) {\r\n                                const param = cfg.params[number];\r\n                                result += this.getValue(param, paramCfg);\r\n                            }\r\n                        }\r\n                        else\r\n                            result += this.get(curName)(paramCfg);\r\n\r\n                        if (paramCfg.gender)\r\n                            cfg.gender = paramCfg.gender;\r\n\r\n                        state = 0;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return result;\r\n\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    adverb(advCfg: IAdverbConfig): IDynamicString {\r\n        return this.format(cfg => {\r\n\r\n            return cfg && cfg.gender == WordGender.Female ? advCfg.female : advCfg.male;\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private appendArticle(article: string, name: string): string {\r\n        let result = article;\r\n        if (result.charAt(result.length - 1) != \"'\")\r\n            result += \" \";\r\n        return result + name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    adjective(adjCfg: IAdjectiveConfig): IDynamicString {\r\n        return this.format(cfg => {\r\n\r\n            const gender = cfg && cfg.gender == WordGender.Female ? adjCfg.female : adjCfg.male;\r\n\r\n            const fullName = cfg && (cfg.number == WordNumber.Plural || cfg.cardinality > 1) ? gender.plural : gender.singular;\r\n\r\n            if (cfg && cfg.useArticle)\r\n                return this.appendArticle(fullName.detArticle, fullName.name);\r\n\r\n            if (cfg && cfg.useArticleInd)\r\n                return this.appendArticle(fullName.undetArticle, fullName.name);\r\n\r\n            return fullName.name;\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    noun(nameCfg: INameConfig): IDynamicString {\r\n        return this.format(cfg => {\r\n\r\n            if (!cfg)\r\n                cfg = {};\r\n\r\n            if (nameCfg.gender)\r\n                cfg.gender = nameCfg.gender;\r\n\r\n            const fullName = (cfg.number == WordNumber.Plural || cfg.cardinality > 1) ? nameCfg.plural : nameCfg.singular;\r\n\r\n            if (cfg && cfg.useArticle)\r\n                return this.appendArticle(fullName.detArticle, fullName.name);\r\n\r\n            if (cfg && cfg.useArticleInd)\r\n                return this.appendArticle(fullName.undetArticle, fullName.name);\r\n\r\n            return fullName.name;\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    map(selector: (table: IStringTable) => IDynamicString): IDynamicString {\r\n        return cfg => selector(Strings)(cfg);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    simple(value: string): IDynamicString {\r\n        return this.format(() => value);\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport var DynamicString = new DynamicStringManager();\r\n\r\nexport function $string(name: string): IDynamicString {\r\n    return DynamicString.get(name);\r\n}\r\n","﻿\r\nexport function delayAsync(milliseconds: number): Promise<void> {\r\n\r\n    return new Promise(res => setTimeout(res, milliseconds));\r\n};","﻿import { IOperation } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\nimport { Uri } from \"../../Core/Helpers/Uri\";\r\nimport { linq } from \"../../Core/Linq\";\r\n\r\n\r\nexport interface ILoader {\r\n\r\n    isLoaded(): boolean;\r\n\r\n    loadAsync(operation?: IOperation): Promise<boolean>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ScriptLoader implements ILoader {\r\n\r\n    constructor(src: string) {\r\n\r\n        this.src = Uri.absolute(src.replace(\"~/\", \"./\"));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isLoaded(): boolean {\r\n\r\n        if (this.src.substr(this.src.length - 3) == \".ts\")\r\n            return true;\r\n        return linq(document.scripts).any(a => (a as HTMLScriptElement).src.toLowerCase().startsWith(this.src.toLowerCase()));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadAsync(operation?: IOperation): Promise<boolean> {\r\n\r\n        if (this.isLoaded())\r\n            return Promise.resolve(true);\r\n\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            const curOperation = Services.operation.begin({ parentOperation: operation, message: \"Loading script \" + this.src });\r\n\r\n            const scriptNode = document.createElement(\"script\");\r\n\r\n            scriptNode.onload = () => {\r\n                curOperation.end();\r\n                resolve(true);\r\n            }\r\n\r\n            scriptNode.onerror = () => {\r\n                curOperation.end();\r\n                resolve(false);\r\n            }\r\n\r\n            scriptNode.type = \"text/javascript\";\r\n            scriptNode.src = this.src;\r\n\r\n            document.body.appendChild(scriptNode);\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    src: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class StyleLoader implements ILoader {\r\n\r\n    constructor(src: string) {\r\n        this.src = Uri.absolute(src.replace(\"~/\", \"./\"));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isLoaded(): boolean {\r\n\r\n        return linq(document.styleSheets).any(a => a.href && a.href.toLowerCase().startsWith(this.src.toLowerCase()));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadAsync(operation?: IOperation): Promise<boolean> {\r\n\r\n        if (this.isLoaded())\r\n            return Promise.resolve(true);\r\n\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            const curOperation = Services.operation.begin({ parentOperation: operation, message: \"Loading style \" + this.src });\r\n\r\n            const linkNode = document.createElement(\"link\");\r\n\r\n            linkNode.onload = () => {\r\n                curOperation.end();\r\n                resolve(true);\r\n            }\r\n\r\n            linkNode.onerror = () => {\r\n                curOperation.end();\r\n                resolve(false);\r\n            }\r\n\r\n            linkNode.rel = \"stylesheet\";\r\n            linkNode.href = this.src;\r\n\r\n            document.body.appendChild(linkNode);\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    src: string;\r\n}","﻿import { IOperation } from \"../../Core/Abstraction/IOperation\";\r\nimport { App, Services } from \"../../Core/Global\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { Http } from \"../../Core/Helpers/Http\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { IPage } from \"../Abstraction/IPage\";\r\nimport { IPageInfo, IPageManager } from \"../Abstraction/IPageManager\";\r\nimport { ILoader, ScriptLoader, StyleLoader } from \"../Helpers/Loaders\";\r\n\r\ninterface IClientPage {\r\n\r\n    scripts?: string[];\r\n\r\n    styles?: string[];\r\n\r\n    action?: string;\r\n\r\n    isLoded?: boolean;\r\n\r\n    url?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAppInclude {\r\n\r\n    scripts: string[];\r\n\r\n    styles: string[];\r\n\r\n    components: string[];\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAppComponent {\r\n    include: IAppInclude;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAppPage extends IAppComponent {\r\n\r\n    url: string;\r\n\r\n    action: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IAppStructure {\r\n\r\n    pages: { [name: string]: IAppPage };\r\n\r\n    components: { [name: string]: IAppComponent };\r\n\r\n    templates?: { [name: string]: string };\r\n\r\n    include?: [];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class DynamicPageManager implements IPageManager {\r\n\r\n    private _struture: IAppStructure;\r\n\r\n    /****************************************/\r\n\r\n    async createPageAsync(pageInfo: IPageInfo): Promise<IPage> {\r\n\r\n        const curOperation = Services.operation.begin({ message: \"Loading page '\" + pageInfo.name + \"'...\" });\r\n\r\n        const clientPage = await this.getClientPageAsync(pageInfo.name, curOperation);\r\n\r\n        if (!clientPage.isLoded)\r\n            await this.loadClientPageAsync(clientPage, curOperation);\r\n\r\n        const result = eval(clientPage.action);\r\n\r\n\r\n        let page: IPage;\r\n\r\n        if (result instanceof Promise)\r\n            await <Promise<IPage>>result;\r\n\r\n        if (page != null)\r\n            page.url = Format.replaceArgs(App.baseUrl + clientPage.url, pageInfo.args);\r\n\r\n        page.args = pageInfo.args;\r\n\r\n        curOperation.end();\r\n\r\n        return page;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadComponentsAsync(pageName: string) {\r\n\r\n        const curOperation = Services.operation.begin({ message: \"Loading page '\" + pageName + \"'...\" });\r\n\r\n        const clientPage = await this.getClientPageAsync(pageName, curOperation);\r\n\r\n        if (clientPage && !clientPage.isLoded)\r\n            await this.loadClientPageAsync(clientPage, curOperation);\r\n\r\n        curOperation.end();\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    private async include(src: string) {\r\n        const curStruct = await Http.getJsonAsync<IAppStructure>(src);\r\n\r\n        if (curStruct) {\r\n\r\n            if (curStruct.include) {\r\n                for (let file of curStruct.include)\r\n                    await this.include(file);\r\n            }\r\n\r\n            if (curStruct.components) {\r\n                for (const key in curStruct.components)\r\n                    this._struture.components[key] = curStruct.components[key];\r\n            }\r\n\r\n            if (curStruct.pages) {\r\n                for (const key in curStruct.pages)\r\n                    this._struture.pages[key] = curStruct.pages[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    private async loadAppStructureAsync(operation?: IOperation): Promise<void> {\r\n\r\n        if (!this._struture) {\r\n            this._struture = {\r\n                components: {},\r\n                pages: {},\r\n            };\r\n            await this.include(\"~/app.json\");\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private async loadClientPageAsync(clientPage: IClientPage, operation?: IOperation): Promise<void> {\r\n\r\n        const loaders: ILoader[] = [];\r\n\r\n        clientPage.isLoded = true;\r\n\r\n        if (clientPage.scripts)\r\n            clientPage.scripts.forEach(a => loaders.push(new ScriptLoader(a)));\r\n\r\n        if (clientPage.styles)\r\n            clientPage.styles.forEach(a => loaders.push(new StyleLoader(a)));\r\n\r\n        await Promise.all(linq(loaders).select(a => a.loadAsync(operation)).toArray());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private async getClientPageAsync(name: string, operation?: IOperation): Promise<IClientPage> {\r\n\r\n        await this.loadAppStructureAsync(operation);\r\n\r\n        const result: IClientPage = {};\r\n\r\n        const pageInfo = this._struture.pages[name];\r\n\r\n        result.styles = [];\r\n        result.scripts = [];\r\n        result.action = pageInfo.action;\r\n        result.url = pageInfo.url;\r\n\r\n        this.includeClientPage(result, pageInfo.include);\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private includeClientPage(clientPage: IClientPage, include: IAppInclude) {\r\n\r\n        if (!include)\r\n            return;\r\n\r\n        if (include.components)\r\n            include.components.forEach(a => this.includeClientPage(clientPage, this._struture.components[a].include));\r\n\r\n        if (include.styles)\r\n            include.styles.forEach(a => {\r\n                if (clientPage.styles.indexOf(a) == -1)\r\n                    clientPage.styles.push(a);\r\n            });\r\n\r\n        if (include.scripts)\r\n            include.scripts.forEach(a => {\r\n                if (clientPage.scripts.indexOf(a) == -1)\r\n                    clientPage.scripts.push(a);\r\n            });\r\n    }\r\n}","﻿import { XHRHttpClient, Services, IApplication, IAppArgs } from \"./WebApp\";\r\n\r\nexport class GeoPlotApplication implements IApplication<IAppArgs> {\r\n\r\n    handleError(source: any, error: any, message?: string) {\r\n\r\n    }\r\n\r\n    runAsync(args?: IAppArgs) {\r\n        Services.httpClient = new XHRHttpClient();\r\n        this.baseUrl = args.baseUrl;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    startupArgs: IAppArgs;\r\n\r\n    appName: string;\r\n\r\n    baseUrl: string;\r\n\r\n    isDev: boolean;\r\n\r\n    language: string;\r\n} ","﻿import { LinearGradient } from \"../Framework/Graphics\";\r\nimport { CombineIndicatorFunction, ConstIndicatorFunction, DoubleFactorFunction, SimpleFactorFunction, SimpleIndicatorFunction } from \"../Indicators\";\r\nimport { IDataSet } from \"../Types\";\r\nimport { Dictionary, divideNull, isNaNOrNull, round } from \"../WebApp\";\r\n\r\nexport interface IInfectionData {\r\n    totalPositive: number;\r\n    currentPositive: number;\r\n    totalDeath: number;\r\n    totalSevere: number;\r\n    totalHospedalized: number;\r\n    totalHealed: number;\r\n    toatlTests: number;\r\n    totalCaseTested: number;\r\n    historicDeaths: Dictionary<number>;\r\n    newICU: number;\r\n    totalAntigenicPositive: number;\r\n    totalAntigenicTests: number;\r\n    totalMolecularPositive: number;\r\n    totalMolecularTests: number;\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\n\r\nexport var InfectionDataSet: IDataSet<IInfectionData> = {\r\n\r\n    name: \"COVID-19\",\r\n    empty: {\r\n        currentPositive: undefined,\r\n        historicDeaths: { \"2015\": undefined, \"2016\": undefined, \"2017\": undefined, \"2018\": undefined, \"2019\": undefined, \"2020\": undefined },\r\n        toatlTests: undefined,\r\n        totalDeath: undefined,\r\n        totalHealed: undefined,\r\n        totalHospedalized: undefined,\r\n        totalPositive: undefined,\r\n        totalSevere: undefined,\r\n        totalCaseTested: undefined,\r\n        newICU: undefined,\r\n        totalAntigenicPositive: undefined,\r\n        totalAntigenicTests: undefined,\r\n        totalMolecularPositive: undefined,\r\n        totalMolecularTests: undefined,\r\n    },\r\n    indicators: [\r\n        {\r\n            id: \"totalPositive\",\r\n            name: $string(\"$(total-positive)\"),\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            validFor: [\"region\", \"country\", \"district\"],\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalPositive)\r\n        },\r\n        {\r\n            id: \"totalAntigenicPositive\",\r\n            name: $string(\"$(antigenic-positive)\"),\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            validFor: [\"region\", \"country\"],\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalAntigenicPositive)\r\n        },\r\n        {\r\n            id: \"totalMolecularPositive\",\r\n            name: $string(\"$(molecular-positive)\"),\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            validFor: [\"region\", \"country\"],\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalMolecularPositive)\r\n        },\r\n        {\r\n            id: \"currentPositive\",\r\n            name: $string(\"$(current-positive)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#e91e63\",\r\n            colorDark: \"#880e4f\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.currentPositive)\r\n        },\r\n        {\r\n            id: \"totalDeath\",\r\n            name: $string(\"$(death)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalDeath)\r\n        },\r\n        {\r\n            id: \"totalSevere\",\r\n            name: $string(\"$(severe)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#ff9800\",\r\n            colorDark: \"#e65100\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalSevere)\r\n        },\r\n        {\r\n            id: \"newICU\",\r\n            name: $string(\"$(newICU)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#ff9800\",\r\n            colorDark: \"#e65100\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.newICU)\r\n        },\r\n        {\r\n            id: \"totalHospedalized\",\r\n            name: $string(\"$(hospedalized)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#fdd835\",\r\n            colorDark: \"#fbc02d\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalHospedalized)\r\n        },\r\n        {\r\n            id: \"totalHealed\",\r\n            name: $string(\"$(healed)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#4caf50\",\r\n            colorDark: \"#1b5e20\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalHealed)\r\n        },\r\n        {\r\n            id: \"toatlTests\",\r\n            name: $string(\"$(tested)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#03a9f4\",\r\n            colorDark: \"#01579b\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.toatlTests)\r\n        },\r\n        {\r\n            id: \"totalCaseTested\",\r\n            name: $string(\"$(caseTested)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#03a9f4\",\r\n            colorDark: \"#01579b\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalCaseTested)\r\n        },\r\n        {\r\n            id: \"totalMolecularTests\",\r\n            name: $string(\"$(molecularTests)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#03a9f4\",\r\n            colorDark: \"#01579b\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalMolecularTests)\r\n        },\r\n        {\r\n            id: \"totalAntigenicTests\",\r\n            name: $string(\"$(antigenicTests)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            colorLight: \"#03a9f4\",\r\n            colorDark: \"#01579b\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a => a.totalAntigenicTests)\r\n        },\r\n        {\r\n            id: \"surface\",\r\n            name: $string(\"$(surface) ($(geo))\"),\r\n            validFor: [\"region\", \"district\"],\r\n            colorLight: \"#777\",\r\n            colorDark: \"#222\",\r\n            showInFavorites: false,\r\n            compute: new ConstIndicatorFunction((v, a) => round(a.surface, 0))\r\n        },\r\n        {\r\n            id: \"density\",\r\n            name: $string(\"$(density) ($(geo))\"),\r\n            validFor: [\"region\", \"district\"],\r\n            colorLight: \"#777\",\r\n            colorDark: \"#222\",\r\n            showInFavorites: false,\r\n            compute: new ConstIndicatorFunction((v, a) => round(a.demography.total / a.surface, 0))\r\n        },\r\n\r\n        {\r\n            id: \"death2020\",\r\n            name: $string(\"$(total-death) +60 (2020)*\"),\r\n            validFor: [\"details\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a =>\r\n                a.historicDeaths ? a.historicDeaths[\"2020\"] : undefined)\r\n        },\r\n        {\r\n            id: \"death2019\",\r\n            name: $string(\"$(total-death) +60 (2019)\"),\r\n            validFor: [\"region\", \"district\", \"details\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: true,\r\n            compute: new SimpleIndicatorFunction(a =>\r\n                a.historicDeaths ? a.historicDeaths[\"2019\"] : undefined)\r\n        },\r\n        {\r\n            id: \"death2018\",\r\n            name: $string(\"$(total-death) +60 (2018)\"),\r\n            validFor: [\"region\", \"district\", \"details\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: false,\r\n            compute: new SimpleIndicatorFunction(a =>\r\n                a.historicDeaths ? a.historicDeaths[\"2018\"] : undefined)\r\n        },\r\n        {\r\n            id: \"death2017\",\r\n            name: $string(\"$(total-death) +60 (2017)\"),\r\n            validFor: [\"region\", \"district\", \"details\"],\r\n            colorLight: \"#9c27b0\",\r\n            colorDark: \"#4a148c\",\r\n            showInFavorites: false,\r\n            compute: new SimpleIndicatorFunction(a =>\r\n                a.historicDeaths ? a.historicDeaths[\"2017\"] : undefined)\r\n        },\r\n        {\r\n            id: \"death-diff-2020-2019\",\r\n            name: $string(\"DIff. decessi 2020-19\"),\r\n            validFor: [\"details\"],\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            gradient: new LinearGradient(\"#00c853\", \"#bdbdbd\", \"#ff1744\"),\r\n            canBeNegative: true,\r\n            compute: new CombineIndicatorFunction({\r\n                death2019: new SimpleIndicatorFunction(a => a.historicDeaths[2019]),\r\n                death2020: new SimpleIndicatorFunction(a => a.historicDeaths[2020]),\r\n            }, values => isNaNOrNull(values.death2020) || isNaNOrNull(values.death2019) ? undefined : (values.death2020 - values.death2019))\r\n        },\r\n        {\r\n            id: \"population\",\r\n            name: $string(\"$(population) ($(geo))\"),\r\n            validFor: [\"region\", \"district\", \"details\", \"country\"],\r\n            colorLight: \"#777\",\r\n            colorDark: \"#222\",\r\n            showInFavorites: false,\r\n            compute: new ConstIndicatorFunction((v, a) => a.demography.total)\r\n        },\r\n        {\r\n            id: \"populationOld\",\r\n            name: $string(\"$(population) +65 ($(geo))\"),\r\n            validFor: [\"region\", \"district\", \"country\"],\r\n            colorLight: \"#777\",\r\n            colorDark: \"#222\",\r\n            showInFavorites: false,\r\n            compute: new ConstIndicatorFunction((v, a) => a.demography.over65)\r\n        },\r\n\r\n        /*,\r\n        {\r\n            id: \"extimated-death\",\r\n            name: $string(\"Morti stimati\"),\r\n            validFor: [\"country\"],\r\n            colorLight: \"#f44336\",\r\n            colorDark: \"#b71c1c\",\r\n            compute: new CombineIndicatorFunction({\r\n                totalPositive: new SimpleIndicatorFunction(a => a.totalPositive),\r\n                toatlTests: new SimpleIndicatorFunction(a => a.toatlTests),\r\n                dailyDeath: new ConstIndicatorFunction((v, a) => 1450)\r\n            }, values => Math.round((values.totalPositive / values.toatlTests) * values.dailyDeath))\r\n        },\r\n        {\r\n            id: \"healed-death\",\r\n            name: $string(\"$(death) + $(healed)\"),\r\n            validFor: [\"country\", \"region\"],\r\n            colorLight: \"#4caf50\",\r\n            colorDark: \"#1b5e20\",\r\n            compute: new CombineIndicatorFunction({\r\n                totalHealed: new SimpleIndicatorFunction(a => a.totalHealed),\r\n                totalDeath: new SimpleIndicatorFunction(a => a.totalDeath)\r\n            }, values => values.totalHealed + values.totalDeath)\r\n        }*/\r\n    ],\r\n    factors: [\r\n        {\r\n            id: \"none\",\r\n            name: $string(\"$(none)\"),\r\n            compute: new SimpleFactorFunction((i, v, a) => i),\r\n            format: a => formatNumber(a),\r\n            reference: (v, a) => \"N/A\",\r\n            description: $string(\"[indicator]\")\r\n        },\r\n        {\r\n            id: \"population\",\r\n            validFor: [\"region\", \"country\", \"details\", \"district\"],\r\n            name: $string(\"$(population)\"),\r\n            compute: new SimpleFactorFunction((i, v, a) => divideNull(i, a.demography.total) * 100000),\r\n            format: a => formatNumber(a),\r\n            reference: (v, a) => formatNumber(a.demography.total),\r\n            description: $string(\"[indicator] $(every-100k)\")\r\n        },\r\n        {\r\n            id: \"populationOld\",\r\n            validFor: [\"region\", \"country\", \"district\"],\r\n            name: $string(\"$(population) +65\"),\r\n            compute: new SimpleFactorFunction((i, v, a) => divideNull(i, a.demography.over65) * 100000),\r\n            format: a => formatNumber(round(a, 1)),\r\n            reference: (v, a) => formatNumber(a.demography.over65),\r\n            description: $string(\"[indicator] $(every-100k) +65\")\r\n        },\r\n        {\r\n            id: \"density\",\r\n            name: $string(\"$(density)\"),\r\n            validFor: [\"region\", \"country\", \"district\"],\r\n            compute: new SimpleFactorFunction((i, v, a) => divideNull(i, divideNull(a.demography.total, a.surface)) * 100000),\r\n            format: a => formatNumber(round(a, 1)),\r\n            reference: (v, a) => formatNumber(round(a.demography.total / a.surface, 1)),\r\n            description: $string(\"[indicator] $(over-density)\")\r\n        },\r\n        {\r\n            id: \"totalPositive\",\r\n            name: $string(\"$(total-positive)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.totalPositive)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.totalPositive),\r\n            description: $string(\"% [indicator] $(over-total-positive)\")\r\n        },\r\n        {\r\n            id: \"currentPositive\",\r\n            name: $string(\"$(current-positive)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.currentPositive)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.totalPositive),\r\n            description: $string(\"% [indicator] $(over-current-positive)\")\r\n        },\r\n        {\r\n            id: \"severe\",\r\n            name: $string(\"$(severe)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.totalSevere)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.totalSevere),\r\n            description: $string(\"% [indicator] $(over-severe)\")\r\n        },\r\n        {\r\n            id: \"test\",\r\n            name: $string(\"$(tested)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.toatlTests)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.toatlTests),\r\n            description: $string(\"% [indicator] $(over-tested)\")\r\n        },\r\n        {\r\n            id: \"caseTested\",\r\n            name: $string(\"$(caseTested)\"),\r\n            validFor: [\"region\", \"country\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.totalCaseTested)),\r\n            format: a => round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.totalCaseTested),\r\n            description: $string(\"% [indicator] $(over-case-tested)\")\r\n        },\r\n        {\r\n            id: \"death2019Perc\",\r\n            name: $string(\"$(total-death) +60 (2019)\"),\r\n            validFor: [\"details\"],\r\n            compute: new DoubleFactorFunction((i, f) => isNaNOrNull(i) ? undefined : (i / f) * 100, new SimpleIndicatorFunction(v => v.historicDeaths[2019])),\r\n            format: a => isNaNOrNull(a) ? \"N/A\" : (a > 0 ? \"+\" : \"\") + round(a, 1) + \"%\",\r\n            reference: (v, a) => formatNumber(v.historicDeaths[2019]),\r\n            description: $string(\"% [indicator] $(over-tested)\")\r\n        },\r\n    ]\r\n};","﻿import { IDayAreaDataSet, IDayAreaGroupItem } from \"../Types\";\r\nimport { linq, Linq } from \"../WebApp\";\r\n\r\nexport class RangeDayAreaDataSet<TData>  {\r\n\r\n    protected _days: IDayAreaGroupItem<TData>[];\r\n\r\n    constructor(data: IDayAreaDataSet<TData>) {\r\n        this._days = data.days;\r\n    }\r\n\r\n    get days(): Linq<IDayAreaGroupItem<TData>> {\r\n        const startIndex = this.startDay ?? 0;\r\n        const endIndex = this.endDay ?? this._days.length - 1;\r\n        return linq(this._days).skip(startIndex).take(endIndex - startIndex + 1);\r\n    }\r\n\r\n    get(index: number | string): IDayAreaGroupItem<TData> {\r\n        index = typeof index == \"string\" ? parseInt(index) : index;\r\n        return this._days[(this.startDay ?? 0) + index];\r\n    }\r\n\r\n    get count(): number {\r\n        const startIndex = this.startDay ?? 0;\r\n        const endIndex = this.endDay ?? this._days.length - 1;\r\n        return endIndex - startIndex + 1;\r\n    }\r\n\r\n    startDay?: number;\r\n    endDay?: number;\r\n}","﻿import { GeoAreaType } from \"../Types\";\r\n\r\nexport type ViewMode = \"district\" | \"region\" | \"country\" | \"details\";\r\n\r\ninterface IViewModeData {\r\n    label: { singular: string, plural: string };\r\n    mapGroup: string;\r\n    areaType: GeoAreaType;\r\n    validateId: (id: string) => boolean;\r\n    tab: string;\r\n}\r\n\r\nexport var ViewModes: { [K in ViewMode]: IViewModeData } = {\r\n    \"district\": {\r\n        label: {\r\n            singular: $string(\"$(district)\"),\r\n            plural: $string(\"$(districts)\")\r\n        },\r\n        mapGroup: \"group_district\",\r\n        tab: \"districtTab\",\r\n        areaType: GeoAreaType.District,\r\n        validateId: (id: string) => id[0].toLowerCase() == 'd'\r\n    },\r\n    \"region\": {\r\n        label: {\r\n            singular: $string(\"$(region)\"),\r\n            plural: $string(\"$(regions)\")\r\n        },\r\n        mapGroup: \"group_region\",\r\n        tab: \"regionTab\",\r\n        areaType: GeoAreaType.Region,\r\n        validateId: (id: string) => id[0].toLowerCase() == 'r'\r\n    },\r\n    \"country\": {\r\n        label: {\r\n            singular: $string(\"$(italian)\"),\r\n            plural: $string(\"$(italians)\")\r\n        },\r\n        mapGroup: \"group_country\",\r\n        tab: \"italyTab\",\r\n        areaType: GeoAreaType.Country,\r\n        validateId: (id: string) => id.toLowerCase() == 'it'\r\n    },\r\n    'details': {\r\n        label: {\r\n            singular: $string(\"$(area-details)\"),\r\n            plural: $string(\"$(area-details)\")\r\n        },\r\n        mapGroup: \"group_municipality\",\r\n        tab: \"detailsTab\",\r\n        areaType: GeoAreaType.Municipality,\r\n        validateId: (id: string) => id[0].toLowerCase() == 'm'\r\n    }\r\n}","﻿interface KnockoutBindingHandlers {\r\n    attach: KnockoutBindingHandler;\r\n}\r\n\r\ntype AttachFunction = (element: HTMLElement) => void;\r\n\r\nif (window[\"ko\"]) {\r\n\r\n    ko.bindingHandlers.attach = {\r\n        init: (element, valueAccessor, allBindings, viewModel) => {\r\n\r\n            let func = <AttachFunction|boolean>ko.unwrap(valueAccessor());\r\n\r\n            if (func === true || func == undefined)\r\n                func = <AttachFunction>viewModel[\"attachNode\"];\r\n\r\n            if (typeof func != \"function\")\r\n                throw \"Supplied argument is not a function\";\r\n\r\n            setTimeout(() =>\r\n                (<AttachFunction>func).call(viewModel, element));\r\n        }\r\n    }\r\n}","﻿import { linq } from \"../WebApp\";\r\n\r\ntype Color = string;\r\n\r\nexport interface IGeometry {\r\n\r\n}\r\n\r\nexport interface IRect2D extends IGeometry {\r\n    x: number;\r\n    y: number\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPoint2D extends IGeometry {\r\n    x: number;\r\n    y: number\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPoly2D extends IGeometry {\r\n    points: IPoint2D[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDrawGeometry<T extends IGeometry> {\r\n    id: string;\r\n    geometry: T;\r\n    fillColor?: Color;\r\n    strokeColor?: Color;\r\n    strokeSize?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IGradientColor {\r\n    value: string | RgbColor;\r\n    position?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class LinearGradient {\r\n\r\n    constructor(...values: (string | RgbColor)[]) {\r\n        if (values.length > 0) {\r\n\r\n            if (typeof values[0] == \"string\")\r\n                this.colors = linq(values).select(a => new RgbColor(<string>a)).toArray();\r\n            else\r\n                this.colors = <RgbColor[]>values;\r\n        }\r\n        else\r\n            this.colors = [];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    valueAt(pos: number): RgbColor {\r\n\r\n        if (pos < 0)\r\n            return this.colors[0];\r\n        if (pos > 1)\r\n            this.colors[this.colors.length - 1];\r\n\r\n        const stepSize = 1 / (this.colors.length - 1);\r\n        const minX = Math.floor(pos / stepSize);\r\n        const maxX = Math.ceil(pos / stepSize);\r\n        const minOfs = (pos - minX * stepSize) / stepSize;\r\n\r\n        const c1 = this.colors[minX];\r\n        const c2 = this.colors[maxX];\r\n\r\n        const c3 = new RgbColor();\r\n        c3.r = c1.r + (c2.r - c1.r) * minOfs;\r\n        c3.g = c1.g + (c2.g - c1.g) * minOfs;\r\n        c3.b = c1.b + (c2.b - c1.b) * minOfs;\r\n        return c3;\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    colors: RgbColor[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class RgbColor {\r\n\r\n    constructor(value?: string) {\r\n        if (value)\r\n            this.fromHex(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    fromHex(value: string) {\r\n        if (value.length == 4) {\r\n            this.r = parseInt(\"0x\" + value[1] + value[1]) / 255;\r\n            this.g = parseInt(\"0x\" + value[2] + value[2]) / 255;\r\n            this.b = parseInt(\"0x\" + value[3] + value[3]) / 255;\r\n        }\r\n        else {\r\n            this.r = parseInt(\"0x\" + value[1] + value[2]) / 255;\r\n            this.g = parseInt(\"0x\" + value[3] + value[4]) / 255;\r\n            this.b = parseInt(\"0x\" + value[5] + value[6]) / 255;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toString() {\r\n        function toHex(value: number) {\r\n            let res = Math.round(value * 255).toString(16);\r\n            if (res.length == 1)\r\n                return \"0\" + res;\r\n            return res;\r\n        }\r\n        return \"#\" + toHex(this.r) + toHex(this.g) + toHex(this.b);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    r: number = 0;\r\n    g: number = 0;\r\n    b: number = 0;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Graphics {\r\n\r\n    _svg: SVGSVGElement;\r\n\r\n    constructor(svg: SVGSVGElement) {\r\n\r\n        this._svg = svg;\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setViewPort(minX: number, minY: number, maxX: number, maxY: number) {\r\n        this._svg.viewBox.baseVal.x = minX;\r\n        this._svg.viewBox.baseVal.y = minY;\r\n        this._svg.viewBox.baseVal.width = maxX - minX;\r\n        this._svg.viewBox.baseVal.height = maxY - minY;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    drawPoly(poly: IDrawGeometry<IPoly2D>) {\r\n\r\n        var polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\r\n        polygon.style.fill = poly.fillColor;\r\n        polygon.style.stroke = poly.strokeColor;\r\n        polygon.style.strokeWidth = poly.strokeSize + \"%\";\r\n        polygon.id = poly.id;\r\n\r\n        for (let i = 0; i < poly.geometry.points.length; i++) {\r\n            let point = this._svg.createSVGPoint();\r\n            point.x = poly.geometry.points[i].x;\r\n            point.y = poly.geometry.points[i].y\r\n            polygon.points.appendItem(point);\r\n        }\r\n\r\n        this._svg.appendChild(polygon);\r\n    }\r\n}","﻿if (!HTMLCanvasElement.prototype.toBlob) {\r\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\r\n        value: function (callback, type, quality) {\r\n            let canvas = this;\r\n            setTimeout(() => {\r\n                const binStr = atob(canvas.toDataURL(type, quality).split(',')[1]);\r\n                const len = binStr.length;\r\n                const arr = new Uint8Array(len);\r\n\r\n                for (let i = 0; i < len; i++)\r\n                    arr[i] = binStr.charCodeAt(i);\r\n\r\n                callback(new Blob([arr], { type: type || 'image/png' }));\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function capitalizeFirst(value: string) {\r\n    return value.substr(0, 1).toUpperCase() + value.substr(1);\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nexport function expandCollapse(elment: HTMLElement) {\r\n    let container = elment.parentElement;\r\n    let content = <HTMLElement>container.querySelector(\".section-content\");\r\n    if (container.classList.contains(\"closed\")) {\r\n        content.style.removeProperty(\"display\");\r\n        container.classList.remove(\"closed\");\r\n    }\r\n    else {\r\n        container.classList.add(\"closed\");\r\n        setTimeout(() => content.style.display = \"none\", 300);\r\n    }\r\n}\r\n\r\ndeclare global {\r\n\r\n    const $language: string;\r\n\r\n    function formatNumber(value: number, emptyValue?: string): string;\r\n\r\n    function $string(format: string): string;\r\n}\r\n","﻿import { RangeDayAreaDataSet } from \"./Data/RangeDayAreaDataSet\";\r\nimport { IDataSet, IDayAreaSerieSource, IFactorFunction, IFunctionPoint, IGeoArea, IGeoAreaSet, IIndicatorFunction } from \"./Types\";\r\nimport { DictionaryOf, IDictionary, linq, sumNull } from \"./WebApp\";\r\n\r\nexport class ConstIndicatorFunction<TData> implements IIndicatorFunction<TData> {\r\n    private readonly _value: (value: TData, area?: IGeoArea) => number;\r\n\r\n    constructor(value: (value: TData, area?: IGeoArea) => number) {\r\n        this._value = value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData, delta: TData, exMain: TData[], exDelta: TData[], area: IGeoArea): number {\r\n        let result = this._value(main, area);\r\n        if (exMain) {\r\n            for (var i in exMain)\r\n                result = sumNull(result, -this.value(exMain[i], exDelta[i], null, null, area));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SimpleIndicatorFunction<TData> implements IIndicatorFunction<TData> {\r\n    private readonly _value: (value: TData, area?: IGeoArea) => number;\r\n\r\n    constructor(value: (value: TData, area?: IGeoArea) => number) {\r\n        this._value = value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData, delta: TData, exMain: TData[], exDelta: TData[], area: IGeoArea): number {\r\n        var result = this._value(main, area);\r\n        if (delta)\r\n            result -= this._value(delta, area);\r\n        if (exMain) {\r\n            for (var i in exMain)\r\n                result -= this.value(exMain[i], exDelta[i], null, null, area);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class CombineIndicatorFunction<TData, TDic extends IDictionary<IIndicatorFunction<TData>>> implements IIndicatorFunction<TData> {\r\n\r\n    private readonly _value: (values: DictionaryOf<TDic, number>) => number\r\n    private readonly _indicators: TDic;\r\n\r\n    constructor(indicators: TDic, value: (values: DictionaryOf<TDic, number>) => number) {\r\n        this._value = value;\r\n        this._indicators = indicators;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData, delta: TData, exMain: TData[], exDelta: TData[], area: IGeoArea): number {\r\n\r\n        const value: DictionaryOf<TDic, number> = <any>{};\r\n\r\n        for (var key in this._indicators)\r\n            value[key] = this._indicators[key].value(main, delta, exMain, exDelta, area);\r\n\r\n        return this._value(value);\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SimpleFactorFunction<TData> implements IFactorFunction<TData> {\r\n    private readonly _value: (indicator: number, value?: TData, area?: IGeoArea) => number;\r\n\r\n    constructor(value: (indicator: number, value?: TData, area?: IGeoArea) => number) {\r\n        this._value = value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData[], delta: TData[], exMain: TData[][], exDelta: TData[][], area: IGeoArea, indicator: IIndicatorFunction<TData>): number {\r\n        let curValue: number;\r\n        for (var i in main)\r\n            curValue = sumNull(curValue, indicator.value(main[i], delta[i], exMain[i], exDelta[i], area));\r\n        return this._value(curValue, main[0], area);\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class DoubleFactorFunction<TData> implements IFactorFunction<TData> {\r\n    private readonly _value: (indicator: number, factor: number) => number;\r\n    private readonly _factor: IIndicatorFunction<TData>;\r\n\r\n    constructor(value: (indicator: number, factor: number) => number, factor: IIndicatorFunction<TData>) {\r\n        this._value = value;\r\n        this._factor = factor;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(main: TData[], delta: TData[], exMain: TData[][], exDelta: TData[][], area: IGeoArea, indicator: IIndicatorFunction<TData>): number {\r\n        let curValue: number;\r\n        let curFactor: number;\r\n        for (var i in main) {\r\n            curValue = sumNull(curValue, indicator.value(main[i], delta[i], exMain[i], exDelta[i], area));\r\n            curFactor = sumNull(curFactor, this._factor.value(main[i], delta[i], exMain[i], exDelta[i], area));\r\n        }\r\n        return this._value(curValue, curFactor);\r\n    }\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\ninterface IComputeIndicatorOptions<TData> {\r\n    dayNumber: number;\r\n    areaOrId: string | IGeoArea;\r\n    indicatorId: keyof TData | string;\r\n    isDayDelta?: boolean;\r\n    execludedAreas?: string[];\r\n}\r\n\r\ninterface IComputeFactorOptions<TData> {\r\n    factorId: string;\r\n    indicatorId: string;\r\n    dayNumberOrGroup: number | number[];\r\n    areaOrId: string | IGeoArea;\r\n    isDayDelta?: boolean;\r\n    execludedAreas?: string[];\r\n}\r\n\r\n\r\nexport class IndicatorCalculator<TData> {\r\n\r\n    constructor(data: RangeDayAreaDataSet<TData>, dataSet: IDataSet<TData>, geo: IGeoAreaSet) {\r\n        this.data = data;\r\n        this.dataSet = dataSet;\r\n        this.geo = geo;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getDataAtDay(number: number, curAreaId: string): TData {\r\n        if (number < 0)\r\n            return undefined;\r\n        const day = this.data.get(number);\r\n        if (day) {\r\n            const data = day.values[curAreaId]\r\n            if (data)\r\n                return data;\r\n        }\r\n        return this.dataSet.empty;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getFactorValue(options: IComputeFactorOptions<TData>) {\r\n\r\n        const areaId = (typeof options.areaOrId == \"string\" ? options.areaOrId : options.areaOrId.id).toLowerCase();\r\n\r\n        let dayGroup: number[];\r\n        if (!Array.isArray(options.dayNumberOrGroup))\r\n            dayGroup = [options.dayNumberOrGroup];\r\n        else\r\n            dayGroup = options.dayNumberOrGroup;\r\n\r\n        let main: TData[] = [];\r\n        let delta: TData[] = [];\r\n        let exMain: TData[][] = [];\r\n        let exDelta: TData[][] = [];\r\n\r\n        for (var dayNumber of dayGroup) {\r\n\r\n            main.push(this.getDataAtDay(dayNumber, areaId));\r\n\r\n            if (options.isDayDelta)\r\n                delta.push(this.getDataAtDay(dayNumber - 1, areaId));\r\n\r\n            if (options.execludedAreas) {\r\n                var curExMain = [];\r\n                var curExDelta = [];\r\n                for (var exAreaId of options.execludedAreas) {\r\n                    curExMain.push(this.getDataAtDay(dayNumber, exAreaId.toLowerCase()));\r\n                    if (options.isDayDelta)\r\n                        curExDelta.push(this.getDataAtDay(dayNumber - 1, exAreaId.toLowerCase()));\r\n                }\r\n                exMain.push(curExMain)\r\n                exDelta.push(curExDelta)\r\n            }\r\n        }\r\n\r\n        const factor = linq(this.dataSet.factors).first(a => a.id == options.factorId);\r\n        const indicator = linq(this.dataSet.indicators).first(a => a.id == options.indicatorId);\r\n\r\n        return factor.compute.value(main, delta, exMain, exDelta, this.geo.areas[areaId], indicator.compute);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getIndicatorValue(options: IComputeIndicatorOptions<TData>) {\r\n\r\n        const areaId = (typeof options.areaOrId == \"string\" ? options.areaOrId : options.areaOrId.id).toLowerCase();\r\n\r\n        const indicator = linq(this.dataSet.indicators).first(a => a.id == options.indicatorId);\r\n\r\n        let main = this.getDataAtDay(options.dayNumber, areaId);\r\n        let delta: TData;\r\n        let exMain: TData[];\r\n        let exDelta: TData[];\r\n\r\n        if (options.isDayDelta)\r\n            delta = this.getDataAtDay(options.dayNumber - 1, areaId);\r\n\r\n        if (options.execludedAreas) {\r\n            exMain = [];\r\n            exDelta = [];\r\n            for (var exAreaId of options.execludedAreas) {\r\n                exMain.push(this.getDataAtDay(options.dayNumber, exAreaId.toLowerCase()));\r\n                if (options.isDayDelta)\r\n                    exDelta.push(this.getDataAtDay(options.dayNumber - 1, exAreaId.toLowerCase()));\r\n            };\r\n        }\r\n\r\n        return indicator.compute.value(main, delta, exMain, exDelta, this.geo.areas[areaId]);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getSerie<TX extends Date | number>(source: IDayAreaSerieSource): IFunctionPoint[] {\r\n\r\n        const result: IFunctionPoint[] = [];\r\n\r\n        let index = source.startDay + (source.isDelta ? 1 : 0);\r\n\r\n        let lastItem: IFunctionPoint;\r\n\r\n        if (source.groupSize > 1) {\r\n\r\n            let count = source.groupSize;\r\n            let group: number[] = [];\r\n            this.data.days.skip(index).foreach((day) => {\r\n                group.push(index);\r\n                count--;\r\n                if (count == 0) {\r\n                    const item: IFunctionPoint = {\r\n                        x: (source.xAxis == \"date\" ? new Date(day.date) : index),\r\n                        y: this.getFactorValue({\r\n                            dayNumberOrGroup: source.isDelta ? group : index,\r\n                            areaOrId: source.areaId,\r\n                            factorId: source.factorId,\r\n                            indicatorId: source.indicatorId,\r\n                            execludedAreas: source.exeludedAreaIds,\r\n                            isDayDelta: source.isDelta\r\n                        })\r\n                    };\r\n                    result.push(<any>item);\r\n                    count = source.groupSize;\r\n                    group = [];\r\n                }\r\n                index++;\r\n            });\r\n        }\r\n        else {\r\n\r\n            this.data.days.skip(index).foreach((day) => {\r\n\r\n                const item: IFunctionPoint = {\r\n                    x: (source.xAxis == \"date\" ? new Date(day.date) : index),\r\n                    y: this.getFactorValue({\r\n                        dayNumberOrGroup: index,\r\n                        areaOrId: source.areaId,\r\n                        factorId: source.factorId,\r\n                        indicatorId: source.indicatorId,\r\n                        execludedAreas: source.exeludedAreaIds,\r\n                        isDayDelta: source.isDelta\r\n                    })\r\n                };\r\n\r\n                result.push(<any>item);\r\n                index++;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n    data: RangeDayAreaDataSet<TData>;\r\n    dataSet: IDataSet<TData>;\r\n    geo: IGeoAreaSet;\r\n}","﻿import { addClass, centerElement, Dictionary, DictionaryOf, linq, removeClass, safeCall } from \"../WebApp\";\r\n\r\ninterface IShowTipOptions {\r\n    onClose?: () => void;\r\n    timeout?: number;\r\n    override?: boolean;\r\n    force?: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IViewActionTip {\r\n    html: string;\r\n    featureName: string;\r\n    elementSelector?: string;\r\n    showAfter: number;\r\n    showAction?: () => void;\r\n    order: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class TipViewModel {\r\n\r\n    private _closeTimeoutId: number;\r\n    private _element: HTMLElement;\r\n    private _closeAfter: number;\r\n\r\n    constructor(value: IViewActionTip, closeAfter?: number) {\r\n        this.value = value;\r\n        this._closeAfter = closeAfter;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    dontShowAgain() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onActionExecuted() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    executeAction() {\r\n        if (this.value.showAction)\r\n            this.value.showAction();\r\n        setTimeout(() => this.startPulse());\r\n        this.onActionExecuted();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    startPulse() {\r\n        this._element = document.querySelector(this.value.elementSelector);\r\n        if (!this._element)\r\n            return;\r\n        let relY = centerElement(this._element);\r\n\r\n        addClass(this._element, \"pulse\")\r\n\r\n        let tipElement = document.querySelector(\".tip-container\");\r\n        if (relY < (tipElement.clientTop + tipElement.clientHeight))\r\n            this.isTransparent(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    stopPulse() {\r\n\r\n        if (!this._element)\r\n            return;\r\n        removeClass(this._element, \"pulse\");\r\n        this.isTransparent(false);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    next() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    understood() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onClose() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    close() {\r\n        clearTimeout(this._closeTimeoutId);\r\n        this.stopPulse();\r\n        this.isVisible(false);\r\n        this.onClose();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    show() {\r\n        if (this._closeTimeoutId)\r\n            clearTimeout(this._closeTimeoutId);\r\n        this.isVisible(true);\r\n        if (this._closeAfter)\r\n            this._closeTimeoutId = setTimeout(() => this.close(), this._closeAfter) as any;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value: IViewActionTip;\r\n    isVisible = ko.observable(false);\r\n    isTransparent = ko.observable(false);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface ITipPreferences<TActions extends Dictionary<number>> {\r\n    showTips: boolean\r\n    actions: TActions;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class TipManager<TActions extends Dictionary<number>> {\r\n\r\n    private _getPreferences: () => ITipPreferences<TActions>;\r\n\r\n    private _tips: DictionaryOf<TActions, IViewActionTip>;\r\n\r\n    constructor(tips: DictionaryOf<TActions, IViewActionTip>, getPreferences: () => ITipPreferences<TActions>, savePreferences: () => void) {\r\n\r\n        this._getPreferences = getPreferences;\r\n        this._tips = tips;\r\n        this.savePreferences = savePreferences;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get preferences(): ITipPreferences<TActions> {\r\n        return this._getPreferences();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    savePreferences() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    markAction(actionId: keyof TActions, label?: string) {\r\n\r\n        this.preferences.actions[actionId]++;\r\n        this.savePreferences();\r\n\r\n        if (!window[\"gtag\"])\r\n            return;\r\n\r\n        safeCall(() => gtag(\"event\", actionId, {\r\n            event_category: \"GeoPlot\",\r\n            event_label: label,\r\n            value: this.preferences.actions[actionId]\r\n        }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected markTip(tipId: keyof TActions, action: string) {\r\n        if (!window[\"gtag\"])\r\n            return;\r\n\r\n        safeCall(() => gtag(\"event\", action, {\r\n            event_category: \"GeoPlot/Tip\",\r\n            event_label: tipId\r\n        }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    engageUser() {\r\n\r\n        if (this.preferences.showTips != undefined && !this.preferences.showTips)\r\n            return;\r\n\r\n        const nextTip = linq(this._tips).where(a => a.value.showAfter > 0 && this.preferences.actions[a.key] == 0).first();\r\n\r\n        if (!this.showTip(nextTip.key, {\r\n            onClose: () => this.engageUser(),\r\n            timeout: nextTip.value.showAfter,\r\n        })) {\r\n            this.engageUser();\r\n        }\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    showTip(tipId: keyof TActions, options?: IShowTipOptions) {\r\n\r\n        if (this.preferences.showTips != undefined && !this.preferences.showTips)\r\n            return false;\r\n\r\n        if ((!options || !options.override) && this.tip() && this.tip().isVisible())\r\n            return false;\r\n\r\n        if ((!options || !options.force) && this.preferences.actions[tipId])\r\n            return false;\r\n\r\n        const tip = this._tips[tipId];\r\n\r\n        const model = new TipViewModel(tip);\r\n\r\n        model.onActionExecuted = () => {\r\n            this.markTip(tipId, \"how\");\r\n        }\r\n\r\n        model.dontShowAgain = () => {\r\n            this.preferences.showTips = false;\r\n            this.savePreferences();\r\n            model.close();\r\n            this.markTip(tipId, \"dontShowAgain\");\r\n        }\r\n\r\n        model.understood = () => {\r\n            this.preferences.actions[tipId]++;\r\n            this.savePreferences();\r\n            model.close();\r\n            this.markTip(tipId, \"understood\");\r\n        };\r\n\r\n        model.onClose = () => {\r\n            //this.tip(null);\r\n            if (options && options.onClose)\r\n                options.onClose();\r\n        }\r\n\r\n        let nextTip = linq(this._tips).where(a => a.value.order > tip.order && this.preferences.actions[a.key] == 0).first();\r\n\r\n        if (nextTip) {\r\n            model.next = () => {\r\n                model.close();\r\n                this.preferences.actions[tipId]++;\r\n                this.showTip(nextTip.key);\r\n                this.markTip(tipId, \"next\");\r\n            }\r\n        }\r\n        else\r\n            model.next = null;\r\n\r\n        this.tip(model);\r\n\r\n        setTimeout(() => model.show(), options && options.timeout ? options.timeout * 1000 : 0);\r\n\r\n        return true;\r\n    }\r\n\r\n    tip = ko.observable<TipViewModel>();\r\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'meno di un secondo',\n    other: 'meno di {{count}} secondi'\n  },\n  xSeconds: {\n    one: 'un secondo',\n    other: '{{count}} secondi'\n  },\n  halfAMinute: 'alcuni secondi',\n  lessThanXMinutes: {\n    one: 'meno di un minuto',\n    other: 'meno di {{count}} minuti'\n  },\n  xMinutes: {\n    one: 'un minuto',\n    other: '{{count}} minuti'\n  },\n  aboutXHours: {\n    one: \"circa un'ora\",\n    other: 'circa {{count}} ore'\n  },\n  xHours: {\n    one: \"un'ora\",\n    other: '{{count}} ore'\n  },\n  xDays: {\n    one: 'un giorno',\n    other: '{{count}} giorni'\n  },\n  aboutXWeeks: {\n    one: 'circa una settimana',\n    other: 'circa {{count}} settimane'\n  },\n  xWeeks: {\n    one: 'una settimana',\n    other: '{{count}} settimane'\n  },\n  aboutXMonths: {\n    one: 'circa un mese',\n    other: 'circa {{count}} mesi'\n  },\n  xMonths: {\n    one: 'un mese',\n    other: '{{count}} mesi'\n  },\n  aboutXYears: {\n    one: 'circa un anno',\n    other: 'circa {{count}} anni'\n  },\n  xYears: {\n    one: 'un anno',\n    other: '{{count}} anni'\n  },\n  overXYears: {\n    one: 'più di un anno',\n    other: 'più di {{count}} anni'\n  },\n  almostXYears: {\n    one: 'quasi un anno',\n    other: 'quasi {{count}} anni'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'tra ' + result;\n    } else {\n      return result + ' fa';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE d MMMM y',\n  long: 'd MMMM y',\n  medium: 'd MMM y',\n  short: 'dd/MM/y'\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm'\n};\nvar dateTimeFormats = {\n  full: '{{date}} {{time}}',\n  long: '{{date}} {{time}}',\n  medium: '{{date}} {{time}}',\n  short: '{{date}} {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar weekdays = ['domenica', 'lunedì', 'martedì', 'mercoledì', 'giovedì', 'venerdì', 'sabato'];\n\nfunction lastWeek(day) {\n  switch (day) {\n    case 0:\n      return \"'domenica scorsa alle' p\";\n\n    default:\n      return \"'\" + weekdays[day] + \" scorso alle' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  return \"'\" + weekdays[day] + \" alle' p\";\n}\n\nfunction nextWeek(day) {\n  switch (day) {\n    case 0:\n      return \"'domenica prossima alle' p\";\n\n    default:\n      return \"'\" + weekdays[day] + \" prossimo alle' p\";\n  }\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'ieri alle' p\",\n  today: \"'oggi alle' p\",\n  tomorrow: \"'domani alle' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nexport default function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Italian locale.\n * @language Italian\n * @iso-639-2 ita\n * @author Alberto Restifo [@albertorestifo]{@link https://github.com/albertorestifo}\n * @author Giovanni Polimeni [@giofilo]{@link https://github.com/giofilo}\n * @author Vincenzo Carrese [@vin-car]{@link https://github.com/vin-car}\n */\n\nvar locale = {\n  code: 'it',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1\n    /* Monday */\n    ,\n    firstWeekContainsDate: 4\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['aC', 'dC'],\n  abbreviated: ['a.C.', 'd.C.'],\n  wide: ['avanti Cristo', 'dopo Cristo']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['T1', 'T2', 'T3', 'T4'],\n  wide: ['1º trimestre', '2º trimestre', '3º trimestre', '4º trimestre']\n};\nvar monthValues = {\n  narrow: ['G', 'F', 'M', 'A', 'M', 'G', 'L', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic'],\n  wide: ['gennaio', 'febbraio', 'marzo', 'aprile', 'maggio', 'giugno', 'luglio', 'agosto', 'settembre', 'ottobre', 'novembre', 'dicembre']\n};\nvar dayValues = {\n  narrow: ['D', 'L', 'M', 'M', 'G', 'V', 'S'],\n  short: ['dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab'],\n  abbreviated: ['dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab'],\n  wide: ['domenica', 'lunedì', 'martedì', 'mercoledì', 'giovedì', 'venerdì', 'sabato']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'm.',\n    pm: 'p.',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'mattina',\n    afternoon: 'pomeriggio',\n    evening: 'sera',\n    night: 'notte'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'mattina',\n    afternoon: 'pomeriggio',\n    evening: 'sera',\n    night: 'notte'\n  },\n  wide: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'mattina',\n    afternoon: 'pomeriggio',\n    evening: 'sera',\n    night: 'notte'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'm.',\n    pm: 'p.',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'di mattina',\n    afternoon: 'del pomeriggio',\n    evening: 'di sera',\n    night: 'di notte'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'di mattina',\n    afternoon: 'del pomeriggio',\n    evening: 'di sera',\n    night: 'di notte'\n  },\n  wide: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'mezzanotte',\n    noon: 'mezzogiorno',\n    morning: 'di mattina',\n    afternoon: 'del pomeriggio',\n    evening: 'di sera',\n    night: 'di notte'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber) {\n  var number = Number(dirtyNumber);\n  return number + 'º';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(º)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(aC|dC)/i,\n  abbreviated: /^(a\\.?\\s?C\\.?|a\\.?\\s?e\\.?\\s?v\\.?|d\\.?\\s?C\\.?|e\\.?\\s?v\\.?)/i,\n  wide: /^(avanti Cristo|avanti Era Volgare|dopo Cristo|Era Volgare)/i\n};\nvar parseEraPatterns = {\n  any: [/^a/i, /^(d|e)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^t[1234]/i,\n  wide: /^[1234](º)? trimestre/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[gfmalsond]/i,\n  abbreviated: /^(gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic)/i,\n  wide: /^(gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^g/i, /^f/i, /^m/i, /^a/i, /^m/i, /^g/i, /^l/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ge/i, /^f/i, /^mar/i, /^ap/i, /^mag/i, /^gi/i, /^l/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[dlmgvs]/i,\n  short: /^(do|lu|ma|me|gi|ve|sa)/i,\n  abbreviated: /^(dom|lun|mar|mer|gio|ven|sab)/i,\n  wide: /^(domenica|luned[i|ì]|marted[i|ì]|mercoled[i|ì]|gioved[i|ì]|venerd[i|ì]|sabato)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^g/i, /^v/i, /^s/i],\n  any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^g/i, /^v/i, /^s/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|m\\.|p|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,\n  any: /^([ap]\\.?\\s?m\\.?|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mezza/i,\n    noon: /^mezzo/i,\n    morning: /mattina/i,\n    afternoon: /pomeriggio/i,\n    evening: /sera/i,\n    night: /notte/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","﻿import { Chart, Plugin } from \"chart.js\";\r\nimport { IInfectionData, InfectionDataSet } from \"../Data/InfectionDataSet\";\r\nimport { RangeDayAreaDataSet } from \"../Data/RangeDayAreaDataSet\";\r\nimport { ViewMode, ViewModes } from \"../Data/ViewModes\";\r\nimport { LinearGradient } from \"../Framework/Graphics\";\r\nimport { ITipPreferences, IViewActionTip, TipManager } from \"../Framework/TipManager\";\r\nimport { IndicatorCalculator } from \"../Indicators\";\r\nimport { IDayAreaDataSet, IFactor, IFunctionPoint, IGeoArea, IGeoAreaSet, IIndicator } from \"../Types\";\r\nimport { Dictionary, DictionaryOf, discretize, exponential, formatDate, IDictionary, isNaNOrNull, linq, Signal, delayAsync, parseDate, App, copyText, round  } from \"../WebApp\";\r\nimport { StudioData } from \"./StudioPage\";\r\nimport { it, enUS } from \"date-fns/locale\";\r\n\r\ntype TData = IInfectionData; \r\n\r\ninterface IDayData {\r\n    topAreas?: AreaViewModel[];\r\n}\r\n\r\ninterface IDataRange {\r\n    startDay?: Date;\r\n    endDay?: Date;\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface ISpecialDate {\r\n    date: Date;\r\n    visible?: boolean;\r\n    label?: string;\r\n    color?: string;\r\n    width?: number;\r\n    dash?: number[];\r\n    dashOffset?: number;\r\n}\r\n\r\ninterface IPageState {\r\n    day?: number;\r\n    area?: string;\r\n    view?: ViewMode;\r\n    maxFactor?: number;\r\n    indicator?: keyof TData | string;\r\n    factor?: string;\r\n    dayDelta?: boolean;\r\n    groupSize?: number;\r\n    startDay?: number;\r\n    logScale?: boolean;\r\n    showEnvData?: boolean;\r\n    excludedArea?: string[];\r\n    detailsArea?: string;\r\n    dateRangeId?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IOverviewViewActions extends Dictionary<number> {\r\n\r\n    areaSelected: number;\r\n    indicatorChanged: number;\r\n    indicatorSelected: number;\r\n    dayChanged: number;\r\n    viewChanged: number;\r\n    groupChanged: number;\r\n    scaleChanged: number;\r\n    topAreasOpened: number;\r\n    chartActionExecuted: number;\r\n    factorChanged: number;\r\n    maxFactorChanged: number;\r\n    deltaSelected: number;\r\n    regionExcluded: number;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IViewPreferences extends ITipPreferences<IOverviewViewActions> {\r\n    isFirstView: boolean;\r\n    version: number;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IGeoPlotViewModel {\r\n    geo: IGeoAreaSet;\r\n    data: IDayAreaDataSet<TData>;\r\n    debugMode: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IGroupDay {\r\n    number: number;\r\n    value: Date;\r\n    text: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nclass IndicatorViewModel {\r\n\r\n    select() {\r\n\r\n    }\r\n\r\n    indicator: IIndicator<TData>;\r\n    value = ko.observable<number>();\r\n}\r\n\r\n/****************************************/\r\n\r\nclass AreaViewModel {\r\n\r\n    select() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value: IGeoArea;\r\n\r\n    data = ko.observable<TData>();\r\n    factor = ko.observable<number>();\r\n    indicator = ko.observable<number>();\r\n    reference = ko.observable<any>();\r\n    indicators = ko.observable<IndicatorViewModel[]>();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class GeoPlotPage {\r\n\r\n    private readonly _mainData: RangeDayAreaDataSet<TData>;\r\n    private readonly _mainGeo: IGeoAreaSet;\r\n    private _detailsData: RangeDayAreaDataSet<TData>;\r\n    private _detailsGeo: IGeoAreaSet;\r\n\r\n    private _selectedArea: IGeoArea; ù\r\n    private _chart: Chart;\r\n    private _daysData: IDayData[];\r\n    private _topAreasVisible: boolean = false;\r\n    private _mapSvg: SVGSVGElement;\r\n    private _execludedArea = new Map<string, IGeoArea>();\r\n    private _dataSet = InfectionDataSet;\r\n    private _keepState = false;\r\n    private _debugMode = false;\r\n    private _preferences: IViewPreferences;\r\n    private _calculator: IndicatorCalculator<TData>;\r\n\r\n    private _tips: DictionaryOf<IOverviewViewActions, IViewActionTip> = {\r\n        areaSelected: {\r\n            order: 0,\r\n            featureName: \"Zone\",\r\n            html: \"Puoi vedere i dati relativi ad una particolare area selezionadoli sulla mappa.\",\r\n            elementSelector: \".card-map .center-align\",\r\n            showAfter: 3,\r\n            showAction: () => {\r\n                this.viewMode(\"region\");\r\n                this.selectedArea = this._calculator.geo.areas[\"r10\"];\r\n            }\r\n        },\r\n        indicatorSelected: {\r\n            order: 1,\r\n            featureName: \"Indicatori\",\r\n            html: \"Puoi vedere il grafico associato all'indicatore, facendo click sull'indicatore.\",\r\n            elementSelector: \".indicators .summary-field\",\r\n            showAfter: 15,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                this.selectedIndicator(linq(this._dataSet.indicators).first(a => a.id == \"totalDeath\"));\r\n            }\r\n        },\r\n        dayChanged: {\r\n            order: 2,\r\n            featureName: \"Cronologia\",\r\n            html: \"Puoi vedere gli indicatori dei giorni precedenti muovendo la slide.\",\r\n            elementSelector: \".day input[type=range]\",\r\n            showAfter: 20,\r\n            showAction: () => {\r\n                this.dayNumber(5);\r\n            }\r\n        },\r\n        indicatorChanged: {\r\n            order: 3,\r\n            featureName: \"Indicatori\",\r\n            html: \"Puoi cambiare l'indicatore scegliendolo dal filtro nell'elenco.\",\r\n            elementSelector: \".filter-indicator\",\r\n            showAfter: 0\r\n        },\r\n        viewChanged: {\r\n            order: 4,\r\n            featureName: \"Zone\",\r\n            html: \"Puoi vedere gli indicatori a livello regionale, nazionale o provinciale.\",\r\n            elementSelector: \"#areaTabs\",\r\n            showAfter: 0,\r\n            showAction: () => {\r\n                this.viewMode(\"district\");\r\n            }\r\n        },\r\n        topAreasOpened: {\r\n            order: 5,\r\n            featureName: \"Zone\",\r\n            html: \"Puo vedere le zone più colpite di un qualsiasi indicatore scelto.\",\r\n            elementSelector: \"#topCases .card-title\",\r\n            showAfter: 20,\r\n            showAction: () => {\r\n                if (this.viewMode() == \"country\")\r\n                    this.viewMode(\"region\");\r\n                M.Collapsible.getInstance(document.getElementById(\"topCases\")).open(0);\r\n            }\r\n        },\r\n        deltaSelected: {\r\n            order: 5.5,\r\n            featureName: \"Indicatori\",\r\n            html: \"Puoi vedere l'incremento giornaliero dell'indicatore anzichè il valore totale.\",\r\n            elementSelector: \".day-delta\",\r\n            showAfter: 20,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                this.isDayDelta(true);\r\n            }\r\n        },\r\n        factorChanged: {\r\n            order: 6,\r\n            featureName: \"Indicatori\",\r\n            html: \"Puoi mettere in relazione qualsiasi indicatore a numerosi parametri (es. % Positivi su Tamponi).\",\r\n            elementSelector: \".filter-factor\",\r\n            showAfter: 30,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                this.selectedIndicator(linq(this._dataSet.indicators).first(a => a.id == \"totalPositive\"));\r\n                this.selectedFactor(linq(this._dataSet.factors).first(a => a.id == \"population\"));\r\n            }\r\n        },\r\n        groupChanged: {\r\n            order: 7,\r\n            featureName: \"Grafico\",\r\n            html: \"Puo raggruppare i dati del grafico in gruppi da 1 a 7 giorni. Puoi anche scegliere la data d'inizio.\",\r\n            elementSelector: \".row-chart-group .select-wrapper\",\r\n            showAfter: 30,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                var element = document.querySelector(\".chart-options\");\r\n                if (element.classList.contains(\"closed\"))\r\n                    element.classList.remove(\"closed\");\r\n                this.groupSize(2);\r\n                M.FormSelect.init(document.querySelectorAll(\".row-chart-group select\"));\r\n            }\r\n        },\r\n        chartActionExecuted: {\r\n            order: 8,\r\n            featureName: \"Grafico\",\r\n            html: \"Puoi portare il grafico a schermo interno, copiarlo, o copiare la serie numerico e incollarla in excel.\",\r\n            elementSelector: \".chart .actions\",\r\n            showAfter: 30\r\n        },\r\n        scaleChanged: {\r\n            order: 9,\r\n            featureName: \"Grafico\",\r\n            html: \"Puoi cambiare da scala logaritmica a scala lineare.\",\r\n            elementSelector: \".log-scale\",\r\n            showAfter: 210,\r\n            showAction: () => {\r\n                this.isLogScale(true);\r\n            }\r\n        },\r\n        maxFactorChanged: {\r\n            order: 10,\r\n            featureName: \"Mappa\",\r\n            html: \"Puoi cambiare il riferimento rispetto al quale la mappa viene colorata. Normalmente è in base al valore massimo che si ha avuto globalmente.\",\r\n            elementSelector: \".max-factor\",\r\n            showAfter: 60,\r\n            showAction: () => {\r\n                if (!this.currentArea())\r\n                    this._tips.areaSelected.showAction();\r\n                this.selectedIndicator(linq(this._dataSet.indicators).first(a => a.id == \"totalPositive\"));\r\n                this.autoMaxFactor(false);\r\n                this.maxFactor(1000);\r\n            }\r\n        },\r\n        regionExcluded: {\r\n            order: 11,\r\n            featureName: \"Mappa\",\r\n            html: \"Nella vista nazionale puoi escludere dagli indicatori il valore di una o più regioni cliccando sulla mappa.\",\r\n            elementSelector: \".card-map .center-align\",\r\n            showAfter: 0,\r\n            showAction: () => {\r\n                if (this.viewMode() != \"country\")\r\n                    this.viewMode(\"country\");\r\n                this._execludedArea.set(\"R8\", this._calculator.geo.areas[\"r8\"]);\r\n                this.updateIndicator();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _specialDates: IDictionary<ISpecialDate> = {\r\n        current: {\r\n            date: undefined,\r\n            color: \"#000\",\r\n            width: 0.5,\r\n            label: \"Giorno corrente\"\r\n        },\r\n        \"dpcm8\": {\r\n            date: new Date(2020, 2, 7),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 8 Marzo (italia zona rossa)\"\r\n        },\r\n        \"dpcm9\": {\r\n            date: new Date(2020, 2, 9),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 9 Marzo (italia zona rossa)\"\r\n        },\r\n        \"dpcm11\": {\r\n            date: new Date(2020, 2, 11),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 11 Marzo (chiusura attività)\"\r\n        },\r\n        \"mds20\": {\r\n            date: new Date(2020, 2, 20),\r\n            color: \"#070\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: false,\r\n            label: \"MDS 20 Marzo (chiura parchi, motoria nelle vicinane)\"\r\n        },\r\n        \"dpcm22\": {\r\n            date: new Date(2020, 2, 21),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 22 Marzo (chiusura ulteriore attività)\"\r\n        },\r\n        \"dpcm25\": {\r\n            date: new Date(2020, 2, 24),\r\n            color: \"#000\",\r\n            dash: [5, 5],\r\n            width: 1,\r\n            visible: true,\r\n            label: \"DPCM 25 Marzo (maggiori sanzioni)\"\r\n        }\r\n    };\r\n\r\n    _dataRanges: IDataRange[] = [\r\n        {\r\n            id: 0,\r\n            name: \"$(all)\",\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"1° $(wave)\",\r\n            endDay: new Date(2020, 7, 31)\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"2° $(wave)\",\r\n            startDay: new Date(2020, 8, 1)\r\n        },\r\n    ]\r\n\r\n    constructor(model: IGeoPlotViewModel) {\r\n\r\n        this._mainData = new RangeDayAreaDataSet(model.data);\r\n        this._mainGeo = model.geo;\r\n        this._debugMode = model.debugMode;\r\n        this._calculator = new IndicatorCalculator(this._mainData, this._dataSet, this._mainGeo);\r\n\r\n        this.dataRange.subscribe(value => {\r\n\r\n            const findDayIndex = (date: Date) => {\r\n                return this._mainData.days.indexOf(a => parseDate(a.date).getTime() >= date.getTime());\r\n            };\r\n\r\n            this._mainData.startDay = undefined;\r\n            this._mainData.endDay = undefined;\r\n\r\n            this._mainData.startDay = value.startDay ? findDayIndex(value.startDay) : undefined;\r\n            this._mainData.endDay = value.endDay ? findDayIndex(value.endDay) : undefined;\r\n\r\n            this.updateDays();\r\n            this.dayNumber(this._mainData.count - 1);\r\n        });\r\n\r\n        this.dayNumber.subscribe(value => {\r\n            if (value != this._calculator.data.count - 1)\r\n                this.tipManager.markAction(\"dayChanged\");\r\n            this.updateDayData();\r\n            this._specialDates.current.date = new Date(this._calculator.data.get(value).date);\r\n            this.updateChart();\r\n        });\r\n\r\n        this._mapSvg = document.getElementsByTagName(\"svg\").item(0);\r\n        this._mapSvg.addEventListener(\"click\", e => this.onMapClick(e, false))\r\n        this._mapSvg.addEventListener(\"dblclick\", e => this.onMapClick(e, true))\r\n\r\n        this.updateDays();\r\n\r\n        const areaTabs = M.Tabs.init(document.getElementById(\"areaTabs\"));\r\n\r\n        areaTabs.options.onShow = (el: HTMLDivElement) => {\r\n\r\n            this.setViewMode(<ViewMode>el.dataset[\"viewMode\"]);\r\n        };\r\n\r\n        const topCasesView = M.Collapsible.init(document.getElementById(\"topCases\"));\r\n\r\n        topCasesView.options.onOpenStart = () => {\r\n            if (!this._daysData)\r\n                this.updateTopAreas();\r\n            this._topAreasVisible = true;\r\n            this.tipManager.markAction(\"topAreasOpened\");\r\n        }\r\n\r\n        topCasesView.options.onCloseEnd = () => {\r\n            this._topAreasVisible = false;\r\n        }\r\n\r\n        this.indicators = ko.computed(() => linq(this._dataSet.indicators)\r\n            .where(a => !a.validFor || a.validFor.indexOf(this.viewMode()) != -1)\r\n            .toArray());\r\n\r\n        this.factors = ko.computed(() => linq(this._dataSet.factors)\r\n            .where(a => !a.validFor || a.validFor.indexOf(this.viewMode()) != -1)\r\n            .toArray());\r\n\r\n        this.detailsArea.subscribe(value => {\r\n            this.updateDetailsArea();\r\n        });\r\n\r\n        this.selectedIndicator.subscribe(value => {\r\n            if (!value)\r\n                return;\r\n            this.updateIndicator();\r\n            if (value.id != \"totalPositive\")\r\n                this.tipManager.markAction(\"indicatorChanged\", value.id);\r\n        });\r\n\r\n        this.selectedFactor.subscribe(value => {\r\n            if (!value)\r\n                return;\r\n            this.updateIndicator();\r\n            if (value.id != \"none\")\r\n                this.tipManager.markAction(\"factorChanged\", value.id);\r\n            setTimeout(() => M.FormSelect.init(document.querySelectorAll(\".row-chart-group select\")));\r\n        });\r\n\r\n        this.autoMaxFactor.subscribe(value => {\r\n            if (value) {\r\n                this.updateMaxFactor();\r\n                this.updateMap();\r\n            }\r\n            this.updateUrl();\r\n        });\r\n\r\n        this.maxFactor.subscribe(value => {\r\n            if (!this.autoMaxFactor()) {\r\n                this.updateMap();\r\n                this.tipManager.markAction(\"maxFactorChanged\", value.toString());\r\n            }\r\n            this.updateUrl();\r\n        });\r\n\r\n        this.isDayDelta.subscribe(value => {\r\n            this.computeStartDayForGroup();\r\n            this.updateIndicator();\r\n            if (value)\r\n                this.tipManager.markAction(\"deltaSelected\");\r\n\r\n        });\r\n\r\n        this.isLogScale.subscribe(value => {\r\n            this.updateChart();\r\n            this.updateUrl();\r\n            if (value)\r\n                this.tipManager.markAction(\"scaleChanged\");\r\n        });\r\n\r\n        this.isZoomChart.subscribe(value => {\r\n            this.updateChart();\r\n        });\r\n\r\n        this.groupSize.subscribe(value => {\r\n            this.computeStartDayForGroup();\r\n            this.updateChart();\r\n            this.updateUrl();\r\n            if (value > 1)\r\n                this.tipManager.markAction(\"groupChanged\", value.toString());\r\n        });\r\n\r\n        this.startDay.subscribe(value => {\r\n            this.updateChart();\r\n            this.updateUrl();\r\n        });\r\n\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const stateRaw = urlParams.get(\"state\");\r\n        this._keepState = urlParams.get(\"keepState\") == \"true\";\r\n\r\n        this.loadPreferences();\r\n\r\n        this.tipManager = new TipManager<IOverviewViewActions>(this._tips, () => this._preferences, () => this.savePreferences());\r\n\r\n        this.tipManager.engageUser();\r\n\r\n        let state: IPageState;\r\n\r\n        if (stateRaw && this._keepState)\r\n            state = <IPageState>JSON.parse(atob(stateRaw));\r\n        else\r\n            state = {};\r\n\r\n        setTimeout(() => this.loadState(state), 0);\r\n\r\n        if (!this._debugMode)\r\n            window.addEventListener(\"beforeunload\", () => this.savePreferences());\r\n\r\n        //Templating.template(document.querySelector(\"#template\"), \"TestComponent\", Templating.model({ isChecked: false }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected isDefaultState(state: IPageState) {\r\n        return (!state.day || state.day == this._calculator.data.count - 1) &&\r\n            (!state.view || state.view == \"region\") &&\r\n            !state.area &&\r\n            (!state.indicator || state.indicator == \"totalPositive\") &&\r\n            (!state.factor || state.factor == \"none\") &&\r\n            !state.maxFactor &&\r\n            !state.dayDelta &&\r\n            !state.logScale &&\r\n            !state.showEnvData &&\r\n            state.dateRangeId == 0,\r\n            (!state.groupSize || state.groupSize == 1) &&\r\n            (state.startDay == undefined || state.startDay == 0) &&\r\n            (!state.excludedArea) &&\r\n            (!state.detailsArea);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadState(state: IPageState) {\r\n\r\n        if (!state.view)\r\n            state.view = \"region\";\r\n\r\n        const viewTabs = M.Tabs.getInstance(document.getElementById(\"areaTabs\"));\r\n        viewTabs.select(ViewModes[state.view].tab);\r\n\r\n        document.body.scrollTop = 0;\r\n\r\n        if (!state.dateRangeId)\r\n            this.dataRange(this.dataRanges[0]);\r\n        else\r\n            this.dataRange(linq(this.dataRanges).first(a => a.id == state.dateRangeId));\r\n\r\n        if (state.logScale != undefined)\r\n            this.isLogScale(state.logScale);\r\n\r\n        if (state.groupSize)\r\n            this.groupSize(state.groupSize);\r\n\r\n        if (state.startDay != undefined)\r\n            this.startDay(state.startDay);\r\n\r\n        if (state.dayDelta != undefined)\r\n            this.isDayDelta(state.dayDelta);\r\n\r\n        if (state.showEnvData != undefined)\r\n            this.isShowEnvData(state.showEnvData);\r\n\r\n        if (state.maxFactor) {\r\n            this.autoMaxFactor(false);\r\n            this.maxFactor(state.maxFactor);\r\n        }\r\n\r\n        this.dayNumber(state.day != undefined ? state.day : this._calculator.data.count - 1);\r\n\r\n        if (state.excludedArea) {\r\n            this._execludedArea.clear();\r\n            for (let areaId of state.excludedArea)\r\n                this._execludedArea.set(areaId, this._calculator.geo.areas[areaId.toLowerCase()]);\r\n        }\r\n\r\n        if (state.indicator)\r\n            this.selectedIndicator(linq(this._dataSet.indicators).first(a => a.id == state.indicator));\r\n\r\n        if (state.factor)\r\n            this.selectedFactor(linq(this._dataSet.factors).first(a => a.id == state.factor));\r\n\r\n        if (state.area)\r\n            this.selectedArea = this._calculator.geo.areas[state.area.toLowerCase()];\r\n\r\n        if (state.detailsArea)\r\n            this.detailsArea(this._calculator.geo.areas[state.detailsArea]);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    saveStata(): IPageState {\r\n\r\n        return {\r\n            view: this.viewMode() == \"region\" ? undefined : this.viewMode(),\r\n            indicator: this.selectedIndicator() ? this.selectedIndicator().id : undefined,\r\n            factor: this.selectedFactor() ? this.selectedFactor().id : undefined,\r\n            dayDelta: this.isDayDelta() ? true : undefined,\r\n            maxFactor: this.autoMaxFactor() ? undefined : this.maxFactor(),\r\n            day: this.dayNumber() == this._calculator.data.count - 1 ? undefined : this.dayNumber(),\r\n            area: this.selectedArea ? this.selectedArea.id : undefined,\r\n            groupSize: this.groupSize() == 1 ? undefined : this.groupSize(),\r\n            startDay: this.startDay() == 0 ? undefined : this.startDay(),\r\n            logScale: this.isLogScale() ? true : undefined,\r\n            excludedArea: this._execludedArea.size > 0 ? linq(this._execludedArea.keys()).toArray() : undefined,\r\n            showEnvData: this.isShowEnvData() ? true : undefined,\r\n            detailsArea: this.detailsArea() ? this.detailsArea().id : undefined,\r\n            dateRangeId: this.dataRange().id\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadPreferences() {\r\n        let json = localStorage.getItem(\"preferences\");\r\n\r\n        if (json) {\r\n\r\n            try {\r\n                this._preferences = JSON.parse(json);\r\n            }\r\n            catch {\r\n            }\r\n\r\n            if (!this._preferences || this._preferences.version != 1) {\r\n                this._preferences = this.getDefaultPreferences();\r\n                this._preferences.isFirstView = false;\r\n                this._preferences.showTips = false;\r\n                this.savePreferences();\r\n            }\r\n        }\r\n        else\r\n            this._preferences = this.getDefaultPreferences();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getDefaultPreferences(): IViewPreferences {\r\n        return ({\r\n            isFirstView: true,\r\n            showTips: true,\r\n            version: 1,\r\n            actions: {\r\n                areaSelected: 0,\r\n                indicatorSelected: 0,\r\n                indicatorChanged: 0,\r\n                dayChanged: 0,\r\n                viewChanged: 0,\r\n                chartActionExecuted: 0,\r\n                factorChanged: 0,\r\n                groupChanged: 0,\r\n                maxFactorChanged: 0,\r\n                scaleChanged: 0,\r\n                topAreasOpened: 0,\r\n                deltaSelected: 0,\r\n                regionExcluded: 0\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    savePreferences() {\r\n        this._preferences.isFirstView = false;\r\n        localStorage.setItem(\"preferences\", JSON.stringify(this._preferences));\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    toggleChartZoom() {\r\n\r\n        this._preferences.actions.chartActionExecuted++;\r\n        this.isZoomChart(!this.isZoomChart());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async copyMap() {\r\n        const element = document.querySelector(\"svg.map\");\r\n        const svgText = element.outerHTML;\r\n        const blob = new Blob([svgText], { type: \"image/svg+xml\" });\r\n\r\n        if (navigator[\"clipboard\"] && navigator[\"clipboard\"][\"write\"]) {\r\n            const svgImage = document.createElement('img');\r\n            svgImage.style.width = element.clientWidth + \"px\";\r\n            svgImage.style.height = element.clientHeight + \"px\";\r\n            svgImage.onload = function () {\r\n\r\n                const canvas = document.createElement(\"canvas\");\r\n                canvas.width = element.clientWidth;\r\n                canvas.height = element.clientHeight;\r\n\r\n                const ctx = canvas.getContext(\"2d\");\r\n                ctx.fillStyle = \"white\";\r\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n                ctx.drawImage(svgImage, 0, 0);\r\n\r\n                canvas.toBlob(async pngBlob => {\r\n                    let item = new ClipboardItem({ [pngBlob.type]: pngBlob });\r\n                    await navigator.clipboard.write([item]);\r\n                    M.toast({ html: $string(\"$(msg-map-copied)\") })\r\n                })\r\n            }\r\n            svgImage.src = window.URL.createObjectURL(blob);\r\n        }\r\n        else {\r\n            const element = document.createElement(\"a\");\r\n            element.href = window.URL.createObjectURL(blob);\r\n            element.target = \"_blan\";\r\n            element.download = \"map.svg\";\r\n            element.click();\r\n            M.toast({ html: $string(\"$(msg-no-copy)\") })\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    copyChart() {\r\n        this._chart.canvas.toBlob(async blob => {\r\n            if (navigator[\"clipboard\"] && navigator[\"clipboard\"][\"write\"]) {\r\n                let item = new ClipboardItem({ [blob.type]: blob });\r\n                await navigator.clipboard.write([item]);\r\n                M.toast({ html: $string(\"$(msg-chart-copied)\") })\r\n            }\r\n            else {\r\n                const url = window.URL.createObjectURL(blob);\r\n                const element = document.createElement(\"a\");\r\n                element.href = url;\r\n                element.target = \"_blan\";\r\n                element.download = this._chart.options.plugins.title.text + \".png\";\r\n                element.click();\r\n                M.toast({ html: $string(\"$(msg-no-copy)\") })\r\n            }\r\n        });\r\n        this.tipManager.markAction(\"chartActionExecuted\", \"copy\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async copySerie() {\r\n\r\n        const data = this._chart.data.datasets[0].data as unknown as IFunctionPoint[];\r\n        let text = \"\";\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (i > 0)\r\n                text += \"\\n\";\r\n            text += formatDate(data[i].x as Date, $string(\"$(date-format)\")) + \"\\t\" + i + \"\\t\" + round(data[i].y, 1);\r\n        }\r\n\r\n        copyText(text);\r\n\r\n        M.toast({ html: $string(\"$(msg-serie-copied)\") })\r\n        this.tipManager.markAction(\"chartActionExecuted\", \"copySerie\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async copySerieForStudio() {\r\n\r\n        let obj: StudioData = {\r\n            type: \"serie\",\r\n            version: 1,\r\n            color: this.selectedIndicator().colorLight,\r\n            serie: {\r\n                type: \"geoplot\",\r\n                areaId: this.selectedArea.id,\r\n                indicatorId: this.selectedIndicator().id,\r\n                xAxis: \"dayNumber\",\r\n                exeludedAreaIds: linq(this._execludedArea.keys()).toArray(),\r\n                factorId: this.selectedFactor().id,\r\n                groupSize: this.groupSize(),\r\n                isDelta: this.isDayDelta(),\r\n                startDay: this.startDay(),\r\n                range: {\r\n                    start: this._calculator.data.startDay,\r\n                    end: this._calculator.data.endDay,\r\n                }\r\n            },\r\n            title: this.factorDescription()\r\n        };\r\n\r\n        obj.values = this._calculator.getSerie(obj.serie);\r\n\r\n        copyText(JSON.stringify(obj));\r\n\r\n        M.toast({ html: $string(\"$(msg-serie-copied-studio)\") })\r\n\r\n        this.tipManager.markAction(\"chartActionExecuted\", \"copySerieForStudio\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    play() {\r\n        if (this.dayNumber() == this._calculator.data.count - 1)\r\n            this.dayNumber(0);\r\n        this.isPlaying(true);\r\n        this.nextFrame();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    pause() {\r\n        this.isPlaying(false);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setViewMode(mode: ViewMode, fromModel = false) {\r\n\r\n        if (fromModel) {\r\n            const areaTabs = M.Tabs.getInstance(document.getElementById(\"areaTabs\"));\r\n            areaTabs.select(ViewModes[mode].tab);\r\n        }\r\n\r\n        if (mode == \"details\") {\r\n\r\n            if (this._detailsGeo && this._detailsData) {\r\n                this._calculator.geo = this._detailsGeo;\r\n                this._calculator.data = this._detailsData;\r\n            }\r\n        }\r\n        else {\r\n            this._calculator.geo = this._mainGeo;\r\n            this._calculator.data = this._mainData;\r\n        }\r\n\r\n        this.totalDays(this._calculator.data.count - 1);\r\n\r\n        if (mode != \"region\")\r\n            this.tipManager.markAction(\"viewChanged\", mode);\r\n\r\n        this.viewMode(mode);\r\n\r\n        const districtGroup = document.getElementById(\"group_district\");\r\n\r\n        if (mode == \"district\" || mode == \"details\")\r\n            districtGroup.style.removeProperty(\"display\");\r\n        else\r\n            districtGroup.style.display = \"none\";\r\n\r\n        this.selectedArea = null;\r\n\r\n        this._chart = null;\r\n\r\n        this._execludedArea.clear();\r\n\r\n        this.clearMap();\r\n\r\n        this.updateMaxFactor();\r\n\r\n        this.updateDayData();\r\n\r\n        if (this.viewMode() == \"country\") {\r\n            this.selectedArea = this._calculator.geo.areas[\"it\"];\r\n            this.tipManager.showTip(\"regionExcluded\", { timeout: 5 });\r\n        }\r\n        else {\r\n            if (this._topAreasVisible)\r\n                this.updateTopAreas();\r\n            else\r\n                this._daysData = undefined;\r\n        }\r\n\r\n        setTimeout(() =>\r\n            M.FormSelect.init(document.querySelectorAll(\".row-indicator select\")));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get selectedArea() {\r\n        return this._selectedArea;\r\n    }\r\n\r\n    set selectedArea(value: IGeoArea) {\r\n        if (value == this._selectedArea)\r\n            return;\r\n\r\n        if (this._selectedArea) {\r\n            const element = document.getElementById(this._selectedArea.id.toUpperCase());\r\n            if (element)\r\n                element.classList.remove(\"selected\");\r\n        }\r\n\r\n        this._selectedArea = value;\r\n\r\n        if (this._selectedArea) {\r\n            const element = document.getElementById(this._selectedArea.id.toUpperCase());\r\n            if (element) {\r\n                element.classList.add(\"selected\");\r\n                const parent = element.parentElement;\r\n                element.remove();\r\n                parent.appendChild(element);\r\n            }\r\n        }\r\n        this.changeArea();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getFactorValue(dayNumberOrGroup: number | number[], areaOrId: string | IGeoArea): number {\r\n\r\n        return this._calculator.getFactorValue({\r\n            dayNumberOrGroup: dayNumberOrGroup,\r\n            areaOrId: areaOrId,\r\n            factorId: this.selectedFactor().id,\r\n            indicatorId: this.selectedIndicator().id,\r\n            isDayDelta: this.isDayDelta(),\r\n            execludedAreas: linq(this._execludedArea.keys()).toArray()\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getIndicatorValue(dayNumber: number, areaOrId: string | IGeoArea, indicatorId: keyof TData | string): number {\r\n\r\n        return this._calculator.getIndicatorValue({\r\n            dayNumber: dayNumber,\r\n            areaOrId: areaOrId,\r\n            indicatorId: indicatorId,\r\n            isDayDelta: this.isDayDelta(),\r\n            execludedAreas: linq(this._execludedArea.keys()).toArray()\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected computeStartDayForGroup() {\r\n\r\n        let totDays = this._calculator.data.count - this.startDay();\r\n        const module = (totDays % this.groupSize());\r\n        if (module != 0) {\r\n            const invModule = this.groupSize() - module;\r\n            if (this.startDay() - invModule >= 0)\r\n                this.startDay(this.startDay() - invModule);\r\n            else if (this.startDay() + module < this._calculator.data.count - 1)\r\n                this.startDay(this.startDay() + module);\r\n\r\n            M.FormSelect.init(document.querySelectorAll(\".row-chart-group select\"));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private onMapClick(e: MouseEvent, isDouble: boolean) {\r\n\r\n        const item = <SVGPolygonElement>e.target;\r\n        const areaId = item.parentElement.id;\r\n        const area = this._calculator.geo.areas[areaId.toLowerCase()];\r\n\r\n        if (!area)\r\n            return;\r\n\r\n        if (!isDouble) {\r\n            if (this.viewMode() == \"country\") {\r\n                if (this._execludedArea.has(areaId))\r\n                    this._execludedArea.delete(areaId);\r\n                else {\r\n                    this._execludedArea.set(areaId, area);\r\n                    M.toast({ html: $string(\"$(msg-region-ex)\").replace(\"[region]\", area.name) });\r\n                }\r\n                this.updateIndicator();\r\n            }\r\n            else {\r\n                //if (item.parentElement.classList.contains(this.viewMode()))\r\n                this.selectedArea = area;\r\n            }\r\n\r\n            this.tipManager.markAction(\"areaSelected\", area.name);\r\n        }\r\n        else {\r\n            if (this.viewMode() == \"region\" || this.viewMode() == \"district\")\r\n                this.detailsArea(area);\r\n        }\r\n    }\r\n\r\n\r\n        /****************************************/top\r\n\r\n    protected nextFrame() {\r\n\r\n        if (!this.isPlaying())\r\n            return;\r\n\r\n        if (this.dayNumber() >= this._calculator.data.count - 1)\r\n            this.pause();\r\n        else\r\n            this.dayNumber(parseInt(this.dayNumber().toString()) + 1);\r\n\r\n        setTimeout(() => this.nextFrame(), 200);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected changeArea() {\r\n        if (this._selectedArea == null)\r\n            this.currentArea(null);\r\n        else {\r\n            var isEmptyArea = !this.currentArea();\r\n\r\n            const area = new AreaViewModel();\r\n\r\n            area.value = this._selectedArea;\r\n\r\n            this.updateArea(area);\r\n\r\n            this.currentArea(area)\r\n\r\n            this.updateFactorDescription();\r\n\r\n            this.updateAreaIndicators();\r\n\r\n            this.updateChart();\r\n\r\n            if (isEmptyArea) {\r\n                M.FormSelect.init(document.querySelectorAll(\".row-chart-group select\"));\r\n                M.Tooltip.init(document.querySelectorAll(\".row-chart-group .tooltipped\"));\r\n            }\r\n        }\r\n\r\n        this.updateUrl();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateAreaIndicators() {\r\n        if (!this.currentArea())\r\n            return;\r\n        if (!this.currentArea().indicators()) {\r\n            const items: IndicatorViewModel[] = [];\r\n            for (let indicator of this.indicators()) {\r\n\r\n                if (indicator.showInFavorites === false)\r\n                    continue;\r\n\r\n                let item = new IndicatorViewModel();\r\n                item.indicator = indicator;\r\n                item.select = () => {\r\n                    this.tipManager.markAction(\"indicatorSelected\", item.indicator.id);\r\n                    this.selectedIndicator(indicator);\r\n                    setTimeout(() =>\r\n                        M.FormSelect.init(document.querySelectorAll(\".row-indicator select\")));\r\n                }\r\n                items.push(item);\r\n            }\r\n            this.currentArea().indicators(items);\r\n        }\r\n\r\n        const areaId = this.currentArea().value.id.toLowerCase();\r\n\r\n        for (let item of this.currentArea().indicators())\r\n            item.value(this.getIndicatorValue(this.dayNumber(), areaId, item.indicator.id))\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateFactorDescription() {\r\n\r\n        let desc = \"\";\r\n\r\n        if (this.isDayDelta())\r\n            desc = \"$(new) \";\r\n\r\n        desc += this.selectedFactor().description.replace(\"[indicator]\", this.selectedIndicator().name);\r\n        if (this.currentArea())\r\n            desc += \" - \" + this.currentArea().value.name;\r\n\r\n        if (this._execludedArea.size > 0) {\r\n            desc += \" - $(except) (\";\r\n            let i = 0;\r\n            for (let key of this._execludedArea.keys()) {\r\n                if (i > 0)\r\n                    desc += \", \";\r\n                desc += this._execludedArea.get(key).name;\r\n                i++;\r\n            }\r\n            desc += \")\";\r\n        }\r\n\r\n        this.factorDescription($string(desc));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateIndicator() {\r\n\r\n        if (!this.selectedIndicator() || !this.selectedFactor())\r\n            return;\r\n\r\n        this.updateFactorDescription();\r\n\r\n        /*\r\n        if (this.selectedFactor().id != \"none\") {\r\n \r\n            if (this.groupSize() != 1)\r\n                this.groupSize(1);\r\n        }*/\r\n\r\n        this.updateMaxFactor();\r\n        this.updateDayData();\r\n        this.updateChart();\r\n        this.updateUrl();\r\n\r\n        if (this._topAreasVisible)\r\n            this.updateTopAreas();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateMaxFactor() {\r\n\r\n        if (!this.selectedFactor() || !this.selectedIndicator() || !this.autoMaxFactor())\r\n            return;\r\n\r\n        let result = Number.NEGATIVE_INFINITY;\r\n        let curView = ViewModes[this.viewMode()];\r\n\r\n\r\n        let count = 0;\r\n        let list = [];\r\n        this._calculator.data.days.foreach((day, i) => {\r\n            for (let areaId in day.values) {\r\n                if (!curView.validateId(areaId))\r\n                    continue;\r\n                if (!this._calculator.geo.areas[areaId])\r\n                    continue;\r\n\r\n                const factor = Math.abs(this.getFactorValue(i, areaId));\r\n                if (!isNaNOrNull(factor) && factor != Number.POSITIVE_INFINITY && factor > result)\r\n                    result = factor;\r\n\r\n                if (factor != 0)\r\n                    list.push(factor);\r\n            }\r\n        });\r\n        /*\r\n        list = linq(list).orderBy(a => a).toArray();\r\n        var index = Math.floor(list.length / 2);\r\n        result = list[index];*/\r\n\r\n        this.maxFactor(parseFloat(result.toFixed(1)));\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected initChart() {\r\n        const canvas = <HTMLCanvasElement>document.querySelector(\"#areaGraph\");\r\n\r\n        const referencesPlugIn: Plugin<any> = {\r\n            id: \"lines\",\r\n            afterDraw: chart => {\r\n\r\n                const data = chart.data.datasets[0].data;\r\n\r\n                if (!data || data.length == 0)\r\n                    return;\r\n\r\n                const xScale = chart.scales.xAxes;\r\n                const ctx = chart.ctx;\r\n\r\n                for (let key in this._specialDates) {\r\n\r\n                    let item = this._specialDates[key];\r\n                    if (!item.date || item.visible === false)\r\n                        continue;\r\n                    \r\n                    let offset = xScale.getPixelForValue(item.date.getTime());\r\n\r\n                    ctx.lineWidth = item.width || 1;\r\n\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(offset, chart.chartArea.top);\r\n                    ctx.lineTo(offset, chart.chartArea.bottom);\r\n                    ctx.strokeStyle = item.color || \"#000\";\r\n\r\n                    if (item.dash)\r\n                        ctx.setLineDash(item.dash);\r\n                    else\r\n                        ctx.setLineDash([]);\r\n                    if (item.dashOffset)\r\n                        ctx.lineDashOffset = item.dashOffset;\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n        };\r\n\r\n        const bkPlugin: Plugin<any> = {\r\n            id: \"bk\",\r\n            beforeDraw: function (chart, args, options) {\r\n                var ctx = chart.ctx;\r\n                ctx.fillStyle = \"white\";\r\n                ctx.fillRect(0, 0, chart.width, chart.height);\r\n            }\r\n        };\r\n\r\n        this._chart = new Chart(canvas, {\r\n            plugins: [bkPlugin, referencesPlugIn],\r\n            type: \"line\",\r\n            data: {\r\n                datasets: [\r\n                    {\r\n                        fill: \"origin\",\r\n                        data: [],\r\n                        borderWidth: 1\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                maintainAspectRatio: false,\r\n                plugins: {\r\n                    title: {\r\n                        display: false\r\n                    },\r\n                    legend: {\r\n                        display: true,\r\n                        position: \"bottom\"\r\n                    },\r\n                    tooltip: {\r\n                        callbacks: {\r\n                            label: item => {\r\n                                return round(item.parsed.y, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n \r\n                scales: {\r\n                    xAxes: {\r\n                        type: \"time\",\r\n                        adapters: {\r\n                            date: {\r\n                                locale: $language == \"it-IT\" ? it : enUS,\r\n                            }\r\n                        },\r\n                        time: {\r\n                            unit: \"day\",\r\n                            tooltipFormat: \"dd/MMM\"\r\n                        }\r\n\r\n                    },\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateDays() {\r\n        const days = [];\r\n        this._calculator.data.days.foreach((day, i) =>\r\n            days.push({ number: i, value: new Date(day.date), text: formatDate(day.date, $string(\"$(date-format-short)\")) })\r\n        );\r\n        this.days(days);\r\n        this.totalDays(this._calculator.data.count - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateChart() {\r\n\r\n        if (!this.selectedIndicator() || !this.currentArea() || !this.selectedFactor())\r\n            return;\r\n\r\n        if (this._chart == null)\r\n            this.initChart();\r\n\r\n        const area = this.currentArea().value;\r\n        const areaId = area.id.toLowerCase();\r\n        const field = this.selectedIndicator().id;\r\n\r\n        this._chart.data.datasets[0].label = this.factorDescription();\r\n        this._chart.options.plugins.title.text = this._chart.data.datasets[0].label;\r\n\r\n        if (this.isLogScale())\r\n            this._chart.options.scales.y.type = \"logarithmic\";\r\n        else\r\n            this._chart.options.scales.y.type = \"linear\";\r\n\r\n        this._chart.options.scales.y.min = 0;\r\n\r\n        this._chart.data.datasets[0].borderColor = this.selectedIndicator().colorDark;\r\n        this._chart.data.datasets[0].backgroundColor = this.selectedIndicator().colorLight;\r\n\r\n        this._chart.data.datasets[0].data = this._calculator.getSerie({\r\n            type: \"geoplot\",\r\n            areaId: area.id,\r\n            indicatorId: this.selectedIndicator().id,\r\n            xAxis: \"date\",\r\n            startDay: this.startDay(),\r\n            exeludedAreaIds: linq(this._execludedArea.keys()).toArray(),\r\n            factorId: this.selectedFactor().id,\r\n            groupSize: this.groupSize(),\r\n            isDelta: this.isDayDelta()\r\n        }) as any;\r\n\r\n        this._chart.update();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateArea(value: AreaViewModel, dayNumber?: number) {\r\n\r\n        if (!value || !this.selectedIndicator() || !this.selectedFactor())\r\n            return;\r\n\r\n        if (dayNumber == undefined)\r\n            dayNumber = this.dayNumber();\r\n\r\n        const id = value.value.id.toLowerCase();\r\n        const area = value.value;\r\n\r\n        /*\r\n        if (!day || !day.values[id]) {\r\n            M.toast({\r\n                html: $string(\"$(msg-no-data)\")});\r\n            return;\r\n        }*/\r\n\r\n        value.data(this._calculator.getDataAtDay(dayNumber, id));\r\n\r\n        value.indicator(this.getIndicatorValue(dayNumber, id, this.selectedIndicator().id));\r\n\r\n        value.factor(this.getFactorValue(dayNumber, area));\r\n\r\n        value.reference(this.selectedFactor().reference(value.data(), area));\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updateDetailsArea() {\r\n\r\n        const detailsEl = <HTMLElement>document.querySelector(\".details-map\");\r\n\r\n        if (!this.detailsArea()) {\r\n            this.setViewMode(\"region\");\r\n            detailsEl.innerHTML = \"\";\r\n        }\r\n        else {\r\n\r\n            await this.detailsLoading.waitFor();\r\n\r\n            this.detailsLoading.reset();\r\n\r\n            try {\r\n\r\n                this.setViewMode(\"details\", true);\r\n\r\n                await delayAsync(0);\r\n\r\n                detailsEl.innerHTML = \"<span class = 'loading'><i class ='material-icons'>loop</i></span>\";\r\n\r\n                document.getSelection().empty();\r\n\r\n                const mainData = <IGeoPlotViewModel>JSON.parse(await (await fetch(App.baseUrl + \"AreaData/\" + this.detailsArea().id)).text());\r\n                const mapData = await (await fetch(App.baseUrl + \"AreaMap/\" + this.detailsArea().id)).text();\r\n\r\n                detailsEl.innerHTML = mapData;\r\n\r\n                var svgMap = <HTMLElement>document.querySelector(\".details-map svg\");\r\n                svgMap.addEventListener(\"click\", e => this.onMapClick(e, false));\r\n\r\n                svgMap.querySelector(\"#group_municipality\").classList.add(\"active\");\r\n\r\n                this._detailsData = new RangeDayAreaDataSet(mainData.data);\r\n                this._detailsGeo = mainData.geo;\r\n\r\n                this.setViewMode(\"details\", true);\r\n            }\r\n            finally {\r\n\r\n                this.detailsLoading.set();\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateTopAreas() {\r\n\r\n        this._daysData = [];\r\n\r\n        this._calculator.data.days.foreach((day, i) => {\r\n\r\n            const item: IDayData = {};\r\n\r\n            const isInArea = ViewModes[this.viewMode()].validateId;\r\n\r\n            item.topAreas = linq(day.values).select(a => ({\r\n                factor: this.getFactorValue(i, a.key),\r\n                value: a\r\n            })).where(a => !isNaNOrNull(a.factor))\r\n                .orderByDesc(a => a.factor).where(a => isInArea(a.value.key)).select(a => {\r\n\r\n                    const area = new AreaViewModel();\r\n\r\n                    area.value = this._calculator.geo.areas[a.value.key.toLowerCase()];\r\n\r\n                    area.select = () => this.selectedArea = area.value;\r\n\r\n                    this.updateArea(area, i);\r\n\r\n                    return area;\r\n\r\n                }).take(25).toArray();\r\n\r\n            this._daysData.push(item);\r\n        });\r\n\r\n        this.topAreas(this._daysData[this.dayNumber()].topAreas);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateDayData() {\r\n\r\n        const day = this._calculator.data.get(this.dayNumber());\r\n\r\n        if (!day) {\r\n            console.warn(\"No day data: \" + this.dayNumber());\r\n            return;\r\n        }\r\n\r\n        this.currentData(formatDate(day.date, $string(\"$(date-format)\")));\r\n\r\n        this.updateMap();\r\n\r\n        this.updateArea(this.currentArea());\r\n\r\n        this.updateAreaIndicators();\r\n\r\n        if (this._daysData && this._topAreasVisible)\r\n            this.topAreas(this._daysData[this.dayNumber()].topAreas);\r\n\r\n        this.updateUrl();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateUrl() {\r\n        if (!this._keepState)\r\n            return;\r\n        const state = this.saveStata();\r\n        let url = App.baseUrl + \"Overview\";\r\n        if (!this.isDefaultState(state))\r\n            url += \"?state=\" + encodeURIComponent(btoa(JSON.stringify(state))) + \"&keepState=true\";\r\n        history.replaceState(null, null, url);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected clearMap() {\r\n\r\n        const day = this._calculator.data.get(this.dayNumber());\r\n\r\n        if (!day || !day.values) {\r\n            console.warn(\"No day data: \" + this.dayNumber());\r\n            return;\r\n        }\r\n\r\n        for (const key in day.values) {\r\n            const element = document.getElementById(key.toUpperCase());\r\n            if (element) {\r\n                //element.style.fillOpacity = \"1\";\r\n                element.style.removeProperty(\"fill\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateMap() {\r\n\r\n        if (!this.selectedIndicator() || !this.selectedFactor())\r\n            return;\r\n\r\n\r\n        if (this.viewMode() != \"country\") {\r\n\r\n            const day = this._calculator.data.get(this.dayNumber());\r\n\r\n            var indicator = this.selectedIndicator();\r\n\r\n            const gradient = indicator.gradient ? indicator.gradient : new LinearGradient(\"#fff\", indicator.colorDark);\r\n\r\n            for (const key in day.values) {\r\n                const element = document.getElementById(key.toUpperCase());\r\n                if (element) {\r\n\r\n                    const area = this._calculator.geo.areas[key];\r\n\r\n                    if (area.type != ViewModes[this.viewMode()].areaType)\r\n                        continue;\r\n\r\n\r\n                    let factor = this.getFactorValue(this.dayNumber(), area);\r\n                    if (factor == Number.POSITIVE_INFINITY)\r\n                        factor = NaN;\r\n\r\n                    if (indicator.canBeNegative)\r\n                        factor = 0.5 + (factor / (this.maxFactor() * 2));\r\n                    else\r\n                        factor = factor / this.maxFactor();\r\n\r\n\r\n                    factor = Math.min(1, Math.max(0, factor));\r\n\r\n                    if (isNaNOrNull(factor)) {\r\n                        if (element.classList.contains(\"valid\"))\r\n                            element.classList.remove(\"valid\");\r\n                        element.style.removeProperty(\"fill\");\r\n                    }\r\n                    else {\r\n                        if (!element.classList.contains(\"valid\"))\r\n                            element.classList.add(\"valid\");\r\n\r\n                        let value: number;\r\n                        if (!indicator.canBeNegative)\r\n                            value = discretize(exponential(factor), 20);\r\n                        else\r\n                            value = discretize(factor, 20);\r\n                        element.style.fill = gradient.valueAt(value).toString();\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (this.viewMode() != \"details\") {\r\n            linq(document.querySelectorAll(\".main-map g.region\")).foreach((element: HTMLElement) => {\r\n                if (this._execludedArea.has(element.id))\r\n                    element.style.fill = \"#444\";\r\n                else\r\n                    element.style.fill = \"#FFF\";\r\n            });\r\n        }\r\n    }\r\n\r\n    get dataRanges() {\r\n        return this._dataRanges;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    dayNumber = ko.observable(0);\r\n    totalDays = ko.observable(0);\r\n    detailsLoading = new Signal(true);\r\n    detailsArea = ko.observable<IGeoArea>();\r\n    currentData = ko.observable<string>();\r\n    currentArea = ko.observable<AreaViewModel>();\r\n    topAreas = ko.observable<AreaViewModel[]>();\r\n    viewMode = ko.observable<ViewMode>(\"district\");\r\n    selectedIndicator = ko.observable<IIndicator<TData>>();\r\n    selectedFactor = ko.observable<IFactor<TData>>();\r\n    autoMaxFactor = ko.observable<boolean>(true);\r\n    maxFactor = ko.observable<number>();\r\n    isPlaying = ko.observable(false);\r\n    isLogScale = ko.observable<boolean>(false);\r\n    isDayDelta = ko.observable<boolean>(false);\r\n    isZoomChart = ko.observable<boolean>(false);\r\n    isShowEnvData = ko.observable<boolean>(false);\r\n    groupSize = ko.observable<number>(1);\r\n    startDay = ko.observable<number>(0);\r\n    dataRange = ko.observable<IDataRange>();\r\n    days = ko.observable<IGroupDay[]>();\r\n    tipManager: TipManager<IOverviewViewActions>;\r\n    isNoFactorSelected = ko.computed(() => this.selectedFactor() && this.selectedFactor().id == 'none');\r\n    groupDays = [1, 2, 3, 4, 5, 6, 7];\r\n    factorDescription = ko.observable<string>();\r\n    indicators: KnockoutObservable<IIndicator<TData>[]>;\r\n    factors: KnockoutObservable<IFactor<TData>[]>;\r\n\r\n}","﻿import { IStudioViewModel } from \"./Pages/StudioPage\";\r\nimport { IApiResult } from \"./Types\";\r\nimport { Guid, Http } from \"./WebApp\";\r\n\r\nexport namespace Api {\r\n\r\n    export async function saveState(id: Guid, state: object) {\r\n\r\n        let result = await Http.postJsonAsync<IApiResult<boolean>>(\"~/SaveState/\" + id, state);\r\n        if (!result.isSuccess)\r\n            throw result.error;\r\n        return result.data;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export async function loadState<T>(id: Guid) {\r\n        let result = await Http.getJsonAsync<IApiResult<T>>(\"~/LoadState/\" + id);\r\n        if (!result.isSuccess)\r\n            throw result.error;\r\n        return result.data;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export async function loadStudioData() {\r\n        return await Http.getJsonAsync<IStudioViewModel>(\"~/StudioData\");\r\n    }\r\n} ","﻿import { StringTable } from \"../Core/StringTable\";\r\nimport { DynamicString } from \"../Core/Types/DynamicString\";\r\n\r\nStringTable.add({\r\n\r\n    \"msg-upgrading\": \"aggiornamento alla nuova versione\",\r\n\r\n    \"confirm\": \"conferma\",\r\n\r\n    \"yes\": \"si\",\r\n\r\n    \"no\": \"no\",\r\n\r\n    \"close\": \"chiudi\",\r\n\r\n    \"day-label\": \"[Giorno]\",\r\n\r\n    \"month-label\": \"[Mese]\",\r\n\r\n    \"year-label\": \"[Anno]\",\r\n\r\n    \"msg-specify-value\": DynamicString.complex(\"specificare un valore per '{0}'\"),\r\n\r\n    \"msg-insert-greater-than\": DynamicString.complex(\"inserire un valore maggiore o uguale a {0}\"),\r\n\r\n    \"msg-invalid-email\": \"email non valida\",\r\n\r\n    \"msg-insert-less-than\": DynamicString.complex(\"inserire un valore minore o uguale a {0}\"),\r\n\r\n}, { language: \"IT\" });","﻿import { LocalString } from \"../Types/DynamicString\";\r\n\r\nexport enum OperationType {\r\n    Global,\r\n    Local\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IOperationProgress {\r\n\r\n    message?: LocalString;\r\n\r\n    totCount?: number;\r\n\r\n    current?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IOperation {\r\n\r\n    end(): void;\r\n\r\n    progress: IOperationProgress;\r\n\r\n    parentOperation: IOperation;\r\n\r\n    type: OperationType;\r\n\r\n    //subOperations: WebApp.IList<IOperation>;\r\n\r\n    addSubOperation(operation: IOperation);\r\n\r\n    removeSubOperation(operation: IOperation);\r\n\r\n    message: LocalString;\r\n}","﻿import { Format } from \"../Helpers/Format\";\r\nimport { padLeft } from \"../Utils/StringUtils\";\r\n\r\nexport enum TimePart {\r\n    Milliseconds,\r\n    Seconds,\r\n    Minutes,\r\n    Hours,\r\n    Days\r\n}\r\n\r\nexport class TimeSpan {\r\n\r\n    constructor(ticks: number = 0) {\r\n        this.ticks = ticks;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalDays() {\r\n        return this.ticks / (1000 * 60 * 60 * 24);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalHours() {\r\n        return this.ticks / (1000 * 60 * 60);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalMinutes() {\r\n        return this.ticks / (1000 * 60);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalSeconds() {\r\n        return this.ticks / (1000);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get totalMilliseconds() {\r\n        return this.ticks;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get days() {\r\n        return Math.floor(this.ticks / (1000 * 60 * 60 * 24))\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get hours() {\r\n        return Math.floor(this.ticks / (1000 * 60 * 60)) % 24;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get minutes() {\r\n        return Math.floor(this.ticks / (1000 * 60)) % 60;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get seconds() {\r\n        return Math.floor(this.ticks / (1000)) % 60;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get milliseconds() {\r\n        return this.ticks % 1000;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    format(format: string): string {\r\n        return Format.replaceArgs(format, arg => TimeSpan.formatArgument(this, arg));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toString() {\r\n        return this.format(\"{hh}:{mm}:{ss}\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static zero() {\r\n        return new TimeSpan(0);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromMilliseconds(value: number) {\r\n        return new TimeSpan(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromSeconds(value: number) {\r\n        return new TimeSpan(value * 1000);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromMinutes(value: number) {\r\n        return new TimeSpan(value * 1000 * 60);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromHours(value: number) {\r\n        return new TimeSpan(value * 1000 * 60 * 60);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromDays(value: number) {\r\n        return new TimeSpan(value * 1000 * 60 * 60 * 24);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static create(days: number = 0, hours: number = 0, minutes: number = 0, seconds: number = 0, milliseconds: number = 0) {\r\n        return new TimeSpan(\r\n            (days * 1000 * 60 * 60 * 24) +\r\n            (hours * 1000 * 60 * 60) +\r\n            (minutes * 1000 * 60) +\r\n            (seconds * 1000) +\r\n            (milliseconds));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static formatArgument(value: TimeSpan, arg: string): string {\r\n        switch (arg) {\r\n\r\n            case \"d\":\r\n                return value.days.toString();\r\n            case \"dd\":\r\n                return padLeft(value.days.toString(), 2, \"0\");\r\n            case \"h\":\r\n                return value.hours.toString();\r\n            case \"hh\":\r\n                return padLeft(value.hours.toString(), 2, \"0\");\r\n            case \"m\":\r\n                return value.minutes.toString();\r\n            case \"mm\":\r\n                return padLeft(value.minutes.toString(), 2, \"0\");\r\n            case \"s\":\r\n                return value.seconds.toString();\r\n            case \"ss\":\r\n                return padLeft(value.seconds.toString(), 2, \"0\");\r\n            case \"f\":\r\n                return (value.milliseconds / 100).toString();\r\n            case \"ff\":\r\n                return (value.milliseconds / 10).toString();\r\n            case \"fff\":\r\n                return value.milliseconds.toString();\r\n        }\r\n        return arg;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    ticks: number;\r\n}    ","﻿export function randomString(length: number, chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"): string {\r\n\r\n    let result = \"\";\r\n\r\n    for (let i = 0; i < length; i++)\r\n        result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n\r\n    return result;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isUpperCase(value: string): boolean {\r\n    return value.toUpperCase() === value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function repeatString(value: string, count: number): string {\r\n    let result = \"\";\r\n    for (let i = 0; i < count; i++)\r\n        result += value;\r\n    return result;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function padLeft(value: string, count: number, char: string): string {\r\n    if (value == null)\r\n        return;\r\n    if (value.length >= count)\r\n        return value;\r\n    return repeatString(char, count - value.length) + value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function padRight(value: string, count: number, char: string): string {\r\n    if (value == null)\r\n        return;\r\n    if (value.length >= count)\r\n        return value;\r\n    return value + repeatString(char, count - value.length);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function uuidv4(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}","﻿import { Format } from \"../Helpers/Format\";\r\nimport { DynamicString, LocalString } from \"../Types/DynamicString\";\r\nimport { TimeSpan } from \"../Types/TimeSpan\";\r\nimport { padLeft } from \"./StringUtils\";\r\n\r\nexport const WEEK_DAYS = [\"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\", \"Domenica\"];\r\nexport const MONTHS = [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"];\r\n\r\n/****************************************/\r\n\r\nexport function parseDate(value: Date | string): Date {\r\n\r\n    if (value instanceof Date)\r\n        return value;\r\n\r\n    return new Date(value);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function addDays(date: Date | string, value: number): Date {\r\n    return dateAdd(date, TimeSpan.fromDays(value));\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function dateAdd(date: Date | string, value: TimeSpan): Date {\r\n    date = parseDate(date);\r\n    return new Date(date.getTime() + value.ticks);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function dateDiff(date1: Date | string, date2: Date | string): TimeSpan {\r\n    return new TimeSpan(parseDate(date1).getTime() - parseDate(date2).getTime());\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function now(): Date {\r\n    return new Date();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function today(): Date {\r\n    return truncateTime(now());\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function truncateTime(date: Date): Date {\r\n    date = parseDate(date);\r\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function timeOfDay(date: Date): TimeSpan {\r\n    date = parseDate(date);\r\n    return new TimeSpan(date.getTime() - truncateTime(date).getTime());\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function formatDate(date: Date | string, format: LocalString): string {\r\n    date = parseDate(date);\r\n    return Format.replaceArgs(Format.text(format), arg => formatDateArgument(date, arg));\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function formatDateArgument(value: Date | string, arg: string): string {\r\n    value = parseDate(value);\r\n    switch (arg) {\r\n        case \"D\":\r\n            return value.getDate().toString();\r\n        case \"DD\":\r\n            return padLeft(value.getDate().toString(), 2, \"0\");\r\n        case \"W\":\r\n            return WEEK_DAYS[(value.getDay() + 6) % 7].substr(0, 3);\r\n        case \"WW\":\r\n            return WEEK_DAYS[(value.getDay() + 6) % 7];\r\n        case \"M\":\r\n            return value.getMonth().toString();\r\n        case \"MM\":\r\n            return padLeft((value.getMonth() + 1).toString(), 2, \"0\");\r\n        case \"MMM\":\r\n            return MONTHS[value.getMonth()].substr(0, 3);\r\n        case \"MMMM\":\r\n            return MONTHS[value.getMonth()];\r\n        case \"YYYY\":\r\n            return value.getFullYear().toString();\r\n        case \"h\":\r\n            return value.getHours().toString();\r\n        case \"hh\":\r\n            return padLeft(value.getHours().toString(), 2, \"0\");\r\n        case \"m\":\r\n            return value.getMinutes().toString();\r\n        case \"mm\":\r\n            return padLeft(value.getMinutes().toString(), 2, \"0\");\r\n        case \"s\":\r\n            return value.getSeconds().toString();\r\n        case \"ss\":\r\n            return padLeft(value.getSeconds().toString(), 2, \"0\");\r\n        case \"f\":\r\n            return (value.getMilliseconds() / 100).toString();\r\n        case \"ff\":\r\n            return (value.getMilliseconds() / 10).toString();\r\n        case \"fff\":\r\n            return value.getMilliseconds().toString();\r\n    }\r\n    return arg;\r\n}","﻿export class Exception extends Error {\r\n\r\n    constructor(message?: string, innerException?: Exception) {\r\n\r\n        super();\r\n\r\n        this.message = message;\r\n\r\n        this.innerException = innerException;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    innerException: Exception;\r\n}","﻿import { linq, Linq } from \"../Linq\";\r\nimport { randomString } from \"./StringUtils\";\r\n\r\nclass LinqNode {\r\n\r\n    constructor(node: Node) {\r\n        this.node = node;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get childNodes(): Linq<LinqNode> {\r\n        return linq(this.node.childNodes).select(a => new LinqNode(a));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    descendsFrom(target: Node): boolean {\r\n        let curItem = this.node;\r\n        while (curItem != null) {\r\n            if (curItem == target)\r\n                return true;\r\n            curItem = curItem.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hasClass(className: string): boolean {\r\n        if (\"classList\" in this.node)\r\n            return (this.node as HTMLElement).classList.contains(className);\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get discendants(): Linq<LinqNode> {\r\n\r\n        function* iterator(node: Node) {\r\n\r\n            for (let child of this.node.childNodes) {\r\n                yield new LinqNode(child);\r\n                for (let innerChild of iterator(child))\r\n                    yield innerChild;\r\n            };\r\n        }\r\n\r\n        return linq(iterator(this.node));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get parentNodesOrSelf(): Linq<LinqNode> {\r\n\r\n        function* iterator(node: Node) {\r\n\r\n            let curItem = node;\r\n            while (curItem != null) {\r\n                yield new LinqNode(curItem);\r\n                curItem = curItem.parentNode;\r\n            }\r\n        }\r\n\r\n        return linq(iterator(this.node));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get parentNodes(): Linq<LinqNode> {\r\n        return this.parentNodesOrSelf.skip(1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get name(): string {\r\n        return this.node.nodeName;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    node: Node;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function parentOfClass(src: HTMLElement, className: string): HTMLElement {\r\n    return <HTMLElement>linqNode(src).parentNodes.where(a => a.hasClass(className)).select(a => a.node).first();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function linqNode(src: Node): LinqNode {\r\n    return new LinqNode(src);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isParentOrSelf(element: HTMLElement, parent: HTMLElement): boolean {\r\n\r\n    let curElement = element;\r\n\r\n    while (curElement) {\r\n        if (curElement == parent)\r\n            return true;\r\n        curElement = curElement.parentElement;\r\n    }\r\n    return false;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function generateNodeId(base: string = \"id_\") {\r\n    while (true) {\r\n        const curId = base + randomString(8);\r\n        if (!document.getElementById(curId))\r\n            return curId;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function removeClass(element: Element, className: string) {\r\n    if (element.classList.contains(className))\r\n        element.classList.remove(className);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function addClass(element: Element, className: string) {\r\n    if (!element.classList.contains(className))\r\n        element.classList.add(className);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isSmallDevice(): boolean {\r\n    return window.innerWidth < 610;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport async function copyText(value: string) {\r\n    if (navigator[\"clipboard\"])\r\n        await navigator.clipboard.writeText(value);\r\n    else {\r\n        const input = document.createElement(\"textarea\");\r\n        document.body.appendChild(input);\r\n        input.value = value\r\n        input.select();\r\n        //input.setSelectionRange(0, input.value.length);\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(input);\r\n    }\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function centerElement(element: HTMLElement, always = true): number {\r\n\r\n    const topOfPage = document.documentElement.scrollTop;\r\n    const heightOfPage = window.innerHeight;\r\n\r\n    let elY = 0;\r\n    let elH = 0;\r\n\r\n    for (let p = element; p && p != document.body; p = <HTMLElement>p.offsetParent)\r\n        elY += p.offsetTop;\r\n\r\n    elH = element.offsetHeight;\r\n\r\n    if (always || elY + elH > topOfPage + heightOfPage || elY < topOfPage)\r\n        document.documentElement.scrollTop = Math.max(0, elY - (heightOfPage - elH) / 2);\r\n\r\n    return elY - document.documentElement.scrollTop;\r\n\r\n}","﻿import { IDictionary } from \"../Abstraction/IDictionary\";\r\n\r\nconst idMap: IDictionary<number> = {};\r\n\r\nexport function generateId(base: string): string {\r\n\r\n    if (!base)\r\n        base = \"item\";\r\n\r\n    if (idMap[base] === undefined)\r\n        idMap[base] = 0;\r\n\r\n    idMap[base]++;\r\n\r\n    if (idMap[base] == 1)\r\n        return base;\r\n\r\n    return base + idMap[base];\r\n}","﻿import { getOrCreateProperty, getTypeName, hasProp } from \"../Core/Utils/ObjectUtils\";\r\nimport { IBindable } from \"./Abstraction/IBindable\";\r\nimport { IObservableProperty } from \"./Abstraction/IObservableProperty\";\r\nimport { IProperty } from \"./Abstraction/IProperty\";\r\nimport { ComputedProperty } from \"./ComputedProperty\";\r\nimport { ObservableProperty } from \"./ObservableProperty\";\r\n\r\nexport type Bindable<TValue> = IProperty<TValue> | TValue;\r\n\r\n/****************************************/\r\n\r\nexport interface IValueConverter<TSrc, TDest> {\r\n\r\n    convertTo(src: TSrc): TDest;\r\n\r\n    convertFrom(dest: TDest): TSrc;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function newProp<TValue>(name: string, value?: TValue, onChanged?: (value: TValue, oldValue: TValue) => void) : IObservableProperty < TValue > {\r\n\r\n    const result = new ObservableProperty<TValue>({\r\n        value: value\r\n    }, name);\r\n\r\n    if (onChanged)\r\n        result.subscribe(onChanged);\r\n    return result;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport namespace Properties {\r\n\r\n    export function converter<TObj extends object, TKey extends keyof TObj, TValue extends TObj[TKey], TProp>(obj: TObj, propName: TKey, convert: (value: TValue) => TProp, convertBack?: (value: TProp) => TValue): IProperty<TProp> {\r\n\r\n        let conValue;\r\n\r\n        return {\r\n\r\n            get: () => {\r\n                if (conValue == undefined)\r\n                    conValue = convert(obj[propName] as TValue);\r\n                return conValue;\r\n            },\r\n\r\n            set: value => {\r\n                conValue = value;\r\n                if (convertBack)\r\n                    obj[propName] = convertBack(value);\r\n            },\r\n\r\n            name: <string>propName\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function create<TObj extends IBindable, TKey extends (keyof TObj) & string, TValue extends TObj[TKey]>(obj: TObj, propName: TKey, property?: IObservableProperty<TValue>): IObservableProperty<TValue> {\r\n\r\n        let desc = Object.getOwnPropertyDescriptor(obj, propName);\r\n        if (!desc) {\r\n            console.warn(\"'\", propName, \"' not defined in \", getTypeName(obj));\r\n            desc = {};\r\n        }\r\n\r\n        if (!property)\r\n            property = new ObservableProperty(desc, <string>propName);\r\n\r\n        const props = getOrCreateProperty<any>(obj, \"@props\", {});\r\n        props[propName as any] = property;\r\n\r\n        Object.defineProperty(obj, propName, {\r\n\r\n            get: () => property.get(),\r\n\r\n            set: (newValue) => property.set(newValue)\r\n        });\r\n\r\n        return property;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function createAll<TObj>(obj: TObj): TObj {\r\n\r\n        const props = Object.getOwnPropertyNames(obj);\r\n\r\n        props.forEach(propName => {\r\n\r\n            if (propName[0] == \"_\" || propName[0] == \"$\")\r\n                return;\r\n\r\n            const propDesc = Object.getOwnPropertyDescriptor(obj, propName);\r\n\r\n            if (propDesc && !propDesc.writable)\r\n                return;\r\n\r\n            create(obj, <any>propName);\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function get<TObj extends IBindable, TKey extends keyof TObj, TValue extends TObj[TKey]>(obj: TObj, propName: TKey): IProperty<TValue> {\r\n\r\n        if (hasProp(obj, \"@props\")) {\r\n            const prop = obj[\"@props\"][propName];\r\n            if (prop)\r\n                return prop;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function getOrCreate<TObj extends IBindable, TKey extends keyof TObj & string, TValue extends TObj[TKey]>(obj: TObj, propName: TKey, property?: IObservableProperty<TValue>): IObservableProperty<TValue> {\r\n\r\n        const prop = get(obj, propName);\r\n        if (prop)\r\n            return <IObservableProperty<TValue>>prop;\r\n        return create(obj, propName, property);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function isProperty(obj: any): obj is IProperty<any> {\r\n\r\n        return (obj && typeof obj == \"object\" && typeof obj[\"get\"] == \"function\" && obj[\"get\"].length == 0 && typeof obj[\"set\"] == \"function\" && obj[\"set\"].length == 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function isObservableProperty(obj: any): obj is IObservableProperty<any> {\r\n        //TODO improve this check\r\n        return obj instanceof ObservableProperty || obj instanceof ComputedProperty;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function bind<TDest, TSrc = TDest>(dest: IObservableProperty<TDest>, src: Bindable<TSrc>, converter: IValueConverter<TSrc, TDest>) {\r\n\r\n        let value: TSrc;\r\n\r\n        if (isProperty(src)) {\r\n\r\n            if (isObservableProperty(src)) {\r\n                src.subscribe(value => {\r\n                    if (converter)\r\n                        dest.set(converter.convertTo(value as TSrc));\r\n                    else\r\n                        dest.set(value);\r\n                });\r\n            }\r\n\r\n            dest.subscribe(value => {\r\n                if (converter)\r\n                    (src as IProperty<TSrc>).set(converter.convertFrom(value as TDest));\r\n                else\r\n                    (src as IProperty<TSrc>).set(value as unknown as TSrc);\r\n            });\r\n\r\n            value = src.get();\r\n        }\r\n        else\r\n            value = <TSrc>src;\r\n\r\n        if (converter)\r\n            dest.set(converter.convertTo(value));\r\n        else\r\n            dest.set(value as unknown as TDest);\r\n\r\n        return undefined;\r\n    }\r\n}","﻿import { IFactory } from \"../../Core/Abstraction/IFactory\";\r\nimport { ISize } from \"../Types/Size\";\r\nimport { IHTMLAttach } from \"./IHTMLAttach\";\r\n\r\n\r\ndeclare global {\r\n\r\n    export interface IServices {\r\n\r\n        mapManager: IFactory<IMapManager>;\r\n    }\r\n}\r\n\r\n\r\nexport enum MapShapeType {\r\n    None,\r\n    Circle\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IMapStyle {\r\n\r\n    fillColor?: string;\r\n    strokeColor?: string;\r\n    strokeSize?: number;\r\n    opacity?: number;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface ICreateMapItemOptions {\r\n\r\n    id: string;\r\n    title?: string;\r\n    description?: string;\r\n    location?: IGeoPoint;\r\n    icon?: any;\r\n    color?: string;\r\n    shape?: IMapShape;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IStaticMapPin {\r\n    center: IGeoPoint;\r\n    icon?: any;\r\n    name?: string;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IStaticMapOptions {\r\n    size?: ISize;\r\n    center?: IGeoPoint;\r\n    pins?: IStaticMapPin[];\r\n    zoomLevel?: number;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IMapManager extends IHTMLAttach {\r\n\r\n    addItems(itemsOptions: ICreateMapItemOptions[]): IMapItem[];\r\n\r\n    removeItem(item: IMapItem);\r\n\r\n    getItemById(id: string): IMapItem;\r\n\r\n    clear();\r\n\r\n    centerTo(location: IGeoPoint, radiusMeters?: number);\r\n\r\n    zoomToItems();\r\n\r\n    updateSize();\r\n\r\n    getAddressAsync(location: IGeoPoint): Promise<string>;\r\n\r\n    getLocationAsync(address: string): Promise<IGeoPoint>;\r\n\r\n    staticMap(options: IStaticMapOptions): string;\r\n\r\n    showCurrentPositionAsync(value: boolean): Promise<void>;\r\n\r\n    selectedItem: IMapItem;\r\n\r\n    onAttached();\r\n\r\n    onSelectionChanged();\r\n\r\n    isReady: boolean;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IGeoPoint {\r\n    latitude: number;\r\n    longitude: number;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IMapItem {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    location: IGeoPoint;\r\n    icon: string;\r\n    color: string;\r\n    shape: IMapShape;\r\n}\r\n\r\n/*******************************/\r\n\r\nexport interface IMapShape {\r\n    type: MapShapeType;\r\n    radius?: number;\r\n    style?: IMapStyle;\r\n}","﻿import { equals } from \"./ObjectUtils\";\r\nimport { delayAsync } from \"./PromiseUtils\";\r\n\r\nexport function equalsArray<T>(a: T[], b: T[]): boolean {\r\n\r\n    if (!Array.isArray(a) || !Array.isArray(b))\r\n        return false;\r\n\r\n    if (a.length != b.length)\r\n        return false;\r\n\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (!equals(a[i], b[i]))\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport async function forEachAsync<T>(items: T[], chunkSize: number, action: (item: T, index: number) => void) {\r\n\r\n    let index = 0;\r\n\r\n    for (let item of items) {\r\n\r\n        action(item, index);\r\n        if (index % chunkSize == 0)\r\n            await delayAsync(0);\r\n        index++;\r\n    }\r\n}","﻿import { isCloneable, isFunction, isObject, isString } from \"../Helpers/TypeCheck\";\r\nimport { Type } from \"../Types/Types\";\r\nimport { equalsArray } from \"./ArrayUtils\";\r\n\r\nexport function isEmpty(value: any): boolean {\r\n    return value === undefined || value === null || (Array.isArray(value) && value.length == 0);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function equals(valueA: any, valueB: any): boolean {\r\n\r\n    if (Array.isArray(valueA) || Array.isArray(valueB))\r\n        return equalsArray(valueA, valueB);\r\n\r\n    return valueA == valueB;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function createInstance<TObj>(typeName: string, ...args: any[]): TObj {\r\n\r\n    const parts = typeName.split(\".\");\r\n\r\n    let curType: any = window;\r\n    for (let part of parts)\r\n        curType = curType[part];\r\n\r\n    return new curType(...args);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function hasProp(obj: object, propName: string): boolean {\r\n    return (propName in obj);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isInstanceOf<T>(obj: any, type: Type<T>): obj is T {\r\n\r\n    if (!obj)\r\n        return;\r\n    let curType = getType(obj);\r\n    while (curType != null) {\r\n        if (curType == type)\r\n            return true;\r\n        curType = getBaseType(curType);\r\n    }\r\n    return false;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getOrCreateProperty<T>(obj: object, propName: string, value: T): T {\r\n    let desc = Object.getOwnPropertyDescriptor(obj, propName);\r\n    if (!desc) {\r\n        createProperty(obj, propName, value);\r\n        return value;\r\n    }\r\n    return get(obj, propName);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function createProperty(obj: object, propName: string, value: any) {\r\n    if (propName.substr(0, 1) == \"@\") {\r\n        Object.defineProperty(obj, propName, {\r\n            writable: true,\r\n            enumerable: false,\r\n            value: value\r\n        });\r\n    }\r\n    else {\r\n        Object.defineProperty(obj, propName, {\r\n            value: value\r\n        });\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function get<T>(obj: object, propName: string, defValue?: T): T {\r\n\r\n    if (!obj)\r\n        return defValue;\r\n    const value = obj[propName];\r\n    if (value === undefined || value === null)\r\n        return defValue;\r\n    return value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function set(obj: object, propName: string, value: any) {\r\n\r\n    if (propName.substr(0, 1) == \"@\") {\r\n        const desc = Object.getOwnPropertyDescriptor(obj, propName);\r\n        if (!desc)\r\n            createProperty(obj, propName, value);\r\n        else\r\n            obj[propName] = value;\r\n    }\r\n    else\r\n        obj[propName] = value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function setTypeName(obj: object | Type<any>, name: string) {\r\n\r\n    if (isObject(obj))\r\n        set(obj, \"@typeName\", name);\r\n    else\r\n        set(Object.getPrototypeOf(obj), \"@typeName\", name);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getTypeName(obj: any) {\r\n\r\n    if (!obj)\r\n        return undefined;\r\n\r\n    let name = obj[\"@typeName\"];\r\n\r\n    if (!name) {\r\n        name = typeof obj;\r\n\r\n        if (name == \"function\")\r\n            return getFunctionName(obj);\r\n\r\n        if (name == \"object\") {\r\n\r\n            const constFunc = obj.constructor;\r\n            if (constFunc)\r\n                return getTypeName(constFunc);\r\n        }\r\n    }\r\n    return name;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getBaseType(ctr: Type<any>): Type<any>;\r\n\r\nexport function getBaseType(obj: object): Type<any>;\r\n\r\nexport function getBaseType(objOrFun: object | Type<any>): Type<any> {\r\n\r\n    let proto: any;\r\n\r\n    if (isFunction(objOrFun))\r\n        proto = objOrFun.prototype;\r\n    else\r\n        proto = Object.getPrototypeOf(objOrFun);\r\n\r\n    return Object.getPrototypeOf(proto).constructor;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getType<TObj>(obj: TObj): Type<TObj>\r\n\r\nexport function getType<TObj>(typeName: string): Type<TObj>\r\n\r\nexport function getType<TObj>(typeOrName: string | object): Type<TObj> {\r\n\r\n    if (isString(typeOrName)) {\r\n        const parts = typeOrName.split(\".\");\r\n        let curObj = self;\r\n        parts.forEach(part => {\r\n            curObj = curObj[part];\r\n            if (!curObj)\r\n                return null;\r\n        });\r\n        return <any>curObj;\r\n    }\r\n\r\n    return (typeOrName as object).constructor as Type<TObj>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function getFunctionName(func: Function): string {\r\n\r\n    let curName = func.name;\r\n    if (!curName) {\r\n        const funcNameRegex = /function\\s([^(]{1,})\\(/;\r\n        const results = (funcNameRegex).exec(func.toString());\r\n        curName = (results && results.length > 1) ? results[1].trim() : \"\";\r\n    }\r\n    return curName;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function clone<TObj>(obj: TObj): TObj {\r\n\r\n    if (isCloneable(obj))\r\n        return obj.clone();\r\n\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function registerType(type: Function, name: string) {\r\n    set(type, \"@typeName\", name);\r\n}","﻿import { IObservableProperty, IPropertyChangedHandler } from \"./Abstraction/IObservableProperty\";\r\nimport { forEachRev } from \"./Binder\";\r\n\r\nexport class ComputedProperty<TValue = any> implements IObservableProperty<TValue> {\r\n\r\n    private _handlers: IPropertyChangedHandler<TValue>[];\r\n\r\n    /****************************************/\r\n\r\n    constructor(getter: () => TValue, name: string) {\r\n\r\n        this.get = getter;\r\n\r\n        this.name = name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(): TValue {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set(value: TValue) {\r\n\r\n        //throw \"Not supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notifyChanged() {\r\n\r\n        const value = this.get();\r\n\r\n        forEachRev(this._handlers, handler =>\r\n            handler(value, undefined));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    subscribe(handler: IPropertyChangedHandler<TValue>) {\r\n        if (!this._handlers)\r\n            this._handlers = [];\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index == -1)\r\n            this._handlers.push(handler);\r\n        return handler;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    unsubscribe(handler: IPropertyChangedHandler<TValue>) {\r\n        if (!this._handlers)\r\n            return;\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index != -1)\r\n            this._handlers.splice(index, 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly name: string;\r\n\r\n    readonly isReadOnly = true;\r\n}","﻿import { IObservableProperty, IPropertyChangedHandler } from \"./Abstraction/IObservableProperty\";\r\nimport { forEachRev } from \"./Binder\";\r\n\r\nexport class ObservableProperty<TValue = any> implements IObservableProperty<TValue> {\r\n\r\n    private _handlers: IPropertyChangedHandler<TValue>[];\r\n    private _descriptor: PropertyDescriptor;\r\n\r\n    /****************************************/\r\n\r\n    constructor(desc: PropertyDescriptor, name: string) {\r\n        this._descriptor = desc;\r\n        this.name = name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(): TValue {\r\n        if (this._descriptor.get)\r\n            return this._descriptor.get();\r\n        return this._descriptor.value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set(value: TValue) {\r\n\r\n        const oldValue = this.get();\r\n\r\n        if (this._descriptor.set)\r\n            this._descriptor.set(value);\r\n        else\r\n            this._descriptor.value = value;\r\n\r\n        if (oldValue != value && this._handlers) {\r\n            forEachRev(this._handlers, handler =>\r\n                handler(value, oldValue));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notifyChanged() {\r\n\r\n        const value = this.get();\r\n\r\n        forEachRev(this._handlers, handler =>\r\n            handler(value, undefined));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    subscribe(handler: IPropertyChangedHandler<TValue>) {\r\n        if (!this._handlers)\r\n            this._handlers = [];\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index == -1)\r\n            this._handlers.push(handler);\r\n        return handler;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    unsubscribe(handler: IPropertyChangedHandler<TValue>) {\r\n        if (!this._handlers)\r\n            return;\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index != -1)\r\n            this._handlers.splice(index, 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly name: string;\r\n}","﻿import { isObservableList } from \"../Core/Helpers/TypeCheck\";\r\nimport { IObservableListHandler } from \"./Abstraction/IObservableList\";\r\nimport { IObservableProperty, IPropertyChangedHandler } from \"./Abstraction/IObservableProperty\";\r\nimport { Properties } from \"./Properties\";\r\n\r\nexport type BindValue<TModel, TValue> = TValue | IGetter<TModel, TValue>;\r\n\r\ninterface IGetter<TObj, TValue> {\r\n    (model: TObj): TValue;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IPropertySubscription<TValue = any> {\r\n\r\n    source: any;\r\n\r\n    property: IObservableProperty<TValue>;\r\n\r\n    handler: IPropertyChangedHandler<TValue> | IObservableListHandler<any>;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IBinding<TModel, TValue = any> {\r\n\r\n    lastValue: TValue;\r\n\r\n    value(model: TModel): TValue;\r\n\r\n    action(newValue: TValue, oldValue?: TValue, isUpdate?: boolean, isClear?: boolean): void;\r\n\r\n    subscriptions: IPropertySubscription[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPropertyAccess {\r\n    obj: any;\r\n    propName: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Binder<TModel> {\r\n\r\n    private _bindings: IBinding<TModel>[] = [];\r\n    private _modelBinders: Binder<TModel>[] = [];\r\n    private _depBinders: Binder<any>[] = [];\r\n\r\n    /****************************************/\r\n\r\n    constructor(model?: TModel) {\r\n        this.model = model;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected register(binder: Binder<TModel>) {\r\n\r\n        this._modelBinders.push(binder);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected registerDependant(binder: Binder<any>) {\r\n\r\n        this._depBinders.push(binder);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected unregisterDependant(binder: Binder<any>) {\r\n        const index = this._depBinders.indexOf(binder);\r\n        if (index != -1)\r\n            this._depBinders.splice(index, 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getBindValue<TValue>(value: BindValue<TModel, TValue>): TValue {\r\n        if (typeof value == \"function\")\r\n            return (value as IGetter<TModel, TValue>)(this.model);\r\n        return <TValue>value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bind<TValue>(value: BindValue<TModel, TValue>, action: (newValue: TValue, oldValue?: TValue, isUpdate?: boolean, isClear?: boolean) => void) {\r\n\r\n        if (typeof value == \"function\") {\r\n\r\n            const binding = <IBinding<TModel, TValue>>{\r\n                value: <IGetter<TModel, TValue>>value,\r\n                action: action,\r\n                subscriptions: [],\r\n                lastValue: undefined\r\n            };\r\n\r\n            this._bindings.push(binding);\r\n\r\n            binding.value(this.createProxy(this.model, (obj, propName) => {\r\n                this.subscribe(obj, propName, binding);\r\n                return true;\r\n            }));\r\n\r\n            const bindValue = binding.value(this.model);\r\n\r\n            binding.action(bindValue, undefined, false);\r\n\r\n            binding.lastValue = bindValue;\r\n        }\r\n        else\r\n            action(value as TValue, undefined, false);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected unsubscribe(binding: IBinding<TModel>, cleanValue: boolean) {\r\n\r\n        binding.subscriptions.forEach(sub => {\r\n\r\n            if (isObservableList(sub.source))\r\n                sub.source.unsubscribe(sub.handler as IObservableListHandler<any>);\r\n            else\r\n                sub.property.unsubscribe(sub.handler as IPropertyChangedHandler<any>);\r\n        });\r\n\r\n        if (cleanValue && binding.lastValue) {\r\n            binding.action(null, binding.lastValue, true, true);\r\n            binding.lastValue = null;\r\n        }\r\n\r\n        binding.subscriptions = [];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected subscribe(obj, propName: string, binding: IBinding<TModel>) {\r\n\r\n        for (let i = 0; i < binding.subscriptions.length; i++) {\r\n            const sub = binding.subscriptions[i];\r\n            if (sub.source == obj && sub.property.name == propName)\r\n                return;\r\n        }\r\n\r\n        if (isObservableList(obj)) {\r\n\r\n            const handler = <IObservableListHandler<any>>{\r\n                onChanged: () => {\r\n\r\n                    const bindValue = binding.value(this.model);\r\n\r\n                    if (bindValue == binding.lastValue)\r\n                        return;\r\n\r\n                    binding.action(bindValue, binding.lastValue, true);\r\n\r\n                    binding.lastValue = bindValue;\r\n                }\r\n            };\r\n\r\n            obj.subscribe(handler);\r\n\r\n            binding.subscriptions.push({\r\n                source: obj,\r\n                property: null,\r\n                handler: handler\r\n            });\r\n        }\r\n        else {\r\n\r\n            const propDesc = Object.getOwnPropertyDescriptor(obj, propName);\r\n\r\n            if (!propDesc || (!propDesc.writable && !propDesc.set)) {\r\n                console.warn(\"Property \", propName, \" for object \", obj, \" not exists or is not writeable.\");\r\n                return;\r\n            }\r\n\r\n            const prop = Properties.getOrCreate(obj, propName);\r\n\r\n            const handler = (value, oldValue) => {\r\n\r\n                const bindValue = binding.value(this.model);\r\n\r\n                if (bindValue == binding.lastValue)\r\n                    return;\r\n\r\n                this.unsubscribe(binding, false);\r\n\r\n                binding.value(this.createProxy(this.model, (obj, propName) => {\r\n                    this.subscribe(obj, propName, binding);\r\n                    return true;\r\n                }));\r\n\r\n                binding.action(bindValue, binding.lastValue, true);\r\n\r\n                binding.lastValue = bindValue;\r\n            };\r\n\r\n            prop.subscribe(handler);\r\n\r\n            binding.subscriptions.push({\r\n                source: obj,\r\n                property: prop,\r\n                handler: handler\r\n            });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getBindingProperty<TValue>(value: BindValue<TModel, TValue>): IObservableProperty<TValue> {\r\n        if (typeof value != \"function\")\r\n            return null;\r\n\r\n        let lastProp: IPropertyAccess;\r\n        (value as IGetter<TModel, TValue>)(this.createProxy(this.model, (obj, propName) => {\r\n            lastProp = {\r\n                obj: obj,\r\n                propName: propName\r\n            }\r\n            return true;\r\n        }));\r\n\r\n        if (lastProp && lastProp.obj)\r\n            return Properties.getOrCreate(lastProp.obj, lastProp.propName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createProxy<TObj>(obj: TObj, action: (obj: any, propName: string) => boolean): TObj {\r\n\r\n        interface IListProxy {\r\n            count?: number;\r\n\r\n            get?: (index: number) => any;\r\n\r\n            _innerProxies?: { [key: number]: any };\r\n        }\r\n\r\n        if (!obj || typeof (obj) != \"object\")\r\n            return obj;\r\n\r\n        let propList: string[] = [];\r\n\r\n        const proxy = {};\r\n\r\n        if (isObservableList(obj)) {\r\n\r\n            const listProxy = <IListProxy>proxy;\r\n\r\n            propList.push(\"count\");\r\n\r\n            listProxy._innerProxies = {};\r\n\r\n            listProxy.get = (index) => {\r\n\r\n                if (!(index in listProxy._innerProxies)) {\r\n\r\n                    if (action(obj, index.toString()))\r\n                        listProxy._innerProxies[index] = this.createProxy(obj.get(index), action);\r\n                    else\r\n                        listProxy._innerProxies[index] = obj.get(index);\r\n                }\r\n\r\n                return listProxy._innerProxies[index];\r\n            }\r\n        }\r\n        else {\r\n            for (let propName in obj)\r\n                propList.push(propName);\r\n        }\r\n\r\n        for (let propName of propList) {\r\n\r\n            let innerProxy;\r\n            let isInit = false;\r\n            let lastValueSet;\r\n\r\n            Object.defineProperty(proxy, propName, {\r\n                get: () => {\r\n                    if (!isInit) {\r\n\r\n                        if (action(obj, propName))\r\n                            innerProxy = this.createProxy(obj[propName], action);\r\n                        else\r\n                            innerProxy = obj[propName];\r\n\r\n                        isInit = true;\r\n                    }\r\n                    return innerProxy;\r\n                },\r\n                set: value => {\r\n\r\n                    if (lastValueSet == value)\r\n                        return;\r\n\r\n                    if (action(obj, propName))\r\n                        innerProxy = this.createProxy(value, action);\r\n                    else\r\n                        innerProxy = value;\r\n\r\n                    lastValueSet = value;\r\n\r\n                    isInit = true;\r\n                }\r\n            });\r\n        }\r\n        return <TObj>proxy;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected cleanBindings(cleanValue: boolean) {\r\n\r\n        this._bindings.forEach(binding =>\r\n            this.unsubscribe(binding, cleanValue));\r\n\r\n        this._modelBinders.forEach(binder =>\r\n            binder.cleanBindings(cleanValue));\r\n\r\n        this._depBinders.forEach(binder =>\r\n            binder.cleanBindings(cleanValue));\r\n\r\n        this._modelBinders = [];\r\n        this._bindings = [];\r\n        this._depBinders = [];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateModel(model: TModel) {\r\n\r\n        this.model = model;\r\n\r\n        forEachRev(this._bindings, binding => {\r\n            const value = binding.value(model);\r\n            if (binding.lastValue == value)\r\n                return;\r\n            binding.action(value, binding.lastValue, true)\r\n            binding.lastValue = value;\r\n        });\r\n\r\n        forEachRev(this._modelBinders, binder =>\r\n            binder.updateModel(model));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    model: TModel;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function forEachRev<T>(items: T[], action: (item: T) => void) {\r\n\r\n    if (!items || items.length == 0)\r\n        return;\r\n\r\n    for (let i = items.length - 1; i >= 0; i--)\r\n        action(items[i]);\r\n}","﻿import { DynamicString, IDynamicStringConfig, LocalString, StringUsage } from \"../Core/Types/DynamicString\";\r\nimport { IBindable } from \"./Abstraction/IBindable\";\r\nimport { IObservableProperty, IPropertyChangedHandler } from \"./Abstraction/IObservableProperty\";\r\nimport { Binder } from \"./Binder\";\r\nimport { ComputedProperty } from \"./ComputedProperty\";\r\nimport { Bindable, IValueConverter, Properties } from \"./Properties\";\r\n\r\nexport class BindableObject implements IBindable {\r\n\r\n    private _computedBinder: Binder<this>;\r\n\r\n    prop<TKey extends keyof this & string>(propName: TKey): IObservableProperty<this[TKey]> {\r\n        return Properties.getOrCreate(this, propName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static bindValue<T>(value: Bindable<T>): T {\r\n        if (Properties.isProperty(value))\r\n            return value.get();\r\n        return <any>value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bindConfig<TConfig, TKey extends keyof this & keyof TConfig & string, TSrc extends TConfig[TKey], TDest extends this[TKey]>(propName: TKey, config: TConfig, converter?: IValueConverter<TSrc, TDest>, onValueChanged?: IPropertyChangedHandler<TDest>) {\r\n\r\n        this.bind(propName, config && propName in config ? <Bindable<TSrc>>config[propName] : undefined, converter, onValueChanged);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n\r\n    bindConfigString<TConfig, TKey extends keyof this & keyof TConfig & string>(propName: TKey, config: TConfig, configOrUsage?: IDynamicStringConfig | StringUsage, onValueChanged?: IPropertyChangedHandler<string>) {\r\n\r\n        this.bindString(propName, config && propName in config ? <any>config[propName] : undefined, configOrUsage, onValueChanged);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    computed<TKey extends keyof this & string, TValue extends this[TKey]>(propName: TKey, compute: (model: this) => TValue) {\r\n\r\n        return Properties.create(this, propName, this.createComputed(compute, <string>propName));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    createComputed<TValue>(compute: (model: this) => TValue, name?: string): IObservableProperty<TValue> {\r\n\r\n        if (!this._computedBinder)\r\n            this._computedBinder = new Binder(this);\r\n\r\n        const prop = new ComputedProperty(() => compute(this), name);\r\n\r\n        this._computedBinder.bind(compute, () => prop.notifyChanged());\r\n\r\n        return prop;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bind<TKey extends keyof this & string, TSrc, TDest extends this[TKey]>(propName: TKey, value: Bindable<TSrc>, converter?: IValueConverter<TSrc, TDest>, onValueChanged?: IPropertyChangedHandler<TDest>) {\r\n\r\n        const prop = Properties.getOrCreate(this, propName);\r\n\r\n        if (onValueChanged)\r\n            prop.subscribe(onValueChanged);\r\n\r\n        if (value !== undefined)\r\n            Properties.bind(prop, value, converter);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bindString<TKey extends keyof this & string>(propName: TKey, value: Bindable<LocalString>, configOrUsage?: IDynamicStringConfig | StringUsage, onValueChanged?: IPropertyChangedHandler<string>) {\r\n\r\n        return this.bind(propName, value, {\r\n            convertTo: a => <any>DynamicString.getValue(a, <any>configOrUsage),\r\n            convertFrom: a => <any>a\r\n        }, <any>onValueChanged);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    apply(block: (obj: this) => any): this {\r\n        block(this);\r\n        return this;\r\n    }\r\n}","﻿import { IActivable } from \"../Abstraction/IActivable\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IEditable } from \"../Abstraction/IEditable\";\r\nimport { IHTMLContainer } from \"../Abstraction/IHTMLContainer\";\r\nimport { ISelectable } from \"../Abstraction/ISelectable\";\r\nimport { ISingleItemSelector } from \"../Abstraction/ISingleItemSelector\";\r\nimport { IValidable } from \"../Abstraction/IValidator\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport function isAsyncEditor(value: any): value is IAsyncEditor<any, any> {\r\n\r\n    return value && typeof value == \"object\" && \"editAsync\" in value && typeof value[\"editAsync\"] == \"function\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isView(value: any): value is IView {\r\n\r\n    return value && typeof value == \"object\" && \"parentView\" in value && \"template\" in value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isActivable(value: any): value is IActivable {\r\n\r\n    return value && typeof value == \"object\" && typeof value[\"activateAsync\"] == \"function\" && value[\"activateAsync\"].length == 0;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isSelectable(value: any): value is ISelectable {\r\n\r\n    return value && typeof value == \"object\" && \"isSelected\" in value && \"select\" in value && typeof value[\"select\"] == \"function\";\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isSingleItemSelector(value: any): value is ISingleItemSelector<any> {\r\n\r\n    return value && typeof value == \"object\" && \"selectedItem\" in value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isAsyncLoad(value: any): value is IAsyncLoad {\r\n\r\n    return value && typeof value == \"object\" && typeof value[\"loadAsync\"] == \"function\" && value[\"loadAsync\"].length == 0;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isValidable(value: any): value is IValidable {\r\n\r\n    return value && typeof value == \"object\" && typeof value[\"validateAsync\"] == \"function\" && value[\"validateAsync\"].length < 2;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isHTMLContainer(value: any): value is IHTMLContainer {\r\n\r\n    return value && typeof value == \"object\" && \"nodes\" in value;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function isEditable(value: any): value is IEditable<any> {\r\n\r\n    return value && typeof value == \"object\" && \"createEditor\" in value && typeof value.createEditor == \"function\";\r\n}","﻿export interface IBehavoir<TElement extends HTMLElement = HTMLElement, TModel = any> {\r\n\r\n    attach(element: TElement, model?: TModel);\r\n\r\n    detach(element: TElement, model?: TModel);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport var behavoirCatalog: { [key: string]: () => IBehavoir } = {}","﻿import { linq } from \"../Core/Linq\";\r\nimport { getTypeName } from \"../Core/Utils/ObjectUtils\";\r\nimport { isHTMLContainer } from \"../View/Helpers/TypeCheck\";\r\nimport { behavoirCatalog, IBehavoir } from \"./Abstraction/IBehavoir\";\r\nimport { IObservableList, IObservableListHandler } from \"./Abstraction/IObservableList\";\r\nimport { ITemplate } from \"./Abstraction/ITemplate\";\r\nimport { CatalogTemplate, ITemplateProvider } from \"./Abstraction/ITemplateProvider\";\r\nimport { Binder, BindValue } from \"./Binder\";\r\n\r\ntype TemplateValueMap<TModel, TObj extends { [key: string]: any }> = { [TKey in keyof TObj]?: BindValue<TModel, TObj[TKey]> }\r\n\r\ntype RefNodePosition = \"after\" | \"before\" | \"inside\";\r\n\r\ntype TemplateInlineMode = \"never\" | \"always\" | \"auto\" | \"explicit\" | \"replace-parent\" | \"embed-child\" | \"inherit\";\r\n\r\n/****************************************/\r\n\r\nexport const TemplateCatalog: { [key: string]: ITemplate<any> } = {};\r\n\r\nexport function defineTemplate(name: string, template: ITemplate<any>) {\r\n    TemplateCatalog[name] = template;\r\n}\r\n\r\nwindow[\"__defineTemplate\"] = defineTemplate;\r\n\r\n/****************************************/\r\n\r\nexport class TemplateBuilder<TModel, TElement extends HTMLElement = HTMLElement> extends Binder<TModel>{\r\n\r\n    protected _endElement: Node;\r\n    protected _startElement: Node;\r\n    protected _lastElement: Node;\r\n    protected _childCount = 0;\r\n    protected _updateCount = 0;\r\n    protected _updateNode: Node = null;\r\n\r\n    /****************************************/\r\n\r\n    constructor(model: TModel, element: TElement, parent?: TemplateBuilder<any>) {\r\n\r\n        super(model);\r\n\r\n        this.parent = parent;\r\n\r\n        this.element = element;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected beginTemplate<TInnerModel>(model?: TInnerModel, refNode?: Node, refNodePos: RefNodePosition = \"after\", marker?: string): TemplateBuilder<TInnerModel> {\r\n\r\n        const innerBuilder = new TemplateBuilder<TInnerModel>(model, this.element, this);\r\n\r\n        innerBuilder._lastElement = this._lastElement;\r\n\r\n        innerBuilder.begin(refNode, refNodePos, marker);\r\n\r\n        if (this.inlineMode == \"explicit\") {\r\n            innerBuilder.isInline = this.isInline;\r\n            innerBuilder.inlineMode = \"inherit\";\r\n        }\r\n\r\n        return innerBuilder;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected endTemplate<TInnerMode>(childBuilder: TemplateBuilder<TInnerMode>) {\r\n\r\n        childBuilder.end();\r\n\r\n        if (childBuilder.element == this.element)\r\n            this._lastElement = childBuilder._lastElement;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected beginUpdate() {\r\n\r\n        if (this._updateCount == 0 && this.element.parentNode) {\r\n\r\n            this._updateNode = document.createTextNode(\"\");\r\n            this.element.parentNode.replaceChild(this._updateNode, this.element)\r\n        }\r\n        this._updateCount++;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected endUpdate() {\r\n\r\n        this._updateCount--;\r\n\r\n        if (this._updateCount == 0 && this._updateNode) {\r\n\r\n            this._updateNode.parentNode.replaceChild(this.element, this._updateNode)\r\n            this._updateNode = null;\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    begin(refNode?: Node, refNodePos?: RefNodePosition, marker?: string): this {\r\n\r\n        this._startElement = marker ? document.createComment(\"begin-\" + marker) : document.createTextNode(\"\");\r\n\r\n        if (refNode) {\r\n\r\n            if (refNodePos == \"after\") {\r\n                if (!refNode.nextSibling)\r\n                    refNode.parentNode.appendChild(this._startElement);\r\n                else\r\n                    refNode.parentNode.insertBefore(this._startElement, refNode.nextSibling);\r\n            }\r\n\r\n            else if (refNodePos == \"before\")\r\n                refNode.parentNode.insertBefore(this._startElement, refNode);\r\n\r\n            else if (refNodePos == \"inside\")\r\n                refNode.appendChild(this._startElement);\r\n        }\r\n        else\r\n            this.appendChild(this._startElement);\r\n\r\n        this._lastElement = this._startElement;\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    end(): this {\r\n\r\n        if (this._endElement)\r\n            return;\r\n\r\n        if (this._startElement.nodeType == Node.COMMENT_NODE)\r\n            this._endElement = document.createComment(this._startElement.textContent.replace(\"begin-\", \"end-\"));\r\n        else\r\n            this._endElement = document.createTextNode(\"\");\r\n\r\n        this.appendChild(this._endElement);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear(remove: boolean = false): this {\r\n\r\n        this._childCount = 0;\r\n\r\n        if (!this._endElement) {\r\n            console.warn(\"Missing end element: \" + this.model);\r\n            this.end();\r\n        }\r\n\r\n        let curNode = this._endElement;\r\n\r\n        while (true) {\r\n\r\n            let mustDelete = true;\r\n\r\n            if ((curNode == this._startElement || curNode == this._endElement) && !remove)\r\n                mustDelete = false;\r\n\r\n            const prev = curNode.previousSibling;\r\n\r\n            if (mustDelete) {\r\n\r\n                if (mustDelete)\r\n                    curNode.parentNode.removeChild(curNode);\r\n            }\r\n\r\n            if (curNode == this._startElement)\r\n                break;\r\n\r\n            curNode = prev;\r\n        }\r\n\r\n        if (remove) {\r\n            this._endElement = null;\r\n            this._startElement = null;\r\n            this._lastElement = null;\r\n        }\r\n        else\r\n            this._lastElement = this._startElement;\r\n\r\n        this.cleanBindings(true);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    appendChild(node: Node): this {\r\n\r\n        if (!this._lastElement || !this._lastElement.parentNode) //TODO this || didn't exists\r\n            this.element.appendChild(node);\r\n        else {\r\n            if (this._lastElement.nextSibling)\r\n                this._lastElement.parentNode.insertBefore(node, this._lastElement.nextSibling);\r\n            else\r\n                this._lastElement.parentNode.appendChild(node);\r\n\r\n        }\r\n        //TODO this line was inside else\r\n        this._lastElement = node;\r\n        //\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    foreach<TItem>(selector: BindValue<TModel, IObservableList<TItem> | TItem[]>, templateOrName: CatalogTemplate<TItem>): this {\r\n        const value = this.getBindValue(selector);\r\n        if (Array.isArray(value) || !value)\r\n            this.foreachArray(selector as any, templateOrName);\r\n        else\r\n            this.foreachList(selector as any, templateOrName);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    foreachList<TItem>(selector: BindValue<TModel, IObservableList<TItem>>, templateOrName: CatalogTemplate<TItem>): this {\r\n\r\n        let itemsBuilders: TemplateBuilder<TItem>[] = [];\r\n\r\n        const template = this.loadTemplate(templateOrName);\r\n\r\n        const marker = document.createTextNode(\"\");\r\n\r\n        this.appendChild(marker);\r\n\r\n        let handler: IObservableListHandler<TItem> = {\r\n\r\n            onClear: () => {\r\n                itemsBuilders.forEach(a => a.clear(true));\r\n                itemsBuilders = [];\r\n            },\r\n\r\n            onItemRemoved: (item, index, reason) => {\r\n\r\n                if (reason == \"replace\" || reason == \"clear\")\r\n                    return;\r\n\r\n                itemsBuilders[index].clear(true);\r\n                itemsBuilders.splice(index, 1);\r\n            },\r\n\r\n            onItemSwap: (index: number, newIndex: number) => {\r\n\r\n            },\r\n\r\n            onItemReplaced: (newItem, oldItem, index) => {\r\n\r\n                itemsBuilders[index].updateModel(newItem);\r\n            },\r\n\r\n            onItemAdded: (item, index, reason) => {\r\n\r\n                if (reason == \"replace\")\r\n                    return;\r\n\r\n                let itemBuilder: TemplateBuilder<TItem>;\r\n\r\n                if (index == itemsBuilders.length) {\r\n                    if (index == 0)\r\n                        itemBuilder = this.beginTemplate(item, marker, \"after\", this.createMarker(item));\r\n                    else\r\n                        itemBuilder = this.beginTemplate(item, itemsBuilders[index - 1]._endElement, \"after\", this.createMarker(item));\r\n\r\n                    itemsBuilders.push(itemBuilder);\r\n                }\r\n                else {\r\n                    itemBuilder = this.beginTemplate(item, itemsBuilders[index]._startElement, \"before\", this.createMarker(item));\r\n                    itemsBuilders.splice(index, 0, itemBuilder);\r\n                }\r\n\r\n                itemBuilder.index = index;\r\n\r\n                template(itemBuilder);\r\n\r\n                this.endTemplate(itemBuilder);\r\n            }\r\n        };\r\n\r\n        this.bind(selector, (value, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            this.beginUpdate();\r\n\r\n            if (isUpdate)\r\n                handler.onClear();\r\n\r\n            if (oldValue)\r\n                oldValue.unsubscribe(handler);\r\n\r\n            if (value) {\r\n\r\n                value.subscribe(handler);\r\n\r\n                for (let i = 0; i < value.count; i++)\r\n                    handler.onItemAdded(value.get(i), i, \"add\");\r\n            }\r\n\r\n            this.endUpdate();\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected foreachArray<TItem>(selector: BindValue<TModel, TItem[]>, templateOrName: CatalogTemplate<TItem>): this {\r\n\r\n        let itemsBuilders: TemplateBuilder<TItem>[] = [];\r\n        const template = this.loadTemplate(templateOrName);\r\n        const marker = document.createTextNode(\"\");\r\n\r\n        this.appendChild(marker);\r\n\r\n        this.bind(selector, (value, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            if (isUpdate) {\r\n\r\n                itemsBuilders.forEach(a => a.clear());\r\n                itemsBuilders = [];\r\n            }\r\n\r\n            if (value) {\r\n\r\n                this._lastElement = marker;\r\n\r\n                this.beginUpdate();\r\n\r\n                value.forEach(item => {\r\n\r\n                    const itemBuilder = this.beginTemplate(item);\r\n\r\n                    itemBuilder.index = itemsBuilders.length;\r\n\r\n                    template(itemBuilder);\r\n\r\n                    this.endTemplate(itemBuilder);\r\n\r\n                    itemsBuilders.push(itemBuilder);\r\n\r\n                });\r\n\r\n                this.endUpdate();\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    if(condition: BindValue<TModel, boolean>, trueTemplate: ITemplate<TModel>, falseTemplate?: ITemplate<TModel>): this {\r\n\r\n        const childBuilder = this.beginTemplate(this.model);\r\n\r\n        this.register(childBuilder);\r\n\r\n        this.bind(condition, (value, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            if (isUpdate)\r\n                childBuilder.clear();\r\n\r\n            if (value)\r\n                childBuilder.template(trueTemplate);\r\n            else if (falseTemplate)\r\n                childBuilder.template(falseTemplate);\r\n\r\n        });\r\n\r\n        this.endTemplate(childBuilder);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected replaceContent(nodes: Node[]) {\r\n\r\n        if (this.isInline)\r\n            throw \"'replaceContent' not supported in inline elements\";\r\n\r\n        this.clear();\r\n\r\n        for (let node of nodes)\r\n            this.appendChild(node);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected extractContent(): Node[] {\r\n\r\n        const result: Node[] = [];\r\n        for (let child of linq(this.element.childNodes)) {\r\n            if (child != this._startElement && child != this._endElement)\r\n                result.push(child);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    content<TInnerModel extends ITemplateProvider>(content: BindValue<TModel, TInnerModel>, inline: boolean = false): this {\r\n\r\n        const childBuilder = this.beginTemplate<TInnerModel>(undefined, undefined, undefined, this.createMarker(content));\r\n\r\n        childBuilder.isInline = inline;\r\n        childBuilder.inlineMode = \"explicit\";\r\n\r\n        this.bind(content, (value, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            this.beginUpdate();\r\n\r\n            if (!childBuilder.isInline && isHTMLContainer(value) && value.nodes && value.isCacheEnabled === true)\r\n                childBuilder.replaceContent(value.nodes);\r\n\r\n            else {\r\n\r\n                if (oldValue && value && oldValue.template == value.template)\r\n                    childBuilder.updateModel(value);\r\n                else {\r\n\r\n                    if (isUpdate)\r\n                        childBuilder.clear();\r\n\r\n                    if (value) {\r\n\r\n                        const template = this.templateFor(value);\r\n\r\n                        if (!template)\r\n                            throw \"Template '\" + value.template + \"' not found.\";\r\n\r\n                        childBuilder.updateModel(value);\r\n                        template(childBuilder);\r\n                    }\r\n                }\r\n\r\n                if (isHTMLContainer(value) && value.isCacheEnabled === true)\r\n                    value.nodes = this.extractContent();\r\n            }\r\n\r\n            this.endUpdate();\r\n        });\r\n\r\n        this.endTemplate(childBuilder);\r\n\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    templateFor<TModel>(value: TModel): ITemplate<TModel> {\r\n\r\n        if (typeof value == \"string\" || typeof value == \"number\")\r\n            return this.loadTemplate<TModel>(\"Text\");\r\n\r\n        if (typeof value == \"object\" && \"template\" in value)\r\n            return this.loadTemplate<TModel>((value as any).template);\r\n\r\n        throw \"cannot determine template for model\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadTemplate<TModel>(templateOrName: CatalogTemplate<TModel>): ITemplate<TModel> {\r\n\r\n        if (typeof templateOrName == \"string\") {\r\n            const result = TemplateCatalog[templateOrName];\r\n            if (!result)\r\n                console.error(\"Template \", templateOrName, \" not found.\");\r\n            return result;\r\n        }\r\n\r\n        return <ITemplate<TModel>>templateOrName;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    template(templateOrName: CatalogTemplate<TModel>): this;\r\n\r\n    template<TInnerModel>(templateOrName: CatalogTemplate<TInnerModel>, model: BindValue<TModel, TInnerModel>): this;\r\n\r\n    template(templateOrName: CatalogTemplate<any>, model?: BindValue<TModel, any>): this {\r\n\r\n        const template = this.loadTemplate(templateOrName);\r\n\r\n        if (model) {\r\n\r\n            const childBuilder = this.beginTemplate(undefined, undefined, undefined, this.createMarker(model, \"template\"));\r\n\r\n            this.bind(model, (value, oldValue, isUpdate, isClear) => {\r\n\r\n                if (isClear)\r\n                    return;\r\n\r\n                childBuilder.updateModel(value);\r\n\r\n                if (!isUpdate)\r\n                    template(childBuilder);\r\n            });\r\n\r\n            this.endTemplate(childBuilder);\r\n        }\r\n        else\r\n            template(this);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    exec(action: (buidler: this) => void): this {\r\n        action(this);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    beginChild<TKey extends keyof HTMLElementTagNameMap>(name: TKey): ChildTemplateBuilder<TModel, HTMLElementTagNameMap[TKey] | TElement, this> {\r\n\r\n        if (this.isInline && this._childCount > 0)\r\n            throw \"In inline mode you must have a single root element for your template\";\r\n\r\n        const childElement = this.isInline && name.toUpperCase() == this.element.tagName ? this.element : document.createElement(name);\r\n\r\n        const childBuilder = new ChildTemplateBuilder<TModel, HTMLElementTagNameMap[TKey] | TElement, this>(this.model, childElement, this);\r\n\r\n        if (childElement == this.element)\r\n            childBuilder._lastElement = this._lastElement;\r\n\r\n        this.register(childBuilder);\r\n\r\n        this._childCount++;\r\n\r\n        return childBuilder;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    child<TKey extends keyof HTMLElementTagNameMap>(name: TKey, attributes?: TemplateValueMap<TModel, TElement>): this\r\n\r\n    child<TKey extends keyof HTMLElementTagNameMap>(name: TKey, builder: (builder: TemplateBuilder<TModel, HTMLElementTagNameMap[TKey]>) => void): this\r\n\r\n    child<TKey extends keyof HTMLElementTagNameMap>(name: TKey, builderOrAttributes?: any): this {\r\n\r\n        const childBuilder = new TemplateBuilder<TModel, HTMLElementTagNameMap[TKey]>(this.model, document.createElement(name), this);\r\n\r\n        this.register(childBuilder);\r\n\r\n        if (typeof builderOrAttributes == \"function\")\r\n            builderOrAttributes(childBuilder);\r\n        else\r\n            childBuilder.attribs(builderOrAttributes);\r\n\r\n        this.appendChild(childBuilder.element);\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set(attribute: string, value: BindValue<TModel, string | number | boolean>): this {\r\n\r\n        this.bind(value, a => {\r\n            if (a !== null && a !== undefined)\r\n                this.element.setAttribute(attribute, <any>a);\r\n            else\r\n                this.element.removeAttribute(attribute);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    on<TKey extends keyof HTMLElementEventMap>(event: TKey, handler: (model: TModel, e?: HTMLElementEventMap[TKey]) => void): this {\r\n        this.element.addEventListener(event, ev => handler(this.model, ev));\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    class(name: BindValue<TModel, string>): this;\r\n\r\n    class(name: string, condition: BindValue<TModel, Boolean>): this;\r\n\r\n    class(name: any, condition?: BindValue<TModel, Boolean>): this {\r\n        if (condition) {\r\n            const nameParts: string[] = name ? name.split(\" \") : [];\r\n            this.bind(condition, value => {\r\n                if (value)\r\n                    nameParts.forEach(a => this.element.classList.add(a));\r\n                else\r\n                    nameParts.forEach(a => this.element.classList.remove(a));\r\n            })\r\n        }\r\n        else\r\n            this.bind(name, (value, oldValue) => {\r\n                if (oldValue)\r\n                    oldValue.split(\" \").forEach(item =>\r\n                        this.element.classList.remove(item));\r\n                if (value)\r\n                    value.split(\" \").forEach(item =>\r\n                        this.element.classList.add(item));\r\n            });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    visible(value: BindValue<TModel, boolean>): this {\r\n\r\n        this.bind(value, (newValue, oldValue, isUpdate, isClear) => {\r\n\r\n            if (isClear)\r\n                return;\r\n\r\n            if (newValue) {\r\n                this.element.classList.add(\"visible\");\r\n                this.element.classList.remove(\"hidden\");\r\n            }\r\n            else {\r\n                this.element.classList.add(\"hidden\");\r\n                this.element.classList.remove(\"visible\");\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    text(value: BindValue<TModel, string | number>): this {\r\n        const textNode = document.createTextNode(\"\");\r\n\r\n        this.appendChild(textNode);\r\n\r\n        this.bind(value, a => textNode.textContent = <any>a);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    html(value: BindValue<TModel, string>): this {\r\n        this.bind(value, a => this.element.innerHTML = a);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    focus(value: BindValue<TModel, boolean>): this {\r\n\r\n        const valueProp = this.getBindingProperty(value);\r\n\r\n        if (valueProp) {\r\n            this.element.addEventListener(\"focus\", ev =>\r\n                valueProp.set(true));\r\n            this.element.addEventListener(\"focusout\", ev =>\r\n                valueProp.set(false));\r\n        }\r\n        this.bind(value, a => {\r\n            if (a && document.activeElement != this.element)\r\n                this.element.focus();\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value(value: BindValue<TModel, string | boolean>): this {\r\n\r\n        const element = <HTMLInputElement><any>this.element;\r\n\r\n        const valueProp = this.getBindingProperty(value);\r\n\r\n        if (valueProp) {\r\n            if (element.tagName == \"INPUT\" || element.tagName == \"TEXTAREA\") {\r\n\r\n                if (element.type == \"checkbox\" || element.type == \"radio\")\r\n                    element.addEventListener(\"change\", ev => {\r\n                        valueProp.set(element.checked);\r\n                    });\r\n                else {\r\n                    element.addEventListener(\"keyup\", ev => {\r\n                        valueProp.set(element.value);\r\n                    });\r\n                    element.addEventListener(\"change\", ev => {\r\n                        valueProp.set(element.value);\r\n                    });\r\n                }\r\n            }\r\n            else if (element.tagName == \"SELECT\") {\r\n                element.addEventListener(\"change\", ev => {\r\n                    valueProp.set(element.value);\r\n                });\r\n            }\r\n\r\n        }\r\n        if (element.tagName == \"INPUT\" || element.tagName == \"TEXTAREA\" || element.tagName == \"SELECT\") {\r\n\r\n            if (element.type == \"checkbox\" || element.type == \"radio\")\r\n                this.bind(value, (a: boolean) => element.checked = a);\r\n            else\r\n                this.bind(value, (a: string) => a ? element.value = a : element.value = null);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    style<TKey extends keyof CSSStyleDeclaration>(name: TKey, value: BindValue<TModel, CSSStyleDeclaration[TKey]>): this {\r\n        this.bind(value, a => this.element.style[name] = a);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    behavoir(value: IBehavoir<TElement, TModel>): this;\r\n\r\n    behavoir(name: string): this;\r\n\r\n    behavoir(nameOrValue: any): this {\r\n\r\n        if (typeof nameOrValue == \"string\")\r\n            behavoirCatalog[<string>nameOrValue]().attach(this.element, this.model);\r\n        else\r\n            (nameOrValue as IBehavoir).attach(this.element, this.model);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    styles(value: TemplateValueMap<TModel, CSSStyleDeclaration>): this {\r\n        for (let name in value)\r\n            this.bind(value[name], a => this.element.style[name] = a);\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attribs(value: { [key: string]: BindValue<TModel, string | number | boolean> }): this {\r\n\r\n        for (let name in value)\r\n            this.set(name, value[name]);\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    debugger(): this {\r\n\r\n        debugger;\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createMarker(obj: any, baseName: string = \"\"): string {\r\n\r\n        return undefined;\r\n\r\n        if (typeof obj == \"function\")\r\n            return this.createMarker(obj(this.model), baseName);\r\n\r\n        if (typeof obj == \"string\")\r\n            return baseName + obj;\r\n\r\n        if (obj == null)\r\n            return baseName + \"null\";\r\n\r\n        return this.createMarker(getTypeName(obj), baseName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    element: TElement = null;\r\n\r\n    parent: TemplateBuilder<any> = null;\r\n\r\n    isInline: boolean = false;\r\n\r\n    inlineMode: TemplateInlineMode = \"never\";\r\n\r\n    index: number = 0;\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nclass ChildTemplateBuilder<TModel, TElement extends HTMLElement, TParent extends TemplateBuilder<TModel>> extends TemplateBuilder<TModel, TElement> {\r\n\r\n    constructor(model: TModel, element: TElement, parent?: TParent) {\r\n        super(model, element, parent);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    endChild(): TParent {\r\n\r\n        if (this.parent.element != this.element)\r\n            this.parent.appendChild(this.element);\r\n        else {\r\n\r\n            if (this._lastElement)\r\n                this.parent[\"_lastElement\"] = this._lastElement;\r\n        }\r\n\r\n        return <TParent>this.parent;\r\n    }\r\n}\r\n\r\n","﻿import { IList } from \"../Core/Abstraction/IList\";\r\nimport { EqualityComparer } from \"../Core/Types/Types\";\r\nimport { IObservableList, IObservableListHandler } from \"./Abstraction/IObservableList\";\r\n\r\nexport class ObservableList<T> implements IObservableList<T> {\r\n\r\n    protected _items: T[] = [];\r\n    protected _handlers: IObservableListHandler<T>[];\r\n\r\n    /****************************************/\r\n\r\n    constructor(items?: T[], equalityComparer?: EqualityComparer<T>) {\r\n\r\n        this._items = items || [];\r\n        this.equalityComparer = equalityComparer;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    add<T2 extends T>(item: T2): T2 {\r\n        this._items.push(item);\r\n        this.invoke(a => a.onItemAdded ? a.onItemAdded(item, this._items.length - 1, \"add\") : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addRange(items: Iterable<T>) {\r\n        for (let item of items) {\r\n            this._items.push(item);\r\n            this.invoke(a => a.onItemAdded ? a.onItemAdded(item, this._items.length - 1, \"add\") : undefined);\r\n        }\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    insert<T2 extends T>(index: number, item: T2): T2 {\r\n        this._items.splice(index, 0, item);\r\n        this.invoke(a => a.onItemAdded ? a.onItemAdded(item, index, \"insert\") : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove(item: T) {\r\n        const index = this.indexOf(item);\r\n        if (index != -1)\r\n            this.removeAt(index);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeWhen(condition: (T) => boolean) {\r\n        for (let i = this._items.length - 1; i >= 0; i--) {\r\n            if (condition(this._items[i]))\r\n                this.removeAt(i);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeRange(startIndex: number, count: number) {\r\n\r\n        const items = this._items.splice(startIndex, count);\r\n\r\n        let isChanged = false;\r\n\r\n        for (let i = items.length - 1; i >= 0; i--) {\r\n            this.invoke(a => a.onItemRemoved ? a.onItemRemoved(items[i], startIndex + i, \"remove\") : undefined);\r\n            isChanged = true;\r\n        }\r\n\r\n        if (isChanged)\r\n            this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n\r\n        return items;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeAt(index: number): T {\r\n        const item = this._items.splice(index, 1)[0];\r\n        this.invoke(a => a.onItemRemoved ? a.onItemRemoved(item, index, \"remove\") : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n\r\n        if (this._items.length == 0)\r\n            return;\r\n\r\n        for (let i = this._items.length - 1; i >= 0; i--)\r\n            this.invoke(a => a.onItemRemoved ? a.onItemRemoved(this._items[i], i, \"clear\") : undefined);\r\n\r\n        this._items.splice(0, this._items.length);\r\n        this.invoke(a => a.onClear ? a.onClear() : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    contains(item: T): boolean {\r\n        return this.indexOf(item) != -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    indexOf(item: T): number {\r\n\r\n        if (this.equalityComparer) {\r\n\r\n            for (let i = 0; i < this._items.length; i++) {\r\n                if (this.equalityComparer(item, this._items[i]))\r\n                    return i;\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        return this._items.indexOf(item);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    *[Symbol.iterator](): Iterator<T> {\r\n        for (let item of this._items)\r\n            yield item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toArray(): T[] {\r\n        return this._items;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(index: number): T {\r\n        return this._items[index];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set(index: number, value: T) {\r\n        const oldItem = this._items[index];\r\n        if (oldItem == value)\r\n            return;\r\n        this.invoke(a => a.onItemRemoved ? a.onItemRemoved(oldItem, index, \"replace\") : undefined);\r\n        this._items[index] = value;\r\n        this.invoke(a => a.onItemAdded ? a.onItemAdded(value, index, \"replace\") : undefined);\r\n        this.invoke(a => a.onItemReplaced ? a.onItemReplaced(value, oldItem, index) : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    swap(index: number, newIndex: number): void {\r\n        const temp = this._items[newIndex];\r\n        this._items[newIndex] = this._items[index];\r\n        this._items[index] = temp;\r\n        this.invoke(a => a.onItemSwap ? a.onItemSwap(index, newIndex) : undefined);\r\n        this.invoke(a => a.onChanged ? a.onChanged() : undefined);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    subscribe(handler: IObservableListHandler<T>) {\r\n        if (!this._handlers)\r\n            this._handlers = [];\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index == -1)\r\n            this._handlers.push(handler);\r\n        return handler;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    unsubscribe(handler: IObservableListHandler<T>) {\r\n        if (!this._handlers)\r\n            return;\r\n        const index = this._handlers.indexOf(handler);\r\n        if (index != -1)\r\n            this._handlers.splice(index, 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    forEach(action: (item: T, index?: number) => void) {\r\n        let index = 0;\r\n        for (let item of this) {\r\n            action(item, index);\r\n            index++;\r\n        }\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected invoke(action: (hander: IObservableListHandler<T>) => void) {\r\n\r\n        if (!this._handlers)\r\n            return;\r\n        this._handlers.forEach(handler =>\r\n            action(handler));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get count() {\r\n        return this._items.length;\r\n    }\r\n\r\n    toJSON() {\r\n        return this._items;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    equalityComparer: EqualityComparer<T>;\r\n}\r\n/****************************************/\r\n\r\nexport function listOf<T>(items?: T[]): IList<T> {\r\n    return new ObservableList(items);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport  function observableListOf<T>(items?: T[], equalityComparer?: EqualityComparer<T>): IObservableList<T> {\r\n    return new ObservableList(items, equalityComparer);\r\n}\r\n","﻿import { getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport interface IViewConfig {\r\n\r\n    template?: Bindable<CatalogTemplate<IView>>;\r\n\r\n    parentView?: IView;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class View extends BindableObject implements IView {\r\n\r\n    constructor(config?: IViewConfig) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"template\", config);\r\n\r\n        if (!this.template)\r\n            this.template = getTypeName(this);\r\n\r\n        if (config) {\r\n            if (config.parentView)\r\n                this.parentView = config.parentView;\r\n        }\r\n\r\n        this.debugTypeName();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected debugTypeName() {\r\n\r\n        var curName = this.constructor.name;\r\n        var regName = this.constructor[\"@typeName\"];\r\n        if (!regName)\r\n            console.warn(\"Type '\" + curName + \"' is not registered.\")\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    template: CatalogTemplate<this> = null;\r\n\r\n    parentView: IView = null;\r\n}\r\n\r\n\r\nregisterType(View, \"View\");","﻿import { IOperation, IOperationProgress, OperationType } from \"../Core/Abstraction/IOperation\";\r\nimport { IOperationConfig, IOperationManager } from \"../Core/Abstraction/IOperationManager\";\r\nimport { isString } from \"../Core/Helpers/TypeCheck\";\r\nimport { DynamicString, LocalString } from \"../Core/Types/DynamicString\";\r\nimport { listOf } from \"../Templating/ObservableList\";\r\nimport { IViewConfig, View } from \"./Components/View\";\r\nimport { AppEvent, event } from \"../Core/Types/Event\";\r\nimport { IList } from \"../Core/Abstraction/IList\";\r\nimport { IViewApplication } from \"./Abstraction/IViewApplication\";\r\nimport { App, Services } from \"../Core/Global\";\r\nimport { registerType } from \"../Core/Utils/ObjectUtils\";\r\nimport { Format } from \"../Core/Helpers/Format\";\r\n\r\nexport interface IOperationViewConfig extends IOperationConfig, IViewConfig {\r\n\r\n    type?: OperationType;\r\n\r\n    parentOperation?: IOperation;\r\n} \r\n\r\n/****************************************/\r\n\r\nclass OperationView extends View implements IOperation {\r\n\r\n    private _progress: IOperationProgress;\r\n    private _type: OperationType;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config: IOperationViewConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"message\", config);\r\n\r\n        if (!config.type)\r\n            this._type = OperationType.Global;\r\n        else\r\n            this._type = config.type;\r\n\r\n        this.parentOperation = config.parentOperation;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    end(): void {\r\n        Services.operation.end(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get type(): OperationType {\r\n        return this._type;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get progress(): IOperationProgress {\r\n        return this._progress;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set progress(value: IOperationProgress) {\r\n\r\n        this._progress = value;\r\n\r\n        if (this._progress) {\r\n\r\n            console.log(this.getProgressDescription(this._progress));\r\n\r\n            if (this._progress.message)\r\n                this.message = this._progress.message;\r\n        }\r\n        else\r\n            this.message = undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addSubOperation(operation: IOperation) {\r\n        this.subOperations.add(operation);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeSubOperation(operation: IOperation) {\r\n        this.subOperations.remove(operation);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getProgressDescription(value: IOperationProgress): string {\r\n\r\n        let msg = \"Progress: \";\r\n\r\n        if (value.message)\r\n            msg += \"'\" + value.message + \"'\";\r\n\r\n        if (value.current != null && value.totCount != null)\r\n            msg += \" - \" + value.current + \"/\" + value.totCount + \" (\" + Math.round(100 / value.totCount * value.current) + \"%)\";\r\n\r\n        return msg;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly subOperations = listOf<IOperation>();\r\n\r\n    message: LocalString = null;\r\n\r\n    parentOperation: IOperation = null;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ViewOperationManager implements IOperationManager {\r\n\r\n    progress(progress: IOperationProgress | string) {\r\n\r\n        if (isString(progress))\r\n            progress = <IOperationProgress>{ message: progress };\r\n\r\n        if (this.current)\r\n            this.current.progress = <IOperationProgress>progress;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    begin(configOrMessge: IOperationViewConfig | string): IOperation {\r\n\r\n        if (isString(configOrMessge))\r\n            configOrMessge = <IOperationProgress>{ message: configOrMessge };\r\n\r\n        const operation = new OperationView(configOrMessge);\r\n\r\n        console.group(\"Begin operation: \", Format.text(operation.message));\r\n\r\n        operation.progress = configOrMessge;\r\n\r\n        if (operation.parentOperation === undefined)\r\n            operation.parentOperation = this.current;\r\n\r\n        this.operations.add(operation);\r\n\r\n        if (operation.parentOperation)\r\n            operation.parentOperation.addSubOperation(operation);\r\n\r\n        if (operation.type != OperationType.Local)\r\n           (App as IViewApplication).block();\r\n\r\n        return operation;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    end(operation: IOperation) {\r\n\r\n        console.groupEnd();\r\n\r\n        console.log(\"End operation: \", Format.text(operation.message));\r\n\r\n        this.operations.remove(operation);\r\n\r\n        if (operation.parentOperation)\r\n            operation.parentOperation.removeSubOperation(operation);\r\n\r\n        if (operation.type != OperationType.Local)\r\n            (App as IViewApplication).unblock();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): IOperation {\r\n        return this.operations.count > 0 ? this.operations.get(this.operations.count - 1) : null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly operations: IList<IOperation> = listOf();\r\n\r\n    readonly onBegin: AppEvent<IOperation> = event();\r\n\r\n    readonly onEnd: AppEvent<IOperation> = event();\r\n\r\n    readonly onProgress: AppEvent<{ operation: IOperation, progress: IOperationProgress }> = event();\r\n}\r\n\r\n/****************************************/\r\n\r\n\r\nregisterType(OperationView, \"OperationView\");","﻿import { IList } from \"../../Core/Abstraction/IList\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { isUpperCase } from \"../../Core/Utils/StringUtils\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { isAsyncLoad } from \"./TypeCheck\";\r\n\r\nexport async function loadAllAsync<T>(items: T[] | IList<T> | Iterator<T>) {\r\n\r\n    const loaders = linq(items as any).ofType<IAsyncLoad>(a => isAsyncLoad(a)).select(a => a.loadAsync()).toArray();\r\n\r\n    return await Promise.all(loaders);\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function formatForCss(name: string): string {\r\n    let s = 0;\r\n    let result = \"\";\r\n    for (let i = 0; i < name.length; i++) {\r\n        const c = name.charAt(i);\r\n        switch (s) {\r\n            //upper mode or begin \r\n            case 0:\r\n                result += c.toLowerCase();\r\n                if (!isUpperCase(c) || c == \"-\")\r\n                    s = 1;\r\n                break;\r\n            //first-mode\r\n            case 1:\r\n                if (isUpperCase(c) && c != \"-\") {\r\n                    result += \"-\";\r\n                    s = 0;\r\n                }\r\n                result += c.toLowerCase();\r\n                break;\r\n        }\r\n    }\r\n    return result;\r\n}","﻿import { Type } from \"../../Core/Types/Types\";\r\nimport { getBaseType, getType, getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLContainer } from \"../Abstraction/IHTMLContainer\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { IViewComponent } from \"../Abstraction/IViewComponent\";\r\nimport { formatForCss } from \"../Helpers/ViewUtils\";\r\nimport { IViewConfig, View } from \"./View\";\r\n\r\nexport interface IViewComponentConfig extends IViewConfig {\r\n\r\n    name?: string;\r\n\r\n    enabled?: Bindable<boolean>;\r\n\r\n    visible?: Bindable<boolean>;\r\n\r\n    styles?: ViewStyle[];\r\n}\r\n\r\nexport type ViewComponentStatus = \"\" | \"hidden\" | string;\r\n\r\n/****************************************/\r\n\r\nexport class ViewComponent extends View implements IViewComponent, IHTMLContainer {\r\n\r\n    constructor(config?: IViewComponentConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"enabled\", config);\r\n\r\n        this.bindConfig(\"visible\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.styles)\r\n                this.styles = config.styles;\r\n\r\n            if (config.name)\r\n                this.name = config.name;\r\n        }\r\n\r\n        this.prop(\"styles\").subscribe(() => this.buildStyles());\r\n\r\n        this.buildStyles();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addStyle(value: ViewStyle) {\r\n        if (this.styles.indexOf(value) != -1)\r\n            return;\r\n        this.styles.push(value);\r\n        this.buildStyles();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeStyle(value: ViewStyle) {\r\n        const index = this.styles.indexOf(value);\r\n        if (index == -1)\r\n            return;\r\n        this.styles.splice(index, 1);\r\n        this.buildStyles();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    buildStyles() {\r\n\r\n        let result = \"\";\r\n\r\n        let curType: Type<any> = getType(this);\r\n\r\n        while (curType != ViewComponent) {\r\n            let typeName = getTypeName(curType);\r\n            result += formatForCss(typeName) + \" \";\r\n            curType = getBaseType(curType);\r\n        }\r\n\r\n        if (this.name)\r\n            result += formatForCss(this.name) + \" \";\r\n\r\n        if (this.styles)\r\n            result += this.styles.join(\" \");\r\n\r\n        this.className = result.trim();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get debugName() {\r\n        return getTypeName(this) + \": \" + this.name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    enabled: boolean = true;\r\n\r\n    visible: boolean = true;\r\n\r\n    styles: ViewStyle[] = [];\r\n\r\n    name: string = null;\r\n\r\n    nodes: Node[] = null;\r\n\r\n    isCacheEnabled: boolean = false;\r\n\r\n    className: string;\r\n\r\n    status: ViewComponentStatus = \"\";\r\n}\r\n\r\n\r\nregisterType(ViewComponent, \"ViewComponent\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { isView } from \"../Helpers/TypeCheck\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IContentViewConfig<TContent> extends IViewComponentConfig {\r\n\r\n    content?: Bindable<TContent>;\r\n\r\n    contentTemplate?: CatalogTemplate<TContent>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ContentView<TContent = any> extends ViewComponent implements IContentView<TContent> {\r\n\r\n    constructor(config?: IContentViewConfig<TContent>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"content\", config, null, () => this.onContentChanged());\r\n\r\n        this.bindConfig(\"contentTemplate\", config);\r\n\r\n        if (this.contentTemplate) \r\n            this.template = t => t.template(t.model.contentTemplate, t.model.content);\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n        if (isView(this.content))\r\n            this.content.parentView = this;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    content: TContent = null;\r\n\r\n    contentTemplate: CatalogTemplate<TContent> = null;\r\n}\r\n\r\nregisterType(ContentView, \"ContentView\");","﻿import { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport \"Templates/ContextMenu.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IContextMenuConfig {\r\n\r\n    actions?: IAction[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ContextMenu extends BindableObject {\r\n\r\n    private _menuContainer: HTMLElement;\r\n    private _clickHandler;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: IContextMenuConfig) {\r\n        super();\r\n\r\n        if (config) {\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n        }\r\n\r\n        this._menuContainer = document.createElement(\"DIV\");\r\n        this._menuContainer.className = \"popup-container\";\r\n\r\n        this._clickHandler = this.onClick.bind(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n\r\n        this.actions.add(ActionView.fromAction(action));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync(element?: HTMLElement, event?: MouseEvent) {\r\n\r\n        let curOfs = { x: 0, y: 0 };\r\n\r\n        if (!element && event) {\r\n            element = <HTMLElement>event.srcElement;\r\n            curOfs.x = event.offsetX;\r\n            curOfs.y = event.offsetY;\r\n        }\r\n\r\n        const builder = new TemplateBuilder(this, this._menuContainer);\r\n\r\n        builder.template(\"ContextMenu\", a => a);\r\n\r\n        document.body.appendChild(this._menuContainer);\r\n\r\n        await delayAsync(0);\r\n\r\n        window.addEventListener(\"mouseup\", this._clickHandler);\r\n\r\n        let curEl = element;\r\n        let offsetEl = element;\r\n\r\n        while (curEl) {\r\n            if (curEl == offsetEl) {\r\n                curOfs.y += curEl.offsetTop;\r\n                curOfs.x += curEl.offsetLeft;\r\n                offsetEl = <HTMLElement>curEl.offsetParent;\r\n            }\r\n            curOfs.y -= curEl.scrollTop;\r\n            curOfs.x -= curEl.scrollLeft;\r\n            curEl = curEl.parentElement;\r\n        }\r\n\r\n        let xTrans = \"\";\r\n        let yTrans = \"\";\r\n\r\n        if (curOfs.x + this._menuContainer.clientWidth > document.body.clientWidth) {\r\n            curOfs.x -= this._menuContainer.clientWidth;\r\n            xTrans = \"right\";\r\n        }\r\n        else\r\n            xTrans = \"left\";\r\n\r\n        if (curOfs.y + this._menuContainer.clientHeight > document.body.clientHeight) {\r\n            curOfs.y -= this._menuContainer.clientHeight;\r\n            yTrans = \"bottom\";\r\n        }\r\n        else\r\n            yTrans = \"top\";\r\n\r\n        this._menuContainer.style.top = curOfs.y + \"px\";\r\n        this._menuContainer.style.left = curOfs.x + \"px\";\r\n        this._menuContainer.style.transformOrigin = xTrans + \" \" + yTrans;\r\n\r\n        await delayAsync(0);\r\n\r\n        this._menuContainer.classList.add(\"visible\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hide() {\r\n\r\n        this._menuContainer.classList.remove(\"visible\");\r\n\r\n        window.removeEventListener(\"mouseup\", this._clickHandler);\r\n\r\n        setTimeout(() => document.body.removeChild(this._menuContainer), 500);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onClick(e: MouseEvent) {\r\n        setTimeout(() => this.hide(), 0);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    className: string = \"context-menu\";\r\n}\r\n\r\nregisterType(ContextMenu, \"ContextMenu\");","﻿import { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport \"Templates/IconTextView.html\";\r\nimport \"Templates/Icon.html\";\r\n\r\nexport interface IIconTextViewConfig extends IViewComponentConfig {\r\n\r\n    icon?: Bindable<string>;\r\n\r\n    text?: Bindable<LocalString>;\r\n\r\n    badge?: Bindable<LocalString>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class IconTextView extends ViewComponent {\r\n\r\n    constructor(config?: IIconTextViewConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"icon\", config);\r\n\r\n        this.bindConfigString(\"text\", config);\r\n\r\n        this.bindConfigString(\"badge\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    icon: string = null;\r\n\r\n    text: string = null;\r\n\r\n    badge: string = null;\r\n}\r\n\r\nregisterType(IconTextView, \"IconTextView\");","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { IAsyncTask } from \"../../Core/Abstraction/ITask\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable, Properties } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IItemAction } from \"../Abstraction/IItemAction\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { ContextMenu } from \"./ContextMenu\";\r\nimport { IconTextView } from \"./IconTextView\";\r\nimport \"Templates/ActionView.html\";\r\nimport { App, Services } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IActionViewConfig extends IContentViewConfig<any> {\r\n\r\n    name?: string;\r\n\r\n    operation?: OperationType;\r\n\r\n    tooltip?: Bindable<LocalString>;\r\n\r\n    subActions?: IActionViewConfig[];\r\n\r\n    canAggregate?: AggregationMode;\r\n\r\n    executeAsync?: IAsyncTask<any>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport enum AggregationMode {\r\n    None,\r\n    Parallel,\r\n    Serial\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ActionView extends ContentView<any>  {\r\n\r\n    constructor(config?: IActionViewConfig) {\r\n\r\n        super({ template: \"ActionLink\", ...config });\r\n\r\n        this.bindConfigString(\"tooltip\", config, StringUsage.Tooltip);\r\n\r\n        this.bindConfig(\"operation\", config);\r\n\r\n        this.bindConfig(\"canAggregate\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.executeAsync)\r\n                this.executeWorkAsync = config.executeAsync;\r\n\r\n            if (config.subActions)\r\n                config.subActions.forEach(sub =>\r\n                    this.subActions.add(new ActionView(sub)));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async executeAsync(): Promise<any> {\r\n\r\n        if (window.event)\r\n            window.event.stopPropagation();\r\n\r\n        if (Services.analytics)\r\n            Services.analytics.action(this.name);\r\n\r\n        var op = Services.operation.begin({ message: \"Executing \" + this.name, type: this.operation });\r\n\r\n        this.status = \"executing\";\r\n        try {\r\n\r\n            await this.executeWorkAsync();\r\n\r\n            if (this.subActions.count > 0) {\r\n\r\n                let menu = new ContextMenu();\r\n                this.subActions.forEach(a => menu.actions.add(a));\r\n                menu.showAsync(window.event.srcElement as HTMLElement);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            App.handleError(this, ex);\r\n            throw ex;\r\n        }\r\n        finally {\r\n            this.status = \"\";\r\n            op.end();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected executeWorkAsync(): Promise<any> {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromAction(action: IAction, config?: IActionViewConfig): ActionView {\r\n        const result = new ActionView({\r\n            name: action.name,\r\n            operation: action.operation,\r\n            styles: action.styles,\r\n            template: \"ActionLink\",\r\n            content: new IconTextView({\r\n                template: \"IconTextViewInline\",\r\n                text: Format.action(action.displayName ?? action.name),\r\n                icon: action.icon,\r\n                badge: action.badge\r\n            }),\r\n            executeAsync: action.executeAsync,\r\n            ...config\r\n        });\r\n\r\n        if (action.canExecute)\r\n            Properties.converter(result, \"visible\", () => action.canExecute());\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromItemAction<TItem>(action: IItemAction<TItem>, getItem: () => TItem, config?: IActionViewConfig): ActionView {\r\n        const result = new ActionView({\r\n            name: action.name,\r\n            operation: action.operation,\r\n            styles: action.styles,\r\n            content: new IconTextView({\r\n                template: \"IconTextViewInline\",\r\n                text: Format.action(action.displayName ?? action.name),\r\n                icon: action.icon,\r\n                badge: action.badge\r\n            }),\r\n            executeAsync: () => action.executeAsync(getItem()),\r\n            ...config\r\n        });\r\n\r\n        if (action.canExecute)\r\n            result.bind(\"visible\", result.createComputed(() => action.canExecute(getItem())));\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromActionIcon(action: IAction, config?: IActionViewConfig): ActionView {\r\n        const result = new ActionView({\r\n            name: action.name,\r\n            styles: action.styles,\r\n            operation: action.operation,\r\n            template: \"ActionIcon\",\r\n            content: action.icon,\r\n            tooltip: action.displayName ?? action.name,\r\n            executeAsync: action.executeAsync,\r\n            ...config\r\n        });\r\n\r\n        if (action.canExecute)\r\n            result.bind(\"visible\", result.createComputed(() => action.canExecute()));\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    tooltip: string = null;\r\n\r\n    operation: OperationType = OperationType.Global;\r\n\r\n    canAggregate: AggregationMode = AggregationMode.None;\r\n\r\n    readonly subActions: IObservableList<ActionView> = observableListOf();\r\n}\r\n\r\nregisterType(ActionView, \"ActionView\");","﻿import { DynamicString } from \"../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../Templating/Abstraction/IObservableList\";\r\nimport { BindableObject } from \"../Templating/BindableObject\";\r\nimport { observableListOf } from \"../Templating/ObservableList\";\r\nimport { IItemAction } from \"./Abstraction/IItemAction\";\r\nimport { IMultiItemSelector } from \"./Abstraction/IMultiItemSelector\";\r\nimport { ISelectable } from \"./Abstraction/ISelectable\";\r\nimport { ActionView } from \"./Components/ActionView\";\r\n\r\nexport class SelectionManager<TItem extends ISelectable> extends BindableObject implements IMultiItemSelector<TItem> {\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        this.selectedItems.subscribe({\r\n            onChanged: () => {\r\n                this.updateView();\r\n                if (this.selectedItems.count == 0)\r\n                    this.close();\r\n            }\r\n        })\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    close() {\r\n\r\n        this.isActive = false;\r\n\r\n        for (var i = this.selectedItems.count - 1; i >= 0; i--)\r\n            this.selectedItems.get(i).isSelected = false;\r\n\r\n        this.selectedItems.clear();\r\n        this.actions.clear();\r\n        this.updateView();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    open() {\r\n\r\n        this.isActive = true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IItemAction<TItem[]>) {\r\n\r\n        const result = ActionView.fromItemAction(action, () => this.selectedItems.toArray());\r\n        this.actions.add(result);\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateView() {\r\n        this.selectionText = DynamicString.getValue(\"selection-count\", { params: [this.selectedItems.count.toString()], cardinality: this.selectedItems.count });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly selectedItems: IObservableList<TItem> = observableListOf();\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    selectionText: string = null;\r\n\r\n    isActive: boolean = false;\r\n}","﻿import { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport class AttachBehavoir implements IBehavoir<HTMLElement, IView & IHTMLAttach> {\r\n\r\n    attach(element: HTMLElement, viewModel?: IView & IHTMLAttach) {\r\n\r\n        if (\"attach\" in viewModel) {\r\n            setTimeout(() => viewModel.attach(element));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach(element: HTMLElement, viewModel?: IView & IHTMLAttach) {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static readonly instance = new AttachBehavoir();\r\n}","﻿import { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\n\r\nexport class RippleClickBehavoir implements IBehavoir<HTMLElement> {\r\n\r\n    attach(element: HTMLElement) {\r\n        element.addEventListener(\"pointerdown\", this.onClick, { passive: true });\r\n        element.classList.add(\"ripple\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach(element: HTMLElement) {\r\n        element.removeEventListener(\"pointerdown\", this.onClick);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async onClick(e: Event) {\r\n\r\n        const curTarget = <HTMLElement>e.currentTarget;\r\n        curTarget.classList.remove(\"activated\");\r\n\r\n        await delayAsync(0);\r\n\r\n        curTarget.classList.add(\"activated\");\r\n\r\n        await delayAsync(500);\r\n\r\n        if (curTarget.classList.contains(\"activated\"))\r\n            curTarget.classList.remove(\"activated\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static readonly instance = new RippleClickBehavoir();\r\n}","﻿import { parentOfClass } from \"../../Core/Utils/DomUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\nimport { IScrollListener } from \"../Abstraction/IScrollListener\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport class ScrollCheckBehavoir implements IBehavoir<HTMLElement, IView & IScrollListener> {\r\n\r\n    async attach(element: HTMLElement, viewModel?: IView & IScrollListener) {\r\n\r\n        await delayAsync(0);\r\n\r\n        const scrollParent  = element.classList.contains(\"scroll\") ? element : parentOfClass(element, \"scroll\");\r\n\r\n        let isRequested = false;\r\n\r\n        function computeScroll() {\r\n\r\n            if (!viewModel.isScrollCheckActive || isRequested)\r\n                return;\r\n\r\n            isRequested = true;\r\n\r\n            requestAnimationFrame(() => {\r\n\r\n                let found = false;\r\n\r\n                if (scrollParent != document.scrollingElement) {\r\n\r\n                    let curItem: Node = element;\r\n                    found = false;\r\n                    while (curItem != null) {\r\n                        if (curItem == scrollParent) {\r\n                            found = true;\r\n                            break;\r\n                        }\r\n                        curItem = curItem.parentNode;\r\n                    }\r\n                }\r\n                else\r\n                    found = true;\r\n\r\n                if (!found)\r\n                    scrollParent.removeEventListener(\"scroll\", computeScroll);\r\n                else {\r\n\r\n                    viewModel.onScroll({\r\n                        offsetTop: scrollParent.scrollTop,\r\n                        offsetBottom: scrollParent.scrollHeight - (scrollParent.scrollTop + scrollParent.clientHeight),\r\n                        pageBottom: (scrollParent.scrollHeight - (scrollParent.scrollTop + scrollParent.clientHeight)) / scrollParent.clientHeight,\r\n                        pageTop: scrollParent.scrollTop / scrollParent.clientHeight,\r\n                        totPages: scrollParent.scrollHeight / scrollParent.clientHeight\r\n                    });\r\n                }\r\n\r\n                isRequested = false;\r\n            });\r\n        }\r\n\r\n        if (scrollParent != null) {\r\n            if (scrollParent == document.scrollingElement)\r\n                window.addEventListener(\"scroll\", computeScroll, { passive: true });\r\n            else\r\n                scrollParent.addEventListener(\"scroll\", computeScroll, { passive: true });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach(element: HTMLElement, viewModel?: IView & IScrollListener) {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static readonly instance = new ScrollCheckBehavoir();\r\n}","﻿import { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\n\r\nexport class VibrateClickBehavoir implements IBehavoir<HTMLElement> {\r\n\r\n    attach(element: HTMLElement) {\r\n        element.addEventListener(\"click\", this.onClick);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach(element: HTMLElement) {\r\n        element.removeEventListener(\"click\", this.onClick);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private onClick(e: Event) {\r\n        if (\"vibrate\" in navigator)\r\n            navigator.vibrate(50);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static readonly instance = new VibrateClickBehavoir();\r\n}","﻿import { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { ViewComponent } from \"./ViewComponent\";\r\n\r\nimport \"Templates/Blocker.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport class Blocker extends ViewComponent implements IHTMLAttach {\r\n\r\n    private _element: HTMLElement;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        this.status = \"hide\";\r\n\r\n        const builder = new TemplateBuilder(this, document.body);\r\n\r\n        builder.content(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n\r\n        this._element = element;\r\n\r\n        element.addEventListener(\"mousedown\", e => e.preventDefault(), { passive: true });\r\n        element.addEventListener(\"touchstart\", e => e.preventDefault(), { passive: true });\r\n\r\n        if (this.status == \"hide\")\r\n            this._element.style.display = \"none\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync() {\r\n\r\n        if (this._element)\r\n            this._element.style.removeProperty(\"display\");\r\n\r\n        this.status = \"showing\"\r\n\r\n        await delayAsync(0);\r\n\r\n        if (this.status == \"showing\")\r\n            this.status = \"show\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async hideAsync() {\r\n\r\n        this.status = \"hiding\";\r\n\r\n        await delayAsync(500);\r\n\r\n        if (this.status == \"hiding\") {\r\n            this.status = \"hide\";\r\n            if (this._element)\r\n                this._element.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n}\r\n\r\nregisterType(Blocker, \"Blocker\");","﻿import { isString } from \"../../Core/Helpers/TypeCheck\";\r\nimport { Type } from \"../../Core/Types/Types\";\r\nimport { getType, getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IPage } from \"../Abstraction/IPage\";\r\nimport { IMultiPageHost, IPageLoadOptions } from \"../Abstraction/IPageHost\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { IContentViewConfig } from \"./ContentView\";\r\nimport { View } from \"./View\";\r\n\r\ninterface ISelfHostedPageHost extends IContentViewConfig<IView> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SelfHostedPageHost extends View implements IMultiPageHost {\r\n\r\n    private _parentHost: IMultiPageHost;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: ISelfHostedPageHost) {\r\n\r\n        super({ template: \"SinglePageHost\", ...config });\r\n\r\n        this._parentHost = window.parent[\"WebApp\"][\"app\"][\"pageHost\"];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(index: number) {\r\n        return this._parentHost.get(index);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clearAsync() {\r\n        this.current = null;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    goBackAsync() {\r\n        return this._parentHost.goBackAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    goForwardAsync() {\r\n        return this._parentHost.goForwardAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    bringFrontAsync(page: IPage) {\r\n\r\n        if (page == this.current)\r\n            return Promise.resolve();\r\n        return this._parentHost.bringFrontAsync(page);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadAsync<TPage extends IPage>(page: TPage, options?: IPageLoadOptions): Promise<TPage> {\r\n\r\n        if (!this.current) {\r\n            page.host = this;\r\n            this.current = page;\r\n            page.loadAsync();\r\n            page.status = \"active\";\r\n            return Promise.resolve(page);\r\n        }\r\n        return this._parentHost.loadAsync(page, options);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    find<TPage extends IPage>(nameOrType: string | Type<TPage>): TPage {\r\n\r\n        if (this.current) {\r\n            if (isString(nameOrType) && nameOrType == getTypeName(this.current))\r\n                return <TPage>this.current;\r\n\r\n            if (getType(this.current) == nameOrType)\r\n                return <TPage>this.current;\r\n        }\r\n        return this._parentHost.find(nameOrType as Type<TPage>);\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    async goToAsync(index: number) {\r\n\r\n        this._parentHost.currentIndex = index;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get canGoBack(): boolean {\r\n        return this._parentHost.canGoBack;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get currentIndex(): number {\r\n        return this._parentHost.currentIndex;\r\n    }\r\n\r\n    set currentIndex(value: number) {\r\n        this._parentHost.currentIndex = value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get pageCount(): number {\r\n        return this._parentHost.pageCount;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    current: IPage;\r\n}\r\n\r\n\r\n\r\nregisterType(SelfHostedPageHost, \"SelfHostedPageHost\");","﻿import { IErrorHandler } from \"../../Core/Abstraction/IErrorHandler\";\r\nimport { App, Services } from \"../../Core/Global\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IPage, PageStatus } from \"../Abstraction/IPage\";\r\nimport { IMultiPageHost, IPageHost } from \"../Abstraction/IPageHost\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport interface IPageConfig<TView extends IView> {\r\n\r\n    name?: string;\r\n\r\n    url?: Bindable<string>;\r\n\r\n    view?: Bindable<TView>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    subTitle?: Bindable<LocalString>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Page<TView extends IView = IView> extends BindableObject implements IPage<TView>, IErrorHandler<Page> {\r\n\r\n    constructor(config?: IPageConfig<TView>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"url\", config);\r\n\r\n        this.bindConfigString(\"title\", config);\r\n\r\n        this.bindConfigString(\"subTitle\", config);\r\n\r\n        this.bindConfig(\"view\", config);\r\n\r\n        if (config) {\r\n            if (config.name)\r\n                this.name = config.name;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): object {\r\n        return {};\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setState(state: object) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    handleError(source: this, error: any) {\r\n        App.handleError(source, error);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadAsync(): Promise<void> {\r\n        if (this.status == \"notloaded\" || this.status == \"error\") {\r\n\r\n            let op = Services.operation.begin({ message: \"Loading page: \" + (this.title ? this.title : (this.url ? this.url : getTypeName(this))) });\r\n            this.status = \"loading\";\r\n            try {\r\n\r\n                await this.loadWorkAsync();\r\n            }\r\n            catch (e) {\r\n                this.status = \"error\";\r\n                App.handleError(this, e);\r\n            }\r\n            finally {\r\n                op.end();\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected loadWorkAsync(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    refreshAsync(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async closeAsync(result?: any) {\r\n\r\n        if (\"goBackAsync\" in this.host)\r\n            await (this.host as IMultiPageHost).goBackAsync();\r\n\r\n        this.status = \"closed\";\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    url: string = null;\r\n\r\n    host: IPageHost = null;\r\n\r\n    view: TView = null;\r\n\r\n    title: string = null;\r\n\r\n    subTitle: string = null;\r\n\r\n    name: string = null;\r\n\r\n    status: PageStatus = \"notloaded\";\r\n\r\n    args: object = null;\r\n}\r\n\r\nregisterType(Page, \"Page\");","﻿import { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { View } from \"./View\";\r\nimport \"Templates/ItemsView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IItemsViewConfig<TItem> extends IContentViewConfig<IObservableList<TItem>> {\r\n\r\n    emptyView?: View;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ItemsView<TItem = any> extends ContentView<IObservableList<TItem>> {\r\n\r\n    protected _updateCount: number = 0;\r\n\r\n    constructor(config?: IItemsViewConfig<TItem>) {\r\n\r\n        super({ content: observableListOf<TItem>(), ...config });\r\n\r\n        this.content.subscribe({\r\n            onItemAdded: (item: TItem) => {\r\n\r\n                if (this._updateCount == 0)\r\n                    this.onItemAdded(item);\r\n            },\r\n\r\n            onItemRemoved: (item: TItem) => {\r\n                if (this._updateCount == 0)\r\n                    this.onItemRemoved(item);\r\n            }\r\n        });\r\n\r\n        this.bindConfig(\"emptyView\", config);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected initItems() {\r\n        if (this.content)\r\n            this.content.toArray().forEach(a => this.onItemAdded(a));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    beginUpdate() {\r\n        this._updateCount++;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    endUpdate() {\r\n        this._updateCount--;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemAdded(item: TItem) {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemRemoved(item: TItem) {\r\n\r\n    }\r\n\r\n    emptyView: View = null;\r\n}\r\n\r\nregisterType(ItemsView, \"ItemsView\");","﻿import { INamedContent } from \"../../Core/Abstraction/INamedContent\";\r\nimport { isString } from \"../../Core/Helpers/TypeCheck\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IPanel } from \"../Abstraction/IPanel\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { loadAllAsync } from \"../Helpers/ViewUtils\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\n\r\nexport interface IPanelConfig extends IItemsViewConfig<IView> {\r\n\r\n    viewContent?: IView | IView[];\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class Panel extends ItemsView<IView> implements IPanel, IAsyncLoad {\r\n\r\n    constructor(config?: IPanelConfig) {\r\n        super({ template: \"ItemsView\", ...config });\r\n\r\n        if (config?.viewContent) {\r\n            if (Array.isArray(config.viewContent))\r\n                config.viewContent.forEach(a => this.addView(a));\r\n            else\r\n                this.addView(config.viewContent);\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    loadAsync(): Promise<any> {\r\n\r\n        return loadAllAsync(this.content);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n        this.content.clear();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    addView<TView extends IView>(view: TView): TView {\r\n        this.content.add(view);\r\n        return view;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    removeView(view: IView) {\r\n        this.content.remove(view);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    replaceView(oldViewName: string, newView: IView)\r\n\r\n    replaceView(oldView: IView, newView: IView)\r\n\r\n    replaceView(oldView: string | IView, newView: IView) {\r\n\r\n        let index: number;\r\n\r\n        if (isString(oldView))\r\n            index = linq(this.content).indexOf(a => \"name\" in a && (a as unknown as INamedContent).name == oldView);\r\n        else\r\n            index = this.content.indexOf(oldView);\r\n\r\n        if (index != -1)\r\n            this.content.set(index, newView);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemAdded(item: IView) {\r\n        if (item)\r\n            item.parentView = this;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemRemoved(item: IView) {\r\n        if (item && item.parentView == this)\r\n            item.parentView = null;\r\n    }\r\n}\r\n\r\nregisterType(Panel, \"Panel\");","﻿import { getTypeName, isInstanceOf, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IActivable } from \"../Abstraction/IActivable\";\r\nimport { IComponent } from \"../Abstraction/IComponent\";\r\nimport { DeactivateContentReason } from \"../Abstraction/IViewContentProvider\";\r\nimport { IPageConfig, Page } from \"../Components/Page\";\r\nimport { Panel } from \"../Components/Panel\";\r\nimport { formatForCss } from \"../Helpers/ViewUtils\";\r\n\r\nexport interface IActivityConfig extends IPageConfig<Panel> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Activity<TResult = void> extends Page<Panel> implements IActivable {\r\n\r\n    protected _viewItems: IComponent[] = [];\r\n    protected _resultResolve: (value: TResult) => void;\r\n\r\n    constructor(config?: IActivityConfig) {\r\n\r\n        super(config);\r\n\r\n        this.view = new Panel({ name: formatForCss(getTypeName(this)), styles: [\"vertical\", \"activity\", \"page\", \"relative\"] });\r\n        //this.view.isCacheEnabled = true;\r\n\r\n        if (this.name)\r\n            this.view.styles.push(this.name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get result(): Promise<TResult> {\r\n        return new Promise<TResult>(res => this._resultResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    activateAsync() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    deactivateAsync(reason: DeactivateContentReason) {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async closeAsync(result?: TResult) {\r\n\r\n        const closeResult = await super.closeAsync(result);\r\n\r\n        if (this._resultResolve)\r\n            this._resultResolve(result);\r\n\r\n        return closeResult;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected loadWorkAsync() {\r\n\r\n        return this.createAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createAsync(): Promise<void> {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static isActivity(obj: any): obj is Activity {\r\n\r\n        return isInstanceOf(obj, Activity);\r\n    }\r\n}\r\n\r\nregisterType(Activity, \"Activity\");","﻿import { linq } from \"../../Core/Linq\";\r\nimport { Type } from \"../../Core/Types/Types\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IPage } from \"../Abstraction/IPage\";\r\nimport { IMultiPageHost, IPageLoadOptions, PageTransactionType } from \"../Abstraction/IPageHost\";\r\nimport { ITransactionListener } from \"../Abstraction/ITransactionListener\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { Activity } from \"../Activities/Activity\";\r\nimport { IViewConfig, View } from \"./View\";\r\nimport { App, Services } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport \"Templates/PageHost.html\"; \r\n\r\ninterface IPageView {\r\n\r\n    content?: IView;\r\n\r\n    className: string;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IPageStackItem {\r\n\r\n    page: IPage;\r\n\r\n    options?: IPageLoadOptions;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface ISlidePageHostConfig extends IViewConfig {\r\n\r\n    defaultTransaction?: PageTransactionType;\r\n} \r\n\r\n/****************************************/\r\n\r\nexport class SlidePageHost extends View implements IMultiPageHost, ITransactionListener {\r\n\r\n    private _activeViewIndex: number = 0;\r\n    private _pageStack: IPageStackItem[];\r\n    private _currentIndex: number;\r\n    private _hideTimerId: number;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: ISlidePageHostConfig) {\r\n        super(config);\r\n\r\n        this.pageViews = [{ content: null, className: null },\r\n        { content: null, className: null }];\r\n\r\n        this.clearAsync();\r\n\r\n        if (config) {\r\n            if (config.defaultTransaction)\r\n                this.defaultTransaction = config.defaultTransaction;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clearAsync(): void {\r\n        this._pageStack = [];\r\n        this._currentIndex = -1;\r\n        this._activeViewIndex = 0;\r\n\r\n        this.pageViews[0].content = null;\r\n        this.pageViews[0].className = \"immediate next\";\r\n\r\n        this.pageViews[1].content = null;\r\n        this.pageViews[1].className = \"immediate prev\";\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    async goBackAsync() {\r\n        if (this._currentIndex > 0)\r\n            await this.goToAsync(this._currentIndex - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async goForwardAsync() {\r\n        if (this._currentIndex > 0)\r\n            await this.goToAsync(this._currentIndex + 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async bringFrontAsync(page: IPage) {\r\n\r\n        let pageIndex = linq(this._pageStack).indexOf(a => a.page == page);\r\n\r\n        if (pageIndex != -1)\r\n            await (page.host as IMultiPageHost).goToAsync(pageIndex);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadAsync<TPage extends IPage>(page: TPage, options?: IPageLoadOptions): Promise<TPage> {\r\n\r\n        if (this.current == page) {\r\n            await page.refreshAsync();\r\n            return page;\r\n        }\r\n\r\n        this.cancelHidePrev();\r\n\r\n        let op = Services.operation.begin(\"Hosting new page\");\r\n        try {\r\n\r\n            if (this.current && Activity.isActivity(this.current))\r\n                await this.current.deactivateAsync(\"replace\");\r\n\r\n            if (options?.loadMode == \"clear\")\r\n                this._currentIndex = -1;\r\n\r\n            if (options?.loadMode == \"replace\" && this.currentIndex >= 0)\r\n                this._currentIndex--;\r\n\r\n            while (this._pageStack.length > this._currentIndex + 1)\r\n                this._pageStack.splice(this._pageStack.length - 1, 1);\r\n\r\n            this._pageStack.push({ page: page, options: options });\r\n\r\n            if (options && options.transaction)\r\n                this.activeTransaction = options.transaction;\r\n            else\r\n                this.activeTransaction = this.defaultTransaction;\r\n\r\n            this._currentIndex++;\r\n\r\n            page.host = this;\r\n\r\n            page.view.parentView = this;\r\n\r\n            this.pageViews[this.backIndex].className = \"immediate next\";\r\n\r\n            await delayAsync(0);\r\n\r\n            await page.loadAsync();\r\n\r\n            if (this._currentIndex > 0) {\r\n\r\n                this.pageViews[this.backIndex].content = page.view;\r\n\r\n                await delayAsync(0);\r\n\r\n                this.pageViews[this.frontIndex].className = \"animate prev\";\r\n                this.pageViews[this.backIndex].className = \"animate active\";\r\n                this._activeViewIndex = this.backIndex;\r\n\r\n                this.hidePrev();\r\n            }\r\n            else {\r\n\r\n                this.pageViews[this.frontIndex].content = page.view;\r\n\r\n                this.pageViews[this.frontIndex].className = \"active\";\r\n            }\r\n\r\n            page.status = \"active\";\r\n\r\n            if (Activity.isActivity(this.current))\r\n                await this.current.activateAsync();\r\n        }\r\n        catch (e) {\r\n            App.handleError(this, e);\r\n        }\r\n        finally {\r\n            op.end();\r\n        }\r\n\r\n        return page;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get(index: number) {\r\n\r\n        return this._pageStack[index].page;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async goToAsync(index: number) {\r\n\r\n        if (index < 0 || index >= this._pageStack.length || index == this._currentIndex)\r\n            return;\r\n\r\n        this.cancelHidePrev();\r\n\r\n        let op = Services.operation.begin(\"Going to \" + index);\r\n        try {\r\n\r\n            if (Activity.isActivity(this.current))\r\n                await this.current.deactivateAsync(\"replace\");\r\n\r\n            this.current.status = \"hidden\";\r\n\r\n            let options = this._pageStack[this._currentIndex].options;\r\n            if (options && options.transaction)\r\n                this.activeTransaction = options.transaction;\r\n            else\r\n                this.activeTransaction = this.defaultTransaction;\r\n\r\n            this._currentIndex = index;\r\n\r\n            if (this.current.view.parentView == this)\r\n                this.current.view.parentView = null;\r\n\r\n            this.pageViews[this.backIndex].content = this._pageStack[this._currentIndex].page.view;\r\n\r\n            this.pageViews[this.backIndex].className = \"immmediate prev\";\r\n\r\n            await delayAsync(0);\r\n\r\n            this.pageViews[this.frontIndex].className = \"animate next\";\r\n            this.pageViews[this.backIndex].className = \"animate active\";\r\n\r\n            this._activeViewIndex = this.backIndex;\r\n\r\n            this.current.status = \"active\";\r\n\r\n            if (Activity.isActivity(this.current))\r\n                await this.current.activateAsync();\r\n\r\n            this.hidePrev();\r\n        }\r\n        catch (e) {\r\n            App.handleError(this, e);\r\n        }\r\n        finally {\r\n            op.end();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private cancelHidePrev() {\r\n\r\n        if (this._hideTimerId) {\r\n            clearTimeout(this._hideTimerId);\r\n            this._hideTimerId = null;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    private hidePrev() {\r\n\r\n        this._hideTimerId = window.setTimeout(() => {\r\n\r\n            if (!this._hideTimerId)\r\n                return;\r\n            this.pageViews[this.backIndex].className = \"prev hide\";\r\n        }, 4000);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onActivePageChanged(): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onTransactionEnd(): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    find<TPage extends IPage>(type: Type<TPage>): TPage;\r\n\r\n    find<TPage extends IPage>(name: string): TPage;\r\n\r\n    find<TPage extends IPage>(nameOrType: string | Type<TPage>): TPage {\r\n\r\n        let curPage: IPageStackItem;\r\n\r\n        if (typeof nameOrType == \"string\")\r\n            curPage = linq(this._pageStack).first(a => a.page.name == <string>nameOrType);\r\n        else\r\n            curPage = linq(this._pageStack).first(a => Object.getPrototypeOf(a.page).constructor == nameOrType);\r\n\r\n        if (curPage)\r\n            return <TPage>curPage.page;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    get current(): IPage {\r\n        return this._currentIndex == -1 ? undefined : this._pageStack[this._currentIndex].page;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get canGoBack(): boolean {\r\n        return this._currentIndex > 0;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get frontIndex(): number {\r\n        return this._activeViewIndex;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get backIndex(): number {\r\n        return (this._activeViewIndex + 1) % 2;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get currentIndex(): number {\r\n        return this._currentIndex;\r\n    }\r\n\r\n    set currentIndex(value: number) {\r\n        if (this._currentIndex == value)\r\n            return;\r\n        this.goToAsync(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get pageCount(): number {\r\n        return this._pageStack.length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    defaultTransaction: PageTransactionType = \"pop-up-down\";\r\n\r\n    activeTransaction: PageTransactionType = \"none\";\r\n\r\n    pageViews: IPageView[];\r\n}\r\n\r\n\r\nregisterType(SlidePageHost, \"SlidePageHost\");","﻿export enum GestureType {\r\n    SwipeLeft\r\n}\r\n\r\nexport interface IGestureData {\r\n\r\n    type: GestureType;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IGestureListener {\r\n\r\n    onGesture(data: IGestureData): void;\r\n}","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { IAsyncTask } from \"../../Core/Abstraction/ITask\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IComponent } from \"./IComponent\";\r\nimport { ViewStyle } from \"./IView\";\r\n\r\nexport enum ActionPriority {\r\n\r\n    Primary,\r\n    Secondary,\r\n    Evidence\r\n}\r\n\r\nexport interface IAction extends IComponent {\r\n\r\n    executeAsync: IAsyncTask<any>;\r\n\r\n    canExecute?: () => boolean;\r\n\r\n    displayName?: LocalString;\r\n\r\n    operation?: OperationType;\r\n\r\n    icon?: Bindable<string>;\r\n\r\n    badge?: Bindable<string>;\r\n\r\n    priority?: ActionPriority;\r\n\r\n    styles?: ViewStyle[];\r\n}\r\n","﻿import { Type } from \"../../Core/Types/Types\";\r\nimport { IPage } from \"./IPage\";\r\n\r\ndeclare global {\r\n\r\n    export interface IServices {\r\n\r\n        pageHost: IPageHost;\r\n    }\r\n}\r\n\r\n\r\nexport type PageTransactionType = \"none\" | \"dissolve\" | \"h-slide\" | \"pop-up-down\" | \"up-down\";\r\n\r\nexport type PageLoadMode = \"add\" | \"replace\" | \"clear\";\r\n\r\nexport enum PageHostMode {\r\n    Default,\r\n    WebView\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPageLoadOptions {\r\n\r\n    transaction?: PageTransactionType;\r\n\r\n    hostMode?: PageHostMode;\r\n\r\n    loadMode?: PageLoadMode;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPageHost {\r\n\r\n    clearAsync(): void;\r\n\r\n    loadAsync<TPage extends IPage>(page: TPage, options?: IPageLoadOptions): Promise<TPage>;\r\n\r\n    readonly current: IPage;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IMultiPageHost extends IPageHost {\r\n\r\n    find<TPage extends IPage>(type: Type<TPage>): TPage;\r\n\r\n    find<TPage extends IPage>(name: string): TPage;\r\n\r\n    bringFrontAsync(page: IPage): Promise<void>;\r\n\r\n    goBackAsync(): Promise<void>;\r\n\r\n    goForwardAsync(): Promise<void>;\r\n\r\n    goToAsync(index: number): Promise<void>;\r\n\r\n    currentIndex: number;\r\n\r\n    get(index: number): IPage;\r\n\r\n    readonly pageCount: number;\r\n\r\n    readonly canGoBack: boolean;\r\n}","﻿\r\nimport { Services } from \"../../Core/Global\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { DynamicString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority, IAction } from \"../Abstraction/IAction\";\r\nimport { IMultiPageHost } from \"../Abstraction/IPageHost\";\r\nimport { IPopUpMenu } from \"../Abstraction/IPopUpMenu\";\r\nimport { ISelectable } from \"../Abstraction/ISelectable\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { DeactivateContentReason, IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ActionBar } from \"../Components/ActionBar\";\r\nimport { ActionView, IActionViewConfig } from \"../Components/ActionView\";\r\nimport { NavBar } from \"../Components/NavBar\";\r\nimport { Panel } from \"../Components/Panel\";\r\nimport { SearchView } from \"../Components/SearchView\";\r\nimport { SelectionManager } from \"../SelectionManager\";\r\nimport { Activity, IActivityConfig } from \"./Activity\";\r\n\r\nexport enum ContentSelector {\r\n    Manual = 1,\r\n    Tabs = 2,\r\n    BottomNav = 3\r\n}\r\n\r\n\r\nexport enum PrimaryActionMode {\r\n    Floating = 1,\r\n    Button = 2,\r\n    FloatingFull = 3,\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IContentActivitConfig<TCtx extends ContentActivity> extends IActivityConfig {\r\n\r\n    providers: IViewContentProvider<TCtx>[];\r\n\r\n    selector?: ContentSelector;\r\n\r\n    menu?: IPopUpMenu;\r\n\r\n    actions?: ActionView[];\r\n\r\n    activeContent?: Bindable<string>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ContentActivity<TResult = any> extends Activity<TResult> implements IViewContentHost {\r\n\r\n    private _actionBar: ActionBar;\r\n    private _contentView: Panel;\r\n    private _floatingView: Panel;\r\n    private _isContentLoaded: boolean = false;\r\n    private _navBar: NavBar<IViewContentProvider<this>>;\r\n    private _selector: ContentSelector = ContentSelector.Tabs;\r\n    private _isDeactivating = false;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: IContentActivitConfig<ContentActivity>) {\r\n        super({\r\n            ...config\r\n        });\r\n\r\n        this.bindConfig(\"activeContent\", config);\r\n\r\n        if (config.providers)\r\n            this.providers = config.providers;\r\n\r\n        if (config.menu)\r\n            this.menu = config.menu;\r\n\r\n        if (config.selector)\r\n            this._selector = config.selector;\r\n\r\n        if (config.actions)\r\n            this.actions = config.actions;\r\n\r\n        this.prop(\"host\").subscribe(() => {\r\n\r\n            if (this._actionBar?.mainAction == \"none\" && (this.host as IMultiPageHost)?.canGoBack)\r\n                this._actionBar.mainAction = \"back\";\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async closeAsync(result?: TResult) {\r\n\r\n        await this.deactivateAsync(\"close\");\r\n\r\n        return await super.closeAsync(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    activateAsync() {\r\n\r\n        if (!this._isContentLoaded)\r\n            return this.refreshAsync();\r\n\r\n        if (this.activeContentProvider?.activateAsync)\r\n            return this.activeContentProvider?.activateAsync(\"refresh\");\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async deactivateAsync(reason: DeactivateContentReason) {\r\n\r\n        if (this._isDeactivating)\r\n            return;\r\n\r\n        try {\r\n            this._isDeactivating = true;\r\n            if (this.activeContentProvider?.deactivateAsync)\r\n                await this.activeContentProvider.deactivateAsync(reason);\r\n        }\r\n        finally {\r\n            this._isDeactivating = false;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    refreshAsync(): Promise<void> {\r\n\r\n        if (this.activeContentProvider)\r\n            return this.loadContentAsync(this.activeContentProvider, true);\r\n        return this.loadActiveContentAsync(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notifyContentChanged(provider: IViewContentProvider<this>) {\r\n\r\n        this.loadContentAsync(provider, true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    startSelection?<TItem extends ISelectable>(): SelectionManager<TItem> {\r\n\r\n        return this._actionBar.startSelection<TItem>();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected loadActiveContentAsync(force: boolean) {\r\n\r\n        const provider = linq(this.providers).first(a => a.info.name == this.activeContent);\r\n\r\n        return this.loadContentAsync(provider, force);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async loadWorkAsync(): Promise<void> {\r\n\r\n        await this.createAsync();\r\n\r\n        if (this.activeContentProvider)\r\n            this.activeContent = this.activeContentProvider.info.name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadContentAsync(provider: IViewContentProvider<this>, force: boolean): Promise<void> {\r\n\r\n        const isContentChanged = this.activeContentProvider != provider;\r\n\r\n        if (!isContentChanged && !force)\r\n            return;\r\n\r\n        if (isContentChanged && this.activeContentProvider?.deactivateAsync)\r\n            this.activeContentProvider?.deactivateAsync(\"replace\");\r\n\r\n        this.activeContentProvider = provider;\r\n\r\n        if (!force && (this.status == \"notloaded\" || this.status == \"loading\" || this.status == \"closed\")) {\r\n            console.debug(\"Skip loading content: \" + provider.info.name)\r\n            return;\r\n        }\r\n\r\n        const op = Services.operation.begin({ message: \"Loading content: \" + provider.info.name });\r\n        try {\r\n            const content = await provider.getContentAsync(this);\r\n\r\n            this.title = this.formatTitle(Format.title(content.title));\r\n\r\n            if (content.url)\r\n                this.url = content.url;\r\n\r\n            this._contentView.clear();\r\n            if (content.styles)\r\n                this._contentView.styles = content.styles;\r\n            else\r\n                this._contentView.styles = this.contentStyle;\r\n\r\n            if (content.views)\r\n                content.views.forEach(a => this._contentView.addView(a));\r\n\r\n            this._contentView.name = provider.info.name;\r\n            this._contentView.buildStyles();\r\n\r\n            this._actionBar.actions.clear();\r\n\r\n            if (this._floatingView)\r\n                this._floatingView.clear();\r\n\r\n            let actionPanel: Panel;\r\n\r\n            if (content.actions) {\r\n\r\n                content.actions.forEach(action => {\r\n\r\n                    if (action.priority == null || action.priority == ActionPriority.Secondary)\r\n                        this._actionBar.actions.add(this.createActionView(action));\r\n\r\n                    else if (action.priority == ActionPriority.Primary) {\r\n                        if (content.actionMode === undefined || content.actionMode != PrimaryActionMode.Button) {\r\n                            this._floatingView.visible = true;\r\n                            this._floatingView.addView(this.createActionView(action, { styles: [\"floating\", ...action.styles ?? []] }));\r\n                            if (content.actionMode == PrimaryActionMode.FloatingFull)\r\n                                this._floatingView.addStyle(\"full\");\r\n                            else\r\n                                this._floatingView.removeStyle(\"full\");\r\n                        }\r\n                        else {\r\n\r\n                            this._floatingView.visible = false;\r\n\r\n                            const actionView = ActionView.fromAction(action, { template: \"ActionButton\" });\r\n                            if (!actionPanel) {\r\n                                actionPanel = new Panel({\r\n                                    name: \"actions\",\r\n                                    styles: [\"vertical\", \"margin-items-v\"],\r\n                                });\r\n\r\n                                this._contentView.addView(actionPanel);\r\n                            }\r\n\r\n                            actionPanel.addView(actionView);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (content.searchAsync) {\r\n\r\n                const searchView = new SearchView({\r\n                    name: \"search-expanded\",\r\n                    isExpanded: true,\r\n                    searchAsync: content.searchAsync\r\n                });\r\n\r\n                this._actionBar.actions.add(searchView);\r\n            }\r\n\r\n            this._floatingView.visible = this._floatingView.content.count > 0;\r\n\r\n            this.actions.forEach(a => this._actionBar.actions.add(a));\r\n\r\n            await this._contentView.loadAsync();\r\n\r\n            if (provider?.activateAsync)\r\n                await provider.activateAsync(\"loading\");\r\n\r\n            this.onContentChanged(provider);\r\n\r\n            this._isContentLoaded = true;\r\n        }\r\n        catch (e) {\r\n\r\n            this.handleError(this, e);\r\n        }\r\n        finally {\r\n            op.end();\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected formatTitle(value: string) {\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createAsync() {\r\n\r\n        if (this.menu) {\r\n            this._actionBar = this.view.addView(new ActionBar({\r\n                title: this.prop(\"title\"),\r\n                mainAction: \"menu\",\r\n                navigationMenu: this.menu\r\n            }));\r\n        }\r\n        else {\r\n            this._actionBar = this.view.addView(new ActionBar({\r\n                onBack: () => this.closeAsync(),\r\n                title: this.prop(\"title\"),\r\n                mainAction: (this.host as IMultiPageHost).canGoBack ? \"back\" : \"none\"\r\n            }));\r\n        }\r\n\r\n        if (this.providers.length > 1) {\r\n\r\n            if (this._selector == ContentSelector.Manual) {\r\n                this.prop(\"activeContent\").subscribe(() => this.loadActiveContentAsync(false));\r\n            }\r\n            else {\r\n                let navStyle: string;\r\n                let itemTemplate: string;\r\n                let itemBehavoirs: string[];\r\n\r\n                switch (this._selector) {\r\n                    case ContentSelector.Tabs:\r\n                        navStyle = \"tab-view\";\r\n                        itemTemplate = \"TextView\";\r\n                        itemBehavoirs = [\"ripple\"];\r\n                        break;\r\n                    case ContentSelector.BottomNav:\r\n                        navStyle = \"bottom-nav\";\r\n                        itemTemplate = \"IconTextView\";\r\n                        itemBehavoirs = [\"ripple\"];\r\n                        break;\r\n                }\r\n\r\n                this._navBar = new NavBar({\r\n                    styles: [<any>navStyle],\r\n                    itemTemplate: itemTemplate,\r\n                    onItemSelected: a => this.loadContentAsync(a.content, false),\r\n                    selectedItem: this.prop(\"activeContent\"),\r\n                    itemBehavoirs: itemBehavoirs,\r\n                    items: linq(this.providers).select(a => ({\r\n                        name: a.info.name,\r\n                        icon: a.info.icon,\r\n                        text: a.info.displayName,\r\n                        content: a\r\n                    })).toArray()\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this._navBar && this._selector == ContentSelector.Tabs)\r\n            this.view.addView(this._navBar);\r\n\r\n        const contentWrapper = this.view.addView(new Panel({ name: \"content\" }));\r\n\r\n        this._contentView = contentWrapper.addView(new Panel({ name: \"scroll-container\", styles: this.contentStyle }));\r\n\r\n        this._floatingView = contentWrapper.addView(new Panel({ name: \"floating-container\", template: \"ItemsViewWrapped\", visible: false, styles: this.floatingStyle }));\r\n\r\n        if (this._navBar && this._selector == ContentSelector.BottomNav)\r\n            this.view.addView(this._navBar);\r\n\r\n        if (this.providers.length == 1)\r\n            this.activeContentProvider = this.providers[0];\r\n\r\n        this.status = \"created\";\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createActionView(action: IAction, config?: IActionViewConfig): ActionView {\r\n        return ActionView.fromAction(action, config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onContentChanged(newContent: IViewContentProvider<this>) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get actionBar() { return this._actionBar; }\r\n\r\n    activeContent: string = null;\r\n\r\n    activeContentProvider: IViewContentProvider<this> = null;\r\n\r\n    providers: IViewContentProvider<this>[] = [];\r\n\r\n    menu: IPopUpMenu = null;\r\n\r\n    actions: ActionView[] = [];\r\n\r\n    floatingStyle: ViewStyle[] = [\"vertical\", \"item-absolute\", \"bottom\", \"fill-h\", \"center-items-h\"];\r\n\r\n    contentStyle: ViewStyle[] = [\"vertical\", \"scroll\"];\r\n}\r\n\r\nregisterType(ContentActivity, \"ContentActivity\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IPopUpMenu } from \"../Abstraction/IPopUpMenu\";\r\nimport { ISelectable } from \"../Abstraction/ISelectable\";\r\nimport { SelectionManager } from \"../SelectionManager\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\nimport \"Templates/ActionBar.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\ntype ActionBarMainActionType = \"none\" | \"menu\" | \"back\";\r\n\r\n/****************************************/\r\n\r\nexport interface IActionBarConfig extends IViewComponentConfig {\r\n\r\n    actions?: IAction[];\r\n\r\n    mainAction?: Bindable<ActionBarMainActionType>;\r\n\r\n    navigationMenu?: Bindable<IPopUpMenu>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    icon?: Bindable<string>;\r\n\r\n    onBack?: () => void;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ActionBar extends ViewComponent {\r\n\r\n    constructor(config?: IActionBarConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"mainAction\", config);\r\n\r\n        this.bindConfig(\"navigationMenu\", config);\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfig(\"icon\", config);\r\n\r\n        this.actions.subscribe({\r\n            onItemAdded: this.onActionAdded.bind(this),\r\n            onItemRemoved: this.onActionRemoved.bind(this)\r\n        });\r\n\r\n\r\n        if (config) {\r\n\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n\r\n            if (config.onBack)\r\n                this.back = config.onBack;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onActionRemoved(action: ActionView) {\r\n        if (action && action.parentView == this)\r\n            action.parentView = null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onActionAdded(action: ActionView) {\r\n\r\n        if (action)\r\n            action.parentView = this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showNavigationMenu() {\r\n\r\n        if (this.navigationMenu)\r\n            this.navigationMenu.showAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n        this.actions.add(ActionView.fromActionIcon(action));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    back() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    startSelection<TItem extends ISelectable>(): SelectionManager<TItem> {\r\n\r\n        if (!this.selectionManager)\r\n            this.selectionManager = new SelectionManager<any>();\r\n        this.selectionManager.isActive = true;\r\n        return this.selectionManager;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    mainAction: ActionBarMainActionType = \"none\";\r\n\r\n    navigationMenu: IPopUpMenu = null;\r\n\r\n    title: string = null;\r\n\r\n    icon: string = null;\r\n\r\n    selectionManager: SelectionManager<any> = null;\r\n}\r\n\r\nregisterType(ActionBar, \"ActionBar\");","﻿import { linq } from \"../../Core/Linq\";\r\nimport { IBehavoir } from \"../../Templating/Abstraction/IBehavoir\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { IconTextView, IIconTextViewConfig } from \"./IconTextView\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\nimport \"Templates/NavBar.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface INavBarItemConfig<TContent> extends IIconTextViewConfig {\r\n\r\n    name?: string;\r\n\r\n    content?: TContent;\r\n\r\n    badge?: Bindable<string>;\r\n\r\n    behavoirs?: Bindable<(IBehavoir | string)[]>;\r\n}\r\n\r\n/****************************************/\r\n\r\ntype NavigationBarItemStatus = \"active\" | \"\";\r\n\r\n/****************************************/\r\n\r\nexport class NavBarItem<TContent> extends IconTextView implements IContentView<TContent> {\r\n\r\n    constructor(config: INavBarItemConfig<TContent>) {\r\n        super(config);\r\n\r\n        this.prop(\"status\");\r\n\r\n        this.bindConfig(\"badge\", config);\r\n\r\n        this.bindConfig(\"behavoirs\", config);\r\n\r\n        this.bindConfig(\"content\", config);\r\n\r\n        if (config)\r\n            this.name = config.name;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select() {\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    name: string = null;\r\n\r\n    status: NavigationBarItemStatus = \"\";\r\n\r\n    badge: string = null;\r\n\r\n    behavoirs: (IBehavoir | string)[] = [];\r\n\r\n    content: TContent = null;\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface INavBarConfig<TContent> extends IItemsViewConfig<NavBarItem<TContent>> {\r\n\r\n    items?: INavBarItemConfig<TContent>[];\r\n\r\n    itemTemplate?: Bindable<CatalogTemplate<IView>>;\r\n\r\n    itemBehavoirs?: Bindable<(IBehavoir | string)[]>;\r\n\r\n    selectedItem?: Bindable<string>;\r\n\r\n    onItemSelected?: (item?: NavBarItem<TContent>) => void;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class NavBar<TContent = any> extends ItemsView<NavBarItem<TContent>>  {\r\n\r\n    constructor(config?: INavBarConfig<TContent>) {\r\n        super(config);\r\n\r\n        this.bindConfig(\"itemTemplate\", config);\r\n\r\n        this.bindConfig(\"itemBehavoirs\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.items)\r\n                config.items.forEach(a => this.addItem(a));\r\n\r\n            if (config.onItemSelected) {\r\n\r\n                this.onSelectedItemChanged = (a, b) => {\r\n                    NavBar.prototype.onSelectedItemChanged.bind(this)(a, b);\r\n                    config.onItemSelected(a);\r\n                };\r\n            }\r\n        }\r\n\r\n        this.bindConfig(\"selectedItem\", config, {\r\n            convertTo: a => this.getItem(a as string),\r\n            convertFrom: a => a ? a.name : undefined\r\n        }, this.onSelectedItemChanged);\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItem(name: string): NavBarItem<TContent> {\r\n        return linq(this.content).first(a => a.name == name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    selectItem(name: string) {\r\n        this.selectedItem = this.getItem(name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addItem(config: INavBarItemConfig<TContent>) {\r\n\r\n        let item = this.createItem(config);\r\n        this.content.add(item);\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItem(config?: INavBarItemConfig<TContent>): NavBarItem<TContent> {\r\n\r\n        let item = new NavBarItem({ template: this.prop(\"itemTemplate\"), behavoirs: this.prop(\"itemBehavoirs\"), ...config });\r\n        item.parentView = this;\r\n        item.select = () =>\r\n            this.selectedItem = item;\r\n        return item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onSelectedItemChanged(newItem: NavBarItem<TContent>, oldItem: NavBarItem<TContent>) {\r\n        if (oldItem)\r\n            oldItem.status = \"\";\r\n        if (newItem)\r\n            newItem.status = \"active\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    selectedItem: NavBarItem<TContent> = null;\r\n\r\n    itemTemplate: CatalogTemplate<IView> = \"IconTextView\";\r\n\r\n    itemBehavoirs: (IBehavoir | string)[] = [];\r\n}\r\n\r\nregisterType(NavBarItem, \"NavBarItem\");\r\n\r\nregisterType(NavBar, \"NavBar\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionView, IActionViewConfig } from \"./ActionView\";\r\n\r\nexport interface ISearchViewConfig extends IActionViewConfig {\r\n\r\n    searchText?: Bindable<string>;\r\n\r\n    isExpanded?: Bindable<boolean>;\r\n\r\n    poolInterval?: number;\r\n\r\n    searchAsync?: (text: string) => Promise<void>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SearchView extends ActionView {\r\n\r\n    protected _lastSearchText: string = null;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: ISearchViewConfig) {\r\n        super({\r\n            name: \"search\",\r\n            template: \"SearchView\",\r\n            content: \"fas fa-search\",\r\n            tooltip: \"Ricerca\",\r\n            ...config\r\n        });\r\n\r\n        this.bindConfig(\"isExpanded\", config);\r\n\r\n        this.bindConfig(\"searchText\", config);\r\n\r\n        this.prop(\"hasFocus\").subscribe(value => this.onFocusChanged(value));\r\n\r\n        if (config) {\r\n\r\n            if (config.poolInterval)\r\n                this.poolInterval = config.poolInterval;\r\n\r\n            if (config.searchAsync)\r\n                this.doSearchAsync = config.searchAsync;\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected onFocusChanged(value: boolean) {\r\n\r\n        if (value) {\r\n            this._lastSearchText = this.searchText;\r\n            this.poolSearchTextAsync();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async poolSearchTextAsync(): Promise<void> {\r\n\r\n        while (this.hasFocus) {\r\n            if (this.searchText != this._lastSearchText) {\r\n                this._lastSearchText = this.searchText;\r\n                await this.searchAsync(this._lastSearchText);\r\n            }\r\n            await delayAsync(this.poolInterval);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected executeWorkAsync(): Promise<void> {\r\n\r\n        if (!this.isExpanded) {\r\n            this.isExpanded = true;\r\n            this.hasFocus = true;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async searchAsync(text: string) {\r\n\r\n        this.status = \"searching\";\r\n\r\n        await delayAsync(0);\r\n\r\n        try {\r\n            await this.doSearchAsync(text);\r\n        }\r\n        finally {\r\n            this.status = \"loaded\";\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected doSearchAsync(text: string) {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n        this.searchText = \"\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    close() {\r\n        this.isExpanded = false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    searchText: string = null;\r\n\r\n    isExpanded: boolean = false;\r\n\r\n    hasFocus: boolean = false;\r\n\r\n    poolInterval: number = 200;\r\n}\r\n\r\nregisterType(SearchView, \"SearchView\");","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\nimport { forEachAsync } from \"../../Core/Utils/ArrayUtils\";\r\nimport { IItemsContainer, IItemsLoader } from \"../Abstraction/IItemsLoader\";\r\n\r\nexport class FullItemsLoader<TItem = any> implements IItemsLoader<TItem, any>  {\r\n\r\n    async loadItemsAsync(container: IItemsContainer<TItem, any>, chunkSize: number): Promise<void> {\r\n\r\n        container.status = \"loading\";\r\n        const operation = Services.operation.begin({ message: \"Loading items\", type: OperationType.Local });\r\n        try {\r\n\r\n            const items = await container.itemsSource.getItemsAsync(container.filter);\r\n\r\n            container.clear();\r\n\r\n            if (items)\r\n                await forEachAsync(items, chunkSize, a => container.addItem(a));\r\n\r\n        }\r\n        finally {\r\n            operation.end();\r\n            container.status = \"loaded\";\r\n        }\r\n    }\r\n\r\n    static readonly instance = new FullItemsLoader();\r\n}","﻿import { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/TextView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ITextViewConfig extends IContentViewConfig<string> {\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class TextView extends ContentView<string> {\r\n\r\n    constructor(config?: ITextViewConfig) {\r\n\r\n        super({ template: \"TextContent\", ...config });\r\n    }\r\n}\r\n\r\nregisterType(TextView, \"TextView\");\r\n","﻿import { linq } from \"../../Core/Linq\";\r\nimport { getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList, IObservableListHandler } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IItemsContainer, IItemsLoader } from \"../Abstraction/IItemsLoader\";\r\nimport { IScrollData, IScrollListener } from \"../Abstraction/IScrollListener\";\r\nimport { ISingleItemSelector } from \"../Abstraction/ISingleItemSelector\";\r\nimport { IView, IViewFactory } from \"../Abstraction/IView\";\r\nimport { isAsyncLoad, isSelectable } from \"../Helpers/TypeCheck\";\r\nimport { FullItemsLoader } from \"../Items/FulltemsLoader\";\r\nimport { IItemChangeListener } from \"../Items/ItemsObserver\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\nimport { TextView } from \"./TextView\";\r\nimport { ViewComponentStatus } from \"./ViewComponent\";\r\nimport \"Templates/ListView.html\";\r\nimport { Services } from \"../../Core/Global\";\r\n\r\n\r\ntype ListViewStatus = ViewComponentStatus | \"loading\";\r\n\r\nexport type SelectionMode = \"none\" | \"multiple\" | \"single\";\r\n\r\n/****************************************/\r\n\r\nexport interface IListViewConfig<TItem, TView extends IView, TFilter extends {}> extends IItemsViewConfig<TView> {\r\n\r\n    itemsSource?: ItemsSource<TItem, any, any>;\r\n\r\n    createItemView?: IViewFactory<TItem, TView>;\r\n\r\n    itemsLoader?: IItemsLoader<TItem, any>;\r\n\r\n    onSelectdItemChanged?: (item: TItem) => void;\r\n\r\n    isListenerActive?: boolean;\r\n\r\n    items?: Bindable<IObservableList<TItem>>;\r\n\r\n    filter?: TFilter;\r\n\r\n    selectionMode?: SelectionMode;\r\n\r\n    showSeparator?: boolean;\r\n\r\n    isAutoLoad?: boolean;\r\n\r\n    footer?: IView[];\r\n\r\n    header?: IView[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ListView<TItem = any, TView extends IView = any, TFilter extends {} = any> extends ItemsView<TView> implements IScrollListener, IItemsContainer<TItem, any>, IAsyncLoad, ISingleItemSelector<TItem> {\r\n\r\n    protected _isLoaded: boolean = false;\r\n    protected _itemViewMap = new Map<TView, TItem>();\r\n    protected _listener: IItemChangeListener<TItem, any>;\r\n\r\n    constructor(config?: IListViewConfig<TItem, TView, TFilter>) {\r\n\r\n        super({ template: \"ListView\", styles: [\"default\"], ...config });\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"items\", config);\r\n\r\n        this.bindConfig(\"filter\", config);\r\n\r\n        this.bindConfig(\"selectionMode\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.itemsLoader)\r\n                this.itemsLoader = config.itemsLoader;\r\n\r\n            if (config.showSeparator !== undefined)\r\n                this.showSeparator = config.showSeparator;\r\n\r\n            if (config.createItemView)\r\n                this.createItemViewWork = config.createItemView;\r\n\r\n            if (config.header)\r\n                this.header.addRange(config.header);\r\n\r\n            if (config.footer)\r\n                this.footer.addRange(config.footer);\r\n        }\r\n\r\n        if (!config?.items)\r\n            this.items = observableListOf();\r\n\r\n        if (!this.itemsLoader && this.itemsSource)\r\n            this.itemsLoader = FullItemsLoader.instance;\r\n\r\n        if (config && config.isAutoLoad)\r\n            this.loadAsync();\r\n\r\n        const itemsHandler = <IObservableListHandler<TItem>>{\r\n\r\n            onClear: () => {\r\n                this.selectedItem = null;\r\n                this._itemViewMap.clear();\r\n                this.content.clear();\r\n            },\r\n\r\n            onItemAdded: (item, index, reason) => {\r\n                if (reason != \"replace\")\r\n                    this.content.insert(index, this.createItemView(item));\r\n            },\r\n\r\n            onItemRemoved: (item, index, reason) => {\r\n                if (reason == \"remove\")\r\n                    this.content.removeAt(index)\r\n            },\r\n\r\n            onItemReplaced: (newItem, oldItem, index) => this.content.set(index, this.createItemView(newItem)),\r\n\r\n            onItemSwap: (index, newIndex) => this.content.swap(index, newIndex),\r\n        };\r\n\r\n        this.prop(\"items\").subscribe((value, oldValueX) => {\r\n\r\n            if (oldValueX != null)\r\n                oldValueX.unsubscribe(itemsHandler);\r\n\r\n            this.content.clear();\r\n\r\n            if (value) {\r\n                value.subscribe(itemsHandler);\r\n                for (let item of value)\r\n                    this.content.add(this.createItemView(item))\r\n                this.status = \"loaded\";\r\n            }\r\n        });\r\n\r\n        this.prop(\"items\").notifyChanged();\r\n\r\n        this.prop(\"selectedItem\").subscribe((value, oldValue) => {\r\n\r\n            if (this.selectionMode == \"single\")\r\n                this.updateItemSelection(oldValue, false);\r\n\r\n            if (this.selectionMode != \"none\") {\r\n                this.updateItemSelection(value, true);\r\n\r\n                if (config?.onSelectdItemChanged)\r\n                    config.onSelectdItemChanged(value);\r\n            }\r\n        });\r\n\r\n        if (config?.isListenerActive)\r\n            this.activateListener();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    activateListener() {\r\n\r\n        if (!this.itemsSource?.typeName)\r\n            return;\r\n\r\n        if (!this._listener)\r\n\r\n            this._listener = {\r\n\r\n                onItemAdded: args => this.refreshAsync(),\r\n\r\n                onItemRemoved: args => {\r\n                    if (args.value)\r\n                        this.items.removeWhen(a => this.itemsSource.equals(this.itemsSource.getItemValue(a), args.value));\r\n                },\r\n\r\n                onItemChanged: async args => {\r\n\r\n                    let index = linq(this.items).indexOf(a => this.itemsSource.equals(this.itemsSource.getItemValue(a), args.value));\r\n                    if (index != -1) {\r\n                        const newItem = await this.itemsSource.getItemByValueAsync(args.value);\r\n                        if (newItem)\r\n                            this.items.set(index, newItem);\r\n                    }\r\n                }\r\n            };\r\n\r\n        Services.itemsObserver.register(this.itemsSource.typeName, this._listener);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    deactivateListener() {\r\n\r\n        if (this._listener)\r\n            Services.itemsObserver.unregister(this.itemsSource.typeName, this._listener);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateItemSelection(item: TItem, isSelected: boolean) {\r\n\r\n        let view = this.findItemView(item);\r\n\r\n        if (isSelectable(view))\r\n            view.isSelected = isSelected;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    findItemView(item: TItem): TView {\r\n\r\n        if (!item)\r\n            return null;\r\n        return linq(this._itemViewMap.entries()).where(a => a[1] == item).select(a => a[0]).first();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeItem(item: TItem) {\r\n\r\n        this.items.remove(item);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addItem(item: TItem) {\r\n\r\n        this.items.add(item);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n        this.items.clear();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadAsync() {\r\n\r\n        if (this._isLoaded)\r\n            return;\r\n\r\n        this.refreshAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async refreshAsync() {\r\n\r\n        let oldSelection = this.selectedItem;\r\n\r\n        if (this.itemsLoader) {\r\n\r\n            this.beginUpdate();\r\n\r\n            await this.itemsLoader.loadItemsAsync(this, 25);\r\n\r\n            if (!oldSelection && this.selectedItem)\r\n                oldSelection = this.selectedItem;\r\n\r\n            this.endUpdate();\r\n        }\r\n\r\n        this._isLoaded = true;\r\n\r\n        if (oldSelection && this.itemsSource)\r\n            this.selectedItem = linq(this.items).first(a => this.itemsSource.itemComparer(a, oldSelection));\r\n        else\r\n            this.selectedItem = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemRemoved(itemView: TView) {\r\n\r\n        if (itemView) {\r\n\r\n            if (itemView.parentView == this)\r\n                itemView.parentView = null;\r\n\r\n            let item = this._itemViewMap.get(itemView);\r\n\r\n            if (item == this.selectedItem)\r\n                this.selectedItem = null;\r\n\r\n            this._itemViewMap.delete(itemView);\r\n\r\n            //TODO remove selection\r\n            /*\r\n            if (ViewUtils.isSelectable(itemView))\r\n                itemView.prop(\"isSelected\").unsubscribe(this.selectionHandler);*/\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem): TView {\r\n\r\n        let itemView = this.createItemViewWork(item);\r\n\r\n        if ((this.status == \"loading\" || this.status == \"loaded\") && isAsyncLoad(itemView)) {\r\n            itemView.loadAsync(); //Not awaited\r\n        }\r\n\r\n        if (itemView) {\r\n            itemView.parentView = this;\r\n            this._itemViewMap.set(itemView, item);\r\n            if (isSelectable(itemView))\r\n                itemView.prop(\"isSelected\").subscribe(value => {\r\n                    if (value)\r\n                        this.selectedItem = item;\r\n                });\r\n        }\r\n\r\n        return itemView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemViewWork(item: TItem): TView {\r\n\r\n        let factory = Services.views[getTypeName(item)];\r\n        if (factory)\r\n            return <TView>factory(item);\r\n\r\n        return <any>new TextView({ content: this.itemsSource ? this.itemsSource.getItemText(item) : item.toString() });\r\n    }\r\n\r\n    /****************************************/\r\n    \r\n    onScroll(data: IScrollData) {\r\n\r\n        if (this.itemsLoader && \"onScroll\" in this.itemsLoader)\r\n            (this.itemsLoader as unknown as IScrollListener).onScroll(data);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get itemsCount() { return this.content.count }\r\n\r\n    get isScrollCheckActive() { return this.itemsLoader && \"onScroll\" in this.itemsLoader }\r\n\r\n    readonly header : IObservableList<IView> = observableListOf();\r\n\r\n    readonly footer: IObservableList<IView> = observableListOf();\r\n\r\n    itemsSource: ItemsSource<TItem, any, TFilter> = null;\r\n\r\n    itemsLoader: IItemsLoader<TItem, TFilter> = null;\r\n\r\n    items: IObservableList<TItem> = null;\r\n\r\n    selectedItem: TItem = null;\r\n\r\n    status: ListViewStatus = \"\";\r\n\r\n    selectionMode: SelectionMode = \"none\";\r\n\r\n    showSeparator: boolean = false;\r\n\r\n    filter: TFilter = null;\r\n}\r\n\r\nregisterType(ListView, \"ListView\");","﻿import { get, getTypeName, set, setTypeName } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IItemCreateOptions<TItem, TValue> {\r\n\r\n    value?: TValue;\r\n\r\n    item?: TItem;\r\n\r\n    text?: string;\r\n\r\n    type?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Item {\r\n\r\n    static create<TItem, TValue = TItem>(options: IItemCreateOptions<TItem, TValue>): TValue {\r\n\r\n        let newValue: any = options.value;\r\n\r\n        if (typeof newValue == \"string\")\r\n            newValue = new String(newValue);\r\n        else if (typeof newValue == \"number\")\r\n            newValue = new Number(newValue);\r\n        else if (typeof newValue == \"boolean\")\r\n            newValue = new Boolean(newValue);\r\n        else if (newValue instanceof Date)\r\n            newValue = new Date(newValue.getTime());\r\n\r\n        if (options.item) {\r\n            options.item.valueOf = () => options.value;\r\n            if (options.value)\r\n                options.item[\"toJSON\"] = () => options.value;\r\n            if (options.text)\r\n                options.item.toString = () => options.text;\r\n            if (options.type)\r\n                options.item[\"$type\"] = () => options.type;\r\n        }\r\n\r\n        if (newValue) {\r\n\r\n            if (options.text)\r\n                newValue.toString = () => options.text;\r\n\r\n            if (options.type)\r\n                setTypeName(newValue, options.type);\r\n\r\n            if (options.item !== undefined)\r\n                set(newValue, \"@item\", options.item);\r\n\r\n            newValue[\"toJSON\"] = () => {\r\n                if ((options.value as any)?.toJSON)\r\n                    return (options.value as any).toJSON();\r\n                return options.value;\r\n            }\r\n        }\r\n\r\n        if (newValue)\r\n            return newValue;\r\n\r\n        return <any>options.item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static getText(value: any): string {\r\n\r\n        if (value == null || value == undefined)\r\n            return \"\";\r\n\r\n        const item = this.getItem(value);\r\n        if (item !== value)\r\n            return item.toString();\r\n\r\n        return value.toString();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static getType(value: any): string {\r\n\r\n        return getTypeName(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static getValue<TValue>(value: any): TValue {\r\n\r\n        if (!value)\r\n            return;\r\n\r\n        if (value.valueOf)\r\n            return <TValue>value.valueOf();\r\n\r\n        return <TValue>value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static getItem<TItem>(value: any): TItem {\r\n        if (!value)\r\n            return;\r\n\r\n        const item = get<TItem>(value, \"@item\");\r\n        if (item)\r\n            return item;\r\n\r\n        return undefined;\r\n    }\r\n}","﻿import { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { EqualityComparer } from \"../../Core/Types/Types\";\r\nimport { Item } from \"./Item\";\r\n\r\nexport interface IItemsSourceConfig<TItem, TValue, TFilter> {\r\n\r\n    getItemsAsync?: (filter: TFilter) => Promise<TItem[]>;\r\n\r\n    getItemByValueAsync?: (value: TValue) => Promise<TItem>;\r\n\r\n    getItemText?: (item: TItem) => string;\r\n\r\n    getItemValue?: (item: TItem) => TValue;\r\n\r\n    countAsync?: (filter: TFilter) => number;\r\n\r\n    getFilter?: (text?: string, offset?: number, pageSize?: number) => TFilter;\r\n\r\n    equals?: (a: TValue, b: TValue) => boolean\r\n\r\n    displayName?: LocalString;\r\n\r\n    typeName?: string;\r\n\r\n    allowZero?: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ItemsSource<TItem, TValue = any, TFilter = any> {\r\n\r\n    protected _typeName: string;\r\n    protected _allowZero: boolean;\r\n\r\n    constructor(config?: IItemsSourceConfig<TItem, TValue, TFilter>) {\r\n\r\n        if (config) {\r\n\r\n            if (config.getItemsAsync)\r\n                this.getItemsAsync = config.getItemsAsync;\r\n\r\n            if (config.allowZero !== undefined)\r\n                this._allowZero = config.allowZero;\r\n\r\n            if (config.getItemValue)\r\n\r\n                this.getItemValue = (a, bindItem) => {\r\n\r\n                    if (bindItem === false)\r\n                        return config.getItemValue(a);\r\n\r\n                    if (!a && (a as any !== 0 || !config.allowZero))\r\n                        return undefined;\r\n                    const value = config.getItemValue(a);\r\n                    if (value === null)\r\n                        return null;\r\n                    return Item.create({ type: this.typeName, value: value, text: this.getItemText(a), item: a });\r\n                }\r\n\r\n            if (config.getItemText)\r\n                this.getItemText = config.getItemText;\r\n\r\n            if (config.getFilter)\r\n                this.getFilter = config.getFilter;\r\n\r\n            if (config.getItemByValueAsync) {\r\n\r\n                this.getItemByValueAsync = value => {\r\n\r\n                    const item = Item.getItem<TItem>(value);\r\n\r\n                    if (item)\r\n                        return Promise.resolve(item);\r\n\r\n                    return config.getItemByValueAsync(value);\r\n                };\r\n            }\r\n\r\n            if (config.equals)\r\n                this.equals = config.equals;\r\n\r\n            this._typeName = config.typeName;\r\n\r\n            this.displayName = config.displayName;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItemsAsync(filter?: TFilter): Promise<TItem[]> {\r\n\r\n        return Promise.resolve([]);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItemText(item: TItem): string {\r\n\r\n        if (item)\r\n            return item.toString();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItemValue(item: TItem, bindItem?: boolean): TValue {\r\n        return <any>item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getFilter(text?: string, offset?: number, pageSize?: number): TFilter {\r\n\r\n        return <TFilter>{};\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async countAsync(filter: TFilter): Promise<number> {\r\n\r\n        return (await this.getItemsAsync(filter)).length;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getItemByValueAsync(value: TValue): Promise<TItem> {\r\n\r\n        const item = Item.getItem<TItem>(value);\r\n\r\n        if (item)\r\n            return Promise.resolve(item);\r\n\r\n        return Promise.resolve(value as unknown as TItem);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    equals(a: TValue, b: TValue): boolean {\r\n\r\n        if (a == b)\r\n            return true;\r\n        if (a != undefined && a.valueOf && b != undefined && b.valueOf)\r\n            return a.valueOf() == b.valueOf();\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get itemComparer(): EqualityComparer<TItem> {\r\n\r\n        return (a, b) => this.equals(this.getItemValue(a), this.getItemValue(b));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get typeName() {\r\n        return this._typeName;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get allowZero() {\r\n        return this._allowZero;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    displayName: LocalString;\r\n}","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { IItemsContainer, IItemsLoader } from \"../Abstraction/IItemsLoader\";\r\nimport { IScrollData, IScrollListener } from \"../Abstraction/IScrollListener\";\r\n\r\nexport interface IPagedItemsLoaderConfigConfig<TFilter> {\r\n\r\n    pageSize?: number;\r\n\r\n    getFilter?: (offset: number, pageSize: number) => TFilter;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class PagedItemsLoader<TItem = any, TFilter = object> extends BindableObject implements IItemsLoader<TItem, TFilter>, IScrollListener {\r\n\r\n    private _hasMoreItems: boolean = true;\r\n    private _container: IItemsContainer<TItem, TFilter>;\r\n\r\n    constructor(config?: IPagedItemsLoaderConfigConfig<TFilter>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"pageSize\", config);\r\n\r\n        if (config) {\r\n            if (config.getFilter)\r\n                this.getFilter = config.getFilter;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadItemsAsync(container: IItemsContainer<TItem, TFilter>, chunkSize: number): Promise<void> {\r\n\r\n        this._container = container;\r\n\r\n        this._hasMoreItems = true;\r\n\r\n        this._container.clear();\r\n\r\n        return this.loadNextPageAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadNextPageAsync(): Promise<void> {\r\n\r\n        if (!this.canLoadNextPage)\r\n            return;\r\n\r\n\r\n        if (this._container.itemsSource) {\r\n\r\n            const filter = this.getFilter(this._container.itemsCount, this.pageSize);\r\n\r\n            const operation = Services.operation.begin({ message: \"Laoding items from \" + this._container.itemsCount, type: OperationType.Local });\r\n\r\n            try {\r\n\r\n                this._container.status = \"loading\";\r\n\r\n                const newItems = await this._container.itemsSource.getItemsAsync({ ...filter, ...this._container.filter });\r\n\r\n                if (!newItems || newItems.length == 0)\r\n                    this._hasMoreItems = false;\r\n                else {\r\n\r\n                    newItems.forEach(item =>\r\n                        this._container.addItem(item));\r\n\r\n                    this._hasMoreItems = newItems.length == this.pageSize;\r\n                }\r\n            }\r\n            finally {\r\n                operation.end();\r\n                this._container.status = \"loaded\";\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onScroll(data: IScrollData) {\r\n        if (data.pageBottom < 1 && this.canLoadNextPage)\r\n            this.loadNextPageAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getFilter(offset: number, pageSize: number): TFilter {\r\n\r\n        return { ...this._container.filter, ...this._container.itemsSource.getFilter(undefined, offset, pageSize) };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected get canLoadNextPage() {\r\n        return this._hasMoreItems && this._container.status != \"loading\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    pageSize: number = 20;\r\n\r\n    readonly isScrollCheckActive = true;\r\n\r\n\r\n}","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { DynamicString, LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IView, IViewFactory, ViewStyle } from \"../Abstraction/IView\";\r\nimport { ActionBar } from \"../Components/ActionBar\";\r\nimport { IconTextView } from \"../Components/IconTextView\";\r\nimport { IListViewConfig, ListView } from \"../Components/ListView\";\r\nimport { SearchView } from \"../Components/SearchView\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { PagedItemsLoader } from \"../Items/PagedItemsLoader\";\r\nimport { Activity, IActivityConfig } from \"./Activity\";\r\n\r\nexport type ItemSearchMode = \"client\" | \"default\";\r\n\r\nexport interface ISearchActivityConfig<TItem, TItemView extends IView> extends IActivityConfig {\r\n\r\n    createItemView?: IViewFactory<TItem, TItemView>;\r\n\r\n    searchAsync?: (query: string, offset?: number, pageSize?: number) => Promise<TItem[]>;\r\n\r\n    searchMode?: ItemSearchMode;\r\n\r\n    tooltip?: LocalString;\r\n\r\n    query?: string;\r\n\r\n    pageSize?: number;\r\n\r\n    listStyles?: ViewStyle[];\r\n\r\n    noMatchingText?: LocalString;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SearchActivity<TItem, TItemView extends IView, TResult = any> extends Activity<TResult> {\r\n\r\n    protected _actionBar: ActionBar;\r\n    protected _listView: ListView<TItem, TItemView>;\r\n    protected _searchView: SearchView;\r\n    protected _emptyView: IconTextView;\r\n    protected _lastItems: TItem[];\r\n\r\n    constructor(config?: ISearchActivityConfig<TItem, TItemView>) {\r\n        super(config);\r\n\r\n        this.bindConfigString(\"tooltip\", config);\r\n\r\n        this.bindConfig(\"pageSize\", config);\r\n\r\n        this.bindConfig(\"noMatchingText\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.createItemView)\r\n                this.createItemView = config.createItemView;\r\n\r\n            if (config.searchAsync)\r\n                this.searchWorkAsync = config.searchAsync;\r\n\r\n\r\n            if (config.query)\r\n                this.searchText = config.query;\r\n\r\n            if (config.listStyles)\r\n                config.listStyles.forEach(a => this.listStyles.push(a));\r\n        }\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    refreshAsync() {\r\n\r\n        return this._listView.refreshAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async createAsync() {\r\n        this._actionBar = this.view.addView(new ActionBar({\r\n            onBack: () => this.closeAsync(),\r\n            title: this.prop(\"title\"),\r\n            mainAction: \"back\"\r\n        }));\r\n\r\n        this._searchView = new SearchView({\r\n            name: \"search-expanded\",\r\n            tooltip: this.prop(\"tooltip\"),\r\n            isExpanded: true,\r\n            searchText: this.prop(\"searchText\"),\r\n            searchAsync: text => this._listView.refreshAsync()\r\n        });\r\n\r\n        this._actionBar.actions.add(this._searchView);\r\n\r\n        this._emptyView = new IconTextView({\r\n            styles: [\"empty-view\"],\r\n            visible: false\r\n        });\r\n\r\n        this._listView = this.view.addView(new ListView({\r\n            name: \"content\",\r\n            styles: this.listStyles,\r\n            template: \"ListViewInline\",\r\n            header: [this._emptyView],\r\n            itemsSource: new ItemsSource({\r\n                getItemsAsync: async () => {\r\n                    const searchText = this.searchText;\r\n                    const items = await this.searchWorkAsync(searchText);\r\n                    if (!searchText)\r\n                        this._lastItems = items;\r\n                    this.updateView(items?.length > 0, searchText);\r\n                    return items;\r\n                }\r\n            }),\r\n            itemsLoader: this.pageSize ? new PagedItemsLoader({\r\n                getFilter: (offset, pageSize) => this.getFilter(this.searchText, offset, pageSize),\r\n                pageSize: this.pageSize\r\n            }) : undefined,\r\n            createItemView: item => this.createItemView(item),\r\n            ...this.configureListView()\r\n        }));\r\n\r\n\r\n\r\n        setTimeout(() =>\r\n            this._searchView.hasFocus = true, 500);\r\n\r\n        await this.refreshAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateView(hasItems: boolean, searchText: string) {\r\n\r\n        if (!hasItems) {\r\n\r\n            this._emptyView.visible = true;\r\n\r\n            if (!this.searchText) {\r\n                this._emptyView.icon = \"fas fa-microscope\";\r\n                this._emptyView.text = \"\";\r\n            }\r\n            else {\r\n\r\n                this._emptyView.icon = \"far fa-sad-cry\";\r\n                if (this.noMatchingText)\r\n                    this._emptyView.text = Format.text(this.noMatchingText, searchText);\r\n            }\r\n        }\r\n        else\r\n            this._emptyView.visible = false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected configureListView() {\r\n\r\n        return <IListViewConfig<TItem, TItemView, any>>{};\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem): TItemView {\r\n        throw \"Not Implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected searchWorkAsync(query: string, offset?: number, pageSize?: number): Promise<TItem[]> {\r\n        throw \"Not Implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getFilter(query: string, offset?: number, pageSize?: number) {\r\n        return {}\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    searchText: string = null;\r\n\r\n    tooltip: string = null;\r\n\r\n    pageSize: number = 0;\r\n\r\n    listStyles: ViewStyle[] = [\"vertical\", \"scroll\", \"compact\"];\r\n\r\n    emptyView: IconTextView;\r\n\r\n    noMatchingText: LocalString = null;\r\n}\r\n\r\nregisterType(SearchActivity, \"SearchActivity\");","﻿import { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport * as Hammer from \"hammerjs\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\ntype BottomSheetStatus = \"close\" | \"open\" | \"head\" | \"moving\";\r\n\r\n\r\n/********************************************/\r\n\r\nexport interface IBottomSheetConfig<TContent extends IView> extends IContentViewConfig<TContent> {\r\n\r\n    headHeight?: Bindable<number>;\r\n\r\n    isShowOpener?: Bindable<boolean>;\r\n\r\n    headSelector?: string;\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class BottomSheet<TContent extends IView = IView> extends ContentView<TContent> implements IHTMLAttach {\r\n\r\n    protected _element: HTMLElement;\r\n    protected _margin: number = 20;\r\n    private _isAnimating = 0;\r\n\r\n    /********************************************/\r\n\r\n    constructor(config?: IBottomSheetConfig<TContent>) {\r\n        super({ template: \"BottomSheet\", ...config });\r\n\r\n        this.bindConfig(\"headHeight\", config);\r\n\r\n        this.bindConfig(\"headSelector\", config);\r\n\r\n        this.bindConfig(\"isShowOpener\", config);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        this._element = element;\r\n\r\n        let hammer = new Hammer(element, {\r\n            recognizers: [[Hammer.Pan, { direction: Hammer.DIRECTION_VERTICAL }]]\r\n        });\r\n\r\n        let startHeight = 0;\r\n        let oldStatus = this.status;\r\n        let startScrollTop = 0;\r\n\r\n        hammer.on(\"panstart\", ev => {\r\n\r\n            oldStatus = this.status;\r\n            this.status = \"moving\";\r\n\r\n            startScrollTop = element.scrollTop;\r\n            startHeight = element.clientHeight;\r\n        });\r\n\r\n        hammer.on(\"panend\", ev => {\r\n\r\n            if (element.clientHeight < this.headHeight - this._margin)\r\n                this.close();\r\n            else {\r\n\r\n                if (oldStatus == \"open\") {\r\n                    if (ev.deltaY > this._margin && this._element.scrollTop <= 0)\r\n                        this.head();\r\n                    else\r\n                        this.open();\r\n                }\r\n                else {\r\n                    if (element.clientHeight > this.headHeight + this._margin)\r\n                        this.open();\r\n                    else\r\n                        this.head();\r\n                }\r\n            }\r\n        });\r\n\r\n        hammer.on(\"panmove\", ev => {\r\n\r\n            let deltaY = ev.deltaY;\r\n\r\n            //Scroll when is opened\r\n\r\n            if (oldStatus == \"open\") {\r\n                let newScrollTop = startScrollTop - deltaY;\r\n                if (deltaY < 0) {\r\n                    this._element.scrollTop = newScrollTop;\r\n                    return;\r\n                }\r\n                else {\r\n\r\n                    if (newScrollTop >= 0) {\r\n                        this._element.scrollTop = newScrollTop;\r\n                        return;\r\n                    }\r\n                    this._element.scrollTop = 0;\r\n                    deltaY = -newScrollTop;\r\n                }\r\n            }\r\n\r\n            //Oopen, close, head\r\n\r\n            let newHeight = startHeight - deltaY;\r\n            let panHeight = newHeight;\r\n            let enableScrolling = false;\r\n\r\n            if (newHeight < this._margin)\r\n                newHeight = 0;\r\n\r\n            else if (newHeight > (element.parentNode as HTMLElement).clientHeight - this._margin && newHeight < this._element.scrollHeight) {\r\n                newHeight = (element.parentNode as HTMLElement).clientHeight;\r\n                enableScrolling = true;\r\n            }\r\n\r\n            else if (newHeight > this._element.scrollHeight)\r\n                newHeight = this._element.scrollHeight;\r\n\r\n            else if (newHeight > this.headHeight - this._margin && newHeight < this.headHeight + this._margin)\r\n                newHeight = this.headHeight;\r\n\r\n            element.style.height = newHeight + \"px\";\r\n\r\n            //Scroll while opening\r\n\r\n            if (panHeight - newHeight > 0 && enableScrolling)\r\n                this._element.scrollTop = panHeight - newHeight;\r\n            else\r\n                this._element.scrollTop = 0;\r\n        });\r\n\r\n        switch (this.status) {\r\n            case \"head\":\r\n                this.head();\r\n                break;\r\n            case \"open\":\r\n                this.open();\r\n                break;\r\n            case \"close\":\r\n                this.close();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected async setHeightAsync(value: number) {\r\n\r\n        this._isAnimating++;\r\n\r\n        if (this._isAnimating == 1)\r\n            this._element.classList.add(\"animate\");\r\n\r\n        await delayAsync(0);\r\n\r\n        this._element.style.height = value.toString() + \"px\";\r\n\r\n        await delayAsync(500);\r\n\r\n        this._isAnimating--;\r\n\r\n        if (this._isAnimating == 0)\r\n            this._element.classList.remove(\"animate\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    toggle() {\r\n\r\n        if (this.status == \"open\" || this.status == \"close\")\r\n            this.head();\r\n        else\r\n            this.open();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    open() {\r\n\r\n        this.status = \"open\";\r\n\r\n        if (this._element)\r\n            this.setHeightAsync(this._element.scrollHeight);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    head() {\r\n\r\n        this.status = \"head\";\r\n\r\n        if (this._element) {\r\n\r\n            if (this.headSelector) {\r\n\r\n                let headEl = this._element.querySelector(this.headSelector);\r\n                if (headEl) {\r\n                    this.headHeight = headEl.clientHeight;\r\n                    if (this.isShowOpener)\r\n                        this.headHeight += this._element.querySelector(\".opener\").clientHeight;\r\n                }\r\n            }\r\n\r\n            this.setHeightAsync(this.headHeight);\r\n        }\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    close() {\r\n\r\n        this.status = \"close\";\r\n\r\n        if (this._element)\r\n            this.setHeightAsync(0);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    isShowOpener: boolean = false;\r\n\r\n    headHeight: number = 100;\r\n\r\n    headSelector: string = null;\r\n\r\n    status: BottomSheetStatus = \"close\";\r\n}\r\n\r\nregisterType(BottomSheet, \"BottomSheet\");","﻿import { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/RemovableItemView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IRemovableItemViewConfig<TItem, TView extends IView> extends IContentViewConfig<TView> {\r\n\r\n    item?: TItem;\r\n\r\n    removeAsync?: () => Promise<void>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class RemovableItemView<TItem, TView extends IView = any> extends ContentView<TView> {\r\n\r\n    constructor(config?: IRemovableItemViewConfig<TItem, TView>) {\r\n        super(config);\r\n\r\n        this.bindConfig(\"item\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.removeAsync)\r\n                this.removeWorkAsync = config.removeAsync;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async removeAsync(): Promise<void> {\r\n\r\n        this.status = \"removed\";\r\n        await delayAsync(150);\r\n        await this.removeWorkAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected removeWorkAsync(): Promise<void> {\r\n\r\n        throw \"Not supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    item: TItem = null;\r\n}\r\n\r\nregisterType(RemovableItemView, \"RemovableItemView\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ISelectable } from \"../Abstraction/ISelectable\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/SelectableItemView.html\";\r\n\r\nexport interface ISelectableItemViewConfig<TItem, TContent> extends IContentViewConfig<TContent> {\r\n\r\n    isSelected?: Bindable<boolean>;\r\n\r\n    item?: TItem;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SelectableItemView<TItem, TContent> extends ContentView<TContent> implements ISelectable {\r\n    constructor(config?: ISelectableItemViewConfig<TItem, TContent>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"isSelected\", config);\r\n\r\n        this.bindConfig(\"item\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select() {\r\n\r\n        this.isSelected = true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toggle() {\r\n\r\n        this.isSelected = !this.isSelected;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isSelected: boolean = false;\r\n\r\n    item: TItem = null;\r\n}\r\n\r\nregisterType(SelectableItemView, \"SelectableItemView\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/Container.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IContainerConfig<TContent> extends IContentViewConfig<TContent> {\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    isExpanded?: Bindable<boolean>;\r\n\r\n    canExpand?: boolean;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class Container<TContent = any> extends ContentView<TContent> implements IHTMLAttach {\r\n\r\n    protected _element: HTMLDivElement;\r\n\r\n    constructor(config?: IContainerConfig<TContent>) {\r\n        super({ template: \"Container\", ...config });\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfig(\"isExpanded\", config);\r\n\r\n        this.bindConfig(\"canExpand\", config);\r\n\r\n        this.prop(\"content\").subscribe(() => this.checkOverflow());\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        this._element = <HTMLDivElement>element;\r\n\r\n        if (this.canExpand) {\r\n            this._element.addEventListener(\"resize\", () => this.checkOverflow());\r\n            this.checkOverflow();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    checkOverflow() {\r\n        if (this._element != null) {\r\n            const wrapper = this._element.querySelector(\".content-wrapper\");\r\n            if (wrapper != null) {\r\n                this.isOverflow = wrapper.scrollHeight > wrapper.clientHeight;\r\n                if (!this.isOverflow)\r\n                    this.isExpanded = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    toggleExpand() {\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    title: string = \"\";\r\n\r\n    isOverflow: boolean = true;\r\n\r\n    canExpand: boolean = false;\r\n\r\n    isExpanded: boolean = true;\r\n}\r\n\r\n\r\nregisterType(Container, \"Container\");\r\n","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority, IAction } from \"../Abstraction/IAction\";\r\nimport { IActivable } from \"../Abstraction/IActivable\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { IViewContent } from \"../Abstraction/IViewContent\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { IViewContentInfo } from \"../Abstraction/IViewContentInfo\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { Container } from \"../Components/Container\";\r\nimport { isActivable } from \"../Helpers/TypeCheck\";\r\n\r\nexport interface IItemEditContentConfig<TItem, TEdit> {\r\n\r\n    editor?: IItemEditor<TItem, TEdit>;\r\n\r\n    value?: TItem;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    url?: string;\r\n\r\n    saveLabel?: LocalString;\r\n\r\n    savePriority?: ActionPriority;\r\n\r\n    styles?: ViewStyle[];\r\n\r\n    saveOnCommit?: boolean;\r\n\r\n    saveItemAsync?: (item: TEdit) => Promise<TItem>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ItemEditContent<TItem, TEdit> extends BindableObject implements IViewContentProvider {\r\n\r\n    private _host: IViewContentHost;\r\n\r\n    constructor(config: IItemEditContentConfig<TItem, TEdit>) {\r\n        super();\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfig(\"value\", config);\r\n\r\n        this.bindConfig(\"styles\", config);\r\n\r\n        this.bindConfig(\"url\", config);\r\n\r\n        this.bindConfig(\"savePriority\", config);\r\n\r\n        this.bindConfig(\"saveOnCommit\", config);\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfigString(\"saveLabel\", config, StringUsage.Action);\r\n\r\n        if (config) {\r\n            if (config.saveItemAsync)\r\n                this.saveItemAsync = config.saveItemAsync;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async getContentAsync(host: IViewContentHost) {\r\n\r\n        this._host = host;\r\n\r\n        await this.editor.beginEditAsync(this.value);\r\n\r\n        const container = new Container({\r\n            name: \"editor-container\",\r\n            title: this.title,\r\n            content: this.editor.view\r\n        });\r\n\r\n        if (isActivable(this.editor))\r\n            setTimeout(() => (this.editor as unknown as IActivable).activateAsync(), 200);\r\n\r\n        const actions: IAction[] = [];\r\n\r\n        if (this.saveOnCommit) {\r\n            this.editor.prop(\"value\").subscribe(value =>\r\n                this.saveAsync());\r\n        }\r\n        else {\r\n            actions.push({\r\n                name: \"save\",\r\n                icon: \"fas fa-save\",\r\n                displayName: this.saveLabel,\r\n                operation: OperationType.Global,\r\n                priority: this.savePriority,\r\n                executeAsync: () => this.saveAsync()\r\n            });\r\n        }\r\n\r\n\r\n        return Promise.resolve({\r\n            views: [container],\r\n            actions: actions,\r\n            styles: this.styles,\r\n            title: this.title,\r\n            url: this.url\r\n        } as IViewContent);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected saveItemAsync(item: TEdit): Promise<TItem> {\r\n\r\n        return Promise.resolve(item as unknown as TItem);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async saveAsync() {\r\n\r\n        //TODO check why it was needed before\r\n        //(App as IViewApplication).unblock(true);\r\n\r\n        if (this.saveOnCommit) {\r\n\r\n            if (!this.editor.isValid)\r\n                return;\r\n        }\r\n        else {\r\n\r\n            if (!await this.editor.commitAsync(true))\r\n                return;\r\n        }\r\n\r\n        const result = await this.saveItemAsync(this.editor.value);\r\n\r\n        if (result == null)\r\n            return;\r\n\r\n        await this._host.closeAsync(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    editor: IItemEditor<TItem, TEdit> = null;\r\n\r\n    title: string = null;\r\n\r\n    url: string = null;\r\n\r\n    value: TItem = null;\r\n\r\n    saveLabel: string = \"Save\";\r\n\r\n    saveOnCommit: boolean = false;\r\n\r\n    savePriority: ActionPriority = null;\r\n\r\n    styles: ViewStyle[] = [\"vertical\", \"scroll\", \"fill-h\", \"fit-items-h\"];\r\n\r\n    readonly info = {\r\n        name: \"item-edit\",\r\n        icon: \"fas fa-edit\",\r\n        displayName: \"Edit\",\r\n    } as IViewContentInfo;\r\n}","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\n\r\nexport interface IWebViewConfig extends IContentViewConfig<string> {\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class WebView extends ContentView<string> implements IHTMLAttach {\r\n\r\n    constructor(config?: IWebViewConfig) {\r\n\r\n        super({ template: \"WebView\", ...config });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLFrameElement): void {\r\n        this.window = element.contentWindow;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    window: Window;\r\n}\r\n\r\n\r\nregisterType(WebView, \"WebView\");","﻿import { App } from \"../../Core/Global\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { Uri } from \"../../Core/Helpers/Uri\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IMultiPageHost } from \"../Abstraction/IPageHost\";\r\nimport { IPageConfig, Page } from \"./Page\";\r\nimport { WebView } from \"./WebView\";\r\n\r\nexport interface IWebPageConfig extends IPageConfig<WebView> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class WebPage extends Page<WebView> {\r\n\r\n    constructor(config?: IWebPageConfig) {\r\n\r\n        super(config);\r\n\r\n        this.view = new WebView();\r\n        this.updateUrl();\r\n\r\n        this.prop(\"url\").subscribe(() => this.updateUrl());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateUrl() {\r\n        this.view.content = Uri.absolute(Format.replaceArgs(this.url, App.startupArgs));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected loadWorkAsync(): Promise<void> {\r\n\r\n        if (!this.view.window || this.view.window.document.readyState == \"complete\")\r\n            return Promise.resolve();\r\n\r\n        return new Promise((res, rej) => {\r\n\r\n            function onLoad(ev: Event) {\r\n                this.view.window.removeEventListener(\"load\", onLoad);\r\n                res();\r\n            }\r\n\r\n            function onError(ev: Event) {\r\n                this.view.window.removeEventListener(\"error\", onError);\r\n                rej();\r\n            }\r\n\r\n            this.view.window.addEventListener(\"load\", onLoad);\r\n            this.view.window.addEventListener(\"error\", onError);\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    refreshAsync(): Promise<void> {\r\n\r\n        if (!this.view.window)\r\n            return Promise.resolve();\r\n\r\n        return new Promise((res, rej) => {\r\n\r\n            function onLoad(ev: Event) {\r\n                this.view.window.removeEventListener(\"load\", onLoad);\r\n                res();\r\n            }\r\n\r\n            function onError(ev: Event) {\r\n                this.view.window.removeEventListener(\"error\", onError);\r\n                rej();\r\n            }\r\n\r\n            this.view.window.addEventListener(\"load\", onLoad);\r\n            this.view.window.addEventListener(\"error\", onError);\r\n\r\n            this.view.window.document.location.reload();\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async closeAsync() {\r\n\r\n        this.view.window.close();\r\n\r\n        if (\"goBackAsync\" in this.host)\r\n            await (this.host as IMultiPageHost).goBackAsync();\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nregisterType(WebPage, \"WebPage\");","﻿import { App } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IViewApplication } from \"../Abstraction/IViewApplication\";\r\nimport { IViewConfig, View } from \"./View\";\r\n\r\nexport interface IBasePopUpMessageConfig extends IViewConfig {\r\n    className?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport abstract class BasePopUpMessage extends View {\r\n\r\n    protected _container: HTMLElement;\r\n\r\n    protected _showResolve: (value: string) => void;\r\n\r\n    protected _isVisible = false;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: IBasePopUpMessageConfig) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"className\", config);\r\n\r\n        this._container = document.createElement(\"DIV\");\r\n        this._container.className = this.className + \"-container\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync() {\r\n\r\n        if (this._isVisible)\r\n            return;\r\n\r\n        this._isVisible = true;\r\n\r\n        (App as IViewApplication).unblock(true);\r\n\r\n        const builder = new TemplateBuilder(this, this._container);\r\n\r\n        builder.template(this.template, a => a);\r\n\r\n        document.body.appendChild(this._container);\r\n\r\n        await delayAsync(0);\r\n\r\n        this._container.classList.add(\"visible\");\r\n\r\n        return new Promise<string>(res => this._showResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hide(actionName: string) {\r\n\r\n        if (!this._isVisible)\r\n            return;\r\n\r\n        this._isVisible = false;\r\n\r\n        (App as IViewApplication).restoreBlock();\r\n\r\n        this._container.classList.remove(\"visible\");\r\n\r\n        if (this._showResolve) {\r\n\r\n            this._showResolve(actionName);\r\n            this._showResolve = null;\r\n        }\r\n\r\n        setTimeout(() => {\r\n\r\n            if (!this._isVisible)\r\n                document.body.removeChild(this._container);\r\n\r\n        }, 500);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    className: string = null;\r\n}\r\n\r\n\r\nregisterType(BasePopUpMessage, \"BasePopUpMessage\");","﻿import { DynamicString, LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority, IAction } from \"../Abstraction/IAction\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { BasePopUpMessage, IBasePopUpMessageConfig } from \"./BasePopUpMessage\";\r\nimport { Panel } from \"./Panel\";\r\nimport \"Templates/PopUpContent.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\n\r\nexport interface IPopUpContentConfig extends IBasePopUpMessageConfig {\r\n\r\n    contentProvider?: IViewContentProvider;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    contentStyle?: ViewStyle[]\r\n\r\n    closeLabel?: LocalString;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class PopUpContent<TResult = any> extends BasePopUpMessage implements IViewContentHost {\r\n\r\n    protected _resultResolve: (value: TResult) => void;\r\n\r\n    constructor(config?: IPopUpContentConfig) {\r\n\r\n        super({ template: \"PopUpContent\", className: \"pop-up-content\", ...config });\r\n\r\n        this.bindConfig(\"contentProvider\", config);\r\n\r\n        this.bindConfig(\"contentStyle\", config);\r\n\r\n        this.bindConfigString(\"title\", config);\r\n\r\n        this.bindConfigString(\"closeLabel\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async createAsync() {\r\n\r\n        const viewContent = await this.contentProvider.getContentAsync(this);\r\n\r\n        if (this.closeLabel) {\r\n            this.addAction({\r\n                name: \"close\",\r\n                icon: \"fas fa-close\",\r\n                displayName: this.closeLabel,\r\n                executeAsync: () => this.closeAsync()\r\n            });\r\n        }\r\n\r\n        if (viewContent.actions) \r\n            viewContent.actions.forEach(a => this.addAction(a));\r\n\r\n        if (viewContent.title)\r\n            this.title = Format.title(viewContent.title);\r\n\r\n        this.contentView.content.clear();\r\n\r\n        if (viewContent.views)\r\n            viewContent.views.forEach(a => this.contentView.addView(a));\r\n\r\n        if (viewContent.styles && viewContent.styles.length > 0)\r\n            this.contentView.styles = viewContent.styles;\r\n        else\r\n            this.contentView.styles = this.contentStyle;\r\n\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get result(): Promise<TResult> {\r\n        return new Promise<TResult>(res => this._resultResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async openAsync() {\r\n\r\n        await this.createAsync();\r\n\r\n        await this.contentView.loadAsync();\r\n\r\n        this.showAsync(); //Not awaited\r\n\r\n        return this;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notifyContentChanged(provider: IViewContentProvider) {\r\n\r\n        this.createAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    closeAsync(result?: any) {\r\n\r\n        if (this._resultResolve)\r\n            this._resultResolve(result);\r\n\r\n        this.hide(\"\");\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n\r\n        let actionView = ActionView.fromAction(action);\r\n\r\n        if (action.priority == ActionPriority.Evidence) {\r\n            actionView.styles.push(\"primary\");\r\n            actionView.buildStyles();\r\n        }\r\n\r\n        this.actions.add(actionView);\r\n\r\n        return actionView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    contentProvider: IViewContentProvider = null;\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    readonly contentView = new Panel();\r\n\r\n    title: string = null;\r\n\r\n    contentStyle: ViewStyle[] = [\"vertical\", \"fill-h\", \"fit-items-h\"];\r\n\r\n    closeLabel?: string = \"Cancel\";\r\n}\r\n\r\n\r\nregisterType(PopUpContent, \"PopUpContent\");","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { PopUpContent } from \"../Components/PopUpContent\";\r\nimport { IItemEditContentConfig, ItemEditContent } from \"../Content/ItemEditContent\";\r\n\r\nexport interface IPopUpEditorConfig<TItem, TEdit> extends IItemEditContentConfig<TItem, TEdit> {\r\n\r\n    closeLabel?: LocalString;\r\n\r\n    editToItemAsync?: (edit: TEdit) => Promise<TItem>;\r\n\r\n    name?: string;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class PopUpEditor<TItem, TEdit = TItem> extends BindableObject implements IAsyncEditor<TItem, TEdit> {\r\n\r\n    constructor(config?: IPopUpEditorConfig<TItem, TEdit>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"name\", config);\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfig(\"styles\", config);\r\n\r\n        this.bindConfig(\"saveOnCommit\", config);\r\n\r\n        this.bindConfig(\"savePriority\", config);\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfigString(\"closeLabel\", config, StringUsage.Action);\r\n\r\n        this.bindConfigString(\"saveLabel\", config, StringUsage.Action);\r\n\r\n        if (config) {\r\n\r\n            if (config.editToItemAsync)\r\n                this.editToItemAsync = config.editToItemAsync;\r\n        }\r\n\r\n        if (!this.closeLabel)\r\n            this.closeLabel = Format.action(\"cancel\");\r\n\r\n        if (!this.saveLabel)\r\n            this.saveLabel = Format.action(\"ok\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async editAsync(value: TItem, validate?: (edit: TEdit) => Promise<boolean>): Promise<TEdit> {\r\n\r\n        const popUp = new PopUpContent<TItem>({\r\n            title: this.title,\r\n            contentProvider: new ItemEditContent<TItem, TEdit>({\r\n                editor: this.editor,\r\n                value: value,\r\n                styles: this.styles,\r\n                savePriority: this.savePriority,\r\n                saveOnCommit: this.saveOnCommit,\r\n                saveLabel: this.saveLabel,\r\n                saveItemAsync: async edit => {\r\n                    if (validate) {\r\n                        const valResult = await validate(edit);\r\n                        if (valResult == null)\r\n                            return null;\r\n                    }\r\n                    return await this.editToItemAsync(edit);\r\n                }\r\n            }),\r\n            closeLabel: this.closeLabel\r\n        });\r\n\r\n        const result = await (await popUp.openAsync()).result;\r\n\r\n        if (!result)\r\n            return null;\r\n\r\n        return this.editor.value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToItemAsync(edit: TEdit): Promise<TItem> {\r\n        return Promise.resolve(edit as unknown as TItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    editor: IItemEditor<TItem, TEdit> = null;\r\n\r\n    title: string = \"Edit\";\r\n\r\n    saveLabel?: string = null;\r\n\r\n    savePriority: ActionPriority = null;\r\n\r\n    closeLabel: string = null;\r\n\r\n    saveOnCommit: boolean = false;\r\n\r\n    styles: ViewStyle[] = [];\r\n\r\n    name: string = null;\r\n}\r\n\r\nregisterType(PopUpEditor, \"PopUpEditor\");","﻿import { generateId } from \"../../Core/Utils/Identifier\";\r\nimport { getTypeName, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { setEnumerable } from \"../../Templating/Functions\";\r\nimport { Bindable, IValueConverter } from \"../../Templating/Properties\";\r\nimport { EditorCommitMode, EditorStatus, IEditor } from \"../Abstraction/IEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IViewComponentConfig, ViewComponent } from \"../Components/ViewComponent\";\r\nimport { formatForCss } from \"../Helpers/ViewUtils\";\r\n\r\nexport type ValidationMode = \"onchanged\" | \"always\" | \"manual\";\r\n\r\nexport interface IBaseEditorConfig<TValue, TEdit = any> extends IViewComponentConfig {\r\n\r\n    allowNull?: boolean;\r\n\r\n    value?: Bindable<TValue>;\r\n\r\n    hasFocus?: Bindable<boolean>;\r\n\r\n    validationMode?: ValidationMode;\r\n\r\n    commitMode?: EditorCommitMode;\r\n\r\n    onCommit?: (editor: BaseEditor<TValue, any>) => boolean;\r\n\r\n    converter?: IValueConverter<TValue, TEdit>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport abstract class BaseEditor<TValue, TEdit = TValue> extends ViewComponent implements IEditor<TValue, TEdit>, IItemEditor<TValue, TValue> {\r\n\r\n    protected _needValidation: boolean = false;\r\n    protected _isEditing: number = 0;\r\n    protected _onCommit: (editor: this) => boolean;\r\n    protected _editValue: TEdit = null;\r\n\r\n    /********************************************/\r\n\r\n    constructor(config?: IBaseEditorConfig<TValue, TEdit>) {\r\n\r\n        super({ ...config });\r\n\r\n        //TODO: hack, props are not enumerable in ts 3.9\r\n        setEnumerable(this, \"editValue\");\r\n\r\n        this._onCommit = config?.onCommit;\r\n\r\n        this.bindConfig(\"allowNull\", config);\r\n\r\n        this.bindConfig(\"hasFocus\", config);\r\n\r\n        this.bindConfig(\"value\", config);\r\n\r\n        this.bindConfig(\"commitMode\", config);\r\n\r\n        this.bindConfig(\"validationMode\", config);\r\n\r\n        this.prop(\"displayValue\");\r\n\r\n        this.prop(\"value\").subscribe((value, old) =>\r\n            this.onValueChanged(value, old));\r\n\r\n        this.prop(\"name\").subscribe(() => this.updateUid());\r\n\r\n        if (config.converter) {\r\n            this.editToValue = config.converter.convertFrom;\r\n            this.valueToEdit = config.converter.convertTo;\r\n        }\r\n\r\n        this.updateUid();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected updateUid() {\r\n        this.uid = generateId(formatForCss(this.name ?? getTypeName(this)));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createEditValueProp() {\r\n\r\n        this.prop(\"editValue\").subscribe(() => this.notifyEditValueChangedAsync());\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async notifyEditValueChangedAsync() {\r\n\r\n        console.debug(\"value changed: \", this.debugName);\r\n\r\n        this._needValidation = true;\r\n\r\n        this.isDirty = true;\r\n\r\n        if (!this._isEditing) {\r\n\r\n            if (this.commitMode == \"onchange\")\r\n                await this.commitAsync();\r\n            else\r\n                await this.validateAsync();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onValueChanged(value: TValue, oldValue?: TValue) {\r\n\r\n        if (this.status == \"commiting\")\r\n            return;\r\n\r\n        this.beginEditAsync(value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n        this.value = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async loadAsync(): Promise<void> {\r\n\r\n        console.group(\"begin load: \", this.debugName, \" - status: \", this.status);\r\n\r\n        try {\r\n\r\n            if (this.status != \"none\")\r\n                return;\r\n\r\n            this.status = \"loading\";\r\n\r\n            try {\r\n\r\n                await this.loadAsyncWork();\r\n            }\r\n            finally {\r\n\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n        finally {\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearError() {\r\n        this.error = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected loadAsyncWork(): Promise<void> {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async beginEditAsync(value: TValue) {\r\n\r\n        if (this._isEditing)\r\n            return;\r\n\r\n        console.group(\"begin edit: \", this.debugName);\r\n\r\n        this._isEditing++;\r\n\r\n        try {\r\n\r\n            if (this.status == \"none\")\r\n                await this.loadAsync();\r\n\r\n            this.value = value;\r\n\r\n            this.editValue = this.valueToEdit(value);\r\n\r\n            await this.beginEditWorkAsync(value);\r\n\r\n            this._needValidation = true;\r\n        }\r\n        finally {\r\n            this._isEditing--;\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: TValue): TEdit {\r\n        return <any>value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: TEdit): TValue {\r\n        return <any>value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected beginEditWorkAsync(value: TValue) {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async validateAsync(force?: boolean): Promise<boolean> {\r\n\r\n\r\n        console.group(\"begin validation: \" + this.debugName, \" - needValidation: \", this._needValidation);\r\n\r\n        try {\r\n\r\n            if (this._isEditing)\r\n                return undefined;\r\n\r\n            if (!this._needValidation && this.validationMode == \"onchanged\" && !force)\r\n                return this.isValid;\r\n\r\n            this.clearError();\r\n\r\n            const validationResult = await this.validateAsyncWork(force);\r\n\r\n            if (validationResult !== undefined) {\r\n\r\n                this.isValid = validationResult;\r\n                this._needValidation = false;\r\n            }\r\n\r\n            console.debug(\"validation: \", this.debugName, \" = \", this.isValid);\r\n\r\n            return this.isValid;\r\n        }\r\n        finally {\r\n            console.groupEnd();\r\n        }\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected validateAsyncWork(force?: boolean): Promise<boolean> {\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async commitAsync(force?: boolean): Promise<boolean> {\r\n\r\n        console.group(\"begin commit: \", this.debugName, \" isDirty: \", this.isDirty, \" - status: \", this.status);\r\n        try {\r\n\r\n            if (this._isEditing)\r\n                return false;\r\n\r\n            if (!force && this.commitMode != \"manual\" && !this.isDirty)\r\n                return true;\r\n\r\n            if (this.status != \"loaded\")\r\n                return this.status == \"commiting\";\r\n\r\n            this.status = \"commiting\";\r\n\r\n            try {\r\n                if (!await this.validateAsync(force))\r\n                    return false;\r\n\r\n                if (!await this.commitAsyncWork(force))\r\n                    return false;\r\n\r\n                const newValue = this.editToValue(this.editValue);\r\n                if (newValue !== undefined)\r\n                    this.value = newValue;\r\n\r\n                if (this._onCommit)\r\n                    this._onCommit(this);\r\n\r\n                this.isDirty = false;\r\n\r\n                return true;\r\n            }\r\n            finally {\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n        finally {\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    activateAsync() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected commitAsyncWork(force?: boolean): Promise<boolean> {\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    rollback(): void {\r\n\r\n        this.editValue = this.valueToEdit(this.value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get view() {\r\n        return this;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get editValue() {\r\n        return this._editValue;\r\n    }\r\n\r\n    set editValue(value: TEdit) {\r\n        this._editValue = value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    isValid: boolean = true\r\n\r\n    status: EditorStatus = \"none\";\r\n\r\n    commitMode: EditorCommitMode = \"onchange\";\r\n\r\n    validationMode: ValidationMode = \"onchanged\";\r\n\r\n    allowNull: boolean = true;\r\n\r\n    displayValue: string = null;\r\n\r\n    value: TValue = null;\r\n\r\n    hasFocus: boolean = false;\r\n\r\n    isDirty: boolean = false;\r\n\r\n    uid: string = null;\r\n\r\n    error: string = null;\r\n}\r\n\r\nregisterType(BaseEditor, \"BaseEditor\");","﻿import { getBaseType, getType } from \"../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"./Abstraction/ITemplateProvider\";\r\nimport { Properties } from \"./Properties\";\r\nimport { TemplateBuilder } from \"./TemplateBuilder\";\r\n\r\nexport function model<T extends Object>(obj: T): T {\r\n    Properties.createAll(obj);\r\n    return obj;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function template<TModel>(root: HTMLElement, template: CatalogTemplate<TModel>, model: TModel) {\r\n\r\n    root.innerHTML = \"\";\r\n\r\n    const builder = new TemplateBuilder(model, root);\r\n\r\n    builder.begin();\r\n\r\n    builder.loadTemplate(template)(builder);\r\n\r\n    builder.end();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport function setEnumerable<T>(obj: T, propName: keyof T) {\r\n    let curType = getType(obj); \r\n    while (true) {\r\n        const desc = Object.getOwnPropertyDescriptor(curType.prototype, propName);\r\n        if (desc) {\r\n            if (!desc.enumerable) {\r\n                desc.enumerable = true;\r\n                Object.defineProperty(obj, propName, desc);\r\n            }\r\n            return;\r\n        } \r\n        curType = getBaseType(curType);\r\n    }\r\n}","﻿import { linq } from \"../../Core/Linq\";\r\nimport { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { PopUpEditor } from \"./PopupEditor\";\r\nimport { SelectableItemView } from \"../Components/SelectableItemView\";\r\nimport { ISelectableItemView } from \"../Abstraction/ISelectableItemView\";\r\n\r\nimport \"Templates/SingleItemSelector.html\";\r\nimport \"Templates/ItemSelector.html\";\r\n\r\n\r\nexport interface ISingleItemSelectorConfig<TItem, TValue> extends IBaseEditorConfig<TValue> {\r\n\r\n    itemsSource?: Bindable<ItemsSource<TItem, TValue>>;\r\n\r\n    items?: TItem[];\r\n\r\n    createItemView?: (item: TItem) => ISelectableItemView<TValue>;\r\n\r\n    placeholder?: Bindable<LocalString>;\r\n\r\n    emptyText?: LocalString;\r\n\r\n    itemTemplate?: CatalogTemplate<ISelectableItemView<TValue>>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SingleItemSelector<TItem, TValue> extends BaseEditor<TValue> implements IHTMLAttach {\r\n\r\n    private _element: HTMLElement\r\n    private _isSelecting: boolean;\r\n\r\n    constructor(config?: ISingleItemSelectorConfig<TItem, TValue>) {\r\n\r\n        super({ template: \"SelectEditor\", ...config });\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"itemTemplate\", config);\r\n\r\n        this.bindConfigString(\"placeholder\", config);\r\n\r\n        this.bindConfigString(\"emptyText\", config, StringUsage.Title);\r\n\r\n        if (config?.createItemView)\r\n            this.createItemViewWork = config?.createItemView;\r\n\r\n        if (config?.items) {\r\n\r\n            if (this.allowNull)\r\n                this.items.add(this.createEmptyItem());\r\n\r\n            config.items.forEach(a => this.items.add(this.createItemView(a)));\r\n\r\n            this.status = \"loaded\";\r\n        }\r\n\r\n        this.prop(\"selectedItem\").subscribe(async (value, oldValue) => {\r\n\r\n            if (this._isSelecting)\r\n                return;\r\n\r\n            if (!value && this.emptyText) {\r\n                this.selectedItemText = this.emptyText;\r\n                this.selectedItem = this.items.get(0);\r\n                return;\r\n            }\r\n\r\n            this._isSelecting = true;\r\n            try {\r\n                if (oldValue)\r\n                    oldValue.isSelected = false;\r\n\r\n                if (value)\r\n                    value.isSelected = true;\r\n\r\n                this.selectedIndex = this.items.indexOf(value);\r\n\r\n                if (this.itemsSource)\r\n                    this.selectedItemText = value?.content ?? \"\";\r\n\r\n                if (this.status != \"loading\")\r\n                    await this.notifyEditValueChangedAsync();\r\n\r\n            }\r\n            finally {\r\n                this._isSelecting = false;\r\n            }\r\n        });\r\n\r\n        this.prop(\"selectedIndex\").subscribe(value => {\r\n\r\n            if (value == -1 && this.emptyText) {\r\n                this.selectedIndex = 0;\r\n                return;\r\n            }\r\n\r\n            this.selectedItem = value == -1 ? null : this.items.get(value);\r\n\r\n            if (this._element?.tagName == \"SELECT\")\r\n                (this._element as HTMLSelectElement).selectedIndex = value;\r\n        });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n\r\n        this._element = element;\r\n\r\n        if (element.tagName == \"SELECT\") {\r\n\r\n            (this._element as HTMLSelectElement).selectedIndex = this.selectedIndex;\r\n\r\n            this._element.addEventListener(\"change\",\r\n                () => this.selectedIndex = (element as HTMLSelectElement).selectedIndex);\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async selectAsync() {\r\n        let editor = new PopUpEditor({\r\n\r\n            editor: new SingleItemSelector({\r\n                template: \"ItemSelectorList\",\r\n                itemsSource: this.itemsSource,\r\n                allowNull: false,\r\n                styles: [\"no-padding-items-h\"]\r\n            }),\r\n            saveOnCommit: true,\r\n            saveLabel: \"select\",\r\n            closeLabel: \"cancel\",\r\n            title: \"select-an-item\",\r\n            styles: [\"\"]\r\n        });\r\n\r\n        const result = await editor.editAsync(this.value)\r\n        if (result !== null)\r\n            this.editValue = result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    findItemByValue(value: TValue) {\r\n\r\n        if (this.itemsSource)\r\n            return linq(this.items).first(a => this.itemsSource.equals(a.item, value));\r\n        return linq(this.items).first(a => a.item == value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: TValue) {\r\n\r\n        if (this.editValue == value)\r\n            return;\r\n\r\n        if (value == null && this.emptyText)\r\n            this.selectedItem = this.items[0];\r\n        else\r\n            this.selectedItem = this.findItemByValue(value);\r\n    }\r\n\r\n    get editValue(): TValue {\r\n\r\n        return this.selectedItem?.item;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async loadAsyncWork() {\r\n\r\n        if (this.itemsSource) {\r\n\r\n            this.items.clear();\r\n\r\n            if (this.allowNull)\r\n                this.items.add(this.createEmptyItem());\r\n\r\n            const items = await this.itemsSource.getItemsAsync(this.itemsSource.getFilter());\r\n            if (items)\r\n                items.forEach(a => this.items.add(this.createItemView(a)));\r\n        }\r\n\r\n        this.selectedIndex = 0;\r\n        this.isDirty = true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createEmptyItem() {\r\n\r\n        const result = new SelectableItemView({\r\n            item: null,\r\n            content: this.emptyText ?? \"\",\r\n            template: this.itemTemplate,\r\n            styles: [\"single\", \"checkbox\"]\r\n        });\r\n\r\n        result.prop(\"isSelected\").subscribe(value => {\r\n\r\n            if (value)\r\n                this.selectedItem = null\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemViewWork(item: TItem): ISelectableItemView<TValue> {\r\n\r\n        if (this.itemsSource)\r\n            return new SelectableItemView({\r\n                item: this.itemsSource.getItemValue(item),\r\n                content: this.itemsSource.getItemText(item),\r\n                template: this.itemTemplate,\r\n                styles: [\"single\", \"checkbox\"] \r\n            });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem) {\r\n\r\n        const itemView = this.createItemViewWork(item);\r\n\r\n        itemView.prop(\"isSelected\").subscribe(value => {\r\n\r\n            if (value)\r\n                this.selectedItem = itemView\r\n        });\r\n\r\n        return itemView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    itemTemplate: CatalogTemplate<ISelectableItemView<TValue>> = \"SelectableItemView\";\r\n\r\n    placeholder: string = null;\r\n\r\n    emptyText: string = null;\r\n\r\n    selectedItemText: string = null;\r\n\r\n    selectedItem: ISelectableItemView<TValue> = null;\r\n\r\n    selectedIndex: number = -1;\r\n\r\n    itemsSource: ItemsSource<TItem, TValue> = null;\r\n\r\n    readonly items: IObservableList<ISelectableItemView<TValue>> = observableListOf();\r\n}\r\n\r\n\r\nregisterType(SingleItemSelector, \"SingleItemSelector\");","﻿import { App } from \"../../Core/Global\";\r\nimport { Type } from \"../../Core/Types/Types\";\r\nimport { IPage } from \"../Abstraction/IPage\";\r\nimport { IPageLoadOptions } from \"../Abstraction/IPageHost\";\r\nimport { ISelectOptions } from \"../Abstraction/ISelectOptions\";\r\nimport { IViewApplication } from \"../Abstraction/IViewApplication\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ContentActivity, IContentActivitConfig } from \"../Activities/ContentActivity\";\r\nimport { WebPage } from \"../Components/WebPage\";\r\nimport { PopUpEditor } from \"../Editors/PopupEditor\";\r\nimport { SingleItemSelector } from \"../Editors/SingleItemSelector\";\r\nimport { ILocation } from \"../Types/Location\";\r\n\r\n\r\ninterface ISelectFileOptions {\r\n\r\n}\r\n\r\nexport const Actions: IActions = {} as IActions;\r\n\r\ndeclare global {\r\n\r\n    export interface IActions {\r\n\r\n        loadPageAsync<TPage extends IPage>(page: TPage, options?: IPageLoadOptions): Promise<TPage>;\r\n\r\n        go(url: string): Promise<void>;\r\n\r\n        content<TContent extends IViewContentProvider>(conetent: TContent | Type<TContent>, contentOptions?: Partial<IContentActivitConfig<ContentActivity>>, pageOptions?: IPageLoadOptions): Promise<ContentActivity>;\r\n\r\n        call(phoneNumber: string): Promise<void>;\r\n\r\n        email(email: string): Promise<void>;\r\n\r\n        webPage(url: string): Promise<WebPage>;\r\n\r\n        navigate(uri: string): Promise<void>;\r\n\r\n        facebookPage(pageId: string): Promise<void>;\r\n\r\n        selectFileAsync(options?: ISelectFileOptions): Promise<File>;\r\n\r\n        maps(location: ILocation, zoomLevel?: number): Promise<void>;\r\n\r\n        selectOptionAsync<TItem, TValue>(options: ISelectOptions<TItem, TValue>): Promise<TValue>;\r\n    }\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nActions.selectFileAsync = options => {\r\n\r\n    return new Promise<File>((res, rej) => {\r\n\r\n        var input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n\r\n        input.onchange = () => {\r\n            res(input.files[0]);\r\n        }\r\n\r\n        input.click();\r\n    });\r\n};\r\n\r\n/****************************************/\r\n\r\nActions.selectOptionAsync = async options => {\r\n\r\n    let editor = new PopUpEditor({\r\n\r\n        editor: new SingleItemSelector({\r\n            template: \"ItemSelectorList\",\r\n            itemsSource: options.itemsSource,\r\n            styles: [\"no-padding-items-h\"]\r\n        }),\r\n        saveOnCommit: options.saveOnCommit == undefined ? true : options.saveOnCommit,\r\n        saveLabel: options.saveLabel,\r\n        closeLabel: options.closeLabel,\r\n        title: options.title,\r\n        styles: options.styles\r\n    });\r\n\r\n    return await editor.editAsync(options.value)\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.loadPageAsync = async (page, options) => {\r\n\r\n    return await (App as IViewApplication).pageHost.loadAsync(page, options);\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.content = (content,  contentOptions, pageOptions) => {\r\n\r\n    const value = typeof content == \"function\" ? new content() : content;\r\n\r\n    const activity = new ContentActivity({\r\n        providers: [\r\n            value\r\n        ],\r\n        ...contentOptions\r\n    });\r\n    return Actions.loadPageAsync(activity, pageOptions);\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.go = url => {\r\n\r\n    window.location.href = url;\r\n    return Promise.resolve();\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.call = phoneNumber => {\r\n\r\n    window.location.href = \"tel:\" + phoneNumber;\r\n    return Promise.resolve();\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.email = email => {\r\n\r\n    window.location.href = \"mailto:\" + email;\r\n    return Promise.resolve();\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.webPage = url => {\r\n\r\n    return Actions.loadPageAsync(new WebPage({ url: url }));\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.navigate = uri => {\r\n\r\n    return new Promise((res, rej) => {\r\n        const newWindows = window.open(uri, \"_blank\");\r\n        newWindows.addEventListener(\"load\", ev => {\r\n            res();\r\n        });\r\n        newWindows.addEventListener(\"error\", ev => {\r\n            rej();\r\n        });\r\n    });\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.facebookPage = pageId =>  {\r\n\r\n    window.location.href = \"https://www.facebook.com/\" + pageId;\r\n    //window.location.href = \"fb://page/\" + pageId;\r\n    return Promise.resolve();\r\n}\r\n\r\n/****************************************/\r\n\r\nActions.maps = (location, zoomLevel = 17) => {\r\n\r\n    if (location.position)\r\n        window.location.href = \"https://www.google.com/maps/search/?api=1&query=\" + location.position.latitude + \",\" + location.position.longitude;\r\n    //window.location.href = \"geo:\" + location.position.latitude + \",\" + location.position.longitude;\r\n    else\r\n        window.location.href = \"https://www.google.com/maps/search/?api=1&query=\" + encodeURIComponent(location.address);\r\n\r\n    return Promise.resolve();\r\n}","﻿import { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { ContentActivity } from \"../Activities/ContentActivity\";\r\nimport { ItemEditContent } from \"../Content/ItemEditContent\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\n\r\nexport interface IActivityEditorConfig<TItem, TEdit> {\r\n\r\n    editor: IItemEditor<TItem, TEdit>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    editToItemAsync?: (edit: TEdit) => Promise<TItem>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ActivityEditor<TItem, TEdit = TItem> extends BindableObject implements IAsyncEditor<TItem, TEdit> {\r\n\r\n    constructor(config?: IActivityEditorConfig<TItem, TEdit>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfigString(\"title\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.editToItemAsync)\r\n                this.editToItemAsync = config.editToItemAsync;\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async editAsync(value: TItem, validate?: (edit: TEdit) => Promise<boolean>): Promise<TEdit> {\r\n\r\n        const activity = new ContentActivity<TItem>({\r\n            providers: [new ItemEditContent<TItem, TEdit>({\r\n                editor: this.editor,\r\n                title: this.title,\r\n                value: value,\r\n                saveItemAsync: async edit => {\r\n                    if (validate) {\r\n                        const valResult = await validate(edit);\r\n                        if (valResult == null)\r\n                            return null;\r\n                    }\r\n                    return await this.editToItemAsync(edit);\r\n                }\r\n            })]\r\n        });\r\n\r\n        const result = await (await Actions.loadPageAsync(activity, { loadMode: \"add\" })).result;\r\n        if (result == null)\r\n            return null;\r\n\r\n        return this.editor.value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToItemAsync(edit: TEdit): Promise<TItem> {\r\n        return Promise.resolve(edit as unknown as TItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    editor: IItemEditor<TItem, TEdit> = null;\r\n\r\n    title: string = \"Edit\";\r\n}\r\n\r\n\r\nregisterType(ActivityEditor, \"ActivityEditor\");","﻿import { INamedContent } from \"../../Core/Abstraction/INamedContent\";\r\nimport { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { DynamicString, LocalString, StringUsage, WordNumber } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { BottomSheet } from \"../Components/BottomSheet\";\r\nimport { ItemsView } from \"../Components/ItemsView\";\r\nimport { RemovableItemView } from \"../Components/RemovableItemView\";\r\nimport { SelectableItemView } from \"../Components/SelectableItemView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { ActivityEditor } from \"../Editors/ActivityEditor\";\r\nimport { isAsyncEditor } from \"../Helpers/TypeCheck\";\r\nimport { EditableItemsSource } from \"../Items/EditableItemsSource\";\r\nimport { ISearchActivityConfig, SearchActivity } from \"./SearchActivity\";\r\n\r\nexport interface ISelectMultipleItemsActivityConfig<TItem, TValue, TFilter, TEdit> extends ISearchActivityConfig<TItem, SelectableItemView<TItem, IView>> {\r\n\r\n    itemsSource?: EditableItemsSource<TItem, TValue, TFilter, TEdit>;\r\n\r\n    filters?: INamedContent<TFilter>[];\r\n\r\n    createItemEditor?: () => IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit>;\r\n\r\n    createItemContentView?: (item: TItem) => IView;\r\n\r\n    createItemListView?: (item: TItem) => IView;\r\n\r\n    canAdd?: boolean;\r\n\r\n    addLabel?: LocalString;\r\n\r\n    emptyLabel?: LocalString;\r\n\r\n    selectedItems?: TItem[];\r\n\r\n    showEmptyItem?: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SelectMultipleItemsActivity<TItem, TValue, TFilter, TEdit = TItem> extends SearchActivity<TItem, SelectableItemView<TItem, IView>, TItem[]>   {\r\n\r\n    protected _bottomSheet: BottomSheet;\r\n    protected _emptyItem: SelectableItemView<TItem, IView>;\r\n    protected _lastItems: TItem[];\r\n\r\n\r\n    constructor(config?: ISelectMultipleItemsActivityConfig<TItem, TValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"canAdd\", config);\r\n\r\n        this.bindConfigString(\"emptyLabel\", config, StringUsage.Title);\r\n\r\n        this.bindConfig(\"showEmptyItem\", config);\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfigString(\"addLabel\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.createItemView)\r\n                this.createItemContentView = config.createItemContentView;\r\n\r\n            if (config.createItemListView)\r\n                this.createItemListView = config.createItemListView;\r\n\r\n            if (config.createItemEditor)\r\n                this.createItemEditor = config.createItemEditor;\r\n\r\n            if (config.filters)\r\n                this.filters.addRange(config.filters);\r\n\r\n            if (config.selectedItems)\r\n                this.setSelectedItems(config.selectedItems);\r\n\r\n            if (config.searchMode == \"client\") {\r\n                this.searchWorkAsync = async query => {\r\n\r\n                   if (!this._lastItems)\r\n                        this._lastItems = await this.itemsSource.getItemsAsync(this.getFilter(undefined));\r\n\r\n                    if (query) {\r\n                        query = query.toLowerCase();\r\n                        return linq(this._listView.items).where(a => {\r\n                            const text = this.itemsSource.getItemText(a).toLowerCase();\r\n                            return text && text.indexOf(query) != -1;\r\n                        }).toArray();\r\n                    }\r\n                    else\r\n                        return this._lastItems;\r\n                };\r\n            }\r\n        }\r\n\r\n        if (!config?.tooltip)\r\n            this.tooltip = DynamicString.get(\"select-item\")({ params: [this.itemsSource.displayName], number: WordNumber.Plural, usage: StringUsage.Tooltip });\r\n\r\n        if (!config?.addLabel)\r\n            this.addLabel = Format.action(\"new-item\", this.itemsSource.displayName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setSelectedItems(items: TItem[]) {\r\n\r\n        this.selectedItems.clear();\r\n\r\n        if (items) {\r\n            items.forEach(a =>\r\n                this.addSelection(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async createAsync() {\r\n\r\n        await super.createAsync();\r\n\r\n        this._actionBar.addAction({\r\n            name: \"confirm\",\r\n            icon: \"fas fa-check\",\r\n            displayName: \"confirm\",\r\n            executeAsync: () => this.confirmAsync(),\r\n            priority: ActionPriority.Primary\r\n        });\r\n\r\n        this._bottomSheet = new BottomSheet({\r\n            headHeight: 50,\r\n            content: new ItemsView({\r\n                styles: [\"padding\", \"horizontal-wrap\"],\r\n                content: this.selectedItems\r\n            })\r\n        });\r\n\r\n        this.view.addView(this._bottomSheet);\r\n\r\n        this.updateView();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async confirmAsync() {\r\n\r\n        await this.closeAsync(linq(this.selectedItems).select(a => a.item).toArray());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected configureListView() {\r\n\r\n        const header: IView[] = [];\r\n\r\n        if (this.canAdd)\r\n            header.push(ActionView.fromAction({\r\n                name: \"add-item\",\r\n                icon: \"fas fa-plus\",\r\n                operation: OperationType.Local,\r\n                executeAsync: () => this.addItemAsync(),\r\n                displayName: this.addLabel,\r\n            }));\r\n\r\n        if (this.showEmptyItem) {\r\n\r\n            this._emptyItem = new SelectableItemView({\r\n                content: new TextView({ content: this.emptyLabel }),\r\n                item: null,\r\n            });\r\n\r\n            this._emptyItem.toggle = () =>\r\n                this.closeAsync([]);\r\n\r\n            header.push(this._emptyItem);\r\n        }\r\n\r\n        const result = <any>{\r\n            header: header,\r\n            selectionMode: \"multiple\"\r\n        };\r\n\r\n        if (this.pageSize > 0)\r\n            result.itemsSource = this.itemsSource;\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected searchWorkAsync(query: string) {\r\n\r\n        return this.itemsSource.getItemsAsync(this.getFilter(query));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getFilter(query: string, offset?: number, pageSize?: number) {\r\n\r\n        let filter = this.itemsSource.getFilter(query, offset, pageSize);\r\n        if (this.filters.count == 1)\r\n            filter = { ...filter, ...this.filters.get(0).content };\r\n        return filter;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemListView(item: TItem): IView {\r\n        return new TextView({ content: this.itemsSource.getItemText(item) });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemContentView(item: TItem): IView {\r\n        return new TextView({ content: this.itemsSource.getItemText(item) });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemEditor(): IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem) {\r\n\r\n        const view = new SelectableItemView({\r\n            content: this.createItemListView(item),\r\n            item: item\r\n        });\r\n\r\n        view.prop(\"isSelected\").subscribe(value => this.updateSelection(view, item, value));\r\n\r\n        const exItem = this.findItem(item);\r\n\r\n        if (exItem != null)\r\n            view.isSelected = true;\r\n\r\n        return view;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateSelection(selView: SelectableItemView<TItem, IView>, item: TItem, isSelected: boolean) {\r\n\r\n        if (!isSelected)\r\n            this.removeSelection(item);\r\n        else\r\n            this.addSelection(item, selView);\r\n\r\n        this.updateView();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateView() {\r\n\r\n        if (this._bottomSheet) {\r\n            if (this.selectedItems.count > 0)\r\n                this._bottomSheet.open();\r\n            else\r\n                this._bottomSheet.close();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    removeSelection(item: TItem) {\r\n        const exItem = this.findItem(item);\r\n        if (exItem)\r\n            this.selectedItems.remove(exItem);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addSelection(item: TItem, selView?: SelectableItemView<TItem, IView>) {\r\n\r\n        const exItem = this.findItem(item);\r\n\r\n        if (exItem)\r\n            return;\r\n\r\n        const itemView = new RemovableItemView({\r\n            content: this.createItemContentView(item),\r\n            removeAsync: () => {\r\n\r\n                this.selectedItems.remove(itemView);\r\n\r\n                const selItem = this.findSelectable(item);\r\n                if (selItem)\r\n                    selItem.isSelected = false;\r\n\r\n                return Promise.resolve();\r\n            },\r\n            item: item\r\n        });\r\n\r\n        this.selectedItems.add(itemView);\r\n\r\n        return itemView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected findItem(item: TItem) {\r\n\r\n        return linq(this.selectedItems).first(a => this.itemsSource.itemComparer(a.item, item));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected findSelectable(item: TItem) {\r\n\r\n        return linq(this._listView.content).first(a => this.itemsSource.itemComparer(a.item, item));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async addItemAsync() {\r\n\r\n        const editor = this.createItemEditor();\r\n\r\n        let editValue: TEdit;\r\n\r\n        if (isAsyncEditor(editor))\r\n\r\n            editValue = await editor.editAsync(this.itemsSource.newItem());\r\n\r\n        else {\r\n            const activity = new ActivityEditor<TItem, TEdit>({\r\n                editor: editor,\r\n                title: this.addLabel\r\n            });\r\n\r\n            editValue = await activity.editAsync(this.itemsSource.newItem());\r\n        }\r\n\r\n        if (!editValue)\r\n            return;\r\n\r\n        const newItem = await this.itemsSource.addItemAsync(editValue);\r\n        if (!newItem)\r\n            return;\r\n\r\n        const itemView = this.createItemView(newItem);\r\n\r\n        itemView.isSelected = true;\r\n\r\n        this._listView.content.insert(0, itemView);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAdd: boolean = false;\r\n\r\n    showEmptyItem: boolean = false;\r\n\r\n    emptyLabel: string = \"[None]\";\r\n\r\n    itemsSource: EditableItemsSource<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    addLabel: string = \"Add New\";\r\n\r\n    filters:  IObservableList< INamedContent<TFilter>> = observableListOf();\r\n\r\n    readonly selectedItems: IObservableList<RemovableItemView<TItem>> = observableListOf();\r\n}\r\n\r\n\r\nregisterType(SelectMultipleItemsActivity, \"SelectMultipleItemsActivity\");","﻿import { INamedContent } from \"../../Core/Abstraction/INamedContent\";\r\nimport { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { DynamicString, LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { SelectableItemView } from \"../Components/SelectableItemView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { ActivityEditor } from \"../Editors/ActivityEditor\";\r\nimport { isAsyncEditor } from \"../Helpers/TypeCheck\";\r\nimport { EditableItemsSource } from \"../Items/EditableItemsSource\";\r\nimport { ISearchActivityConfig, SearchActivity } from \"./SearchActivity\";\r\n\r\nexport interface ISelectSingleItemActivityConfig<TItem, TValue, TFilter, TEdit> extends ISearchActivityConfig<TItem, IView> {\r\n\r\n    itemsSource?: EditableItemsSource<TItem, TValue, TFilter, TEdit>;\r\n\r\n    filters?: INamedContent<TFilter>[];\r\n\r\n    createItemEditor?: () => IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit>;\r\n\r\n    createItemContentView?: (item: TItem) => IView;\r\n\r\n    canAdd?: boolean;\r\n\r\n    addLabel?: LocalString;\r\n\r\n    selectedValue?: TValue;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SelectSingleItemActivity<TItem, TValue, TFilter, TEdit = TItem> extends SearchActivity<TItem, IView, TItem>    {\r\n\r\n    constructor(config?: ISelectSingleItemActivityConfig<TItem, TValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"canAdd\", config);\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"selectedValue\", config);\r\n\r\n        this.bindConfigString(\"addLabel\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.createItemView)\r\n                this.createItemContentView = config.createItemContentView;\r\n\r\n            if (config.createItemEditor)\r\n                this.createItemEditor = config.createItemEditor;\r\n\r\n            if (config.filters)\r\n                this.filters.addRange(config.filters);\r\n        }\r\n\r\n        if (!config?.tooltip)\r\n            this.tooltip = Format.tooltip(\"select-item\", this.itemsSource.displayName);\r\n\r\n        if (!config?.addLabel)\r\n            this.addLabel = Format.action(\"new-item\", this.itemsSource.displayName);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async createAsync() {\r\n\r\n        await super.createAsync();\r\n\r\n        this._actionBar.addAction({\r\n            name: \"confirm\",\r\n            icon: \"fas fa-check\",\r\n            displayName: \"confirm\",\r\n            executeAsync: () => this.confirmAsync(),\r\n            priority: ActionPriority.Primary\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async confirmAsync() {\r\n\r\n        await this.closeAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected configureListView() {\r\n\r\n        const header: IView[] = [];\r\n\r\n        if (this.canAdd)\r\n            header.push(ActionView.fromAction({\r\n                name: \"add-item\",\r\n                icon: \"fas fa-plus\",\r\n                operation: OperationType.Local,\r\n                executeAsync: () => this.addItemAsync(),\r\n                displayName: this.addLabel\r\n            }));\r\n\r\n        const result = <any>{\r\n            header: header,\r\n        };\r\n\r\n        if (this.pageSize > 0)\r\n            result.itemsSource = this.itemsSource;\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected searchWorkAsync(query: string) {\r\n\r\n        return this.itemsSource.getItemsAsync(this.getFilter(query));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getFilter(query: string, offset?: number, pageSize?: number) {\r\n\r\n        let filter = this.itemsSource.getFilter(query, offset, pageSize);\r\n        if (this.filters.count == 1)\r\n            filter = { ...filter, ...this.filters.get(0).content };\r\n        return filter;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemContentView(item: TItem): IView {\r\n\r\n        return new TextView({ content: this.itemsSource.getItemText(item) });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemEditor(): IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem) {\r\n\r\n        const view = new SelectableItemView({\r\n            content: this.createItemContentView(item),\r\n            styles: [\"single\"],\r\n            item: item\r\n        });\r\n\r\n        if (this.itemsSource.equals(this.itemsSource.getItemValue(item), this.selectedValue))\r\n            view.isSelected = true;\r\n\r\n        view.prop(\"isSelected\").subscribe(value => {\r\n\r\n            if (value)\r\n                this.setSelectionAsync(item);\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setSelectionAsync(item: TItem) {\r\n\r\n        return this.closeAsync(item);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async addItemAsync() {\r\n\r\n        const editor = this.createItemEditor();\r\n\r\n        let editValue: TEdit;\r\n\r\n        if (isAsyncEditor(editor))\r\n\r\n            editValue = await editor.editAsync(this.itemsSource.newItem());\r\n\r\n        else {\r\n            const activity = new ActivityEditor<TItem, TEdit>({\r\n                editor: editor,\r\n                title: this.addLabel\r\n            });\r\n\r\n            editValue = await activity.editAsync(this.itemsSource.newItem());\r\n        }\r\n\r\n        if (!editValue)\r\n            return;\r\n\r\n        const newItem = await this.itemsSource.addItemAsync(editValue);\r\n\r\n        if (newItem)\r\n            await this.setSelectionAsync(newItem);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAdd: boolean = false;\r\n\r\n    itemsSource: EditableItemsSource<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    addLabel: string = \"Add New\";\r\n\r\n    filters: IObservableList<INamedContent<TFilter>> = observableListOf();\r\n\r\n    selectedValue: TValue = null;\r\n\r\n}\r\n\r\nregisterType(SelectSingleItemActivity, \"SelectSingleItemActivity\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { View } from \"./View\";\r\nimport { ViewComponent } from \"./ViewComponent\";\r\n\r\ntype ConsoleMessageType = \"warn\" | \"log\" | \"info\" | \"trace\" | \"error\" | \"debug\";\r\n\r\nclass ConsoleItem extends View {\r\n\r\n    constructor(args?: any[]) {\r\n        super();\r\n        this.content = args;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected debugTypeName() {\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    content: any[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ConsoleMessageView extends ConsoleItem {\r\n\r\n    constructor(type: ConsoleMessageType, ...args: any[]) {\r\n        super(args)\r\n\r\n        this.type = type;\r\n        this.template = \"ConsoleMessageView\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    type: ConsoleMessageType;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ConsoleGroupView extends ConsoleItem {\r\n\r\n    constructor(...args: any[]) {\r\n        super(args)\r\n        this.template = \"ConsoleGroupView\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    items: IObservableList<ConsoleItem> = observableListOf();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ConsoleView extends ViewComponent {\r\n\r\n    private _oldConsole: Console;\r\n    private _groups: ConsoleGroupView[] = [];\r\n    private _activeGroup: ConsoleGroupView;\r\n    private _isCreated = false;\r\n\r\n    constructor() {\r\n\r\n        super({ template: \"ConsoleView\" });\r\n\r\n        this.root = new ConsoleGroupView();\r\n        this._activeGroup = this.root;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected debugTypeName() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    show() {\r\n        if (!this._isCreated) {\r\n            var builder = new TemplateBuilder(this, document.body);\r\n            builder.content(this);\r\n        }\r\n        this.visible = true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hide() {\r\n        this.visible = false;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    attach() {\r\n\r\n        if (this._oldConsole)\r\n            return;\r\n\r\n        this._oldConsole = <any>{};\r\n\r\n        for (let key in console)\r\n            this._oldConsole[key] = console[key];\r\n\r\n        console.log = (...args) => this.write(\"log\", args);\r\n        console.warn = (...args) => this.write(\"warn\", args);\r\n        console.info = (...args) => this.write(\"info\", args);\r\n        console.trace = (...args) => this.write(\"trace\", args);\r\n        console.error = (...args) => this.write(\"error\", args);\r\n        console.debug = (...args) => this.write(\"debug\", args);\r\n        console.clear = () => this.clear();\r\n        console.group = (...args) => this.group(args);\r\n        console.groupEnd = () => this.groupEnd();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    detach() {\r\n\r\n        if (!this._oldConsole)\r\n            return;\r\n\r\n        for (let key in console)\r\n            console[key] = this._oldConsole[key];\r\n        this._oldConsole = null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    write(logType: ConsoleMessageType, args: any[]) {\r\n\r\n        this._oldConsole[logType].apply(console, args);\r\n\r\n        this._activeGroup.items.add(new ConsoleMessageView(logType, args));\r\n\r\n        if (logType == \"error\")\r\n            this._activeGroup.items.add(new ConsoleMessageView(logType, new Error().stack));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    group(args: any[]) {\r\n\r\n        this._oldConsole.group.apply(console, args);\r\n\r\n        const newGroup = new ConsoleGroupView(args);\r\n        this._activeGroup.items.add(newGroup);\r\n        this._groups.push(newGroup);\r\n        this._activeGroup = newGroup;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    groupEnd() {\r\n\r\n        this._oldConsole.groupEnd.apply(console);\r\n\r\n        if (this._groups.length > 0)\r\n            this._activeGroup = this._groups.pop();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n        this._oldConsole.clear.apply(console);\r\n\r\n        this._groups = [];\r\n        this.root.items.clear();\r\n        this._activeGroup = this.root;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    root: ConsoleGroupView;\r\n}\r\n\r\nregisterType(ConsoleView, \"ConsoleView\");\r\n","﻿export interface ITimeFunction {\r\n    (time: number): number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IAnimateOptions {\r\n    duration: number;\r\n    timeFunction: ITimeFunction;\r\n    step: (time: number) => void;\r\n    stepTime: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport namespace Animation {\r\n\r\n    export function cubic(p0: number, p1: number, p2: number, p3: number): ITimeFunction {\r\n        return t =>\r\n            Math.pow(1 - t, 3) * p0 +\r\n            3 * Math.pow(1 - t, 2) * t * p1 +\r\n            3 * (1 - t) * Math.pow(t, 2) * p2 +\r\n            Math.pow(t, 3) * p3;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function linear(): ITimeFunction {\r\n        return t => t;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function animate(options: IAnimateOptions) {\r\n\r\n        let curTime = 0;\r\n\r\n        const handler = setInterval(() => {\r\n            if (curTime > options.duration)\r\n                curTime = options.duration;\r\n\r\n            options.step(options.timeFunction(curTime / options.duration));\r\n\r\n            if (curTime == options.duration)\r\n                clearInterval(handler);\r\n\r\n            curTime += options.stepTime;\r\n\r\n        }, options.stepTime);\r\n    }\r\n}","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { IPanelConfig, Panel } from \"./Panel\";\r\n\r\nexport interface IContentHostViewConfig<TProvider extends IViewContentProvider> extends IPanelConfig {\r\n\r\n    contentProvider?: Bindable<TProvider>;\r\n\r\n    actionTemplate?: CatalogTemplate<ActionView>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ContentHostView<TProvider extends IViewContentProvider = any> extends Panel implements IViewContentHost {\r\n\r\n    private _body: Panel;\r\n    private _actions: Panel;\r\n\r\n    constructor(config?: IContentHostViewConfig<TProvider>) {\r\n\r\n        super({\r\n            ...config\r\n        });\r\n\r\n        this.bindConfig(\"contentProvider\", config);\r\n\r\n        this.bindConfig(\"actionTemplate\", config);\r\n\r\n        this._body = new Panel({ name: \"body\" });\r\n\r\n        this._actions = new Panel({ name: \"actions\" });\r\n\r\n        this.addView(this._body);\r\n\r\n        this.addView(this._actions);\r\n\r\n        this._body.emptyView = this.emptyView;\r\n\r\n        this.emptyView = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async loadAsync() {\r\n\r\n        if (this.contentProvider) {\r\n\r\n            await this.closeAsync();\r\n\r\n            const content = await this.contentProvider.getContentAsync(this);\r\n\r\n            if (content.styles)\r\n                this._body.styles = content.styles;\r\n\r\n            this.name = this.contentProvider.info.name;\r\n\r\n            this.title = Format.title(content.title);\r\n\r\n            content.views.forEach(a => this._body.addView(a));\r\n\r\n            if (content.actions)\r\n                content.actions.forEach(a => this.addAction(a));\r\n\r\n            await super.loadAsync();\r\n\r\n            if (this.contentProvider.activateAsync)\r\n                await this.contentProvider.activateAsync();\r\n        }\r\n\r\n        this._actions.visible = this._actions.content.count > 0;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected addAction(action: IAction) {\r\n\r\n        this._actions.addView(ActionView.fromAction(action, { template: this.actionTemplate }));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    notifyContentChanged(provider: IViewContentProvider<this>) {\r\n\r\n        this.loadAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async closeAsync(result?: any) {\r\n\r\n        if (this.contentProvider?.deactivateAsync)\r\n            await this.contentProvider.deactivateAsync();\r\n\r\n        this._body.clear();\r\n\r\n        this._actions.clear();\r\n\r\n        this.title = null;\r\n\r\n        return true;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    title: string = null;\r\n\r\n    actionTemplate: CatalogTemplate<ActionView> = \"ActionButton\";\r\n\r\n    contentProvider: TProvider = null;\r\n}\r\n\r\nregisterType(ContentHostView, \"ContentHostView\");","﻿import { Bindable } from \"../../Templating/Properties\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { Animation } from \"../Helpers/Animation\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ICounterViewConfig extends IContentViewConfig<number> {\r\n\r\n    value?: Bindable<number>;\r\n\r\n    title: Bindable<string>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class CounterView extends ContentView<number> {\r\n\r\n    constructor(config?: ICounterViewConfig) {\r\n        super({ template: \"CounterView\", ...config });\r\n\r\n        this.bindConfig(\"value\", config);\r\n        this.bindConfig(\"title\", config);\r\n\r\n        this.prop(\"value\").subscribe(() => this.animate());\r\n\r\n        if (this.value != null)\r\n            this.animate();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected animate() {\r\n\r\n        this.content = 0;\r\n\r\n        let duration = this.value / 200;\r\n\r\n        return Animation.animate({\r\n            timeFunction: Animation.linear(),// Animation.cubic(0.000, 0.610, 0.610, 0.795),\r\n            duration: isNaN(duration) || duration < 1 ? 1 : duration,\r\n            stepTime: 1 / 20,\r\n            step: t =>\r\n                this.content = Math.round(this.value * t)\r\n        });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    title: string = null;\r\n\r\n    value: number = 0;\r\n}\r\n\r\nregisterType(CounterView, \"CounterView\");","﻿import { IContext } from \"../../Core/Abstraction/IContext\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { IPopUpMenu } from \"../Abstraction/IPopUpMenu\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { IViewConfig, View } from \"./View\";\r\nimport \"Templates/Drawer.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { GestureType, IGestureData, IGestureListener } from \"../Abstraction/IGestureListener\";\r\n\r\nexport interface IDrawerGroupConfig {\r\n\r\n    label?: LocalString;\r\n\r\n    actions: IAction[];\r\n\r\n    icon?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDrawerConfig extends IViewConfig {\r\n\r\n    groups: IDrawerGroupConfig[];\r\n\r\n    header?: Bindable<IView>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport type DrawerStatus = \"hidden\" | \"visible\" | \"hiding\" | \"showing\";\r\n\r\n/****************************************/\r\n\r\nexport class DrawerGroup {\r\n\r\n    private _host: Drawer;\r\n\r\n    constructor(host: Drawer, config?: IDrawerGroupConfig) {\r\n        this._host = host;\r\n\r\n        if (config) {\r\n\r\n            this.label = Format.action(config.label);\r\n\r\n            config.actions.forEach(a =>\r\n                this.addAction(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n\r\n        const actionView = ActionView.fromAction(action, {\r\n            executeAsync: async () => {\r\n                this._host.hideAsync();\r\n                await action.executeAsync();\r\n            }\r\n        });\r\n\r\n        this.actions.add(actionView);\r\n\r\n        return actionView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    label: string = null;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Drawer extends View implements IPopUpMenu, IHTMLAttach, IGestureListener {\r\n\r\n    constructor(config?: IDrawerConfig) {\r\n        super({ template: \"Drawer\", ...config });\r\n\r\n        this.bindConfig(\"header\", config);\r\n\r\n        if (config) {\r\n            config.groups.forEach(a =>\r\n                this.addGroup(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onGesture(data: IGestureData) {\r\n\r\n        if (data.type == GestureType.SwipeLeft)\r\n            this.hideAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getGroup(label: LocalString) {\r\n\r\n        const labelTxt = Format.action(label);\r\n        return linq(this.groups).first(a => a.label == labelTxt);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addGroup(config: IDrawerGroupConfig) {\r\n\r\n        const group = new DrawerGroup(this, config);\r\n\r\n        this.groups.add(group);\r\n\r\n        return group;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n\r\n        element.addEventListener(\"click\", e => {\r\n\r\n            if (e.srcElement == e.currentTarget)\r\n                this.hideAsync();\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync(ctx?: IContext) {\r\n\r\n        this.status = \"showing\";\r\n\r\n        await delayAsync(0);\r\n\r\n        this.status = \"visible\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async hideAsync() {\r\n\r\n        this.status = \"hiding\";\r\n\r\n        await delayAsync(500);\r\n\r\n        if (this.status == \"hiding\")\r\n            this.status = \"hidden\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    status: DrawerStatus = \"hidden\";\r\n\r\n    header: IView = null;\r\n\r\n    readonly groups: IObservableList<DrawerGroup> = observableListOf();\r\n}\r\n\r\nregisterType(Drawer, \"Drawer\");","﻿import { Http } from \"../../Core/Helpers/Http\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\nimport \"Templates/FileUploadView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport type FileStatus = \"empty\" | \"selected\" | \"uploading\" | \"uploaded\";\r\n\r\nexport interface IFileUploadViewConfig extends IViewComponentConfig {\r\n\r\n    onChanged?(): void;\r\n}\r\n\r\n/****************************************/\r\n/* FileViewModel                        */\r\n/****************************************/\r\n\r\nexport class FileUploadView extends ViewComponent {\r\n\r\n    private _input: HTMLInputElement;\r\n\r\n    constructor(config?: IFileUploadViewConfig) {\r\n\r\n        super(config);\r\n\r\n        this._input = document.createElement(\"input\");\r\n        this._input.type = \"file\";\r\n\r\n        this._input.addEventListener(\"change\", () => {\r\n\r\n            this.update();\r\n\r\n            if (config?.onChanged)\r\n                config.onChanged();\r\n        });\r\n\r\n        this.update();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected update() {\r\n\r\n        let file = this._input.files[0];\r\n\r\n        if (file) {\r\n            this.text = file.name;\r\n            this.status = \"selected\";\r\n        }\r\n        else {\r\n            this.text = \"Seleziona file\";\r\n            this.status = \"empty\";\r\n        }\r\n\r\n        this.isSelected = this._input.files[0] != null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select() {\r\n        this._input.click();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async uploadAsync<T>(url: string): Promise<T> {\r\n        this.status = \"uploading\";\r\n        let result = await Http.postBinaryAsync<T>(url, this._input.files[0], ev => {\r\n\r\n            this.progress = ev.loaded / ev.total;\r\n\r\n        });\r\n        this.status = \"uploaded\";\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get file() {\r\n        if (!this._input.files || this._input.files.length == 0)\r\n            return null;\r\n        return this._input.files[0];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    progress: number = 0;\r\n\r\n    text: string = null;\r\n\r\n    progressText: string = null;\r\n\r\n    status: FileStatus = \"empty\";\r\n\r\n    error: string = null;\r\n\r\n    isSelected: boolean = false;\r\n}\r\n\r\nregisterType(FileUploadView, \"FileUploadView\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { IListViewConfig, ListView } from \"./ListView\";\r\n\r\nexport interface IGridViewConfig<TItem, TView extends IView, TFilter extends {}> extends IListViewConfig<TItem, TView, TFilter> {\r\n\r\n    colsCount?: number;\r\n\r\n    rowsCount?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class GridView<TItem = any, TView extends IView = any, TFilter extends {} = any> extends ListView<TItem, TView, TFilter> {\r\n\r\n    constructor(config?: IGridViewConfig<TItem, TView, TFilter>) {\r\n\r\n        super({ styles: [\"grid\"], ...config });\r\n\r\n        this.bindConfig(\"colsCount\", config); \r\n\r\n        this.bindConfig(\"rowsCount\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    colsCount: number = 0;\r\n\r\n    rowsCount: number = 0;\r\n}\r\n\r\nregisterType(GridView, \"GridView\");","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { ContentActivity } from \"../Activities/ContentActivity\";\r\nimport { MessageBox } from \"../Components/MessageBox\";\r\nimport { Toast } from \"../Components/Toast\";\r\nimport { MessageContent } from \"../Content/MessageContent\";\r\nimport { Actions } from \"./Actions\";\r\n\r\nexport type MessageAction = \"yes\" | \"no\" | \"cancel\" | \"retry\" | \"ok\" | \"abort\";\r\n\r\nexport interface IMessageOptions {\r\n\r\n    message: LocalString,\r\n\r\n    title: LocalString;\r\n\r\n    icon?: string;\r\n\r\n    actions?: MessageAction[];\r\n\r\n    customActions?: IAction[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport namespace Interaction {\r\n\r\n    export async function showMessageAsync(options: IMessageOptions): Promise<MessageAction | string> {\r\n\r\n        const msgActions = options.actions ?? [\"ok\"];\r\n\r\n        const msgBox = new MessageBox({ message: options.message, icon: options.icon, title: options.title });\r\n\r\n        msgActions.forEach(a => {\r\n\r\n            msgBox.addAction({\r\n                name: a,\r\n                displayName: Format.action(a),\r\n                executeAsync: () => Promise.resolve()\r\n            })\r\n        })\r\n\r\n        if (options.customActions)\r\n            options.customActions.forEach(a => msgBox.addAction(a));\r\n\r\n        const result = await msgBox.showAsync();\r\n\r\n        return <MessageAction>result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export async function confirmAsync(message: LocalString): Promise<boolean> {\r\n        const result = await showMessageAsync({\r\n            message: message,\r\n            title: \"confirm\",\r\n            actions: [\"yes\", \"no\"]\r\n        });\r\n        return result == \"yes\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function info(message: LocalString) {\r\n\r\n        const toast = new Toast({ message: message });\r\n\r\n        toast.showAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function warning(message: LocalString) {\r\n\r\n        const toast = new Toast({ message: message, styles: [\"warning\"] });\r\n\r\n        toast.showAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function error(message: LocalString) {\r\n\r\n        const toast = new Toast({ message: message, styles: [\"error\"], icon: \"fas fa-exclamation\" });\r\n\r\n        toast.showAsync();\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    export async function succeed(message: IMessageOptions) {\r\n\r\n        const page = await Actions.loadPageAsync(new ContentActivity<string>({\r\n            providers: [new MessageContent({\r\n                icon: \"far fa-smile\",\r\n                customActions: [{\r\n                    name: \"close\",\r\n                    displayName: \"close\",\r\n                    executeAsync: () => Promise.resolve(),\r\n                }],\r\n                ...message\r\n            })],\r\n            name: \"message\"\r\n        }));\r\n\r\n        return await page.result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export async function fail(message: IMessageOptions) {\r\n\r\n        const page = await Actions.loadPageAsync(new ContentActivity<string>({\r\n            providers: [new MessageContent({\r\n                icon: \"far fa-sad-tear\",\r\n                customActions: [{\r\n                    name: \"close\",\r\n                    displayName: \"close\",\r\n                    executeAsync: () => Promise.resolve(),\r\n                }], ...message\r\n            })],\r\n            name: \"message\"\r\n        }));\r\n\r\n        return await page.result;\r\n    }\r\n}","﻿import { ISectionsViewConfig, SectionsView } from \"../Components/SectionsView\";\r\n\r\nexport namespace Components {\r\n\r\n    export function sections(config: ISectionsViewConfig) {\r\n        return new SectionsView(config);\r\n    }\r\n}","﻿import { IEditor } from \"../Abstraction/IEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { BooleanEditor, IBooleanEditorConfig } from \"../Editors/BooleanEditor\";\r\nimport { DateEditorCombo, IDateEditorComboConfig } from \"../Editors/DateEditorCombo\";\r\nimport { ItemEditorConverter } from \"../Editors/ItemEditorConverter\";\r\nimport { IItemsEditorConfig, ItemsEditor } from \"../Editors/ItemsEditor\";\r\nimport { INumberEditorConfig, NumberEditor } from \"../Editors/NumberEditor\";\r\nimport { IObjectEditorConfig, ObjectEditor } from \"../Editors/ObjectEditor\";\r\nimport { RichTextEditor } from \"../Editors/RichTextEditor\";\r\nimport { ISingleItemSelectorConfig, SingleItemSelector } from \"../Editors/SingleItemSelector\";\r\nimport { ITextEditorConfig, TextEditor } from \"../Editors/TextEditor\";\r\n\r\nexport namespace Editors {\r\n\r\n    export function richText() {\r\n\r\n        return new RichTextEditor();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function currency() {\r\n        return new NumberEditor({\r\n            allowNull: false,\r\n            min: 0.01,\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function converter<TItem, TEdit>(editor: IEditor<TEdit, any>, itemToEdit: (item: TItem) => TEdit, editToItem?: (item: TItem, editValue: TEdit) => void): IItemEditor<TItem, TEdit> {\r\n\r\n        return new ItemEditorConverter({\r\n            editor: editor,\r\n            editToItem: editToItem,\r\n            itemToEdit: itemToEdit\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function items<TItem, TValue, TUpdate, TCreate>(config?: IItemsEditorConfig<TItem, TValue, TUpdate, TCreate>) {\r\n\r\n        return new ItemsEditor({ ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function text(config?: ITextEditorConfig) {\r\n        return new TextEditor({ ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function textMultiLine(config?: ITextEditorConfig) {\r\n\r\n        return new TextEditor({ template: \"TextEditorMultiLine\", ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function number(config?: INumberEditorConfig) {\r\n        return new NumberEditor({ ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function boolean(config?: IBooleanEditorConfig) {\r\n        return new BooleanEditor({ ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function password(config?: ITextEditorConfig) {\r\n        return new TextEditor({ template: \"PasswordEditor\", ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function object<TObj extends {}>(config?: IObjectEditorConfig<TObj>) {\r\n        return new ObjectEditor(config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function address(config?: ITextEditorConfig) {\r\n        return new TextEditor({ template: \"TextEditorMultiLine\", ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function birthDate(minAge?: number, config?: IDateEditorComboConfig) {\r\n        return new DateEditorCombo({ maxYear: new Date().getFullYear() - (minAge ?? 0), minYear: new Date().getFullYear() - 100 });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    export function singleItemSelector<TItem, TValue>(config: ISingleItemSelectorConfig<TItem, TValue>) {\r\n\r\n        return new SingleItemSelector(config);\r\n    }\r\n}","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/HeadedContentView.html\";\r\n\r\nexport interface IHeadedContentViewConfig<TContent, THeader> extends IContentViewConfig<TContent> {\r\n\r\n    header?: Bindable<THeader>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class HeadedContentView<TContent, THeader> extends ContentView<TContent> {\r\n\r\n    constructor(config?: IHeadedContentViewConfig<TContent, THeader>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"header\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    header: THeader = null;\r\n\r\n    headerTemplate: CatalogTemplate<THeader> = null;\r\n}\r\n\r\nregisterType(HeadedContentView, \"HeadedContentView\");","﻿import { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport \"Templates/HtmlView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport class HtmlView extends ContentView<string> {\r\n\r\n    constructor(config?: IContentViewConfig<string>) {\r\n\r\n        super({ template: \"Html\", ...config });\r\n    }\r\n}\r\n\r\nregisterType(HtmlView, \"HtmlView\");","﻿import { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\n\r\nimport \"Templates/ImageView.html\";\r\nimport { loadImageAsync } from \"../Helpers/ImageLoade\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IImageViewConfig extends IContentViewConfig<string> {\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ImageView extends ContentView<string> implements IAsyncLoad {\r\n\r\n    constructor(config?: IImageViewConfig) {\r\n\r\n        super({ template: \"Image\", ...config });\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    loadAsync() {\r\n\r\n        if (this.content)\r\n            return loadImageAsync(this.content);\r\n        return Promise.resolve();\r\n    }\r\n}\r\n\r\nregisterType(ImageView, \"ImageView\");","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\n\r\nexport function loadImageAsync(src: string): Promise<HTMLImageElement> {\r\n\r\n    const op = Services.operation.begin({ message: \"Loading image: \" + src, type: OperationType.Local });\r\n\r\n    return new Promise((res, rej) => {\r\n\r\n        const img = document.createElement(\"img\");\r\n\r\n        img.addEventListener(\"load\", () => {\r\n            res(img);\r\n            op.end()\r\n        });\r\n\r\n        img.addEventListener(\"error\", ev => {\r\n            rej(ev.error)\r\n            op.end();\r\n        });\r\n\r\n        img.src = src;\r\n\r\n    });\r\n}","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IItemAction } from \"../Abstraction/IItemAction\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { ContextMenu } from \"./ContextMenu\";\r\nimport { IPanelConfig, Panel } from \"./Panel\";\r\nimport { View } from \"./View\";\r\nimport \"Templates/ItemView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IItemViewConfig<TItem> extends IPanelConfig {\r\n\r\n    item?: Bindable<TItem>;\r\n\r\n    actions?: IItemAction<TItem>[];\r\n\r\n    itemTemplate?: CatalogTemplate<ItemView<TItem>>;\r\n\r\n    canOpen?: Bindable<boolean>;\r\n\r\n    open?(): void;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ItemView<TItem> extends Panel {\r\n\r\n    protected _otherAction: ActionView;\r\n\r\n    constructor(config: IItemViewConfig<TItem>) {\r\n        super({ template: \"ItemView\", ...config });\r\n\r\n        this.bindConfig(\"item\", config);\r\n\r\n        this.bindConfig(\"canOpen\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.open)\r\n                this.openWork = config.open;\r\n\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n\r\n            if (config.itemTemplate)\r\n                this.content.add(new View({ template: t => t.template(config.itemTemplate, this) }));\r\n        }\r\n\r\n        this.computed(\"hasActions\",\r\n            m => linq(m.contextActions).any(a => a.visible));\r\n\r\n        this.create();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IItemAction<TItem>) {\r\n\r\n        const view = ActionView.fromItemAction(action, () => this.item);\r\n\r\n        if (action.priority == ActionPriority.Primary) {\r\n            if (this.mainActions.length >= 3) {\r\n\r\n                if (!this._otherAction) {\r\n\r\n                    this._otherAction = ActionView.fromAction({\r\n                        name: \"other\",\r\n                        icon: \"fas fa-ellipsis-h\",\r\n                        operation: OperationType.Local,\r\n                        executeAsync: () => Promise.resolve()\r\n                    });\r\n                    this._otherAction.subActions.add(this.mainActions.pop());\r\n                    this.mainActions.push(this._otherAction);\r\n                }\r\n\r\n                this._otherAction.subActions.add(view);\r\n            }\r\n            else\r\n                this.mainActions.push(view);\r\n        }\r\n        else {\r\n            this.contextActions.push(view);\r\n            this.prop(\"hasActions\").notifyChanged();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    create() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    open() {\r\n        if (this.canOpen)\r\n            this.openWork();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected openWork() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    showMenu() {\r\n\r\n        let menu = new ContextMenu();\r\n        this.contextActions.forEach(a => menu.actions.add(a));\r\n        menu.showAsync(window.event.srcElement as HTMLElement);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    item: TItem = null;\r\n\r\n    contextActions: ActionView[] = [];\r\n\r\n    mainActions: ActionView[] = [];\r\n\r\n    status: string = null;\r\n\r\n    canOpen: boolean = false;\r\n\r\n    hasActions: boolean = null;\r\n}\r\n\r\n\r\nregisterType(ItemView, \"ItemView\");","﻿import { Services } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\nimport { ILocation } from \"../Types/Location\";\r\nimport { ISize } from \"../Types/Size\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\n\r\nexport interface ILocationViewConfig extends IContentViewConfig<ILocation> {\r\n\r\n    mapSize?: ISize;\r\n\r\n    zoomLevel?: number;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class LocationView extends ContentView<ILocation>  {\r\n\r\n    constructor(config?: ILocationViewConfig) {\r\n        super({ template: \"LocationView\", ...config });\r\n\r\n        if (config) {\r\n\r\n            if (config.mapSize)\r\n                this.mapSize = config.mapSize;\r\n\r\n            if (config.zoomLevel)\r\n                this.zoomLevel = config.zoomLevel;\r\n        }\r\n\r\n        this.updateAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n        this.updateAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    showMap() {\r\n        Actions.maps(this.content);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async updateAsync(): Promise<void> {\r\n\r\n        let manager = Services.mapManager();\r\n        let pos = this.content.position;\r\n\r\n        if (!pos)\r\n            pos = await manager.getLocationAsync(this.content.address);\r\n\r\n        this.map = manager.staticMap({\r\n            center: pos,\r\n            size: this.mapSize,\r\n            zoomLevel: this.zoomLevel,\r\n            pins: [{\r\n                center: pos,\r\n                icon: 113,\r\n                name: this.content.name\r\n            }]\r\n        });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    map: string;\r\n\r\n    mapSize: ISize = { width: 1280, height: 720 };\r\n\r\n    zoomLevel: number = 16;\r\n}\r\n\r\nregisterType(LocationView, \"LocationView\");","﻿import { TimeSpan } from \"./TimeSpan\";\r\n\r\nexport class Signal {\r\n\r\n    private _waitHandlers: ((res: boolean) => void)[] = [];\r\n    private _isSet: boolean;\r\n\r\n    /****************************************/\r\n\r\n    constructor(isSet: boolean = false) {\r\n        this._isSet = isSet;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set() {\r\n        this._isSet = true;\r\n        this._waitHandlers.forEach(handler =>\r\n            handler(true));\r\n        this._waitHandlers = [];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset() {\r\n        this._isSet = false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    waitFor(timeout?: TimeSpan): Promise<boolean> {\r\n\r\n        if (this._isSet)\r\n            return Promise.resolve(true);\r\n\r\n        return new Promise((res, rej) => {\r\n\r\n            if (timeout) {\r\n                setTimeout(() => {\r\n                    const index = this._waitHandlers.indexOf(res);\r\n                    if (index != -1) {\r\n                        this._waitHandlers.splice(index, 1);\r\n                        res(false);\r\n                    }\r\n                }, timeout.totalMilliseconds);\r\n            }\r\n\r\n            this._waitHandlers.push(res);\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get isSet() {\r\n        return this._isSet;\r\n    }\r\n}","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { Signal } from \"../../Core/Types/Signal\";\r\nimport { get, registerType, set } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { ICreateMapItemOptions, IMapItem, IMapManager } from \"../Abstraction/IMapManager\";\r\nimport { ISingleItemSelector } from \"../Abstraction/ISingleItemSelector\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\n\r\nexport interface IMapItemsViewConfig<TItem extends object, TFilter> extends IItemsViewConfig<TItem> {\r\n\r\n    manager?: IMapManager;\r\n\r\n    onItemSelected?: (item: TItem) => void;\r\n\r\n    createMapItem?: (item: TItem) => ICreateMapItemOptions;\r\n\r\n    itemsSource?: ItemsSource<TItem, TItem, TFilter>\r\n\r\n    showCurrentPosition?: Bindable<boolean>;\r\n}\r\n\r\n/********************************************/\r\n\r\ntype ItemsMapViewStatus = \"\" | \"loading\";\r\n\r\n/********************************************/\r\n\r\nexport class MapItemsView<TItem extends object, TFilter = any> extends ItemsView<TItem> implements IHTMLAttach, ISingleItemSelector<TItem> {\r\n\r\n    private _manager: IMapManager;\r\n\r\n    /********************************************/\r\n\r\n    constructor(config?: IMapItemsViewConfig<TItem, TFilter>) {\r\n        super({ template: \"Attach\", ...config });\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"showCurrentPosition\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.manager)\r\n                this._manager = config.manager;\r\n\r\n            if (config.createMapItem)\r\n                this.createMapItem = config.createMapItem;\r\n        }\r\n\r\n        if (!this._manager)\r\n            this._manager = Services.mapManager();\r\n\r\n        this.prop(\"selectedItem\").subscribe(value => {\r\n            if (!value)\r\n                this._manager.selectedItem = null;\r\n            else\r\n                this._manager.selectedItem = value[\"@mapItem\"];\r\n\r\n            if (config && config.onItemSelected)\r\n                config.onItemSelected(value as TItem);\r\n        });\r\n\r\n        this._manager.onSelectionChanged = () => {\r\n            if (this._manager.selectedItem)\r\n                this.selectedItem = this._manager.selectedItem[\"@item\"];\r\n            else\r\n                this.selectedItem = null;\r\n        };\r\n\r\n\r\n        this.prop(\"showCurrentPosition\").subscribe(value => {\r\n            this.manager.showCurrentPositionAsync(value);\r\n        })\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadItemsAsync(filter?: TFilter): Promise<void> {\r\n\r\n        if (!this.itemsSource)\r\n            return;\r\n\r\n        this.beginUpdate();\r\n\r\n        this.content.clear();\r\n\r\n        this.status = \"loading\";\r\n        let operation = Services.operation.begin({ message: \"Loading items\", type: OperationType.Local });\r\n        try {\r\n\r\n            let items = await this.itemsSource.getItemsAsync(filter);\r\n\r\n            if (items)\r\n                items.forEach(a => this.content.add(a));\r\n\r\n            if (this.mapReady.isSet)\r\n                this.initItems();\r\n        }\r\n        finally {\r\n            operation.end();\r\n            this.status = \"\";\r\n            this.endUpdate();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        Services.operation.progress(\"Map attacched\");\r\n\r\n        if (this._manager)\r\n            this._manager.attach(element);\r\n\r\n        this.mapReady.set();\r\n\r\n        if (this.status != \"loading\")\r\n            this.initItems();\r\n\r\n        this._manager.showCurrentPositionAsync(this.showCurrentPosition);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected initItems() {\r\n\r\n        let mapOptions = linq(this.content).select(a => this.createMapItem(a)).toArray();\r\n        let mapItems = this._manager.addItems(mapOptions);\r\n\r\n        for (let i = 0; i < mapItems.length; i++) {\r\n            set(this.content.get(i), \"@mapItem\", mapItems[i]);\r\n            set(mapItems[i], \"@item\", this.content.get(i));\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createMapItem(item: TItem): ICreateMapItemOptions {\r\n        return undefined;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemAdded(item: TItem) {\r\n\r\n        if (!this.mapReady.isSet)\r\n            return;\r\n\r\n        let options = this.createMapItem(item);\r\n\r\n        if (!options.location || isNaN(options.location.latitude) || isNaN(options.location.longitude)) {\r\n            console.warn(\"Invalid location for \" + options.title);\r\n            return;\r\n        }\r\n\r\n        let mapItem = this._manager.addItems([options]);\r\n\r\n        set(item, \"@mapItem\", mapItem);\r\n        set(mapItem, \"@item\", item);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemRemoved(item: TItem) {\r\n\r\n        if (!this.mapReady.isSet)\r\n            return;\r\n        let mapItem = get<IMapItem>(item, \"@mapItem\");\r\n        if (mapItem)\r\n            this._manager.removeItem(mapItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    itemsSource: ItemsSource<TItem, TItem, TFilter> = null;\r\n\r\n    status: ItemsMapViewStatus = \"\";\r\n\r\n    selectedItem: TItem = null;\r\n\r\n    showCurrentPosition: boolean = false;\r\n\r\n    mapReady = new Signal();\r\n\r\n    get manager() { return this._manager; }\r\n}\r\n\r\nregisterType(MapItemsView, \"MapItemsView\");","﻿import { Services } from \"../../Core/Global\";\r\nimport { Signal } from \"../../Core/Types/Signal\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { IMapManager } from \"../Abstraction/IMapManager\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IMapViewConfig extends IViewComponentConfig {\r\n\r\n    manager?: IMapManager;\r\n\r\n    showCurrentPosition?: Bindable<boolean>;\r\n\r\n    onMapLoaded?: () => void;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class MapView extends ViewComponent implements IHTMLAttach {\r\n\r\n    constructor(config?: IMapViewConfig) {\r\n        super({ template: \"Attach\", ...config });\r\n\r\n        if (config) {\r\n            if (config.onMapLoaded)\r\n                this.onMapLoaded = config.onMapLoaded;\r\n            if (config.manager)\r\n                this.manager = config.manager;\r\n            this.bindConfig(\"showCurrentPosition\", config);\r\n        }\r\n\r\n        if (!this.manager)\r\n            this.manager = Services.mapManager();\r\n\r\n        this.prop(\"showCurrentPosition\").subscribe(value => {\r\n            this.manager.showCurrentPositionAsync(value);\r\n        })\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        if (this.manager)\r\n            this.manager.attach(element);\r\n\r\n        this.mapReady.set();\r\n        this.onMapLoaded();\r\n\r\n        this.manager.showCurrentPositionAsync(this.showCurrentPosition);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    onMapLoaded() {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    showCurrentPosition: boolean = false;\r\n\r\n    manager: IMapManager;\r\n\r\n    mapReady = new Signal();\r\n}\r\n\r\nregisterType(MapView, \"MapView\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";import { loadVideoAsync, loadVideoIntoAsync } from \"../Helpers/VideoLoader\";\r\n;\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\n\r\nexport interface IVideoViewConfig extends IContentViewConfig<string> {\r\n    isAutoPlay?: Bindable<boolean>;\r\n\r\n    isMuted?: Bindable<boolean>;\r\n\r\n    showControls?: Bindable<boolean>;\r\n\r\n    isLoop?: Bindable<boolean>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class VideoView extends ContentView<string> implements IHTMLAttach, IAsyncLoad {\r\n\r\n    protected _video: HTMLVideoElement;\r\n\r\n    constructor(config?: IVideoViewConfig) {\r\n\r\n        super({ template: \"VideoView\", ...config });\r\n\r\n        this.bindConfig(\"isAutoPlay\", config);\r\n\r\n        this.bindConfig(\"isMuted\", config);\r\n\r\n        this.bindConfig(\"showControls\", config);\r\n\r\n        this.bindConfig(\"isLoop\", config);\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n        this.updateVideo();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n\r\n        this._video = <any>element;\r\n\r\n        this.updateVideo();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    loadAsync() {\r\n\r\n        if (this.content) {\r\n            if (this._video)\r\n                return loadVideoIntoAsync(this.content, this._video);\r\n            else\r\n                return loadVideoAsync(this.content);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected updateVideo() {\r\n\r\n        if (!this._video)\r\n            return;\r\n\r\n        this._video.muted = this.isMuted;\r\n        this._video.autoplay = this.isAutoPlay;\r\n        this._video.controls = this.showControls;\r\n        this._video.loop = this.isLoop;\r\n\r\n        if (this.content)\r\n            this._video.load();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    play() {\r\n        if (this._video)\r\n            this._video.play();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    pause() {\r\n        if (this._video)\r\n            this._video.pause();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    isAutoPlay: boolean = true;\r\n\r\n    isMuted?: boolean = true;\r\n\r\n    showControls: boolean = false;\r\n\r\n    isLoop: boolean = true;\r\n}\r\n\r\nregisterType(VideoView, \"VideoView\");","﻿import { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Services } from \"../../Core/Global\";\r\n\r\n export function loadVideoAsync(src: string): Promise < HTMLVideoElement > {\r\n\r\n    const op = Services.operation.begin({ message: \"Loading image: \" + src, type: OperationType.Local });\r\n\r\n    return new Promise((res, rej) => {\r\n\r\n        const video = document.createElement(\"video\");\r\n\r\n        video.addEventListener(\"playing\", () => {\r\n            video.pause();\r\n            op.end()\r\n            res(video);\r\n        });\r\n\r\n        video.addEventListener(\"error\", ev => {\r\n            op.end();\r\n            rej(ev.error)\r\n        });\r\n\r\n        video.src = src;\r\n        video.play();\r\n        if (video.readyState >= 2)\r\n            res(video);\r\n    });\r\n}\r\n\r\nexport function loadVideoIntoAsync(src: string, video: HTMLVideoElement) {\r\n\r\n    if (!video.paused || video.played)\r\n        return Promise.resolve();\r\n\r\n    const op = Services.operation.begin({ message: \"Loading image: \" + src, type: OperationType.Local });\r\n\r\n    return new Promise((res, rej) => {\r\n\r\n        function removeListeners() {\r\n            video.removeEventListener(\"playing\", loadListener);\r\n            video.removeEventListener(\"error\", errorListener);\r\n        }\r\n\r\n        const loadListener = () => {\r\n            op.end();\r\n            removeListeners();\r\n            res(undefined);\r\n        };\r\n\r\n        const errorListener = ev => {\r\n            op.end();\r\n            removeListeners();\r\n            rej(ev.error);\r\n        };\r\n\r\n        video.addEventListener(\"playing\", loadListener);\r\n        video.addEventListener(\"error\", errorListener);\r\n        video.src = src;\r\n        video.play();\r\n    });\r\n}","﻿import { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { IImageViewConfig, ImageView } from \"./ImageView\";\r\nimport { IVideoViewConfig, VideoView } from \"./VideoView\";\r\nimport \"Templates/MediaView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport type MediaType = \"empty\" | \"image\" | \"video\";\r\n\r\nexport interface IMediaContent {\r\n\r\n    type: MediaType;\r\n\r\n    src?: string;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport interface IMediaViewConfig extends IContentViewConfig<IMediaContent> {\r\n\r\n    image?: IImageViewConfig;\r\n\r\n    video?: IVideoViewConfig;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class MediaView extends ContentView<IMediaContent> {\r\n\r\n    private _imageConfig: IImageViewConfig = {};\r\n    private _videoConfig: IVideoViewConfig = {};\r\n\r\n    constructor(config?: IMediaViewConfig) {\r\n\r\n        super({ template: \"MediaView\", ...config });\r\n\r\n        if (config) {\r\n\r\n            if (config.image)\r\n                this._imageConfig = config.image;\r\n\r\n            if (config.video)\r\n                this._videoConfig = config.video;\r\n        }\r\n\r\n        this.updateContent();\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    loadAsync() {\r\n\r\n        if (this.activeView)\r\n            return this.activeView.loadAsync();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onContentChanged() {\r\n\r\n        this.updateContent();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected updateContent() {\r\n\r\n        if (this.content && this.content.type == \"image\")\r\n            this.activeView = new ImageView({ ...this._imageConfig, content: this.content.src });\r\n\r\n        if (this.content && this.content.type == \"video\")\r\n            this.activeView = new VideoView({ ...this._videoConfig, content: this.content.src });\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    activeView: VideoView | ImageView = null;\r\n}\r\n\r\nregisterType(MediaView, \"MediaView\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority, IAction } from \"../Abstraction/IAction\";\r\nimport { ViewStyle } from \"../Abstraction/IView\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { BasePopUpMessage, IBasePopUpMessageConfig } from \"./BasePopUpMessage\";\r\n\r\nexport interface IMessageBoxConfig extends IBasePopUpMessageConfig {\r\n\r\n    actions?: IAction[];\r\n\r\n    message?: Bindable<LocalString>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    icon: Bindable<string>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class MessageBox extends BasePopUpMessage {\r\n\r\n\r\n    constructor(config?: IMessageBoxConfig) {\r\n\r\n        super({ template: \"MessageBox\", className: \"message-box\", ...config });\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfigString(\"message\", config, StringUsage.Message);\r\n\r\n        this.bindConfig(\"icon\", config);\r\n\r\n        if (config) {\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n\r\n        const styles: ViewStyle[] = action.styles ?? [];\r\n\r\n        if (action.priority == ActionPriority.Evidence)\r\n            styles.push(\"primary\");\r\n\r\n        this.actions.add(ActionView.fromAction(action,\r\n            {\r\n                template: \"ActionButton\",\r\n                styles: styles,\r\n                executeAsync: async () => {\r\n                    await action.executeAsync();\r\n                    this.hide(action.name);\r\n                }\r\n            }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n\r\n    message: string = null;\r\n\r\n    title: string = null;\r\n\r\n    icon: string = null;\r\n}\r\n\r\nregisterType(MessageBox, \"MessageBox\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IProgressViewConfig extends IViewComponentConfig {\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ProgressView extends ViewComponent {\r\n\r\n    constructor(config?: IProgressViewConfig) {\r\n        super(config);\r\n    }\r\n}\r\n\r\nregisterType(ProgressView, \"ProgressView\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\nexport type TextEditorTrackMode = \"onchange\" | \"onlostfocus\";\r\n\r\nexport interface IBaseTextEditorConfig<TValue> extends IBaseEditorConfig<TValue> {\r\n\r\n    trackMode?: Bindable<TextEditorTrackMode>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport abstract class BaseTextEditor<TValue> extends BaseEditor<TValue, string> implements IHTMLAttach {\r\n\r\n    protected _element: HTMLElement;\r\n\r\n    constructor(config?: IBaseTextEditorConfig<TValue>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"trackMode\", config);\r\n\r\n        this.prop(\"hasFocus\").subscribe(a => this.onFocusChanged(a));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n        this._element = element;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async activateAsync() {\r\n\r\n        if (this._element.nodeName == \"INPUT\" || this._element.nodeName == \"TEXTAREA\") {\r\n            while (true) {\r\n\r\n                const input = <HTMLTextAreaElement>this._element;\r\n                input.selectionStart = 0;\r\n                input.selectionEnd = input.value?.length;\r\n                this._element.focus();\r\n\r\n                if (this.hasFocus)\r\n                    break;\r\n\r\n                await delayAsync(100);\r\n            }\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onFocusChanged(value: boolean) {\r\n\r\n        if (!value && this.trackMode == \"onlostfocus\")\r\n            this.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected notifyEditValueChangedAsync() {\r\n\r\n        if (this.hasFocus && this.trackMode == \"onlostfocus\") {\r\n\r\n            this._needValidation = true;\r\n\r\n            this.isDirty = true;\r\n\r\n            return Promise.resolve();\r\n        }\r\n        return super.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    trackMode: TextEditorTrackMode = \"onlostfocus\";\r\n}\r\n\r\nregisterType(BaseTextEditor, \"BaseTextEditor\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\n\r\nexport interface INumberEditorConfig extends IBaseTextEditorConfig<number> {\r\n\r\n    placeholder?: Bindable<string>;\r\n\r\n    min?: number;\r\n\r\n    max?: number;\r\n\r\n    precision?: number;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class NumberEditor extends BaseTextEditor<number> {\r\n\r\n    constructor(config?: INumberEditorConfig) {\r\n\r\n        super({ template: \"NumberEditor\", ...config });\r\n\r\n        this.bindConfig(\"placeholder\", config);\r\n\r\n        this.bindConfig(\"precision\", config);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: number): string {\r\n\r\n        return isNaN(value) ? \"\" : (this.precision != null ? value.toFixed(this.precision) : value.toString()).replace(\".\", \",\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: string): number {\r\n\r\n        var result = parseFloat(value?.replace(\",\", \".\"));\r\n        return isNaN(result) ? null : result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    placeholder: string = null;\r\n\r\n    min?: number = null;\r\n\r\n    max?: number = null;\r\n\r\n    precision: number = null;\r\n}\r\n\r\nregisterType(NumberEditor, \"NumberEditor\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { equals, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IEditor } from \"../Abstraction/IEditor\";\r\nimport { IHasLabel } from \"../Abstraction/IHasLabel\";\r\nimport { IValidationContext, IValidator } from \"../Abstraction/IValidator\";\r\nimport { NumberEditor } from \"../Editors/NumberEditor\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\nimport \"Templates/PropertyView.html\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { IPropertiesHost } from \"../Abstraction/IPropertiesHost\";\r\n\r\ntype NewType<TValue, TObj extends object> = IValidator<TValue, TObj>;\r\n\r\nexport type PropertyChangeReason = \"editor\" | \"setter\";\r\n\r\nexport interface IPropertyViewConfig<TValue, TObj extends object = any> extends IViewComponentConfig {\r\n\r\n    host?: IPropertiesHost<TObj>;\r\n\r\n    editor: Bindable<IEditor<TValue, any>>;\r\n\r\n    value?: Bindable<TValue>;\r\n\r\n    label?: Bindable<LocalString>;\r\n\r\n    readonly?: Bindable<boolean>;\r\n\r\n    showLabel?: Bindable<boolean>;\r\n\r\n    validators?: NewType<TValue, TObj>[];\r\n\r\n    onChanged?: (newValue: TValue, oldValue: TValue, target: TObj, reason: PropertyChangeReason) => void;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class PropertyView<TValue, TEditor extends IEditor<TValue, any> = IEditor<TValue, any>, TObj extends object = any> extends ViewComponent implements IHasLabel, IAsyncLoad {\r\n\r\n    protected _lastValidationValue: TValue = undefined;\r\n\r\n    constructor(config?: IPropertyViewConfig<TValue, TObj>) {\r\n\r\n        super({ template: \"PropertyView\", ...config });\r\n\r\n        this.bindConfig(\"host\", config);\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfig(\"readonly\", config);\r\n\r\n        this.bindConfig(\"showLabel\", config);\r\n\r\n        this.bindConfig(\"value\", config);\r\n\r\n        this.bindConfigString(\"label\", config, StringUsage.Label);\r\n\r\n        this.prop(\"error\");\r\n\r\n        if (config) {\r\n\r\n            if (config.onChanged)\r\n                this.prop(\"value\").subscribe((o, n) => config.onChanged(o, n, this.host.editValue, \"editor\"));\r\n\r\n            if (config.validators)\r\n                this.validators = config.validators;\r\n        }\r\n\r\n        this.prop(\"editor\").subscribe(() => this.bindEditor());\r\n\r\n        this.bindEditor();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected bindEditor() {\r\n\r\n        if (this.editor) {\r\n            this.editor.name = this.name;\r\n            this.editor.value = this.value;\r\n\r\n            this.bind(\"value\", this.editor.prop(\"value\"));\r\n\r\n            this.bind(\"isDirty\", this.editor.prop(\"isDirty\"));\r\n\r\n            if (\"label\" in this.editor) {\r\n                this.bind(\"label\", (this.editor as unknown as IHasLabel & IEditor<TValue, any>).prop(\"label\"));\r\n                this.showLabel = false;\r\n            }\r\n\r\n            this.editor.prop(\"isValid\").subscribe(value => {\r\n\r\n                if (!value)\r\n                    this.isValid = false;\r\n\r\n                this.error = this.editor.error;\r\n            });\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearError() {\r\n\r\n        this.editor.error = null;\r\n        this.error = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async validateAsync(target: TObj, force?: boolean): Promise<boolean> {\r\n\r\n        console.group(\"begin validation: \" + this.label, \" - needValidation: \", this.isDirty);\r\n\r\n        try {\r\n\r\n            //TODO fix this, sometimes is editValue other time value\r\n            const curValue = this.editor instanceof NumberEditor ? this.editor.value : this.editor.editValue;\r\n\r\n            if (!force && this._lastValidationValue !== undefined && equals(this._lastValidationValue, curValue))\r\n                return this.isValid;\r\n\r\n            this.clearError();\r\n\r\n            this._lastValidationValue = curValue;\r\n\r\n            if (!await this.editor.validateAsync(force)) {\r\n\r\n                this.isValid = false;\r\n                this.error = this.editor.error;\r\n                return false;\r\n            }\r\n\r\n            const ctx: IValidationContext<TValue, TObj> = {\r\n                value: curValue,\r\n                fieldName: this.label,\r\n                target: target\r\n            };\r\n\r\n            for (let validator of this.validators) {\r\n                const result = await validator.validateAsync(ctx);\r\n                if (!result.isValid) {\r\n                    this.error = Format.message(result.error);\r\n                    this.isValid = false;\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            this.isValid = true;\r\n            return true;\r\n        }\r\n        finally {\r\n            console.groupEnd();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    loadAsync() {\r\n\r\n        return this.editor.loadAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n        this.editor.clear();\r\n        this.clearError();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    isDirty: boolean = null;\r\n\r\n    isValid: boolean = true;\r\n\r\n    value: TValue = null;\r\n\r\n    editor: TEditor = null;\r\n\r\n    error: string = null;\r\n\r\n    label: string = null;\r\n\r\n    readonly: boolean = false;\r\n\r\n    showLabel: boolean = true;\r\n\r\n    host: IPropertiesHost<TObj> = null;\r\n\r\n    validators: IValidator<TValue, TObj>[] = [];\r\n}\r\n\r\n\r\nregisterType(PropertyView, \"PropertyView\");","﻿import { linq } from \"../../Core/Linq\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\nimport { TextView } from \"./TextView\";\r\n\r\ninterface ISectionViewConfig<TContent extends IView, THeader extends IView> extends IContentViewConfig<TContent> {\r\n\r\n    header?: LocalString | THeader;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class SectionView<TContent extends IView = any, THeader extends IView = any> extends ContentView<TContent> {\r\n\r\n    constructor(config?: ISectionViewConfig<TContent, THeader>) {\r\n\r\n        super(config)\r\n\r\n        if (typeof config?.header == \"string\")\r\n            this.header = <any>new TextView({ content: config.header });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    header: THeader;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport interface ISectionsViewConfig extends IItemsViewConfig<SectionView<any, any>> {\r\n\r\n    sections?: ISectionViewConfig<any, any>[];\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class SectionsView extends ItemsView<SectionView<IView, IView>> {\r\n\r\n    constructor(config?: ISectionsViewConfig) {\r\n\r\n        super(config);\r\n\r\n        if (config?.sections)\r\n            config.sections.forEach(a => this.content.add(new SectionView(a)));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    section(name: string) {\r\n        return linq(this.content).first(a => a.name == name);\r\n    }\r\n}\r\n\r\nregisterType(SectionsView, \"SectionsView\");","﻿import { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IconTextView, IIconTextViewConfig } from \"./IconTextView\";\r\nimport \"Templates/SimpleItemView.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ISimpleItemViewConfig<TITem, TStatus> extends IIconTextViewConfig {\r\n\r\n    subText?: Bindable<LocalString>;\r\n\r\n    status?: Bindable<TStatus>;\r\n\r\n    item?: Bindable<TITem>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SimpleItemView<TITem = any, TStatus extends string = any> extends IconTextView {\r\n\r\n    constructor(config?: ISimpleItemViewConfig<TITem, TStatus>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfigString(\"subText\", config);\r\n\r\n        this.bindConfig(\"status\", config);\r\n\r\n        this.bindConfig(\"item\", config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    subText: string = null;\r\n\r\n    status: TStatus = null;\r\n\r\n    item: TITem = null;\r\n}\r\n\r\nregisterType(SimpleItemView, \"SimpleItemView\");\r\n","﻿import { App } from \"../../Core/Global\";\r\nimport { TimeSpan } from \"../../Core/Types/TimeSpan\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IViewApplication } from \"../Abstraction/IViewApplication\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface ISnackBarOptions<TContent> {\r\n\r\n    showTime?: TimeSpan;\r\n\r\n    content: TContent;\r\n\r\n    action: IAction | string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SnackBar<TContent> extends ViewComponent {\r\n\r\n    protected _showResolve: (value: string) => void;\r\n\r\n    private constructor() {\r\n\r\n        super({ template: \"SnackBar\" });\r\n\r\n        this.status = \"close\";\r\n\r\n        new TemplateBuilder(this, document.body).content(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync() {\r\n\r\n        if (this.status == \"open\")\r\n            return;\r\n\r\n        (App as IViewApplication).unblock(true);\r\n\r\n        await delayAsync(0);\r\n\r\n        this.status = \"open\";\r\n\r\n        return new Promise<string>(res => this._showResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n\r\n    hide(actionName: string) {\r\n\r\n        if (this.status != \"open\")\r\n            return;\r\n\r\n        this.status = \"close\";\r\n\r\n        (App as IViewApplication).restoreBlock();\r\n\r\n        if (this._showResolve) {\r\n\r\n            this._showResolve(actionName);\r\n            this._showResolve = null;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static showAsync<TContent>(options: ISnackBarOptions<TContent>) {\r\n\r\n        const instanceId = new Date().valueOf();\r\n\r\n        if (!SnackBar.instance)\r\n            SnackBar.instance = new SnackBar();\r\n\r\n        SnackBar.instance.content = options.content;\r\n\r\n        SnackBar.instance.instanceId = instanceId;\r\n\r\n        if (options.action) {\r\n\r\n            let action: IAction;\r\n\r\n            if (typeof options.action == \"string\")\r\n                action = {\r\n                    name: options.action,\r\n                    executeAsync: () => Promise.resolve()\r\n                };\r\n            else\r\n                action = options.action;\r\n\r\n            SnackBar.instance.action = ActionView.fromAction(action, {\r\n                executeAsync: async () => {\r\n                    await action.executeAsync();\r\n                    SnackBar.instance.hide(action.name);\r\n                }\r\n            });\r\n        }\r\n        else\r\n            SnackBar.instance.action = null;\r\n\r\n        if (options.showTime) {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (SnackBar.instance.instanceId == instanceId && SnackBar.instance._isVisible)\r\n                    SnackBar.instance.hide(null);\r\n\r\n            }, options.showTime.totalMilliseconds)\r\n        }\r\n\r\n        return SnackBar.instance.showAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    action: ActionView = null;\r\n\r\n    content: TContent = null;\r\n\r\n    showTime?: TimeSpan = TimeSpan.fromSeconds(0);\r\n\r\n    instanceId: number = null;\r\n\r\n    private static instance = null;\r\n}\r\n\r\nregisterType(SnackBar, \"SnackBar\");","﻿import { Services } from \"../../Core/Global\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { IStaticMapOptions } from \"../Abstraction/IMapManager\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IStaticMapViewConfig extends IViewComponentConfig {\r\n\r\n    options?: Bindable<IStaticMapOptions>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class StaticMapView extends ViewComponent implements IContentView<string>  {\r\n\r\n    constructor(config?: IStaticMapViewConfig) {\r\n        super({ template: \"ImageView\", ...config });\r\n\r\n        this.bindConfig(\"options\", config);\r\n\r\n        this.update();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    update() {\r\n        this.content = Services.mapManager().staticMap(this.options);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    options: IStaticMapOptions;\r\n\r\n    content: string;\r\n}\r\n\r\nregisterType(StaticMapView, \"StaticMapView\");\r\n","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { TimeSpan } from \"../../Core/Types/TimeSpan\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { delayAsync } from \"../../Core/Utils/PromiseUtils\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { TemplateBuilder } from \"../../Templating/TemplateBuilder\";\r\nimport { IViewComponentConfig, ViewComponent } from \"./ViewComponent\";\r\n\r\nexport interface IToastConfig extends IViewComponentConfig {\r\n\r\n    showTime?: Bindable<TimeSpan>;\r\n\r\n    message: Bindable<LocalString>;\r\n\r\n    icon?: Bindable<string>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class Toast extends ViewComponent {\r\n\r\n    private static _container: HTMLElement;\r\n\r\n    private static _items = observableListOf<Toast>();\r\n\r\n    protected _showResolve: (res?: string) => void;\r\n\r\n    constructor(config?: IToastConfig) {\r\n\r\n        super({ template: \"Toast\", visible: false, ...config });\r\n\r\n        if (Toast._container == null)\r\n            Toast.init();\r\n\r\n        this.bindConfigString(\"message\", config, StringUsage.Tooltip);\r\n\r\n        this.bindConfig(\"showTime\", config);\r\n\r\n        this.bindConfig(\"icon\", config);\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static init() {\r\n\r\n        Toast._container = document.createElement(\"div\");\r\n\r\n        Toast._container.className = \"toast-container\";\r\n\r\n        const builder = new TemplateBuilder(Toast._items, Toast._container);\r\n\r\n        builder.template(\"ToastContainer\", a => a);\r\n\r\n        document.body.appendChild(Toast._container);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async showAsync() {\r\n\r\n        Toast._items.add(this);\r\n\r\n        await delayAsync(10);\r\n\r\n        this.visible = true;\r\n\r\n        let showMs = this.showTime.totalMilliseconds;\r\n\r\n        if (showMs == 0)\r\n            showMs = Math.min(Math.max(this.message.length * 70, 2000), 7000);\r\n\r\n        setTimeout(() => this.hideAsync(), showMs);\r\n\r\n        return new Promise<string>(res => this._showResolve = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async hideAsync() {\r\n\r\n        this.visible = false;\r\n\r\n        await delayAsync(600);\r\n\r\n        Toast._items.remove(this);\r\n\r\n        if (this._showResolve) {\r\n\r\n            this._showResolve();\r\n            this._showResolve = null;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    message: string = null;\r\n\r\n    icon: string = null;\r\n\r\n    showTime?: TimeSpan = TimeSpan.fromSeconds(0);\r\n}\r\n\r\n\r\nregisterType(Toast, \"Toast\");","﻿import { IDictionary } from \"../../Core/Abstraction/IDictionary\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { DynamicString, LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAction } from \"../Abstraction/IAction\";\r\nimport { IAsyncLoad } from \"../Abstraction/IAsyncLoad\";\r\nimport { IValidable } from \"../Abstraction/IValidator\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { isAsyncLoad, isValidable } from \"../Helpers/TypeCheck\";\r\nimport { ActionView } from \"./ActionView\";\r\nimport { ContentView, IContentViewConfig } from \"./ContentView\";\r\nimport { IconTextView } from \"./IconTextView\";\r\nimport { IItemsViewConfig, ItemsView } from \"./ItemsView\";\r\n\r\n\r\ninterface IWizardStepConfig<TContent extends IView> extends IContentViewConfig<TContent> {\r\n\r\n    loadAsync?(step: WizardStepView<TContent>): Promise<void>;\r\n\r\n    validateAsync?(step: WizardStepView<TContent>): Promise<boolean>;\r\n\r\n    title?: Bindable<LocalString>;\r\n\r\n    actions?: IAction[];\r\n\r\n    nextLabel?: LocalString;\r\n\r\n    coverImage?: string;\r\n\r\n    index?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class WizardStepView<TContent extends IView> extends ContentView<TContent> implements IValidable {\r\n\r\n    constructor(config?: IWizardStepConfig<TContent>) {\r\n\r\n        super({ template: \"ContentView\", ...config });\r\n\r\n        this.bindConfig(\"index\", config);\r\n\r\n        this.bindConfig(\"coverImage\", config);\r\n\r\n        this.bindConfigString(\"title\", config, StringUsage.Title);\r\n\r\n        this.bindConfigString(\"nextLabel\", config, StringUsage.Action);\r\n\r\n        if (config) {\r\n\r\n            if (config.loadAsync)\r\n                this.loadAsync = () => config.loadAsync(this);\r\n\r\n            if (config.validateAsync)\r\n                this.validateAsync = force => config.validateAsync(this);\r\n\r\n            if (config.actions)\r\n                config.actions.forEach(a => this.addAction(a));\r\n\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addAction(action: IAction) {\r\n        let view = ActionView.fromAction(action, { template: \"ActionButton\", styles: [\"primary\"] });\r\n        this.actions.add(view);\r\n        return view;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    loadAsync(): Promise<void> {\r\n\r\n        if (isAsyncLoad(this.content))\r\n            return this.content.loadAsync();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async validateAsync(force?: boolean) {\r\n\r\n        if (isValidable(this.content))\r\n            this.isValid = await this.content.validateAsync(force);\r\n        return this.isValid;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select(): void {\r\n\r\n        (this.parentView as WizardView).selectStepAsync(this.index);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    error: string = null;\r\n\r\n    isValid: boolean = true;\r\n\r\n    index: number = 0;\r\n\r\n    title: string = \"\";\r\n\r\n    isActive: boolean = false;\r\n\r\n    nextLabel: string = null;\r\n\r\n    coverImage: string = null;\r\n\r\n    readonly actions: IObservableList<ActionView> = observableListOf();\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IWizardConfig extends IItemsViewConfig<WizardStepView<any>> {\r\n\r\n    steps?: IWizardStepConfig<any>[];\r\n\r\n    finishAsync?: () => Promise<any>;\r\n\r\n    finishLabel?: LocalString;\r\n\r\n    nextLabel?: LocalString;\r\n\r\n    prevLabel?: LocalString;\r\n}\r\n\r\n/****************************************/\r\n/* WizardViewModel\r\n/****************************************/\r\n\r\nexport class WizardView extends ItemsView<WizardStepView<any>> implements IAsyncLoad {\r\n\r\n    constructor(config?: IWizardConfig) {\r\n\r\n        super({ template: \"WizardView\", ...config });\r\n\r\n        this.actions = {\r\n            next: new ActionView({\r\n                name: \"next\",\r\n                template: \"ActionButton\",\r\n                styles: [\"secondary\"],\r\n                content: new IconTextView({\r\n                    template: \"IconTextViewInline\",\r\n                    text: this.prop(\"nextLabel\")\r\n                }),\r\n                executeAsync: () => this.nextAsync()\r\n            }),\r\n            prev: new ActionView({\r\n                name: \"prev\",\r\n                template: \"ActionButton\",\r\n                styles: [\"secondary\"],\r\n                content: new IconTextView({\r\n                    template: \"IconTextViewInline\",\r\n                    text: this.prop(\"prevLabel\")\r\n                }),\r\n                executeAsync: () => this.previousAsync()\r\n            }),\r\n            finish: new ActionView({\r\n                name: \"finish\",\r\n                template: \"ActionButton\",\r\n                styles: [\"secondary\"],\r\n                content: new IconTextView({\r\n                    template: \"IconTextViewInline\",\r\n                    text: this.prop(\"finishLabel\")\r\n                }),\r\n                executeAsync: () => this.finishAsync()\r\n            })\r\n        }\r\n\r\n        this.prop(\"currentStepIndex\").subscribe((value, oldValue) => {\r\n\r\n            if (oldValue != -1)\r\n                this.content.get(oldValue).isActive = false;\r\n\r\n            this.content.get(value).isActive = true;\r\n\r\n            this.currentView = this.content.get(value)\r\n\r\n            this.actions.next.visible = this.hasNextStep();\r\n\r\n            this.actions.prev.visible = this.hasPrevStep();\r\n\r\n            this.actions.finish.visible = !this.hasNextStep();\r\n\r\n            if (this.currentView.nextLabel)\r\n                this.nextLabel = this.currentView.nextLabel;\r\n            else\r\n                this.nextLabel = Format.action(config?.nextLabel ?? \"wizard-next\");\r\n        });\r\n\r\n        this.bindConfigString(\"nextLabel\", config, StringUsage.Action);\r\n\r\n        this.bindConfigString(\"prevLabel\", config, StringUsage.Action);\r\n\r\n        this.bindConfigString(\"finishLabel\", config, StringUsage.Action);\r\n\r\n        if (config) {\r\n\r\n            if (config.steps) {\r\n                config.steps.forEach((step, i) =>\r\n                    this.content.add(new WizardStepView({ ...step, index: i })));\r\n\r\n                this.currentStepIndex = 0;\r\n            }\r\n\r\n            if (config.finishAsync)\r\n                this.doFinishAsync = config.finishAsync;\r\n        }\r\n\r\n        if (!config?.prevLabel)\r\n            this.prevLabel = Format.action(\"wizard-prev\");\r\n\r\n        if (!config?.finishLabel)\r\n            this.prevLabel = Format.action(\"wizard-finish\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async finishAsync() {\r\n\r\n        if (await this.validateUntilAsync(this.content.count - 1) !== true)\r\n            return;\r\n\r\n        await this.doFinishAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async doFinishAsync() {\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clearErrors() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async validateUntilAsync(targetIndex: number): Promise<boolean | number> {\r\n\r\n        let curStep = this.currentStepIndex;\r\n\r\n        while (curStep <= targetIndex) {\r\n            if (! await this.content.get(curStep).validateAsync())\r\n                return curStep;\r\n            curStep++;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadAsync() {\r\n\r\n        if (this.content.count > 0)\r\n            await this.content.get(this.currentStepIndex).loadAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async selectStepAsync(index: number) {\r\n\r\n        if (index == this.currentStepIndex)\r\n            return;\r\n\r\n        this.clearErrors();\r\n\r\n        if (index > this.currentStepIndex) {\r\n\r\n            let result = await this.validateUntilAsync(index - 1);\r\n\r\n            if (result === true) {\r\n                this.currentStepIndex = index;\r\n                await this.content.get(index).loadAsync();\r\n\r\n            }\r\n            else {\r\n\r\n                this.currentStepIndex = result as number;\r\n\r\n                if (result != this.currentStepIndex)\r\n                    await this.content.get(result as number).loadAsync();\r\n            }\r\n        }\r\n        else\r\n            this.currentStepIndex = index;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async nextAsync() {\r\n\r\n        if (this.currentStepIndex + 1 < this.content.count)\r\n            await this.selectStepAsync(this.currentStepIndex + 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async previousAsync() {\r\n\r\n        if (this.currentStepIndex > 0)\r\n            await this.selectStepAsync(this.currentStepIndex - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async endAsync() {\r\n\r\n        await this.selectStepAsync(this.content.count - 1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hasPrevStep(): boolean {\r\n        let curIndex = this.currentStepIndex - 1;\r\n        while (curIndex >= 0) {\r\n            if (this.content.get(curIndex).visible)\r\n                return true;\r\n            curIndex--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hasNextStep(): boolean {\r\n        let curIndex = this.currentStepIndex + 1;\r\n        while (curIndex <= this.content.count - 1) {\r\n            if (this.content.get(curIndex).visible)\r\n                return true;\r\n            curIndex++\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isComplete(): boolean {\r\n        return !this.hasNextStep();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    currentStepIndex: number = -1;\r\n\r\n    currentView: WizardStepView<any>;\r\n\r\n    actions: IDictionary<ActionView>;\r\n\r\n    nextLabel: string = \"Next\";\r\n\r\n    prevLabel: string = \"Previous\";\r\n\r\n    finishLabel: string = \"Finish\";\r\n}\r\n\r\nregisterType(WizardStepView, \"WizardStepView\");\r\n\r\nregisterType(WizardView, \"WizardView\");","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { IViewContent } from \"../Abstraction/IViewContent\";\r\nimport { IViewContentHost } from \"../Abstraction/IViewContentHost\";\r\nimport { IViewContentInfo } from \"../Abstraction/IViewContentInfo\";\r\nimport { IViewContentProvider } from \"../Abstraction/IViewContentProvider\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { IconTextView } from \"../Components/IconTextView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { View } from \"../Components/View\";\r\nimport { IMessageOptions } from \"../Helpers/Interaction\";\r\n\r\nexport class MessageContent implements IViewContentProvider {\r\n\r\n    protected _options: IMessageOptions;\r\n\r\n    /****************************************/\r\n\r\n    constructor(options: IMessageOptions) {\r\n\r\n        this._options = options;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async getContentAsync(host: IViewContentHost) {\r\n\r\n        const views: View[] = [];\r\n\r\n        views.push(new IconTextView({\r\n            icon: this._options.icon,\r\n            text: this._options.message,\r\n            styles: [\"message-view\"]\r\n        }));\r\n\r\n        if (this._options.customActions) {\r\n            this._options.customActions.forEach(action => views.push(new ActionView({\r\n                name: action.name,\r\n                template: \"ActionButton\",\r\n                styles: [\"primary\"],\r\n                content: new TextView({ content: Format.action(action.displayName) }),\r\n                executeAsync: async () => {\r\n                    await host.closeAsync();\r\n                    await action.executeAsync();\r\n                }\r\n            })));\r\n        }\r\n\r\n        return Promise.resolve({\r\n            views: views,\r\n            title: this._options.title,\r\n            styles: [\"vertical\", \"margin-items-v\", \"scroll\", \"fit-items-h\", \"surface\", \"padding\", \"small\"],\r\n        } as IViewContent);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get info() {\r\n        return {\r\n            name: \"message\",\r\n            icon: null,\r\n            displayName: this._options.title\r\n        } as IViewContentInfo;\r\n    }\r\n}","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\n\r\nexport interface IBaseItemEditorConfig<TItem, TEdit> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport abstract class BaseItemEditor<TItem, TEdit> extends BindableObject implements IItemEditor<TItem, TEdit> {\r\n\r\n    constructor(config?: IBaseItemEditorConfig<TItem, TEdit>) {\r\n        super();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    beginEditAsync(item: TItem): Promise<void> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    commitAsync(force?: boolean): Promise<boolean> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly view: IView = null;\r\n\r\n    readonly value: TEdit = null;\r\n\r\n    readonly isValid: boolean = null;\r\n\r\n}\r\n\r\nregisterType(BaseItemEditor, \"BaseItemEditor\");","﻿import { INamedContent } from \"../../Core/Abstraction/INamedContent\";\r\nimport { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { DynamicString, LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ItemSearchMode } from \"../Activities/SearchActivity\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { EditableItemsSource } from \"../Items/EditableItemsSource\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\nexport interface IBasePickerConfig<TItem, TValue, TEditorValue, TFilter, TEdit> extends IBaseEditorConfig<TEditorValue> {\r\n\r\n    itemsSource?: EditableItemsSource<TItem, TValue, TFilter, TEdit>;\r\n\r\n    filters?: INamedContent<TFilter>[];\r\n\r\n    createItemView?: (item: TItem) => IView;\r\n\r\n    createItemListView?: (item: TItem) => IView;\r\n\r\n    createItemEditor?: () => IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit>;\r\n\r\n    pageSize?: number;\r\n\r\n    canAdd?: Bindable<boolean>;\r\n\r\n    addLabel?: LocalString;\r\n\r\n    pickLabel?: LocalString;\r\n\r\n    searchMode?: ItemSearchMode;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport abstract class BasePicker<TItem, TValue, TEditorValue, TFilter = any, TEdit = TItem> extends BaseEditor<TEditorValue> {\r\n\r\n    constructor(config?: IBasePickerConfig<TItem, TValue, TEditorValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"canAdd\", config);\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"pageSize\", config);\r\n\r\n        this.bindConfigString(\"addLabel\", config);\r\n\r\n        this.bindConfigString(\"pickLabel\", config);\r\n\r\n        this.bindConfig(\"searchMode\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.filters)\r\n                this.filters.addRange(config.filters);\r\n\r\n            if (config.createItemView)\r\n                this.createItemView = config.createItemView;\r\n\r\n            if (config.createItemListView)\r\n                this.createItemListView = config.createItemListView;\r\n\r\n            if (config.createItemEditor)\r\n                this.createItemEditor = config.createItemEditor;\r\n        }\r\n\r\n        if (!config?.addLabel)\r\n            this.addLabel = Format.title(\"new-item\", this.itemsSource.displayName);\r\n\r\n        if (!config?.pickLabel)\r\n            this.pickLabel = Format.title(\"select-item\", this.itemsSource.displayName);\r\n\r\n        this.createEditValueProp();\r\n\r\n        this.selectAction = ActionView.fromActionIcon({\r\n            name: \"select\",\r\n            icon: \"fas fa-list\",\r\n            operation: OperationType.Local,\r\n            displayName: this.pickLabel,\r\n            executeAsync: () => this.selectAsync()\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    abstract selectAsync(): Promise<void>;\r\n\r\n    /****************************************/\r\n\r\n    protected abstract updateViewAsync(): Promise<void>;\r\n\r\n    /****************************************/\r\n\r\n    protected createItemEditor(): IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem): IView {\r\n\r\n        return new TextView({ content: this.itemsSource.getItemText(item) });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemListView(item: TItem): IView {\r\n\r\n        return this.createItemView(item);\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected async notifyEditValueChangedAsync() {\r\n\r\n        await super.notifyEditValueChangedAsync();\r\n\r\n        await this.updateViewAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAdd: boolean = false;\r\n\r\n    addLabel: string = \"Add\";\r\n\r\n    pickLabel: string = \"Select\";\r\n\r\n    selectAction: ActionView = null;\r\n\r\n    itemsSource: EditableItemsSource<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    pageSize: number = 0;\r\n\r\n    searchMode?: ItemSearchMode = \"default\";\r\n\r\n    readonly filters: IObservableList<INamedContent<TFilter>> = observableListOf();\r\n}\r\n\r\nregisterType(BasePicker, \"BasePicker\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHasLabel } from \"../Abstraction/IHasLabel\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\nexport interface IBooleanEditorConfig extends IBaseEditorConfig<boolean> {\r\n\r\n    trueLabel?: Bindable<LocalString>;\r\n\r\n    falseLabel?: Bindable<LocalString>;\r\n\r\n    label?: Bindable<LocalString>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class BooleanEditor extends BaseEditor<boolean> implements IHasLabel {\r\n\r\n    constructor(config?: IBooleanEditorConfig) {\r\n\r\n        super({ template: \"CheckBox\", ...config });\r\n\r\n        this.bindConfigString(\"trueLabel\", config);\r\n\r\n        this.bindConfigString(\"falseLabel\", config);\r\n\r\n        this.bindConfigString(\"label\", config, StringUsage.Action);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    toggle() {\r\n\r\n        if (window.event)\r\n            window.event.stopPropagation();\r\n        this.editValue = !this.editValue;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    trueLabel: string = null;\r\n\r\n    falseLabel: string = null;\r\n\r\n    label: string = null;\r\n}\r\n\r\nregisterType(BooleanEditor, \"BooleanEditor\");","﻿import { formatDate, parseDate } from \"../../Core/Utils/DateUtils\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\n\r\nexport interface IDateEditorConfig extends IBaseTextEditorConfig<Date> {\r\n\r\n    placeholder?: Bindable<string>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class DateEditor extends BaseTextEditor<Date> {\r\n\r\n    constructor(config?: IDateEditorConfig) {\r\n\r\n        super({ template: \"DateEditor\", ...config });\r\n\r\n        this.bindConfig(\"placeholder\", config);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: Date): string {\r\n\r\n        return value === null || value === undefined ? \"\" : formatDate(value, \"{YYYY}-{MM}-{DD}\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: string): Date {\r\n\r\n        if (value === undefined || value === null)\r\n            return null;\r\n        return parseDate(value + \" 00:00\");\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    placeholder: string = null;\r\n}\r\n\r\nregisterType(DateEditor, \"DateEditor\");","﻿import { MONTHS } from \"../../Core/Utils/DateUtils\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\nexport interface IDateEditorComboConfig extends IBaseEditorConfig<Date> {\r\n\r\n    minYear?: number;\r\n\r\n    maxYear?: number;\r\n}\r\n\r\ninterface IMonthView {\r\n    number: string;\r\n    name: string;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class DateEditorCombo extends BaseEditor<Date> {\r\n\r\n    constructor(config?: IDateEditorComboConfig) {\r\n        super(config)\r\n\r\n        for (let i = 1; i <= 31; i++)\r\n            this.days.push(i.toString());\r\n\r\n        for (let i = 1; i <= 12; i++)\r\n            this.months.push({ number: i.toString(), name: MONTHS[i - 1] });\r\n\r\n        const maxYear = config?.maxYear ?? new Date().getFullYear();\r\n\r\n        const minYear = config?.minYear ?? new Date().getFullYear() - 100;\r\n\r\n        for (let i = minYear; i <= maxYear; i++)\r\n            this.years.push(i.toString());\r\n\r\n        this.prop(\"selectedDay\").subscribe(() => this.tryCommit());\r\n        this.prop(\"selectedMonth\").subscribe(() => this.tryCommit());\r\n        this.prop(\"selectedYear\").subscribe(() => this.tryCommit());\r\n\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected tryCommit() {\r\n        this.commitAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    commitAsync(force?: boolean) {\r\n        if (this.editValue?.getTime() != this.value?.getTime())\r\n            this.value = this.editValue;\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get editValue(): Date {\r\n\r\n        if (!this.selectedDay || !this.selectedMonth || !this.selectedYear)\r\n            return null;\r\n        return new Date(parseInt(this.selectedYear), parseInt(this.selectedMonth) - 1, parseInt(this.selectedDay));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: Date) {\r\n\r\n        if (value?.getTime() == this.editValue?.getTime())\r\n            return;\r\n\r\n        if (!value) {\r\n            this.selectedDay = null;\r\n            this.selectedMonth = null;\r\n            this.selectedYear = null;\r\n        }\r\n        else {\r\n            this.selectedDay = (value.getDate()).toString();\r\n            this.selectedMonth = (value.getMonth() + 1).toString();\r\n            this.selectedYear = value.getFullYear().toString();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    selectedDay: string = null;\r\n\r\n    selectedMonth: string = null;\r\n\r\n    selectedYear: string = null;\r\n\r\n    days: string[] = [];\r\n\r\n    months: IMonthView[] = [];\r\n\r\n    years: string[] = [];\r\n}\r\n\r\nregisterType(DateEditorCombo, \"DateEditorCombo\");","﻿import { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { IActivable } from \"../Abstraction/IActivable\";\r\nimport { IEditor } from \"../Abstraction/IEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { isActivable } from \"../Helpers/TypeCheck\";\r\n\r\nexport interface IItemEditorConverterConfig<TItem, TEdit> {\r\n\r\n    editor?: IEditor<TEdit, any>;\r\n\r\n    itemToEdit?: (item: TItem) => TEdit;\r\n\r\n    editToItem?: (item: TItem, editValue: TEdit) => void\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ItemEditorConverter<TItem, TEdit> extends BindableObject implements IItemEditor<TItem, TEdit>, IActivable {\r\n\r\n    private _item: TItem;\r\n\r\n    constructor(config?: IItemEditorConverterConfig<TItem, TEdit>) {\r\n\r\n        super();\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.itemToEdit)\r\n                this.itemToEdit = config.itemToEdit;\r\n\r\n            if (config.editToItem)\r\n                this.editToItem = config.editToItem;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    activateAsync() {\r\n\r\n        if (isActivable(this.editor))\r\n            return this.editor.activateAsync();\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    beginEditAsync(item: TItem) {\r\n\r\n        this._item = item;\r\n        return this.editor.beginEditAsync(this.itemToEdit(item));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async commitAsync(force?: boolean) {\r\n\r\n        if (await this.editor.commitAsync(force)) {\r\n            this.editToItem(this._item, this.editor.value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    itemToEdit(item: TItem): TEdit {\r\n\r\n        throw \"Not supported\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    editToItem(item: TItem, editValue: TEdit): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get value() {\r\n        return this.editor.value;\r\n    }\r\n\r\n    get view() {\r\n        return this.editor;\r\n    }\r\n\r\n    get isValid() {\r\n        return this.editor.isValid;\r\n    }\r\n\r\n    editor: IEditor<TEdit, any> = null;\r\n}\r\n\r\nregisterType(ItemEditorConverter, \"ItemEditorConverter\");","﻿import { IItemsSourceConfig, ItemsSource } from \"./ItemsSource\";\r\n\r\nexport interface IEditableItemsSourceConfig<TItem, TValue, TFilter, TUpdate, TAdd> extends IItemsSourceConfig<TItem, TValue, TFilter> {\r\n\r\n    addItemAsync?: (item: TAdd) => Promise<TItem>;\r\n\r\n    updateItemAsync?: (editItem: TUpdate, item?: TItem) => Promise<TItem>;\r\n\r\n    removeItemAsync?: (item: TItem) => Promise<boolean>;\r\n\r\n    newItem?(): TItem;\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class EditableItemsSource<TItem, TValue = TItem, TFilter = any, TUpdate = TItem, TAdd = TUpdate> extends ItemsSource<TItem, TValue, TFilter>{\r\n\r\n    constructor(config?: IEditableItemsSourceConfig<TItem, TValue, TFilter, TUpdate, TAdd>) {\r\n\r\n        super(config);\r\n\r\n        if (config) {\r\n\r\n\r\n            if (config.addItemAsync)\r\n                this.addItemAsync = config.addItemAsync;\r\n\r\n            if (config.updateItemAsync)\r\n                this.updateItemAsync = config.updateItemAsync;\r\n\r\n            if (config.removeItemAsync)\r\n                this.removeItemAsync = config.removeItemAsync;\r\n\r\n            if (config.newItem)\r\n                this.newItem = config.newItem;\r\n        }\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    newItem(): TItem {\r\n\r\n        return <TItem>{};\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    addItemAsync(item: TAdd): Promise<TItem> {\r\n\r\n        return Promise.resolve(item as unknown as TItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    updateItemAsync(editItem: TUpdate, item?: TItem): Promise<TItem> {\r\n\r\n        return Promise.resolve(item);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    removeItemAsync(item: TItem): Promise<boolean> {\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n\r\n}","﻿import { IList } from \"../../Core/Abstraction/IList\";\r\nimport { OperationType } from \"../../Core/Abstraction/IOperation\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\nimport { linq } from \"../../Core/Linq\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { setEnumerable } from \"../../Templating/Functions\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { IItemAction } from \"../Abstraction/IItemAction\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IValidable } from \"../Abstraction/IValidator\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { ContentActivity } from \"../Activities/ContentActivity\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { IItemViewConfig, ItemView } from \"../Components/ItemView\";\r\nimport { TextView } from \"../Components/TextView\";\r\nimport { ItemEditContent } from \"../Content/ItemEditContent\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\nimport { Interaction } from \"../Helpers/Interaction\";\r\nimport { isAsyncEditor, isValidable } from \"../Helpers/TypeCheck\";\r\nimport { EditableItemsSource } from \"../Items/EditableItemsSource\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport \"Templates/ItemsEditor.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport type ItemStatus = \"unchanged\" | \"modified\" | \"removed\" | \"added\";\r\n\r\nexport type ItemEditMode = \"inline\" | \"external\";\r\n\r\ntype ItemCapability<TItem> = boolean | { (item: TItem): boolean };\r\n\r\n/********************************************/\r\n\r\nexport interface IItemsEditorConfig<TItem, TValue, TUpdate, TCreate> extends IBaseEditorConfig<TValue[]> {\r\n\r\n    createItemView?(item: TItem): IView;\r\n\r\n    createItemUpdateEditor?(item: TItem): IItemEditor<TItem, TUpdate> | IAsyncEditor<TItem, TUpdate>;\r\n\r\n    createItemAddEditor?(item: TItem): IItemEditor<TItem, TCreate> | IAsyncEditor<TItem, TCreate>;\r\n\r\n    newItem?: () => TItem;\r\n\r\n    itemsSource?: EditableItemsSource<TItem, any, any, TUpdate, TCreate>;\r\n\r\n    openItem?(item: TItem): void;\r\n\r\n    editMode?: Bindable<ItemEditMode>;\r\n\r\n    canAdd?: boolean;\r\n\r\n    canOpen?: ItemCapability<TItem>;\r\n\r\n    canRemove?: ItemCapability<TItem>;\r\n\r\n    canEdit?: ItemCapability<TItem>;\r\n\r\n    isConfirmRemove?: boolean;\r\n\r\n    addActionLabel?: LocalString;\r\n\r\n    editActionLabel?: LocalString;\r\n\r\n    removeActionLabel?: LocalString;\r\n\r\n    editActionsPriority?: Bindable<ActionPriority>;\r\n\r\n    itemActions?: IItemAction<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>>[];\r\n\r\n    isAutoLoad?: boolean;\r\n\r\n    attachItem?(item: TItem, isNew: boolean): void;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport interface IItemsEditorItemViewConfig<TItem, TValue, TUpdate, TCreate> extends IItemViewConfig<TItem> {\r\n\r\n    value?: TValue;\r\n\r\n    editActionsPriority: Bindable<ActionPriority>;\r\n\r\n    editActionLabel: LocalString;\r\n\r\n    removeActionLabel: LocalString;\r\n\r\n    addTitle: LocalString;\r\n\r\n    editTitle: LocalString;\r\n\r\n    itemActions: IItemAction<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>>[];\r\n\r\n    canRemove: boolean;\r\n\r\n    canEdit?: boolean;\r\n\r\n    itemsSource: EditableItemsSource<TItem, any, any, TUpdate, TCreate>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ItemsEditorItemView<TItem, TValue, TUpdate, TCreate> extends ItemView<TItem> {\r\n\r\n\r\n    constructor(config: IItemsEditorItemViewConfig<TItem, TValue, TUpdate, TCreate>) {\r\n\r\n        super({\r\n            ...config\r\n        });\r\n\r\n        if (config.canEdit) {\r\n            this.addAction({\r\n                name: \"edit-item\",\r\n                icon: \"fas fa-edit\",\r\n                operation: OperationType.Local,\r\n                priority: BindableObject.bindValue(config.editActionsPriority),\r\n                displayName: config.editActionLabel,\r\n                executeAsync: () => this.editAsync()\r\n            });\r\n        }\r\n\r\n        if (config.canRemove) {\r\n            this.addAction({\r\n                name: \"remove-item\",\r\n                icon: \"fas fa-trash\",\r\n                operation: OperationType.Local,\r\n                priority: BindableObject.bindValue(config.editActionsPriority),\r\n                displayName: config.removeActionLabel,\r\n                executeAsync: () => this.removeAsync()\r\n            });\r\n        }\r\n\r\n        if (config.itemActions) {\r\n            config.itemActions.forEach(action => this.addAction({\r\n                name: action.name,\r\n                icon: action.icon,\r\n                priority: action.priority,\r\n                operation: action.operation,\r\n                displayName: Format.action(action.displayName, config.itemsSource.displayName),\r\n                canExecute: action.canExecute ? () => action.canExecute(this) : undefined,\r\n                executeAsync: () => action.executeAsync(this)\r\n            }));\r\n        }\r\n\r\n        this.value = config.value;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    updateView() {\r\n\r\n        this.content.clear();\r\n\r\n        if (this.isEdit && this.editMode == \"inline\" && !isAsyncEditor(this.editor))\r\n            this.content.add(this.editor.view);\r\n        else\r\n            this.content.add(this.view);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    updateValueAsync(): Promise<void> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    createUpdateEditor(): IItemEditor<TItem, TUpdate> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    createAddEditor(): IItemEditor<TItem, TCreate> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    executeUpdateAsync(item: TUpdate): Promise<TItem> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    executeAddAsync(item: TCreate): Promise<TItem> {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async editAsync(): Promise<boolean> {\r\n\r\n        if (this.isEdit)\r\n            return false;\r\n\r\n        if (!this.editor) {\r\n\r\n            if (this.status == \"added\")\r\n                this.editor = this.createAddEditor();\r\n            else\r\n                this.editor = this.createUpdateEditor();\r\n        }\r\n\r\n        this.isEdit = true;\r\n\r\n        if (this.editMode == \"external\") {\r\n\r\n            let newItem: TItem = null;\r\n\r\n            if (isAsyncEditor(this.editor)) {\r\n\r\n                const editValue = await this.editor.editAsync(this.item);\r\n\r\n                if (editValue) {\r\n                    if (this.status == \"added\")\r\n                        newItem = await this.executeAddAsync(editValue as TCreate);\r\n                    else\r\n                        newItem = await this.executeUpdateAsync(editValue as TUpdate)\r\n                }\r\n            }\r\n            else {\r\n\r\n                const activity = new ContentActivity<TItem>({\r\n                    providers: [new ItemEditContent({\r\n                        editor: this.editor,\r\n                        title: item => this.status == \"added\" ? this.addTitle : this.editTitle,\r\n                        value: this.item,\r\n                        saveItemAsync: item => this.status == \"added\" ? this.executeAddAsync(item as TCreate) : this.executeUpdateAsync(item as TUpdate)\r\n                    })]\r\n                });\r\n\r\n                newItem = await (await Actions.loadPageAsync(activity)).result;\r\n            }\r\n\r\n            if (newItem) {\r\n\r\n                this.item = newItem;\r\n\r\n                this.status = \"unchanged\";\r\n\r\n                this.isEdit = false;\r\n\r\n                await this.updateValueAsync();\r\n            }\r\n            else\r\n                this.isEdit = false;\r\n\r\n            this.editor = null;\r\n\r\n            return newItem != null;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    cancelEdit(): void {\r\n\r\n        this.isEdit = false;\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    removeAsync(): Promise<void> {\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearErrors() {\r\n        this.error = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async validateAsync(force?: boolean) {\r\n\r\n        if (this.isEdit) {\r\n\r\n            if (isValidable(this.editor))\r\n                return await this.editor.validateAsync();\r\n        }\r\n        else {\r\n\r\n            if (isValidable(this.view))\r\n                return await this.view.validateAsync();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async loadAsync(): Promise<any> {\r\n        this.updateView();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get itemsEditor() {\r\n        return <ItemsEditor<TItem, TValue, TUpdate, TCreate>>this.parentView;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    error: string = null;\r\n\r\n    addTitle: string = null;\r\n\r\n    editTitle: string = null;\r\n\r\n    editor: IItemEditor<TItem, TUpdate | TCreate> | IAsyncEditor<TItem, TUpdate | TCreate> = null;;\r\n\r\n    view: IView = null;\r\n\r\n    value: TValue = null;\r\n\r\n    status: ItemStatus = \"unchanged\";\r\n\r\n    editMode: ItemEditMode = \"external\";\r\n\r\n    isEdit: boolean = false;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ItemsEditor<TItem, TValue = TItem, TUpdate = TItem, TCreate = TItem> extends BaseEditor<TValue[]> implements IContentView<IList<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>>>, IValidable {\r\n\r\n    protected _changesCount: number = 0;\r\n    protected _isUpdating: number = 0;\r\n\r\n    constructor(config?: IItemsEditorConfig<TItem, TValue, TUpdate, TCreate>) {\r\n\r\n        super({ template: \"ItemsEditor\", ...config });\r\n\r\n        this.bindConfig(\"editMode\", config);\r\n\r\n        this.bindConfig(\"canAdd\", config);\r\n\r\n        this.bindConfig(\"canOpen\", config);\r\n\r\n        this.bindConfig(\"canRemove\", config);\r\n\r\n        this.bindConfig(\"isConfirmRemove\", config);\r\n\r\n        this.bindConfig(\"canEdit\", config);\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"itemActions\", config);\r\n\r\n        this.bindConfig(\"editActionsPriority\", config);\r\n\r\n        this.bindConfig(\"removeActionLabel\", config);\r\n\r\n        this.bindConfig(\"editActionLabel\", config);\r\n\r\n        if (config) {\r\n\r\n            if (!config.editActionLabel)\r\n                this.editActionLabel = Format.action(\"edit-item\", this.itemsSource?.displayName);\r\n\r\n            if (!config.removeActionLabel)\r\n                this.removeActionLabel = Format.action(\"remove-item\", this.itemsSource?.displayName);\r\n\r\n            if (config.createItemAddEditor)\r\n                this.createItemAddEditor = config.createItemAddEditor;\r\n\r\n            if (config.createItemUpdateEditor)\r\n                this.createItemUpdateEditor = config.createItemUpdateEditor;\r\n\r\n            if (config.createItemView)\r\n                this.createItemView = config.createItemView;\r\n\r\n            if (config.attachItem)\r\n                this.attachItem = config.attachItem;\r\n\r\n            if (config.newItem)\r\n                this.newItem = config.newItem;\r\n\r\n            if (config.openItem) {\r\n                this.openItem = config.openItem;\r\n\r\n                if (config.canOpen == undefined)\r\n                    this.canOpen = true;\r\n            }\r\n        }\r\n\r\n        if (!this.itemsSource)\r\n            this.itemsSource = new EditableItemsSource();\r\n\r\n        this.addAction = ActionView.fromAction({\r\n            name: \"add-item\",\r\n            icon: \"fas fa-plus\",\r\n            operation: OperationType.Local,\r\n            displayName: config?.addActionLabel ?? Format.action(\"add-item\", this.itemsSource.displayName),\r\n            executeAsync: async () => await this.addAsync()\r\n        })\r\n\r\n        if (this.value)\r\n            this.beginEditAsync(this.value,);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async loadAsyncWork(): Promise<any> {\r\n\r\n        const awaiters: Promise<void>[] = [];\r\n\r\n        for (let item of this.content)\r\n            awaiters.push(item.loadAsync());\r\n\r\n        await Promise.all(awaiters);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n        this.content.clear();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearErrors() {\r\n        for (let item of this.content)\r\n            item.clearErrors();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    insert() {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async addAsync() {\r\n\r\n        const item = this.newItem();\r\n\r\n        this.attachItem(item, true);\r\n\r\n        const itemView = this.createItem(this.itemToValue(item), item);\r\n\r\n        itemView.item = item;\r\n\r\n        itemView.status = \"added\";\r\n\r\n        if (await itemView.editAsync()) {\r\n\r\n            if (linq(this.content).any(a => this.itemsSource.itemComparer(a.item, itemView.item)))\r\n                return;\r\n\r\n            this.content.add(itemView);\r\n\r\n            await this.notifyEditValueChangedAsync();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected openItem(item: TItem) {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected attachItem(item: TItem, isNew: boolean) {\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected isCapable(selector: ItemCapability<TItem>, item: TItem): boolean {\r\n\r\n        if (typeof selector == \"boolean\")\r\n            return selector;\r\n\r\n        return selector(item);\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createItem(value: TValue, item?: TItem) {\r\n\r\n        const result = new ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>({\r\n            value: value,\r\n            item: item,\r\n            addTitle: Format.title(\"add-item\", this.itemsSource.displayName),\r\n            editTitle: \"\",\r\n            itemsSource: this.itemsSource,\r\n            editActionsPriority: this.editActionsPriority,\r\n            editActionLabel: this.editActionLabel,\r\n            removeActionLabel: this.removeActionLabel,\r\n            itemActions: this.itemActions,\r\n            canRemove: this.isCapable(this.canRemove, item),\r\n            canEdit: this.isCapable(this.canEdit, item),\r\n            canOpen: this.isCapable(this.canOpen, item),\r\n            open: () => this.openItem(result.item)\r\n        });\r\n\r\n        result.parentView = this;\r\n\r\n        result.isConfirmRemove = this.isConfirmRemove;\r\n\r\n        result.createAddEditor = () => this.createItemAddEditor(result.item);\r\n\r\n        result.createUpdateEditor = () => this.createItemUpdateEditor(result.item);\r\n\r\n        result.executeAddAsync = item => this.itemsSource.addItemAsync(item);\r\n\r\n        result.executeUpdateAsync = editItem => this.itemsSource.updateItemAsync(editItem, result.item);\r\n\r\n        result.loadAsync = async () => {\r\n\r\n            if (!result.item) {\r\n\r\n                result.item = await this.valueToItemAsync(result.value);\r\n                result.canOpen = this.isCapable(this.canOpen, result.item);\r\n                result.editTitle = Format.title(\"edit-item\", this.itemsSource.getItemText(result.item));\r\n\r\n                this.attachItem(result.item, result.status != \"added\");\r\n            }\r\n\r\n            result.view = this.createItemView(result.item);\r\n\r\n            result.updateView();\r\n        };\r\n\r\n        result.updateValueAsync = async () => {\r\n\r\n            result.canOpen = this.isCapable(this.canOpen, result.item);\r\n\r\n            result.value = this.itemToValue(result.item);\r\n            result.view = this.createItemView(result.item);\r\n            result.editTitle = Format.title(\"edit-item\", this.itemsSource.getItemText(result.item));\r\n\r\n            result.updateView();\r\n\r\n            await this.notifyEditValueChangedAsync();\r\n        }\r\n\r\n        result.removeAsync = async () => {\r\n\r\n            if (result.status == \"added\")\r\n                this.content.remove(result);\r\n            else {\r\n                if (this.isConfirmRemove) {\r\n                    if (!await Interaction.confirmAsync(Format.message(\"msg-remove-confirm\", this.itemsSource.displayName)))\r\n                        return;\r\n                }\r\n\r\n                if (this.status == \"none\")\r\n                    this.status = \"loaded\";\r\n\r\n                result.status = \"removed\";\r\n                await this.notifyEditValueChangedAsync();\r\n            }\r\n        }\r\n\r\n        result.value = value;\r\n\r\n        if (this.status != \"none\")\r\n            result.loadAsync();\r\n\r\n        return result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected itemToValue(item: TItem): TValue {\r\n\r\n        return <any>item;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected valueToItemAsync(value: TValue): Promise<TItem> {\r\n\r\n        return Promise.resolve(value as unknown as TItem);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected onItemChanged(oldValue: TValue, newValue: TValue) {\r\n\r\n        this._needValidation = true;\r\n\r\n        if (this._isUpdating) {\r\n            this._changesCount++;\r\n            return;\r\n        }\r\n\r\n        this.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: TValue[]) {\r\n\r\n        if (!this.content || this._isUpdating)\r\n            return;\r\n\r\n        this._isUpdating++;\r\n        this._changesCount = 0;\r\n\r\n        this.content.clear();\r\n\r\n        try {\r\n\r\n            if (value) {\r\n                for (let itemValue of value)\r\n                    this.content.add(this.createItem(itemValue));\r\n            }\r\n        }\r\n        finally {\r\n            this._isUpdating--;\r\n        }\r\n\r\n        if (this._changesCount > 0)\r\n            this.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get editValue(): TValue[] {\r\n\r\n        const result: TValue[] = [];\r\n        for (let item of this.content) {\r\n\r\n            if (item.status == \"removed\")\r\n                continue;\r\n\r\n            result.push(item.value);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected async validateAsyncWork(force?: boolean): Promise<boolean> {\r\n\r\n        let isValid = true;\r\n\r\n        for (let item of this.content) {\r\n\r\n            if (!await item.validateAsync(force))\r\n                isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected async commitAsyncWork(force?: boolean) {\r\n\r\n        let isValid = true;\r\n        let isChanged = false;\r\n\r\n        /*\r\n        for (var item of this.content) {\r\n            if (item.isEdit) {\r\n                if (!await item.commitAsync())\r\n                    isValid = false;\r\n            }\r\n        }\r\n        */\r\n\r\n        if (!isValid)\r\n            return false;\r\n\r\n        for (let i = this.content.count - 1; i >= 0; i--) {\r\n\r\n            const item = this.content.get(i);\r\n\r\n            item.clearErrors();\r\n\r\n            if (item.status == \"removed\") {\r\n                if (await this.itemsSource.removeItemAsync(item.item))\r\n                    this.content.removeAt(i);\r\n                else {\r\n                    this.error = \"\";\r\n                    isValid = false;\r\n                }\r\n                isChanged = true;\r\n            }\r\n            else if (item.status == \"modified\" && !isAsyncEditor(item.editor)) {\r\n                const updateItem = await this.itemsSource.updateItemAsync(item.editor.value as TUpdate, item.item);\r\n                if (updateItem) {\r\n                    item.item = updateItem;\r\n                    item.status = \"unchanged\";\r\n                    item.updateView();\r\n                }\r\n                else {\r\n                    this.error = \"\";\r\n                    isValid = false;\r\n\r\n                }\r\n                isChanged = true;\r\n            }\r\n            else if (item.status == \"added\" && !isAsyncEditor(item.editor)) {\r\n                const addItem = await this.itemsSource.addItemAsync(item.editor.value as TCreate);\r\n                if (addItem) {\r\n                    item.item = addItem;\r\n                    item.status = \"unchanged\";\r\n                    item.updateView();\r\n                }\r\n                else {\r\n                    this.error = \"\";\r\n                    isValid = false;\r\n                }\r\n                isChanged = true;\r\n            }\r\n\r\n        }\r\n\r\n        if (isValid) {\r\n\r\n            if (isChanged)\r\n                this.onValueChanged(this.editValue);\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected newItem(): TItem {\r\n\r\n        return this.itemsSource.newItem();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected getItemViewContent(item: TItem): any {\r\n\r\n        return this.itemsSource ? this.itemsSource.getItemText(item) : item.toString();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createItemView(item: TItem): IView {\r\n\r\n        return new TextView({ content: this.getItemViewContent(item) });\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createItemUpdateEditor(item: TItem): IItemEditor<TItem, TUpdate> | IAsyncEditor<TItem, TUpdate> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createItemAddEditor(item: TItem): IItemEditor<TItem, TCreate> | IAsyncEditor<TItem, TCreate> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    readonly content: IObservableList<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>> = observableListOf();\r\n\r\n    editActionsPriority: ActionPriority = ActionPriority.Secondary;\r\n\r\n    editActionLabel: string = \"Edit\";\r\n\r\n    removeActionLabel: string = \"Remove\";\r\n\r\n    canAdd: boolean = true;\r\n\r\n    canRemove: ItemCapability<TItem> = true;\r\n\r\n    canEdit: ItemCapability<TItem> = false;\r\n\r\n    canOpen: ItemCapability<TItem> = false;\r\n\r\n    editMode: ItemEditMode = \"inline\";\r\n\r\n    itemActions: IItemAction<ItemsEditorItemView<TItem, TValue, TUpdate, TCreate>>[] = [];\r\n\r\n    itemsSource: EditableItemsSource<TItem, any, any, TUpdate, TCreate> = null;\r\n\r\n    addAction: ActionView;\r\n\r\n    isConfirmRemove: boolean = true;\r\n}\r\n\r\n\r\nregisterType(ItemsEditor, \"ItemsEditor\");\r\nregisterType(ItemsEditorItemView, \"ItemsEditorItemView\");\r\n","﻿import { DynamicString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { Guid } from \"../../Core/Types/Types\";\r\nimport { ContextMenu } from \"../Components/ContextMenu\";\r\nimport { FileUploadView } from \"../Components/FileUploadView\";\r\nimport { IMediaViewConfig, MediaType, MediaView } from \"../Components/MediaView\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport \"Templates/MediaEditor.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Format } from \"../../Core/Helpers/Format\";\r\n\r\nexport type ImageEditStatus = \"unchanged\" | \"deleted\" | \"new\" | \"empty\";\r\n\r\nexport interface IMediaData {\r\n\r\n    id?: Guid;\r\n\r\n    type?: MediaType;\r\n\r\n    status: ImageEditStatus;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IMediaUploadConfig extends IBaseEditorConfig<IMediaData> {\r\n\r\n    getUploadUrl: (fileName: string) => string;\r\n\r\n    noMediaUrl: string;\r\n\r\n    getMediaUrl?(data: IMediaData): string;\r\n\r\n    maxFileSize?: number;\r\n\r\n    validMedias?: MediaType[];\r\n\r\n    mediaView?: IMediaViewConfig;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class MediaEditor extends BaseEditor<IMediaData> {\r\n\r\n    constructor(config?: IMediaUploadConfig) {\r\n\r\n        super({ template: \"MediaEditor\", ...config });\r\n\r\n        this.bindConfig(\"noMediaUrl\", config);\r\n\r\n        this.bindConfig(\"maxFileSize\", config);\r\n\r\n        this.bindConfig(\"validMedias\", config);\r\n\r\n        if (config) {\r\n\r\n            if (config.getUploadUrl)\r\n                this.getUploadUrl = config.getUploadUrl;\r\n\r\n            if (config.getMediaUrl)\r\n                this.getMediaUrl = () => config.getMediaUrl(this.editValue);\r\n        }\r\n\r\n        this.mediaView = new MediaView({ image: { template: \"ImageInline\" }, video: { template: \"VideoViewInline\" }, ...config?.mediaView });\r\n\r\n        this.fileUpload = new FileUploadView({\r\n\r\n            onChanged: () => this.notifyEditValueChangedAsync()\r\n        });\r\n\r\n        this.fileUpload.visible = false;\r\n\r\n        this.mediaView.content = {\r\n            type: \"empty\"\r\n        };\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected getUploadUrl(fileName: string): string {\r\n\r\n        throw \"Not implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected validateAsyncWork(force?: boolean): Promise<boolean> {\r\n\r\n        if (this.fileUpload.status == \"selected\") {\r\n\r\n            if (this.validMedias.indexOf(\"image\") != -1 && this.fileUpload.file.type.startsWith(\"image/\"))\r\n                this.mediaView.content.type = \"image\";\r\n\r\n            else if (this.validMedias.indexOf(\"video\") != -1 && this.fileUpload.file.type.startsWith(\"video/\"))\r\n                this.mediaView.content.type = \"video\";\r\n\r\n            else\r\n                this.error = Format.message(\"msg-invalid-media\");\r\n\r\n            if (this.maxFileSize && this.fileUpload.file.size > this.maxFileSize)\r\n                this.error = Format.message(\"msg-max-size\", (this.maxFileSize / 1024 / 1024).toString());\r\n        }\r\n\r\n        return Promise.resolve(!this.error);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async commitAsyncWork(force?: boolean) {\r\n\r\n        if (this.fileUpload.status == \"selected\") {\r\n\r\n            const result = await this.fileUpload.uploadAsync<Guid>(this.getUploadUrl(this.fileUpload.file.name));\r\n\r\n            this.editValue.id = result;\r\n            this.editValue.status = \"new\";\r\n            this.editValue.type = this.mediaView.content.type;\r\n\r\n            this.mediaView.content = {\r\n                src: this.getMediaUrl(),\r\n                type: this.mediaView.content.type\r\n            };\r\n\r\n            this.notifyEditValueChangedAsync();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected getMediaUrl(): string {\r\n\r\n        throw \"Not Implemented\";\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async beginEditAsync(value: IMediaData) {\r\n\r\n        await super.beginEditAsync(value);\r\n\r\n        if (!this.editValue)\r\n            this.editValue = {\r\n                id: null,\r\n                type: \"empty\",\r\n                status: \"empty\"\r\n            };\r\n\r\n        if (this.editValue.status == \"empty\")\r\n            this.mediaView.content = {\r\n                type: \"image\",\r\n                src: this.noMediaUrl\r\n            };\r\n\r\n        else {\r\n            this.mediaView.content = {\r\n                type: this.editValue.type,\r\n                src: this.getMediaUrl()\r\n            };\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    change() {\r\n\r\n        this.fileUpload.visible = true;\r\n\r\n        this.fileUpload.select();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove() {\r\n\r\n        this.editValue.status = \"deleted\";\r\n\r\n        this.mediaView.content = {\r\n            type: \"image\",\r\n            src: this.noMediaUrl\r\n        };\r\n\r\n        this.notifyEditValueChangedAsync();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    showMenu() {\r\n\r\n        const menu = new ContextMenu();\r\n\r\n        if (this.editValue.status == \"new\" || this.editValue.id) {\r\n            menu.addAction({\r\n                name: \"remove-item\",\r\n                icon: \"fas fa-trash\",\r\n                displayName: \"delete\",\r\n                executeAsync: async () => this.remove()\r\n            });\r\n        }\r\n\r\n        menu.addAction({\r\n            name: \"edit-item\",\r\n            icon: \"fas fa-edit\",\r\n            displayName: \"change\",\r\n            executeAsync: async () => this.change()\r\n        })\r\n\r\n        menu.showAsync(undefined, <MouseEvent>window.event);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    fileUpload: FileUploadView = null;\r\n\r\n    mediaView: MediaView = null;\r\n\r\n    noMediaUrl: string = null;\r\n\r\n    maxFileSize: number = null;\r\n\r\n    validMedias: MediaType[] = [\"video\", \"image\"];\r\n}\r\n\r\nregisterType(MediaEditor, \"MediaEditor\");","﻿import { linq } from \"../../Core/Linq\";\r\nimport { equalsArray } from \"../../Core/Utils/ArrayUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { SelectMultipleItemsActivity } from \"../Activities/SelectMultipleItemsActivity\";\r\nimport { RemovableItemView } from \"../Components/RemovableItemView\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\nimport { BasePicker, IBasePickerConfig } from \"./BasePicker\";\r\nimport \"Templates/MultiItemPicker.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface IMultiItemPickerConfig<TItem, TValue, TFilter, TEdit> extends IBasePickerConfig<TItem, TValue, TValue[], TFilter, TEdit> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class MultiItemPicker<TItem, TValue, TFilter = any, TEdit = TItem> extends BasePicker<TItem, TValue, TValue[], TFilter, TEdit> {\r\n\r\n    constructor(config?: IMultiItemPickerConfig<TItem, TValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async selectAsync() {\r\n\r\n        let mustRefresh = false;\r\n\r\n        if (this.selector == null) {\r\n            this.selector = new SelectMultipleItemsActivity<TItem, TValue, TFilter, TEdit>({\r\n                createItemEditor: () => this.createItemEditor(),\r\n                createItemContentView: item => this.createItemView(item),\r\n                createItemListView: item => this.createItemListView(item),\r\n                itemsSource: this.itemsSource,\r\n                addLabel: this.addLabel,\r\n                searchMode: this.searchMode,\r\n                tooltip: this.pickLabel,\r\n                canAdd: this.canAdd\r\n            });\r\n\r\n            this.selector.filters = this.filters;\r\n        }\r\n        else\r\n            mustRefresh = true;\r\n\r\n        this.selector.setSelectedItems(linq(this.items).select(a => a.item).toArray());\r\n\r\n        if (mustRefresh)\r\n            await this.selector.refreshAsync();\r\n\r\n        const result = await (await Actions.loadPageAsync(this.selector)).result;\r\n\r\n        if (result != null) {\r\n            const newValue = linq(result).select(a => this.itemsSource.getItemValue(a)).toArray();\r\n            if (!equalsArray(newValue, this.editValue))\r\n                this.editValue = newValue;\r\n        }\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: TValue[]): TValue[] {\r\n        return value ? value.slice() : [];\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: TValue[]): TValue[] {\r\n        return value ? value.slice() : [];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updateViewAsync() {\r\n\r\n        if (this.status == \"loading\")\r\n            return;\r\n\r\n        this.items.clear();\r\n\r\n        if (this.editValue) {\r\n            this.status = \"loading\";\r\n            try {\r\n                for (let value of this.editValue) {\r\n\r\n                    const item = await this.itemsSource.getItemByValueAsync(value);\r\n\r\n                    if (!item)\r\n                        continue;\r\n\r\n                    const itemView = new RemovableItemView({\r\n                        item: item,\r\n                        content: this.createItemView(item),\r\n                        removeAsync: async () => {\r\n\r\n                            this.items.remove(itemView);\r\n\r\n                            let value = this.itemsSource.getItemValue(itemView.item);\r\n\r\n                            let index = linq(this.editValue).indexOf(a => this.itemsSource.equals(a, value));\r\n\r\n                            this.editValue.splice(index, 1);\r\n\r\n                            await this.notifyEditValueChangedAsync();\r\n                        }\r\n                    });\r\n\r\n                    this.items.add(itemView);\r\n                }\r\n            }\r\n            finally {\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    selector: SelectMultipleItemsActivity<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    readonly items: IObservableList<RemovableItemView<TItem>> = observableListOf();\r\n}\r\n\r\n\r\nregisterType(MultiItemPicker, \"MultiItemPicker\");","﻿import { IList } from \"../../Core/Abstraction/IList\";\r\nimport { equals, isEmpty, registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IContentView } from \"../Abstraction/IContentView\";\r\nimport { IEditor } from \"../Abstraction/IEditor\";\r\nimport { IPropertiesHost } from \"../Abstraction/IPropertiesHost\";\r\nimport { IPropertyViewConfig, PropertyView } from \"../Components/PropertyView\";\r\nimport { View } from \"../Components/View\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\n\r\ntype PropertiesOf<TObj extends object> = {\r\n    [TKey in keyof TObj]: PropertyView<TObj[TKey], IEditor<TObj[TKey], any>, TObj>\r\n};\r\n\r\n\r\n/********************************************/\r\n\r\nexport interface IObjectEditorConfig<TObj extends object> extends IBaseEditorConfig<TObj> {\r\n\r\n    properties?: { [TKey in keyof Partial<TObj>]: IPropertyViewConfig<TObj[TKey], TObj> };\r\n\r\n    propertyTemplateName?: Bindable<string>;\r\n\r\n    defaultProperty?: keyof TObj;\r\n\r\n    emptyView?: View;\r\n\r\n    onPropertyChanged?: <TKey extends keyof TObj>(propName: TKey, value: TObj[TKey], oldValue: TObj[TKey], target: TObj) => void;\r\n}\r\n\r\n/********************************************/\r\n\r\ninterface ICommitPropertyResult {\r\n    isValid: boolean;\r\n    isChanged: boolean;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class ObjectEditor<TObj extends object> extends BaseEditor<TObj> implements IContentView<IList<PropertyView<any>>>, IPropertiesHost<TObj> {\r\n\r\n    protected _proxy: TObj;\r\n    protected _changesCount: number = 0;\r\n    protected _isUpdating: number = 0;\r\n    protected _onPropertyChanged?: <TKey extends keyof TObj>(propName: TKey, value: TObj[TKey], oldValue: TObj[TKey], target: TObj) => void;\r\n\r\n    constructor(config?: IObjectEditorConfig<TObj>) {\r\n\r\n        super({ template: \"ItemsViewForm\", validationMode: \"always\", commitMode: \"manual\", ...config });\r\n\r\n        this.bindConfig(\"propertyTemplateName\", config);\r\n\r\n        this.bindConfig(\"defaultProperty\", config);\r\n\r\n        this.bindConfig(\"emptyView\", config);\r\n\r\n        this.prop(\"content\");\r\n\r\n        if (config) {\r\n            this._onPropertyChanged = config.onPropertyChanged;\r\n\r\n            if (config.properties) {\r\n                for (let propName in config.properties) {\r\n                    config.properties[propName].name = propName;\r\n                    this.addProperty(config.properties[propName]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.createProxy();\r\n\r\n        if (!isEmpty(this.value))\r\n            this.beginEditAsync(this.value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    addProperty(config: IPropertyViewConfig<TObj[keyof TObj], TObj>) {\r\n\r\n        const item = new PropertyView({\r\n            name: config.name,\r\n            template: this.prop(\"propertyTemplateName\"),\r\n            ...config,\r\n            host: this\r\n        });\r\n        \r\n\r\n        this.properties[config.name] = item;\r\n\r\n        return item;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async beginEditWorkAsync(value: TObj) {\r\n\r\n        if (!this.value)\r\n            this.value = <any>{};\r\n\r\n        this.isDirty = true\r\n\r\n        for (let propName in this.properties) {\r\n\r\n            const prop = this.properties[propName];\r\n\r\n            if (prop.value != undefined)\r\n                await prop.editor.beginEditAsync(prop.value);\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clearErrors() {\r\n        for (let propName in this.properties)\r\n            this.properties[propName].error = null;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async validateAsyncWork(force?: boolean) {\r\n\r\n        let isValid = true;\r\n\r\n        const curValue = this.editValue;\r\n\r\n        for (let propName in this.properties) {\r\n\r\n            const prop = this.properties[propName];\r\n\r\n            if (!await prop.validateAsync(curValue, force)) {\r\n                this.isValid = false;\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected createProxy() {\r\n\r\n        this._proxy = <any>{};\r\n\r\n        this.content.clear();\r\n\r\n        for (let propName in this.properties) {\r\n\r\n            const curProp = this.properties[propName];\r\n\r\n            curProp.prop(\"value\").subscribe((value, oldValue) =>\r\n                this.onPropertyValueChanged(propName, value as any, oldValue as any));\r\n\r\n            curProp.prop(\"isValid\").subscribe(value => {\r\n\r\n                if (!value)\r\n                    this.isValid = false;\r\n            });\r\n\r\n            curProp.prop(\"isDirty\").subscribe(value => {\r\n\r\n                if (value)\r\n                    this.isDirty = true;\r\n            });\r\n\r\n            this.content.add(curProp);\r\n\r\n            Object.defineProperty(this._proxy, propName, {\r\n                enumerable: true,\r\n                get: () => curProp.value,\r\n                set: value => curProp.value = value\r\n            })\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    activateAsync(): Promise<void> {\r\n\r\n        if (this.defaultProperty)\r\n            return this.editor(this.defaultProperty).activateAsync();\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async loadAsyncWork() {\r\n\r\n        const awaiters: Promise<void>[] = [];\r\n\r\n        for (let propName in this.properties)\r\n            awaiters.push(this.properties[propName].loadAsync());\r\n\r\n        await Promise.all(awaiters);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    clear() {\r\n\r\n        this._isUpdating++;\r\n\r\n        try {\r\n\r\n            for (let propName in this.properties)\r\n                this.property(propName).clear();\r\n        }\r\n        finally {\r\n            this._isUpdating--;\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: TObj): TObj {\r\n        return undefined;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async commitAsyncWork(force?: boolean) {\r\n\r\n        let isChanged = false;\r\n\r\n        let isValid = true;\r\n\r\n        if (!this.value)\r\n            this.value = {} as TObj;\r\n\r\n        for (let propName in this.properties) {\r\n\r\n            const commitResult = await this.commitPropertyAsync(propName, false);\r\n\r\n            if (!commitResult.isValid)\r\n                isValid = false;\r\n\r\n            if (!commitResult.isChanged)\r\n                isChanged = true;\r\n        }\r\n\r\n        if (isValid) {\r\n\r\n            if (isChanged)\r\n                this.onValueChanged(this.value);\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async commitPropertyAsync(propName: keyof TObj, validate: boolean) {\r\n\r\n        const result: ICommitPropertyResult = {\r\n            isValid: true,\r\n            isChanged: false\r\n        };\r\n\r\n        const prop = this.property(propName);\r\n\r\n        if (validate && !await prop.validateAsync(this.editValue, false))\r\n            result.isValid = false;\r\n\r\n        else if (!await prop.editor.commitAsync())\r\n            result.isValid = false;\r\n\r\n        else {\r\n\r\n            if (!equals(prop.value, this.value[propName])) {\r\n                this.value[propName] = prop.value;\r\n                result.isChanged = true;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    editor<TKey extends keyof TObj>(propName: TKey): IEditor<TObj[TKey], any> {\r\n        return this.properties[propName].editor;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    property<TKey extends keyof TObj>(propName: TKey): PropertyView<TObj[TKey]> {\r\n        return this.properties[propName];\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async onPropertyValueChanged<TKey extends keyof TObj>(propName: TKey, value: TObj[TKey], oldValue: TObj[TKey]) {\r\n\r\n        this._needValidation = true;\r\n\r\n        if (this._isUpdating || this._isEditing) {\r\n\r\n            this._changesCount++;\r\n            return;\r\n        }\r\n\r\n        if (this.commitMode == \"onchange\") {\r\n\r\n            const commitResult = await this.commitPropertyAsync(propName as any, true);\r\n            if (commitResult.isChanged) {\r\n                this._needValidation = true;\r\n                this.isDirty = true;\r\n            }\r\n        }\r\n        else\r\n            await this.notifyEditValueChangedAsync();\r\n\r\n        if (this._onPropertyChanged)\r\n            this._onPropertyChanged(propName, value, oldValue, this._proxy as TObj);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: TObj) {\r\n\r\n        if (this._isUpdating)\r\n            return;\r\n\r\n        this._isUpdating++;\r\n\r\n        this._changesCount = 0;\r\n\r\n        try {\r\n\r\n            if (isEmpty(value))\r\n                this.clear();\r\n            else {\r\n\r\n                for (let propName in this.properties)\r\n                    this._proxy[propName] = value[propName];\r\n            }\r\n        }\r\n        finally {\r\n            this._isUpdating--;\r\n        }\r\n\r\n        if (this._changesCount > 0)\r\n            this.notifyEditValueChangedAsync();\r\n\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    get editValue(): TObj {\r\n        return this._proxy;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    properties: PropertiesOf<TObj> = <any>{};\r\n\r\n    defaultProperty: keyof TObj = null;\r\n\r\n    propertyTemplateName = \"PropertyView\";\r\n\r\n    emptyView: View = null;\r\n\r\n    readonly content: IObservableList<PropertyView<any>> = observableListOf();\r\n}\r\n\r\nregisterType(ObjectEditor, \"ObjectEditor\");","﻿import { setEnumerable } from \"../../Templating/Functions\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\nimport \"Templates/Attach.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\ndeclare var Quill: any;\r\n\r\nexport interface IRichTextEditorConfig extends IBaseTextEditorConfig<string> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class RichTextEditor extends BaseTextEditor<string> implements IHTMLAttach {\r\n\r\n    constructor(config?: IRichTextEditorConfig) {\r\n\r\n        super({ template: \"Attach\", ...config });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attach(element: HTMLElement): void {\r\n\r\n        this.editor = new Quill(element, {\r\n            theme: \"snow\",\r\n        });\r\n\r\n        this.editor.root.innerHTML = this.value;\r\n\r\n        this.editor.on(\"text-change\", () => this.notifyEditValueChangedAsync());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set editValue(value: string) {\r\n        if (this.editor)\r\n            this.editor.root.innerHTML = value;\r\n    }\r\n\r\n    get editValue() {\r\n        if (this.editor)\r\n            return this.editor.root.innerHTML;\r\n        return this.value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    editor: any;\r\n}\r\n\r\nregisterType(RichTextEditor, \"RichTextEditor\");","﻿import { linq } from \"../../Core/Linq\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IEditor } from \"../Abstraction/IEditor\";\r\nimport { NavBar } from \"../Components/NavBar\";\r\nimport { IViewComponentConfig, ViewComponent } from \"../Components/ViewComponent\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport \"Templates/SectionEditor.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ISectionEditorViewConfig<TValue> extends IViewComponentConfig {\r\n\r\n    editor?: IEditor<TValue, any>;\r\n\r\n    title?: Bindable<LocalString>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport interface ISectionEditorConfig<TValue> extends IBaseEditorConfig<TValue> {\r\n\r\n    sections?: ISectionEditorViewConfig<TValue>[];\r\n\r\n}\r\n\r\n/********************************************/\r\n\r\nclass SectionEditorView<TValue> extends ViewComponent {\r\n\r\n    constructor(config?: ISectionEditorViewConfig<TValue>) {\r\n\r\n        super(config);\r\n\r\n        this.bindConfig(\"editor\", config);\r\n\r\n        this.bindConfigString(\"title\", config);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    title: string = null;\r\n\r\n    editor?: IEditor<TValue, any>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class SectionEditor<TValue, TEdit = TValue> extends BaseEditor<TValue, TEdit> {\r\n\r\n    constructor(config?: ISectionEditorConfig<TValue>) {\r\n\r\n        super({ template: \"SectionEditor\", ...config });\r\n\r\n        this.navBar = new NavBar<SectionEditorView<TValue>>({\r\n            styles: [\"tab-view\", \"surface\"],\r\n            itemTemplate: \"TextView\",\r\n            itemBehavoirs: [\"ripple\"],\r\n            selectedItem: this.prop(\"activeSectionName\")\r\n        });\r\n\r\n        if (config) {\r\n            if (config.sections)\r\n                config.sections.forEach(a => this.addSection(a));\r\n        }\r\n\r\n        if (this.sections.count > 0)\r\n            this.activeSectionName = this.sections.get(0).name;\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async loadAsyncWork() {\r\n\r\n        for (let section of this.sections) {\r\n            if (section.editor)\r\n                await section.editor.loadAsync();\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async beginEditWorkAsync(value: TValue) {\r\n\r\n        for (let section of this.sections) {\r\n            if (section.editor)\r\n                await section.editor.beginEditAsync(value);\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async validateAsyncWork(force?) {\r\n\r\n        let isValid = true;\r\n\r\n        for (let section of this.sections) {\r\n            if (section.editor)\r\n                if (!await section.editor.validateAsync(force)) {\r\n                    isValid = false;\r\n                    this.activeSectionName = section.name;\r\n                }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected async commitAsyncWork(force?) {\r\n\r\n        let isValid = true;\r\n\r\n        for (let section of this.sections) {\r\n            if (section.editor)\r\n                if (!await section.editor.commitAsync(force))\r\n                    isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    /********************************************/\r\n\r\n    getSection(name: string) {\r\n\r\n        return linq(this.sections).first(a => a.name == name);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    addSection(config: ISectionEditorViewConfig<TValue>) {\r\n        const item = new SectionEditorView(config);\r\n\r\n        this.sections.add(item);\r\n\r\n        this.navBar.addItem({\r\n            text: item.prop(\"title\"),\r\n            name: item.name,\r\n            content: item\r\n        });\r\n\r\n        return item;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    readonly sections: IObservableList<SectionEditorView<TValue>> = observableListOf();\r\n\r\n    readonly navBar: NavBar<SectionEditorView<TValue>>;\r\n\r\n    activeSectionName: string = null;\r\n}\r\n\r\n\r\nregisterType(SectionEditorView, \"SectionEditorView\");\r\n\r\nregisterType(SectionEditor, \"SectionEditor\");","﻿import { IAsyncEditor } from \"../Abstraction/IAsyncEditor\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { SelectSingleItemActivity } from \"../Activities/SelectSingleItemActivity\";\r\nimport { ActionView } from \"../Components/ActionView\";\r\nimport { Actions } from \"../Helpers/Actions\";\r\nimport { BasePicker, IBasePickerConfig } from \"./BasePicker\";\r\nimport \"Templates/SingleItemPicker.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ISingleItemPickerConfig<TItem, TValue, TFilter, TEdit> extends IBasePickerConfig<TItem, TValue, TValue, TFilter, TEdit> {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class SingleItemPicker<TItem, TValue, TFilter = any, TEdit = TItem> extends BasePicker<TItem, TValue, TValue, TFilter, TEdit> {\r\n\r\n    constructor(config?: ISingleItemPickerConfig<TItem, TValue, TFilter, TEdit>) {\r\n\r\n        super(config);\r\n\r\n        this.clearAction = ActionView.fromActionIcon({\r\n            name: \"clear\",\r\n            icon: \"fas fa-times\",\r\n            displayName: \"clear\",\r\n            executeAsync: () => Promise.resolve(this.clear())\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async selectAsync() {\r\n\r\n        let mustRefresh = false;\r\n\r\n        if (this.selector == null) {\r\n            this.selector = new SelectSingleItemActivity<TItem, TValue, TFilter, TEdit>({\r\n                itemsSource: this.itemsSource,\r\n                createItemEditor: () => this.createItemEditor(),\r\n                createItemContentView: item => this.createItemListView(item),\r\n                pageSize: this.pageSize,\r\n                addLabel: this.addLabel,\r\n                tooltip: this.pickLabel,\r\n                canAdd: this.canAdd\r\n            });\r\n\r\n            this.selector.filters = this.filters;\r\n        }\r\n        else\r\n            mustRefresh = true;\r\n\r\n        this.selector.selectedValue = this.editValue;\r\n\r\n        if (mustRefresh)\r\n            await this.selector.refreshAsync();\r\n\r\n        const result = await (await Actions.loadPageAsync(this.selector)).result;\r\n\r\n        if (result != null)\r\n            this.editValue = this.itemsSource.getItemValue(result);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemEditor(): IItemEditor<TItem, TEdit> | IAsyncEditor<TItem, TEdit> {\r\n\r\n        throw \"Not Supported\";\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected async updateViewAsync() {\r\n\r\n        if (this.status == \"loading\")\r\n            return;\r\n\r\n        if (this.editValue) {\r\n\r\n            this.status = \"loading\";\r\n            try {\r\n                const item = await this.itemsSource.getItemByValueAsync(this.editValue);\r\n                this.contentView = this.createItemView(item);\r\n            }\r\n            finally {\r\n                this.status = \"loaded\";\r\n            }\r\n        }\r\n        else\r\n            this.contentView = null;\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    selector: SelectSingleItemActivity<TItem, TValue, TFilter, TEdit> = null;\r\n\r\n    contentView: IView = null;\r\n\r\n    clearAction: ActionView = null;\r\n}\r\n\r\n\r\nregisterType(SingleItemPicker, \"SingleItemPicker\");","﻿import { linq } from \"../../Core/Linq\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { IObservableList } from \"../../Templating/Abstraction/IObservableList\";\r\nimport { CatalogTemplate } from \"../../Templating/Abstraction/ITemplateProvider\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { IHTMLAttach } from \"../Abstraction/IHTMLAttach\";\r\nimport { ItemsSource } from \"../Items/ItemsSource\";\r\nimport { BaseEditor, IBaseEditorConfig } from \"./BaseEditor\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { PopUpEditor } from \"./PopupEditor\";\r\nimport { ISelectableItemView } from \"../Abstraction/ISelectableItemView\";\r\nimport \"Templates/ItemSelector.html\";\r\nimport {  SelectableItemView } from \"../Components/SelectableItemView\";\r\nimport { Item } from \"../Items/Item\";\r\n\r\nexport interface IMultiItemSelectorConfig<TItem, TValue> extends IBaseEditorConfig<TValue[]> {\r\n\r\n    itemsSource?: Bindable<ItemsSource<TItem, TValue>>;\r\n\r\n    items?: TItem[];\r\n\r\n    createItemView?: (item: TItem) => ISelectableItemView<TValue>;\r\n\r\n    placeholder?: Bindable<LocalString>;\r\n\r\n    itemTemplate?: CatalogTemplate<ISelectableItemView<TValue>>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class MultiItemSelector<TItem, TValue> extends BaseEditor<TValue[]> implements IHTMLAttach {\r\n\r\n    private _element: HTMLElement\r\n\r\n    constructor(config?: IMultiItemSelectorConfig<TItem, TValue>) {\r\n\r\n        super({ template: \"SelectEditor\", ...config });\r\n\r\n        this.bindConfig(\"itemsSource\", config);\r\n\r\n        this.bindConfig(\"itemTemplate\", config);\r\n\r\n        this.bindConfigString(\"placeholder\", config);\r\n\r\n        if (config?.createItemView)\r\n            this.createItemViewWork = config?.createItemView;\r\n\r\n        if (config?.items) {\r\n\r\n            config.items.forEach(a => this.items.add(this.createItemView(a)));\r\n\r\n            this.status = \"loaded\";\r\n        }\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    attach(element: HTMLElement) {\r\n\r\n        this._element = element;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    async selectAsync() {\r\n        let editor = new PopUpEditor({\r\n\r\n            editor: new MultiItemSelector({\r\n                template: \"MultiItemSelectorList\",\r\n                itemsSource: this.itemsSource,\r\n                styles: [\"no-padding-items-h\"]\r\n            }),\r\n            saveOnCommit: true,\r\n            saveLabel: \"select\",\r\n            closeLabel: \"cancel\",\r\n            title: \"select-an-item\",\r\n            styles: [\"\"]\r\n        });\r\n\r\n        const result = await editor.editAsync(this.value)\r\n        if (result !== null)\r\n            this.editValue = result;\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    findItemByValue(value: TValue) {\r\n\r\n        if (this.itemsSource)\r\n            return linq(this.items).first(a => this.itemsSource.equals(a.item, value));\r\n        return linq(this.items).first(a => a.item == value);\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    set editValue(value: TValue[]) {\r\n\r\n        for (let item of this.items) {\r\n            item.isSelected = value && linq(value).any(a=> Item.getValue(a) == Item.getValue(item.item));\r\n        }\r\n    }\r\n\r\n    get editValue(): TValue[] {\r\n\r\n        return linq(this.items).where(a => a.isSelected).select(a => a.item).toArray();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async loadAsyncWork() {\r\n\r\n        if (this.itemsSource) {\r\n\r\n            this.items.clear();\r\n\r\n            const items = await this.itemsSource.getItemsAsync(this.itemsSource.getFilter());\r\n            if (items)\r\n                items.forEach(a => this.items.add(this.createItemView(a)));\r\n        }\r\n\r\n        this.isDirty = true;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected createItemViewWork(item: TItem): ISelectableItemView<TValue> {\r\n\r\n        if (this.itemsSource)\r\n            return new SelectableItemView({\r\n                item: this.itemsSource.getItemValue(item),\r\n                content: this.itemsSource.getItemText(item),\r\n                template: this.itemTemplate\r\n            });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createItemView(item: TItem) {\r\n\r\n        const itemView = this.createItemViewWork(item);\r\n\r\n        itemView.prop(\"isSelected\").subscribe(value => {\r\n\r\n            if (value)\r\n                this.notifyEditValueChangedAsync();\r\n        });\r\n\r\n        return itemView;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    itemTemplate: CatalogTemplate<ISelectableItemView<TValue>> = \"SelectableItemView\";\r\n\r\n    placeholder: string = null;\r\n\r\n    itemsSource: ItemsSource<TItem, TValue> = null;\r\n\r\n    readonly items: IObservableList<ISelectableItemView<TValue>> = observableListOf();\r\n}\r\n\r\nregisterType(MultiItemSelector, \"MultiItemSelector\");","﻿import { LocalString, StringUsage } from \"../../Core/Types/DynamicString\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\nimport \"Templates/TextEditor.html\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\n\r\nexport interface ITextEditorConfig extends IBaseTextEditorConfig<string> {\r\n\r\n    placeholder?: Bindable<LocalString>;\r\n\r\n    lineCount?: Bindable<number>;\r\n\r\n    maxLength?: Bindable<number>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class TextEditor extends BaseTextEditor<string> {\r\n\r\n    constructor(config?: ITextEditorConfig) {\r\n\r\n        super({ template: \"TextEditor\", ...config });\r\n\r\n        this.bindConfigString(\"placeholder\", config, StringUsage.Tooltip);\r\n\r\n        this.bindConfig(\"lineCount\", config);\r\n\r\n        this.bindConfig(\"maxLength\", config);\r\n\r\n        this.bindConfig(\"trackMode\", config);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    placeholder: string = null;\r\n\r\n    lineCount: number = 1;\r\n\r\n    maxLength: number = null;\r\n}\r\n\r\nregisterType(TextEditor, \"TextEditor\");","﻿import { TimeSpan } from \"../../Core/Types/TimeSpan\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { Bindable } from \"../../Templating/Properties\";\r\nimport { BaseTextEditor, IBaseTextEditorConfig } from \"./BaseTextEditor\";\r\n\r\nexport interface ITimeEditorConfig extends IBaseTextEditorConfig<TimeSpan> {\r\n\r\n    placeholder?: Bindable<string>;\r\n}\r\n\r\n/********************************************/\r\n\r\nexport class TimeEditor extends BaseTextEditor<TimeSpan> {\r\n\r\n    constructor(config?: ITimeEditorConfig) {\r\n\r\n        super({ template: \"TimeEditor\", ...config });\r\n\r\n        this.bindConfig(\"placeholder\", config);\r\n\r\n        this.createEditValueProp();\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected valueToEdit(value: TimeSpan): string {\r\n\r\n        return value === null || value === undefined ? \"\" : value.format(\"{hh}:{mm}\");\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    protected editToValue(value: string): TimeSpan {\r\n\r\n        if (value === undefined || value === null)\r\n            return null;\r\n        var parts = value.split(':');\r\n        if (parts.length != 2)\r\n            return null;\r\n        return TimeSpan.fromMinutes(parseInt(parts[0]) * 60 + parseInt(parts[1]));\r\n    }\r\n\r\n    /********************************************/\r\n\r\n    placeholder: string = null;\r\n}\r\n\r\nregisterType(TimeEditor, \"TimeEditor\");","﻿import { Format } from \"../../Core/Helpers/Format\";\r\nimport { IValidationContext, IValidationResult, IValidator } from \"../Abstraction/IValidator\";\r\n\r\nexport namespace Validators {\r\n\r\n    const EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    const PHONE_REGEXP = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/;\r\n\r\n    export var required: IValidator<any, any> = {\r\n        validateAsync: ctx => Promise.resolve({\r\n            isValid: ctx.value != null && ctx.value != \"\" && (!Array.isArray(ctx.value) || ctx.value.length > 0),\r\n            error: Format.message(\"msg-specify-value\", ctx.fieldName)\r\n        } as IValidationResult)\r\n    };\r\n\r\n    /****************************************/\r\n\r\n    export function minValue(value: number): IValidator<number, any> {\r\n        return {\r\n            validateAsync: ctx => Promise.resolve(({\r\n                isValid: ctx.value >= value,\r\n                error: Format.message(\"msg-insert-greater-than\", value.toString())\r\n            }))\r\n        }\r\n    };\r\n\r\n    /****************************************/\r\n\r\n    export function maxValue(value: number): IValidator<number, any> {\r\n        return {\r\n            validateAsync: ctx => Promise.resolve(({\r\n                isValid: ctx.value <= value,\r\n                error: Format.message(\"msg-insert-less-than\", value.toString()),\r\n            }))\r\n        }\r\n    };\r\n\r\n/****************************************/\r\n\r\n   \r\n\r\n    export var integer: IValidator<number, any> = {\r\n        validateAsync: ctx => Promise.resolve(({\r\n            isValid: Math.round(ctx.value) == ctx.value,\r\n            error: Format.message(\"msg-insert-int-number\"),\r\n        }))\r\n    };\r\n\r\n\r\n    /****************************************/\r\n\r\n    export var phone: IValidator<string, any> = {\r\n\r\n        validateAsync: ctx => Promise.resolve(({\r\n            isValid: ctx.value && ctx.value.length >= 9 && PHONE_REGEXP.test(ctx.value.toLowerCase()),\r\n            error: Format.message(\"msg-invalid-phone\", ctx.value)\r\n        }))\r\n\r\n    };\r\n\r\n\r\n\r\n    /****************************************/\r\n\r\n    export var email: IValidator<string, any> = {\r\n\r\n        validateAsync: ctx => Promise.resolve(({\r\n            isValid: ctx.value && EMAIL_REGEXP.test(ctx.value.toLowerCase()),\r\n            error: Format.message(\"msg-invalid-email\", ctx.value)\r\n        }))\r\n\r\n    };\r\n\r\n    /****************************************/\r\n\r\n    export function custom<TValue, TTarget>(validator: (ctx: IValidationContext<TValue, TTarget>) => Promise<IValidationResult>) {\r\n        return {\r\n            validateAsync: async ctx => await validator(ctx)\r\n        }\r\n    };\r\n\r\n}","﻿import { IDictionary } from \"../../Core/Abstraction/IDictionary\";\r\nimport { LocalString } from \"../../Core/Types/DynamicString\";\r\nimport { registerType } from \"../../Core/Utils/ObjectUtils\";\r\nimport { BindableObject } from \"../../Templating/BindableObject\";\r\nimport { observableListOf } from \"../../Templating/ObservableList\";\r\nimport { ActionPriority } from \"../Abstraction/IAction\";\r\nimport { IItemEditor } from \"../Abstraction/IItemEditor\";\r\nimport { IView } from \"../Abstraction/IView\";\r\nimport { IconTextView } from \"../Components/IconTextView\";\r\nimport { ListView } from \"../Components/ListView\";\r\nimport { Panel } from \"../Components/Panel\";\r\nimport { ViewComponent } from \"../Components/ViewComponent\";\r\nimport { BooleanEditor } from \"../Editors/BooleanEditor\";\r\nimport { PopUpEditor } from \"../Editors/PopupEditor\";\r\n\r\n\r\ndeclare global {\r\n\r\n    export interface IServices {\r\n\r\n        permissionManager: PermissionManager;\r\n    }\r\n}\r\n\r\n\r\nexport interface IPermission {\r\n\r\n    name: string;\r\n\r\n    ask(): Promise<boolean>;\r\n\r\n    isGranted(): Promise<boolean>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IPermissionRequest {\r\n\r\n    permission: IPermission;\r\n\r\n    description: LocalString;\r\n\r\n    granted?: boolean;\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\nexport class PermissionRequestItemView extends ViewComponent {\r\n\r\n    constructor(request: IPermissionRequest) {\r\n        super();\r\n\r\n        this.request = request;\r\n\r\n        this.switchView = new BooleanEditor({\r\n            label: this.request.permission.name,\r\n            template: \"Switch\",\r\n            styles: [\"primary\"]\r\n        });\r\n\r\n        this.switchView.beginEditAsync(request.granted);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    request: IPermissionRequest = null;\r\n\r\n    switchView: BooleanEditor = null;\r\n\r\n    isShowInfo: boolean = false;\r\n}\r\n\r\n/****************************************/\r\n\r\nclass PermissionEditor extends BindableObject implements IItemEditor<IPermissionRequest[]> {\r\n\r\n    private _listView: ListView<IPermissionRequest, PermissionRequestItemView> = null;\r\n\r\n    beginEditAsync(item: IPermissionRequest[]) {\r\n\r\n        const panel = new Panel({\r\n            styles: [\"vertical\"]\r\n        });\r\n\r\n\r\n        this._listView = panel.addView(new ListView({\r\n            styles: [\"surface\"],\r\n            items: observableListOf(item),\r\n            isAutoLoad: true,\r\n            createItemView: item => new PermissionRequestItemView(item)\r\n        }));\r\n\r\n        panel.addView(new IconTextView({ text: \"msg-permission-request\", styles: [\"message warning\"] }));\r\n\r\n        this.view = panel;\r\n\r\n        this.value = item;\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    commitAsync(force?: boolean) {\r\n\r\n        for (let item of this._listView.content)\r\n            item.request.granted = item.switchView.editValue;\r\n\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    view: IView = null;\r\n\r\n    value: IPermissionRequest[] = null;\r\n\r\n    readonly isValid: boolean = true;\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class PermissionManager {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async requireAsync(...permissions: IPermissionRequest[]) {\r\n\r\n        let toAsk: IPermissionRequest[] = [];\r\n\r\n        let result: IDictionary<boolean> = {};\r\n\r\n\r\n        for (let perm of permissions) {\r\n            if (!(await perm.permission.isGranted()))\r\n                toAsk.push(perm);\r\n            else {\r\n                result[perm.permission.name] = true;\r\n                perm.granted = true;\r\n            }\r\n        }\r\n\r\n        if (toAsk.length > 0) {\r\n\r\n            const editor = new PopUpEditor<IPermissionRequest[]>({\r\n                editor: new PermissionEditor(),\r\n                saveLabel: \"accept\",\r\n                savePriority: ActionPriority.Evidence,\r\n                title: \"permission-request\",\r\n            });\r\n\r\n            const editResult = await editor.editAsync(toAsk);\r\n\r\n            if (editResult) {\r\n\r\n                for (let item of editResult) {\r\n\r\n                    if (item.granted)\r\n                        item.granted = await item.permission.ask();\r\n\r\n                    result[item.permission.name] = item.granted;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    geolocation: IPermission = {\r\n\r\n        name: \"geolocation\",\r\n\r\n        ask: () => new Promise(res => {\r\n\r\n            function setResult(result: boolean) {\r\n                localStorage.setItem(\"geolocation\", result ? \"granted\" : \"denied\");\r\n                res(result);\r\n            }\r\n\r\n            navigator.geolocation.getCurrentPosition(\r\n                () => setResult(true),\r\n                error => setResult(error.code != error.PERMISSION_DENIED)\r\n                , { maximumAge: Infinity, timeout: 2000 });\r\n\r\n        }),\r\n\r\n        isGranted: async () => {\r\n            if (\"permissions\" in navigator)\r\n                return (await navigator.permissions.query({ name: \"geolocation\" })).state == \"granted\";\r\n\r\n            return localStorage.getItem(\"geolocation\") == \"granted\";\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    notification: IPermission = {\r\n\r\n        name: \"notification\",\r\n\r\n        ask: () => new Promise(res => {\r\n\r\n            if (!(\"Notification\" in window)) {\r\n                console.warn(\"Notification not supported\");\r\n                res(false);\r\n            }\r\n\r\n            Notification.requestPermission(p => {\r\n                res(p == \"granted\");\r\n            });\r\n        }),\r\n\r\n        isGranted: () => Promise.resolve(!(\"Notification\" in window) ? true : Notification.permission == \"granted\")\r\n    }\r\n}\r\n\r\nregisterType(PermissionRequestItemView, \"PermissionRequestItemView\");","﻿import { IOperation, IOperationConfig, IOperationManager, IOperationProgress, isString, LocalString, OperationType, event } from \"../WebApp\";\r\n\r\nclass BaseOperation implements IOperation {\r\n\r\n    private _progress: IOperationProgress;\r\n    private _type: OperationType;\r\n\r\n    /****************************************/\r\n\r\n    constructor(config: IOperationConfig) {\r\n\r\n        if (!config.type)\r\n            this._type = OperationType.Global;\r\n        else\r\n            this._type = config.type;\r\n\r\n        this.parentOperation = config.parentOperation;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    end(): void {\r\n        Operation.end(this);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get type(): OperationType {\r\n        return this._type;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get progress(): IOperationProgress {\r\n        return this._progress;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    set progress(value: IOperationProgress) {\r\n\r\n        this._progress = value;\r\n\r\n        if (this._progress) {\r\n\r\n            console.log(this.getProgressDescription(this._progress));\r\n\r\n            if (this._progress.message)\r\n                this.message = this._progress.message;\r\n\r\n            Operation.onProgress.raise(this, { operation: this, progress: value });\r\n        }\r\n        else\r\n            this.message = undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addSubOperation(op: IOperation) {\r\n\r\n    }\r\n    /****************************************/\r\n\r\n    removeSubOperation(op: IOperation) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getProgressDescription(value: IOperationProgress): string {\r\n\r\n        let msg = \"Progress (\" + this.message + \"): \";\r\n\r\n        if (value.message)\r\n            msg += \"'\" + value.message + \"'\";\r\n\r\n        if (value.current != null && value.totCount != null)\r\n            msg += \" - \" + value.current + \"/\" + value.totCount + \" (\" + Math.round(100 / value.totCount * value.current) + \"%)\";\r\n        else if (value.current != null)\r\n            msg += value.current;\r\n\r\n        return msg;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    message: LocalString = null;\r\n\r\n    parentOperation: IOperation = null;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class BaseOperationManager implements IOperationManager {\r\n\r\n    private _oprations: IOperation[] = [];\r\n\r\n    progress(progress: IOperationProgress | string) {\r\n\r\n        if (isString(progress))\r\n            progress = <IOperationProgress>{ message: progress };\r\n\r\n        if (this.current)\r\n            this.current.progress = <IOperationProgress>progress;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    begin(configOrMessge: IOperationConfig | string): IOperation {\r\n\r\n        if (isString(configOrMessge))\r\n            configOrMessge = <IOperationProgress>{ message: configOrMessge };\r\n\r\n        let operation = new BaseOperation(configOrMessge);\r\n\r\n        console.group(\"Begin operation: \", $string(<string>operation.message ?? \"\"));\r\n\r\n        operation.progress = configOrMessge;\r\n\r\n        if (operation.parentOperation === undefined)\r\n            operation.parentOperation = this.current;\r\n\r\n        this._oprations.push(operation);\r\n\r\n        if (!operation.parentOperation) {\r\n\r\n            if (operation.type == OperationType.Global) {\r\n\r\n            }\r\n        }\r\n        else\r\n            operation.parentOperation.addSubOperation(operation);\r\n\r\n        this.onBegin.raise(this, operation);\r\n\r\n        return operation;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    end(operation: IOperation) {\r\n\r\n        console.groupEnd();\r\n\r\n        console.log(\"End operation: \", $string(<string>operation.message ?? \"\"));\r\n\r\n        const index = this._oprations.indexOf(operation);\r\n        this._oprations.splice(index, 1);\r\n\r\n        if (operation.parentOperation)\r\n            operation.parentOperation.removeSubOperation(operation);\r\n        else {\r\n            if (operation.type == OperationType.Global) {\r\n            }\r\n        }\r\n        this.onEnd.raise(this, operation);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): IOperation {\r\n        return this._oprations.length > 0 ? this._oprations[this._oprations.length - 1] : null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get operations(): Iterable<IOperation> {\r\n        return this._oprations;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readonly onBegin = event<IOperation>();\r\n    readonly onEnd = event<IOperation>();\r\n    readonly onProgress = event<{ operation: IOperation, progress: IOperationProgress }>();\r\n}\r\n\r\n/****************************************/\r\n\r\n export var Operation: IOperationManager = new BaseOperationManager();\r\n","﻿/****************************************/\r\n/* IDataAdapter\r\n/****************************************/\r\n\r\nimport { delayAsync } from \"../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts\";\r\nimport { IDictionary, linq } from \"../WebApp\";\r\nimport { Operation } from \"./Operation\";\r\nimport { CsvSplitEnumerator, SplitEnumerator } from \"./SplitEnumerator\";\r\n\r\ntype TextParser<T> = (value: string) => T;\r\n\r\ntype TextFormatter<T> = (value: T) => string;\r\n\r\ninterface IDaColumnAnalisys {\r\n    values: IDictionary<number>;\r\n    booleanCount: number;\r\n    stringCount: number;\r\n    emptyCount: number;\r\n    numberCount: number;\r\n    dateCount: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaSeriePoint {\r\n    x: any;\r\n    y: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaSerie {\r\n    name: string;\r\n    values: IDaSeriePoint[];\r\n    colId: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaGroup {\r\n    name: string;\r\n    colId?: string;\r\n    groups?: IDictionary<IDaGroup>;\r\n    series?: IDictionary<IDaSerie>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaMainGroup extends IDaGroup {\r\n}\r\n\r\n/****************************************/\r\n\r\nexport type IDaTable = IDictionary<any>[];\r\n\r\n/****************************************/\r\n\r\nexport enum DaColumnType {\r\n    Exclude,\r\n    XAxis,\r\n    Serie,\r\n    Group\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaColumnFilter<T> {\r\n\r\n    include?: T[];\r\n    exclude?: T[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaColumn<T> {\r\n\r\n    id: string;\r\n    type: DaColumnType;\r\n    name?: string;\r\n    filter?: IDaColumnFilter<T>;\r\n    parser?: TextParser<T>;\r\n    formatter?: TextFormatter<T>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDaOptions {\r\n    rowsCount?: number;\r\n    columns?: IDaColumn<any>[];\r\n    source?: () => Promise<string>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDataAdapter<TOptions extends IDaOptions> {\r\n\r\n    loadGroupAsync(text: string, options: TOptions): Promise<IDaMainGroup>;\r\n\r\n    loadTableAsync(text: string, options: ITextTableDaOptions, maxItems?: number): Promise<IDaTable>\r\n\r\n    analyzeAsync(text: string, options?: TOptions, maxRows?: number): Promise<TOptions>;\r\n}\r\n\r\n/****************************************/\r\n\r\nabstract class BaseDataAdapter<TOptions extends IDaOptions> implements IDataAdapter<TOptions> {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    abstract loadGroupAsync(text: string, options: TOptions): Promise<IDaMainGroup>;\r\n\r\n    abstract loadTableAsync(text: string, options: TOptions, maxItems?: number): Promise<IDaTable>;\r\n\r\n    abstract analyzeAsync(text: string, options?: TOptions, maxRows?: number): Promise<TOptions>;\r\n}\r\n\r\n/****************************************/\r\n/* TextTableDataAdapter\r\n/****************************************/\r\n\r\nexport interface ITextTableDaOptions extends IDaOptions {\r\n\r\n    hasHeader?: boolean;\r\n    columnSeparator?: string;\r\n    rowSeparator?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class TextTableDataAdapter extends BaseDataAdapter<ITextTableDaOptions> {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createIdentifier(value: string): string {\r\n        let state = 0;\r\n        let result = \"\";\r\n        for (let i = 0; i < value.length; i++) {\r\n            const c = value[i];\r\n            switch (state) {\r\n                case 0:\r\n                    result += c.toLowerCase();\r\n                    state = 1;\r\n                    break;\r\n                case 1:\r\n                    if (c == \" \" || c == \"-\" || c == \"_\")\r\n                        state = 2;\r\n                    else\r\n                        result += c;\r\n                    break;\r\n                case 2:\r\n                    result += c.toUpperCase();\r\n                    state = 1;\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected extractHeader(text: string, options: ITextTableDaOptions) {\r\n\r\n        const firstRow = linq(new SplitEnumerator(text, options.rowSeparator)).first();\r\n        const cols = linq(new CsvSplitEnumerator(firstRow, options.columnSeparator)).toArray();\r\n\r\n        let headers: string[];\r\n\r\n        if (options.hasHeader !== false) {\r\n\r\n            const rowAnal: IDaColumnAnalisys[] = [];\r\n\r\n            this.analyzeRow(cols, rowAnal);\r\n\r\n            const stringCount = linq(rowAnal).sum(a => a.stringCount);\r\n            const emptyCount = linq(rowAnal).sum(a => a.emptyCount);\r\n\r\n            if (stringCount > 0 && stringCount + emptyCount == cols.length) {\r\n                options.hasHeader = true;\r\n\r\n                headers = linq(cols).select((a, i) => {\r\n                    if (a == \"\")\r\n                        return \"col\" + i;\r\n                    return a;\r\n                }).toArray();\r\n            }\r\n        }\r\n\r\n        if (!headers) {\r\n            options.hasHeader = false;\r\n\r\n            headers = linq(cols).select((a, i) => \"col\" + i).toArray();\r\n        }\r\n        if (!options.columns)\r\n            options.columns = linq(headers).select(a => ({ id: this.createIdentifier(a), name: a, type: DaColumnType.Exclude })).toArray();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected extractRowSeparator(text: string, options: ITextTableDaOptions) {\r\n        if (options.rowSeparator)\r\n            return;\r\n\r\n        const items = [\"\\r\\n\", \"\\n\"];\r\n\r\n        for (var item of items) {\r\n            if (text.indexOf(item) != -1) {\r\n                options.rowSeparator = item;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected extractColumnSeparator(text: string, options: ITextTableDaOptions) {\r\n\r\n        if (options.columnSeparator)\r\n            return;\r\n\r\n        const items = [\"\\t\", \";\", \",\", \" \"];\r\n\r\n        const stats = {};\r\n\r\n        const rows = linq(new SplitEnumerator(text, options.rowSeparator)).take(10);\r\n\r\n        for (let row of rows) {\r\n\r\n            if (row.trim().length == 0)\r\n                continue;\r\n\r\n            for (let item of items) {\r\n\r\n                if (stats[item] === false)\r\n                    continue;\r\n\r\n                const cols = linq(new CsvSplitEnumerator(row, item)).count();\r\n\r\n                if (cols > 1 && !(item in stats))\r\n                    stats[item] = cols;\r\n                else {\r\n                    if (stats[item] != cols)\r\n                        stats[item] = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var key in stats) {\r\n            if (stats[key] !== false) {\r\n                options.columnSeparator = key;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected analyzeRow(cols: string[], result: IDaColumnAnalisys[]) {\r\n\r\n        if (result.length == 0) {\r\n            for (let i = 0; i < cols.length; i++) {\r\n                result.push({\r\n                    values: {},\r\n                    booleanCount: 0,\r\n                    dateCount: 0,\r\n                    emptyCount: 0,\r\n                    numberCount: 0,\r\n                    stringCount: 0\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < cols.length; i++)\r\n            this.analyzeColumn(cols[i], result[i]);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected analyzeColumn(value: string, result: IDaColumnAnalisys) {\r\n\r\n        if (!result.values || Object.keys(result.values).length < 150)\r\n            value in result.values ? result.values[value]++ : result.values[value] = 1;\r\n\r\n        if (value == null || value.length == 0 || value.trim().length == 0)\r\n            result.emptyCount++;\r\n\r\n        else if (!isNaN(<any>value))\r\n            result.numberCount++;\r\n\r\n        else if (Date.parse(value))\r\n            result.dateCount++;\r\n\r\n        else if (value == \"true\" || value == \"false\")\r\n            result.booleanCount++;\r\n        else\r\n            result.stringCount++;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParser(anal: IDaColumnAnalisys): TextParser<any> {\r\n\r\n        if (anal.numberCount > 0 && anal.stringCount == 0)\r\n            return a => isNaN(<any>a) ? null : parseFloat(a);\r\n\r\n        if (anal.booleanCount > 0 && anal.stringCount == 0)\r\n            return a => a == \"true\";\r\n\r\n        if (anal.dateCount > 0 && anal.stringCount == 0)\r\n            return a => !a ? null : new Date(a);\r\n\r\n        if (anal.stringCount > 0)\r\n            return a => {\r\n                if (!a)\r\n                    return \"\";\r\n                if (a.startsWith(\"\\\"\") && a.endsWith(\"\\\"\"))\r\n                    return a.substr(1, a.length - 2);\r\n                return a;\r\n            }\r\n\r\n        return a => null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async analyzeAsync(text: string, options?: ITextTableDaOptions, maxRows?: number): Promise<ITextTableDaOptions> {\r\n\r\n        if (!options)\r\n            options = {};\r\n\r\n        //Separators\r\n        this.extractRowSeparator(text, options);\r\n        this.extractColumnSeparator(text, options);\r\n\r\n        //Header\r\n        this.extractHeader(text, options);\r\n\r\n        //Rows\r\n        let rows = linq(new SplitEnumerator(text, options.rowSeparator));\r\n        if (maxRows)\r\n            rows = rows.take(maxRows);\r\n\r\n        if (options.hasHeader)\r\n            rows = rows.skip(1);\r\n\r\n        let curOp = Operation.begin(\"Analazing rows...\");\r\n\r\n        //col analysis\r\n        const colAnalysis: IDaColumnAnalisys[] = [];\r\n        let rowCount = 0;\r\n\r\n        await rows.foreachAsync(async row => {\r\n            rowCount++;\r\n            this.analyzeRow(linq(new CsvSplitEnumerator(row, options.columnSeparator)).toArray(), colAnalysis);\r\n            if (rowCount % 200 == 0) {\r\n                curOp.progress = { current: rowCount };\r\n                await delayAsync(0);\r\n            }\r\n        });\r\n\r\n        options.rowsCount = rowCount;\r\n\r\n        curOp.end();\r\n\r\n        const columns = linq(options.columns);\r\n\r\n        //Parser\r\n        colAnalysis.forEach((col, i) => {\r\n            if (!options.columns[i].parser)\r\n                options.columns[i].parser = this.createParser(col);\r\n        });\r\n\r\n        //X-axis\r\n        if (!columns.any(a => a.type == DaColumnType.XAxis))\r\n            columns.first(a => a.type == DaColumnType.Exclude).type = DaColumnType.XAxis;\r\n\r\n        //Y-axis\r\n        if (!columns.any(a => a.type == DaColumnType.Serie)) {\r\n            colAnalysis.forEach((col, i) => {\r\n\r\n                if (col.numberCount > 0 && col.stringCount == 0)\r\n                    options.columns[i].type = DaColumnType.Serie;\r\n            });\r\n        }\r\n\r\n        //groups\r\n        if (!columns.any(a => a.type == DaColumnType.Group)) {\r\n\r\n            colAnalysis.forEach((col, i) => {\r\n\r\n                if (col.stringCount > 0 && col.emptyCount == 0) {\r\n                    var values = linq(col.values);\r\n                    if (values.count() > 1 && values.any(a => a.value > 1))\r\n                        options.columns[i].type = DaColumnType.Group;\r\n                }\r\n            });\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    async loadTableAsync(text: string, options: ITextTableDaOptions, maxItems?: number): Promise<IDaTable> {\r\n\r\n        var result: IDaTable = [];\r\n\r\n        var rows = linq(new SplitEnumerator(text, options.rowSeparator));\r\n\r\n        if (options.hasHeader)\r\n            rows = rows.skip(1);\r\n\r\n        for (var row of rows) {\r\n            const cols = linq(new CsvSplitEnumerator(row, options.columnSeparator)).toArray();\r\n\r\n            const item: IDictionary<string> = {};\r\n\r\n            for (let i = 0; i < cols.length; i++) {\r\n                const col = options.columns[i];\r\n                if (col.type == DaColumnType.Exclude)\r\n                    continue;\r\n                item[col.id] = col.parser(cols[i]);\r\n            }\r\n\r\n            result.push(item);\r\n\r\n            if (maxItems && result.length >= maxItems)\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadGroupAsync(text: string, options: ITextTableDaOptions): Promise<IDaMainGroup> {\r\n\r\n        var result: IDaMainGroup = { name: $string(\"$(da-main-group)\") };\r\n        var rows = linq(new SplitEnumerator(text, options.rowSeparator));\r\n\r\n        if (options.hasHeader)\r\n            rows = rows.skip(1);\r\n\r\n        const xColumnIndex = linq(options.columns).where(a => a.type == DaColumnType.XAxis).select((a, i) => i).first();\r\n\r\n        let curOp = Operation.begin(\"Loading groups...\");\r\n        let rowCount = 0;\r\n        let chunkCount;\r\n\r\n        await rows.foreachAsync(async row => {\r\n\r\n            const values = linq(new CsvSplitEnumerator(row, options.columnSeparator)).toArray();\r\n            const xValue = options.columns[xColumnIndex].parser(values[xColumnIndex]);\r\n\r\n            const item: IDictionary<string> = {};\r\n\r\n            let curGroup: IDaGroup = result;\r\n\r\n            for (let i = 0; i < values.length; i++) {\r\n                const col = options.columns[i];\r\n\r\n                if (col.type == DaColumnType.Exclude || col.type == DaColumnType.XAxis)\r\n                    continue;\r\n\r\n                let value = col.parser(values[i]);\r\n\r\n                if (col.type == DaColumnType.Group) {\r\n\r\n                    if (!curGroup.groups)\r\n                        curGroup.groups = {};\r\n\r\n                    if (value === \"\")\r\n                        value = $string(\"<$(empty)>\");\r\n\r\n                    if (!(value in curGroup.groups))\r\n                        curGroup.groups[value] = { name: value, colId: col.id };\r\n\r\n                    curGroup = curGroup.groups[value];\r\n                }\r\n\r\n                else if (col.type == DaColumnType.Serie) {\r\n                    if (!curGroup.series)\r\n                        curGroup.series = {};\r\n\r\n                    if (!(col.id in curGroup.series))\r\n                        curGroup.series[col.id] = { name: col.name, colId: col.id, values: [] };\r\n\r\n                    curGroup.series[col.id].values.push({ x: xValue, y: value });\r\n                }\r\n            }\r\n\r\n            rowCount++;\r\n\r\n            if (rowCount % 200 == 0) {\r\n                curOp.progress = { current: rowCount, totCount: options.rowsCount };\r\n                await delayAsync(0);\r\n            }\r\n        });\r\n\r\n        options.rowsCount = rowCount\r\n\r\n        curOp.end();\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n/* JsonDataAdapter\r\n/****************************************/\r\n\r\nexport interface JsonDaOptions extends IDaOptions {\r\n\r\n    dataPath?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class JsonDataAdapter extends BaseDataAdapter<JsonDaOptions> {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadGroupAsync(text: string, options: JsonDaOptions): Promise<IDaMainGroup> {\r\n\r\n        return null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadTableAsync(text: string, options: JsonDaOptions, maxItems?: number): Promise<IDaTable> {\r\n\r\n        return null;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async analyzeAsync(text: string, options?: JsonDaOptions, maxRows?: number): Promise<JsonDaOptions> {\r\n        return null;\r\n    }\r\n\r\n}","﻿import { IEnumerator } from \"../WebApp\";\r\n\r\nexport class SplitEnumerator implements IEnumerator<string> {\r\n    protected _separator: string;\r\n    protected _value: string;\r\n    protected _startIndex: number;\r\n    protected _curIndex: number;\r\n    protected _currentStartIndex: number;\r\n    protected _current: string;\r\n\r\n    constructor(value: string, separator: string, startIndex = 0) {\r\n        this._value = value;\r\n        this._separator = separator;\r\n        this._startIndex = startIndex;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): string {\r\n        if (!this._current)\r\n            this._current = this._value.substring(this._currentStartIndex, this._curIndex - this._separator.length);\r\n        return this._current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        if (this._curIndex > this._value.length)\r\n            return false;\r\n\r\n        this._currentStartIndex = this._curIndex;\r\n\r\n        var index = this._value.indexOf(this._separator, this._curIndex);\r\n\r\n        if (index == -1) {\r\n            this._curIndex = this._value.length + 1;\r\n        }\r\n        else\r\n            this._curIndex = index + this._separator.length;\r\n\r\n        this._current = null;\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._curIndex = this._startIndex;\r\n        this._currentStartIndex = this._curIndex;\r\n        this._current = null;\r\n    }\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class CsvSplitEnumerator implements IEnumerator<string> {\r\n    protected _state = 0;\r\n    protected _wordLength = 0;\r\n    protected _wordStartIndex: number;\r\n    protected _separator: string;\r\n    protected _value: string;\r\n    protected _startIndex: number;\r\n    protected _curIndex: number;\r\n    protected _current: string;\r\n    protected _hasEscape: boolean;\r\n\r\n    /****************************************/\r\n\r\n    constructor(value: string, separator: string, startIndex = 0) {\r\n        this._value = value;\r\n        this._separator = separator;\r\n        this._startIndex = startIndex;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get current(): string {\r\n        if (!this._current) {\r\n            this._current = this._value.substr(this._wordStartIndex, this._wordLength);\r\n            if (this._hasEscape)\r\n                this._current = this._current.replace(\"\\\"\\\"\", \"\\\"\");\r\n        }\r\n        return this._current;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    moveNext(): boolean {\r\n\r\n        let found = false;\r\n\r\n        while (true) {\r\n            const c = this._curIndex >= this._value.length ? \"\" : this._value[this._curIndex];\r\n            switch (this._state) {\r\n                case 0:\r\n                    if (c == \"\\\"\") {\r\n                        this._state = 1;\r\n                        this._hasEscape = false;\r\n                        this._wordLength = 0;\r\n                        this._wordStartIndex = this._curIndex + 1;\r\n                    }\r\n                    else if (c == this._separator || !c) {\r\n                        this._wordStartIndex = this._curIndex;\r\n                        this._wordLength = 0;\r\n                        found = this._curIndex <= this._value.length;\r\n                    }\r\n                    else {\r\n                        this._state = 2;\r\n                        this._wordLength = 1;\r\n                        this._wordStartIndex = this._curIndex;\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    if (c == \"\\\"\")\r\n                        this._state = 3;\r\n                    else\r\n                        this._wordLength++;\r\n                    break;\r\n                case 2:\r\n                    if (c == this._separator || !c) {\r\n                        this._state = 0;\r\n                        found = true;\r\n                    }\r\n                    else\r\n                        this._wordLength++;\r\n                    break;\r\n                case 3:\r\n                    if (c == \"\\\"\") {\r\n                        this._hasEscape = true;\r\n                        this._wordLength += 2;\r\n                        this._state = 1\r\n                    }\r\n                    else if (c == this._separator || !c) {\r\n                        found = true;\r\n                        this._state = 0;\r\n                    }\r\n                    else\r\n                        this._state = 4;\r\n                    break;\r\n                case 4:\r\n                    if (c == this._separator || !c) {\r\n                        found = true;\r\n                        this._state = 0;\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            this._curIndex++;\r\n\r\n            if (!c || found)\r\n                break;\r\n        }\r\n\r\n        this._current = null;\r\n\r\n        return found;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset(): void {\r\n        this._hasEscape = false;\r\n        this._curIndex = this._startIndex;\r\n        this._wordStartIndex = this._curIndex;\r\n        this._wordLength = 0;\r\n        this._current = null;\r\n        this._state = 0;\r\n    }\r\n}","﻿/****************************************/\r\n/* BaseTreeItem\r\n/****************************************/\r\n\r\nimport { addClass, generateId, removeClass } from \"../WebApp\";\r\n\r\nexport class BaseTreeItem implements ITreeItem {\r\n\r\n    constructor() {\r\n        this.canDrag = false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canReadData(transfer: DataTransfer): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readData(transfer: DataTransfer) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    writeData(transfer: DataTransfer): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(node: TreeNode<ITreeItem>) {\r\n        this.node = node;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove(): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onParentChanged(): void {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAccept(value: object): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    name = ko.observable<string>();\r\n    color = ko.observable<string>();\r\n    canDrag: boolean;\r\n    itemType: string;\r\n    icon: string;\r\n    node: TreeNode<ITreeItem>;\r\n}\r\n\r\n/****************************************/\r\n/* ITreeItem\r\n/****************************************/\r\n\r\nexport interface IDataTransferReader {\r\n    canReadData(transfer: DataTransfer): boolean;\r\n    readData(transfer: DataTransfer);\r\n}\r\n\r\nexport interface IDataTransferWriter {\r\n    writeData(transfer: DataTransfer): boolean;\r\n}\r\n\r\nexport interface ITreeItem extends IDataTransferWriter, IDataTransferReader {\r\n\r\n    attachNode(node: TreeNode<ITreeItem>);\r\n    remove(): void;\r\n    onParentChanged(): void;\r\n    canAccept(value: object): boolean;\r\n\r\n    name: KnockoutObservable<string>;\r\n    color?: KnockoutObservable<string>;\r\n\r\n    readonly canDrag: boolean;\r\n    readonly itemType: string;\r\n    readonly icon: string;\r\n    readonly node: TreeNode<ITreeItem>;\r\n}\r\n\r\n/****************************************/\r\n/* ActionViewModel\r\n/****************************************/\r\n\r\nexport class ActionView {\r\n    execute() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    text: string;\r\n    icon: string;\r\n}\r\n\r\n/****************************************/\r\n/* TreeNode\r\n/****************************************/\r\n\r\nexport class TreeNode<T extends ITreeItem> {\r\n\r\n    protected _treeView: TreeView<T>;\r\n    protected _parentNode: TreeNode<T>;\r\n    protected _element: HTMLElement;\r\n    protected _dargEnterCount = 0;\r\n    protected _childLoaded = false;\r\n\r\n    constructor(value?: T) {\r\n\r\n\r\n        this.value(value);\r\n\r\n        this.isExpanded.subscribe(async value => {\r\n\r\n            if (value && !this._childLoaded) {\r\n                await this.loadChildNodes();\r\n                this._childLoaded = true;\r\n            }\r\n        });\r\n\r\n        this.isSelected.subscribe(a => {\r\n\r\n            if (a)\r\n                this._treeView.select(this);\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadChildNodes() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    clear() {\r\n        this._childLoaded = false;\r\n        this.nodes.removeAll();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get element(): HTMLElement {\r\n        return this._element;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(element: HTMLElement) {\r\n\r\n        this._element = element;\r\n        this._element.id = generateId(\"id\");\r\n        this._element[\"$model\"] = this;\r\n\r\n        this._element.addEventListener(\"keydown\", ev => this.onKeyDown(ev));\r\n\r\n        let header = <HTMLElement>this._element.querySelector(\"header\");\r\n\r\n        header.ondragstart = ev => this.onDrag(ev);\r\n        header.ondragover = ev => this.onDragOver(ev);\r\n        header.ondragenter = ev => this.onDragEnter(ev);\r\n        header.ondragleave = ev => this.onDragLeave(ev);\r\n        header.ondrop = ev => this.onDrop(ev);\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected onKeyDown(ev: KeyboardEvent) {\r\n\r\n        if (ev.keyCode == 46 && (<HTMLElement>ev.target).tagName != \"INPUT\") {\r\n            ev.preventDefault();\r\n            if (this.isSelected())\r\n                this.value().remove();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDrag(ev: DragEvent) {\r\n\r\n        if (!this.value().writeData(ev.dataTransfer) || !this.value().canDrag) {\r\n            ev.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragEnter(ev: DragEvent) {\r\n        this._dargEnterCount++;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragLeave(ev: DragEvent) {\r\n        this._dargEnterCount--;\r\n        if (this._dargEnterCount == 0)\r\n            removeClass(this._element, \"drop\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragOver(ev: DragEvent) {\r\n        ev.preventDefault();\r\n\r\n        if (this._dargEnterCount == 1) {\r\n\r\n            let canDrop = true;\r\n\r\n            if (!this.value().canReadData(ev.dataTransfer))\r\n                canDrop = false;\r\n\r\n            if (canDrop) {\r\n                if (ev.ctrlKey)\r\n                    ev.dataTransfer.dropEffect = \"copy\";\r\n                else\r\n                    ev.dataTransfer.dropEffect = \"move\";\r\n\r\n                addClass(this._element, \"drop\");\r\n            }\r\n            else\r\n                ev.dataTransfer.dropEffect = \"move\";\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected onDrop(ev: DragEvent) {\r\n        ev.preventDefault();\r\n\r\n        this._dargEnterCount = 0;\r\n\r\n        removeClass(this._element, \"drop\");\r\n\r\n        const elId = ev.dataTransfer.getData(\"text/html+id\");\r\n\r\n        if (elId) {\r\n\r\n            const element = document.getElementById(elId);\r\n            const node = <TreeNode<ITreeItem>>element[\"$model\"];\r\n\r\n            if (!this.value().canAccept(node.value()))\r\n                return;\r\n\r\n            if (ev.ctrlKey) {\r\n\r\n            }\r\n            else {\r\n                if (node._parentNode == this)\r\n                    return;\r\n                node._parentNode.nodes.remove(node);\r\n                node._parentNode = this;\r\n                this.nodes.push(<any>node);\r\n                this.isExpanded(true);\r\n                node.value().onParentChanged();\r\n                return;\r\n            }\r\n        }\r\n        else\r\n            this.value().readData(ev.dataTransfer);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove() {\r\n\r\n        if (this._parentNode)\r\n            this._parentNode.nodes.remove(this);\r\n\r\n        if (this._treeView.selectedNode() == this)\r\n            this._treeView.select(null);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addNode(node: TreeNode<T>) {\r\n        node.attach(this._treeView, this);\r\n        this.nodes.push(node);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attach(treeView: TreeView<T>, parent?: TreeNode<T>) {\r\n        this._treeView = treeView;\r\n        this._parentNode = parent;\r\n        for (let childNode of this.nodes())\r\n            childNode.attach(treeView);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get parentNode(): TreeNode<T> {\r\n        return this._parentNode;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    toggleVisible() {\r\n        this.isVisible(!this.isVisible());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    select(expand = false) {\r\n        this.isSelected(true);\r\n        if (this._element)\r\n            this._element.focus();\r\n        if (expand) {\r\n            let curNode: TreeNode<ITreeItem> = this;\r\n            while (curNode) {\r\n                curNode.isExpanded(true);\r\n                curNode = curNode.parentNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    expandCollapse() {\r\n        this.isExpanded(!this.isExpanded());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    nodes = ko.observableArray<TreeNode<T>>();\r\n    value = ko.observable<T>();\r\n    isSelected = ko.observable(false);\r\n    isVisible = ko.observable(true);\r\n    isExpanded = ko.observable(false);\r\n    actions = ko.observable<ActionView[]>();\r\n}\r\n\r\n/****************************************/\r\n/* TreeView\r\n/****************************************/\r\n\r\nexport class TreeView<T extends ITreeItem> {\r\n\r\n    private _selectedNode: TreeNode<T>;\r\n\r\n    /****************************************/\r\n\r\n    select(node: TreeNode<T>) {\r\n\r\n        if (this.selectedNode() == node)\r\n            return;\r\n\r\n        if (this.selectedNode())\r\n            this.selectedNode().isSelected(false);\r\n\r\n        this.selectedNode(node);\r\n\r\n        if (this.selectedNode())\r\n            this.selectedNode().isSelected(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setRoot(node: TreeNode<T>) {\r\n        node.attach(this);\r\n        this.root(node);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    root = ko.observable<TreeNode<T>>();\r\n    selectedNode = ko.observable<TreeNode<T>>();\r\n}","﻿\r\n/****************************************/\r\n/* FileDragDrop\r\n/****************************************/\r\n\r\nimport { delayAsync, formatDate, linq } from \"../../../../Eusoft/WebApp/src/Eusoft.WebApp/Scripts\";\r\nimport { DaColumnType, IDaColumn, IDaGroup, IDaOptions, IDaSerie, IDataAdapter, ITextTableDaOptions, TextTableDataAdapter } from \"../Framework/DataAdapter\";\r\nimport { Operation } from \"../Framework/Operation\";\r\nimport { ITextValue } from \"../Types\";\r\nimport { addClass, IOperation, IOperationProgress, removeClass } from \"../WebApp\";\r\nimport { BaseTreeItem, ITreeItem, TreeNode, TreeView } from \"./TreeView\";\r\n\r\nexport class FileDragDrop {\r\n\r\n    protected _element: HTMLElement;\r\n    protected _dargEnterCount = 0;\r\n\r\n    /****************************************/\r\n\r\n    attachNode(element: HTMLElement) {\r\n\r\n        this._element = element;\r\n        element.ondragover = ev => this.onDragOver(ev);\r\n        element.ondrop = ev => this.onDrop(ev);\r\n        element.ondragenter = ev => this.onDragEnter(ev);\r\n        element.ondragleave = ev => this.onDragLeave(ev);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onFileDropped(content: string) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragEnter(ev: DragEvent) {\r\n        this._dargEnterCount++;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragLeave(ev: DragEvent) {\r\n        this._dargEnterCount--;\r\n        if (this._dargEnterCount == 0)\r\n            removeClass(this._element, \"drop\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onDragOver(ev: DragEvent) {\r\n        ev.preventDefault();\r\n\r\n        if (this._dargEnterCount == 1)\r\n            addClass(this._element, \"drop\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async onDrop(ev: DragEvent) {\r\n        ev.preventDefault();\r\n\r\n        this._dargEnterCount = 0;\r\n\r\n        removeClass(this._element, \"drop\");\r\n        if (ev.dataTransfer.files.length == 1) {\r\n            const file = ev.dataTransfer.files[0];\r\n            if (file.name.toLowerCase().endsWith(\".csv\")) {\r\n                const text = await ev.dataTransfer.files[0].text();\r\n                this.onFileDropped(text);\r\n                return;\r\n            }\r\n        }\r\n        M.toast({ html: $string(\"$(msg-not-supported-only-csv)\") })\r\n    }\r\n}\r\n\r\n/****************************************/\r\n/* ProgressViewModel\r\n/****************************************/\r\n\r\ntype ProgressStatus = \"hidden\" | \"indefinite\" | \"show\";\r\n\r\nexport class ProgressViewModel {\r\n\r\n    _showCount = 0;\r\n\r\n    /****************************************/\r\n\r\n    constructor() {\r\n        this.status(\"hidden\");\r\n        Operation.onBegin.add((s, op) => this.show(op));\r\n        Operation.onEnd.add((s, op) => this.hide(op));\r\n        Operation.onProgress.add((s, data) => this.update(data.operation, data.progress));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    show(op: IOperation) {\r\n        if (this._showCount == 0) {\r\n            this.status(\"indefinite\");\r\n            this.percentage(100);\r\n        }\r\n        this.message(<string>op.message);\r\n        this._showCount++;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    update(op: IOperation, progress: IOperationProgress) {\r\n\r\n        this.message(op[\"getProgressDescription\"](progress));\r\n        if (progress.totCount != undefined && progress.current != undefined) {\r\n            this.percentage(Math.min(100, (progress.current / progress.totCount) * 100));\r\n            this.status(\"show\");\r\n        }\r\n        else {\r\n            this.status(\"show\");\r\n            this.percentage(100);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hide(op: IOperation) {\r\n        this._showCount--;\r\n        if (this._showCount == 0) {\r\n            //this.message(\"\");\r\n            this.status(\"hidden\");\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    message = ko.observable<string>();\r\n    percentage = ko.observable<number>();\r\n    status = ko.observable<ProgressStatus>();\r\n}\r\n\r\n/****************************************/\r\n/* DataImportControl\r\n/****************************************/\r\n\r\nexport interface IDataImportSerieSource {\r\n    type: \"data-import\";\r\n    options: IDaOptions;\r\n    groups?: { id: string, value: string }[];\r\n    serie: IDaSerie;\r\n    source?: string;\r\n}\r\n\r\n\r\n/****************************************/\r\n\r\ninterface ITableViewModel {\r\n\r\n    header: string[];\r\n    rows: string[][];\r\n}\r\n\r\n/****************************************/\r\n\r\nclass ColumnViewModel<T> {\r\n\r\n    constructor(value: IDaColumn<T>) {\r\n        this.types = [\r\n            { text: $string(\"$(exclude)\"), value: DaColumnType.Exclude },\r\n            { text: $string(\"$(x-axis)\"), value: DaColumnType.XAxis },\r\n            { text: $string(\"$(serie)\"), value: DaColumnType.Serie },\r\n            { text: $string(\"$(group)\"), value: DaColumnType.Group }\r\n        ];\r\n\r\n        this.value = value;\r\n        this.type(value.type);\r\n        this.alias(value.name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value: IDaColumn<T>;\r\n    alias = ko.observable<string>();\r\n    type = ko.observable();\r\n    types: ITextValue<DaColumnType>[];\r\n}\r\n\r\n/****************************************/\r\n\r\nclass GroupItem extends BaseTreeItem {\r\n\r\n    constructor(value: IDaGroup) {\r\n        super();\r\n        this.value = value;\r\n        this.icon = \"folder\";\r\n        this.itemType = \"group\";\r\n        this.color(\"#ffc107\");\r\n        this.name(value.name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(node: TreeNode<ITreeItem>) {\r\n        super.attachNode(node);\r\n        node.isVisible.subscribe(value => {\r\n            for (var childNode of this.node.nodes())\r\n                childNode.isVisible(value);\r\n        })\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    value: IDaGroup;\r\n}\r\n\r\n/****************************************/\r\n\r\nclass SerieItem extends BaseTreeItem {\r\n\r\n    constructor(value: IDaSerie) {\r\n        super();\r\n        this.value = value;\r\n        this.icon = \"insert_chart\";\r\n        this.itemType = \"serie\";\r\n        this.color(\"#4caf50\");\r\n        this.name(value.name);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    value: IDaSerie;\r\n    colId: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class DataImportControl {\r\n\r\n    private _model: M.Modal;\r\n    private _adapter: IDataAdapter<IDaOptions>;\r\n    private _text: string;\r\n    private _options: ITextTableDaOptions;\r\n    private _onGetData: (data: IDataImportSerieSource[]) => void;\r\n\r\n    constructor() {\r\n\r\n        this.columnSeparators = [\r\n            { text: $string(\"$(tab-key)\"), value: \"\\t\" },\r\n            { text: \",\", value: \",\" },\r\n            { text: \";\", value: \";\" },\r\n            { text: $string(\"$(sapce-key)\"), value: \" \" }\r\n        ];\r\n\r\n        this.treeView.setRoot(new TreeNode<any>());\r\n        this.treeView.selectedNode.subscribe(a => this.onNodeSelected(a));\r\n\r\n        this.fileDrop.onFileDropped = text => this.importText(text);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async importText(text: string, options?: ITextTableDaOptions): Promise<boolean> {\r\n\r\n        M.toast({ html: $string(\"$(msg-start-analysis)\") })\r\n\r\n        this.hasData(true);\r\n\r\n        await delayAsync(0);\r\n\r\n        this._text = text;\r\n        this._adapter = new TextTableDataAdapter();\r\n        this._options = await this._adapter.analyzeAsync(this._text, options, 5000);\r\n\r\n        if (!this._options.columnSeparator || !this._options.rowSeparator || !this._options.columns || this._options.columns.length < 2)\r\n            return false;\r\n\r\n        this.hasHeader(this._options.hasHeader);\r\n        this.columnSeparator(this._options.columnSeparator);\r\n\r\n        const cols: ColumnViewModel<any>[] = [];\r\n\r\n        for (let col of this._options.columns) {\r\n            var model = new ColumnViewModel(col);\r\n            cols.push(model);\r\n        }\r\n\r\n        this.columns(cols);\r\n\r\n        await this.updatePreview();\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async getSelectedData(): Promise<IDataImportSerieSource[]> {\r\n\r\n        const result: IDataImportSerieSource[] = [];\r\n        await this.getSelectedDataWork(this.treeView.root(), [], result);\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async getSelectedDataWork(node: TreeNode<ITreeItem>, groups: { id: string, value: string }[], result: IDataImportSerieSource[]) {\r\n\r\n        if (!node.isVisible())\r\n            return;\r\n\r\n        if (node.value() instanceof SerieItem) {\r\n            const serie = (<SerieItem>node.value()).value;\r\n            const source: IDataImportSerieSource = {\r\n                type: \"data-import\",\r\n                options: this._options,\r\n                serie: serie,\r\n                groups: groups\r\n            };\r\n            result.push(source);\r\n            return;\r\n        }\r\n\r\n        if (!node.isExpanded())\r\n            await node.loadChildNodes();\r\n\r\n        if (node.value() instanceof GroupItem) {\r\n\r\n            const group = (<GroupItem>node.value()).value;\r\n\r\n            let newGroups = groups.slice(0, groups.length);\r\n            newGroups.push({ id: group.colId, value: group.name });\r\n\r\n            groups = newGroups;\r\n        }\r\n\r\n        for (let childNode of node.nodes())\r\n            await this.getSelectedDataWork(childNode, groups, result);\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    async executeImport() {\r\n        const data = await this.getSelectedData();\r\n        if (this._onGetData) {\r\n            this._onGetData(data);\r\n            this._onGetData = null;\r\n        }\r\n        this._model.close();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async applyChanges() {\r\n        this._options.hasHeader = this.hasHeader();\r\n        this._options.columnSeparator = this.columnSeparator();\r\n        this._options.columns.forEach((col, i) => {\r\n            col.name = this.columns()[i].alias();\r\n            col.type = this.columns()[i].type();\r\n        });\r\n\r\n        await this.updatePreview(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updateGroups() {\r\n\r\n        const group = await this._adapter.loadGroupAsync(this._text, this._options);\r\n\r\n        let childNode = new TreeNode<ITreeItem>(new GroupItem(group));\r\n\r\n        this.treeView.root().clear();\r\n        this.treeView.root().addNode(childNode);\r\n        childNode.value().attachNode(childNode);\r\n\r\n        this.updateNode(childNode, group);\r\n\r\n        childNode.isExpanded(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateNode(node: TreeNode<ITreeItem>, group: IDaGroup) {\r\n\r\n        node.clear();\r\n\r\n        if (group.groups) {\r\n            for (let item of linq(group.groups)) {\r\n                let childNode = new TreeNode<ITreeItem>(new GroupItem(item.value));\r\n                childNode.loadChildNodes = async () => this.updateNode(childNode, item.value);\r\n                node.addNode(childNode);\r\n                childNode.value().attachNode(childNode);\r\n            }\r\n        }\r\n\r\n        if (group.series) {\r\n            for (let item of linq(group.series)) {\r\n                let childNode = new TreeNode<ITreeItem>(new SerieItem(item.value));\r\n                node.addNode(childNode);\r\n                childNode.value().attachNode(childNode);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updateTable() {\r\n\r\n        const result = await this._adapter.loadTableAsync(this._text, this._options, 50);\r\n\r\n        const table: ITableViewModel = {\r\n            header: linq(this._options.columns).where(a => a.type != DaColumnType.Exclude).select(a => a.name).toArray(),\r\n            rows: linq(result).select(a => linq(a).select(b => this.format(b.value)).toArray()).toArray()\r\n        }\r\n\r\n        this.table(table);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected format(value: any): string {\r\n        if (typeof value == \"number\")\r\n            return formatNumber(value);\r\n        if (typeof value == \"boolean\")\r\n            return $string(value ? \"$(yes)\" : \"$(no)\");\r\n        if (value instanceof Date)\r\n            return formatDate(value, $string(\"$(date-format)\"));\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async updatePreview(force = false) {\r\n\r\n        if (force || this._options.rowsCount < 5000 - 1)\r\n            await this.updateGroups();\r\n        else\r\n            this.treeView.root().clear();\r\n\r\n        await this.updateTable();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onNodeSelected(node: TreeNode<ITreeItem>) {\r\n\r\n        if (node && node.value() instanceof SerieItem) {\r\n\r\n            const serie = (<SerieItem>node.value()).value;\r\n            const xColumn = linq(this._options.columns).where(a => a.type == DaColumnType.XAxis).select(a => a.name).first();\r\n\r\n            const table: ITableViewModel = {\r\n                header: [xColumn, serie.name],\r\n                rows: linq(serie.values).take(50).select(a => [this.format(a.x), this.format(a.y)]).toArray()\r\n            }\r\n            this.table(table);\r\n        }\r\n        else\r\n            this.table(null);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    show(): Promise<IDataImportSerieSource[]> {\r\n\r\n        if (!this._model) {\r\n            this._model = M.Modal.init(document.getElementById(\"dataImport\"), {\r\n                onCloseEnd: el => {\r\n                    if (this._onGetData)\r\n                        this._onGetData([]);\r\n                    this.reset();\r\n                }\r\n            });\r\n        }\r\n\r\n        this._model.open();\r\n\r\n        return new Promise(res => this._onGetData = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    reset() {\r\n        this._text = null;\r\n        this._options = null;\r\n        this._onGetData = null;\r\n        this.hasData(false);\r\n        this.treeView.root().clear();\r\n        this.table(null);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async importUrl() {\r\n        const op = Operation.begin($string(\"$(msg-download-progress)\"));\r\n        try {\r\n            let request = await fetch(this.sourceUrl());\r\n            if (request.ok) {\r\n                const text = await request.text();\r\n                if (text) {\r\n                    this.importText(text);\r\n                    return;\r\n                }\r\n            }\r\n            M.toast({ html: $string(\"$(msg-download-error): \" + request.statusText) });\r\n        }\r\n        finally {\r\n            op.end();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    hasHeader = ko.observable<boolean>();\r\n    columnSeparator = ko.observable<string>();\r\n    columns = ko.observable<ColumnViewModel<any>[]>();\r\n    columnSeparators: ITextValue<string>[];\r\n    table = ko.observable<ITableViewModel>();\r\n    treeView = new TreeView<ITreeItem>();\r\n    progress = new ProgressViewModel();\r\n    hasData = ko.observable(false);\r\n    sourceUrl = ko.observable<string>();\r\n    fileDrop = new FileDragDrop();\r\n}","﻿import { IInfectionData } from \"../Data/InfectionDataSet\";\r\nimport { IndicatorCalculator } from \"../Indicators\";\r\nimport { IFunctionPoint } from \"../Types\";\r\nimport { IDictionary, linq } from \"../WebApp\";\r\nimport { ITreeItem } from \"./TreeView\";\r\n\r\ntype TData = IInfectionData;\r\n\r\ntype GraphVarMap = IDictionary<string>;\r\n\r\nexport interface IGraphItem {\r\n\r\n    attachGraph(ctx: GraphContext);\r\n    updateGraphVisibility(recursive?: boolean);\r\n    updateGraph(recursive?: boolean);\r\n    folderId: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class GraphContext {\r\n\r\n    setExpressions(values: Desmos.Expression[]) {\r\n\r\n        const state = this.calculator.getState();\r\n\r\n        for (let value of values) {\r\n\r\n            const curExp = <Desmos.IFolderExpression>linq(state.expressions.list).first(a => a.id == value.id);\r\n            if (!curExp)\r\n                state.expressions.list.push(value);\r\n            else {\r\n                for (let prop of Object.getOwnPropertyNames(value))\r\n                    curExp[prop] = value[prop];\r\n            }\r\n        }\r\n\r\n        const groups = linq(state.expressions.list).where(a => a.type != \"folder\").groupBy(a => a.folderId ? a.folderId : \"\").toDictionary(a => a.key, a => a.values.toArray());\r\n\r\n        const newList = [];\r\n\r\n        for (let folder of linq(state.expressions.list).where(a => a.type == \"folder\")) {\r\n            newList.push(folder);\r\n            const items = groups[folder.id];\r\n            if (items)\r\n                for (let item of items)\r\n                    newList.push(item);\r\n        }\r\n\r\n        const items = groups[\"\"];\r\n        if (items)\r\n            for (let item of items)\r\n                newList.push(item);\r\n\r\n        state.expressions.list = newList;\r\n\r\n        this.calculator.setState(state);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setSelectedId(id: string) {\r\n        if (this.calculator.controller.listModel.selectedItem && this.calculator.controller.listModel.selectedItem.id == id)\r\n            return;\r\n        this.calculator.controller.dispatch({ type: \"set-selected-id\", id: id });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setColor(id: string, color: string) {\r\n        this.calculator.controller.dispatch({ type: \"set-item-color\", id: id, color: color });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateTable(id: string, values: IFunctionPoint[]) {\r\n        const exp = <Desmos.ITableExpression>linq(this.calculator.getExpressions()).where(a => a.id == id).first();\r\n        if (exp) {\r\n            exp.columns[0].values = linq(values).select(a => a.x.toString()).toArray();\r\n            exp.columns[1].values = linq(values).select(a => a.y.toString()).toArray();\r\n            this.calculator.setExpression(exp);\r\n        }\r\n        /*\r\n\r\n        this.calculator.setExpression({\r\n            id: id,\r\n            type: \"table\",\r\n            columns: [\r\n                {\r\n                    values: linq(values).select(a => a.x.toString()).toArray()\r\n                },\r\n                {\r\n                    values: linq(values).select(a => a.y.toString()).toArray(),\r\n                    hidden: false\r\n                },\r\n            ]\r\n        });*/\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateExpression(value: Desmos.Expression) {\r\n        //const exp = <Desmos.IMathExpression>linq(this.calculator.getExpressions()).where(a => a.id == value.id).first();\r\n        /*if (exp) {\r\n            for (let prop of Object.getOwnPropertyNames(value))\r\n                exp[prop] = value[prop];\r\n            this.calculator.setExpression(exp);\r\n        }*/\r\n        this.calculator.setExpression(value);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateVariable(id: string, varName, value: number) {\r\n        if (!varName)\r\n            return;\r\n        this.updateExpression(<Desmos.IMathExpression>{ id: id, latex: varName + \"=\" + value.toString() });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    expressionZoomFit(id: string) {\r\n        this.calculator.controller.dispatch({ type: \"expression-zoom-fit\", id: id });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setItemVisibile(id: string, value: boolean) {\r\n        this.updateExpression(<any>{ id: id, hidden: !value });\r\n        //this.calculator.controller._setItemHidden(id, !value);\r\n        //this.calculator.updateSettings({});\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    generateVars(map: GraphVarMap) {\r\n\r\n        for (let key in map) {\r\n            if (!map[key])\r\n                map[key] = this.generateVar(key);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    generateVar(prefix = \"a\"): string {\r\n        if (!this.vars[prefix[0]])\r\n            this.vars[prefix[0]] = 0;\r\n        this.vars[prefix[0]]++;\r\n        return prefix[0] + \"_{\" + this.vars[prefix[0]] + \"}\";\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    serieCalculator: IndicatorCalculator<TData>;\r\n    calculator: Desmos.IGraphingCalculator;\r\n    vars: IDictionary<number> = {};\r\n    treeItems: IDictionary<ITreeItem> = {};\r\n}\r\n","﻿import { ParameterViewModel } from \"../Pages/StudioPage\";\r\nimport { apply, IDictionary, linq, Linq, uuidv4 } from \"../WebApp\";\r\nimport { GraphContext, IGraphItem } from \"./GraphContext\";\r\nimport { ActionView, BaseTreeItem, ITreeItem, TreeNode } from \"./TreeView\";\r\n\r\nexport interface IStudioItemConfig {\r\n    name?: string;\r\n    color?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioItemState extends IStudioItemConfig {\r\n    folderId?: string;\r\n    visible?: boolean;\r\n    opened?: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport abstract class BaseStudioItem<TState extends IStudioItemState, TParent extends ITreeItem & IGraphItem, TChild extends ITreeItem & IGraphItem> extends BaseTreeItem implements IGraphItem {\r\n\r\n    protected _graphCtx: GraphContext;\r\n    protected _varsMap: IDictionary<string>;\r\n    protected _isUpdating = 0;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createActions(result: ActionView[]) {\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(delete)\");\r\n            action.icon = \"delete\";\r\n            action.execute = () => this.remove();\r\n        }))\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setState(state: TState) {\r\n\r\n        this._isUpdating++;\r\n\r\n        if (state.name)\r\n            this.name(state.name);\r\n\r\n        if (state.visible != undefined)\r\n            this.node.isVisible(state.visible);\r\n\r\n        if (state.color)\r\n            this.color(state.color);\r\n\r\n        if (state.opened != undefined)\r\n            this.node.isExpanded(state.opened);\r\n\r\n        if (state.folderId)\r\n            this.folderId = state.folderId;\r\n\r\n        this.setStateWork(state);\r\n\r\n        this.updateGraph();\r\n\r\n        this.setChildrenStateWork(state);\r\n\r\n        this._isUpdating--;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): TState {\r\n\r\n        return <TState>{\r\n            name: this.name(),\r\n            visible: this.node.isVisible(),\r\n            folderId: this.folderId,\r\n            color: this.color(),\r\n            opened: this.node.isExpanded()\r\n        };\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getVar(name: string): string {\r\n\r\n        return this._varsMap[name];\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    remove(recursive = true) {\r\n\r\n        if (this._graphCtx) {\r\n            this._graphCtx.calculator.removeExpression({ id: this.getGraphId(\"private\") });\r\n            this._graphCtx.calculator.removeExpression({ id: this.getGraphId(\"public\") });\r\n        }\r\n        this.node.remove();\r\n\r\n        if (recursive)\r\n            this.children.foreach(a => a.remove());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(node: TreeNode<ITreeItem>) {\r\n        this.node = node;\r\n        this.node.isVisible.subscribe(value => this.updateGraphVisibility());\r\n        this.node.isSelected.subscribe(value => {\r\n            if (value)\r\n                this.onSelected();\r\n        })\r\n        const actions: ActionView[] = [];\r\n        this.createActions(actions);\r\n        this.node.actions(actions);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachGraph(ctx: GraphContext) {\r\n        this._graphCtx = ctx;\r\n\r\n        this._graphCtx.calculator.observe(\"expressionAnalysis\", () => this.onGraphChanged());\r\n        this.color.subscribe(value => this.updateColor());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isFullVisible(): boolean {\r\n        let curNode = this.node;\r\n\r\n        while (curNode) {\r\n            if (!curNode.isVisible())\r\n                return false;\r\n            curNode = curNode.parentNode;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateGraphVisibility(recorsive = true): boolean {\r\n\r\n        const visible = this.isFullVisible();\r\n\r\n        this._graphCtx.setItemVisibile(this.getGraphId(\"public\"), visible);\r\n        this._graphCtx.setItemVisibile(this.getGraphId(\"private\"), visible);\r\n\r\n        if (recorsive)\r\n            this.children.foreach(a => a.updateGraphVisibility());\r\n\r\n        return visible;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateGraph(recursive = true) {\r\n\r\n        if (!this._graphCtx)\r\n            return;\r\n\r\n        if (!this.folderId)\r\n            this.folderId = uuidv4();\r\n\r\n        this._graphCtx.treeItems[this.folderId] = this;\r\n\r\n        const values = this.getExpressions();\r\n\r\n        this._graphCtx.setExpressions(values);\r\n\r\n        this.updateGraphWork();\r\n\r\n        this.updateGraphVisibility();\r\n\r\n        this.updateParameters();\r\n\r\n        if (recursive)\r\n            this.children.foreach(a => a.updateGraph(recursive));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onParentChanged() {\r\n        this.updateGraphVisibility();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get parent(): TParent {\r\n        return <TParent>this.node.parentNode.value();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get children(): Linq<TChild> {\r\n        return linq(this.node.nodes()).select(a => <TChild>a.value());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected abstract setStateWork(state: TState);\r\n\r\n    protected abstract getExpressions(): Desmos.Expression[];\r\n\r\n    /****************************************/\r\n\r\n    protected replaceVars(value: string): string {\r\n        for (let item in this._varsMap) {\r\n            const reg = new RegExp(\"\\\\$\" + item, \"g\");\r\n            value = value.replace(reg, this._varsMap[item]);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getGraphId(section: string) {\r\n        return this.folderId + \"/\" + section;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected addChildrenWork(value: TChild, updateGraph = true): TChild {\r\n\r\n        const node = new TreeNode(value);\r\n\r\n        this.node.addNode(node);\r\n\r\n        value.attachNode(node);\r\n\r\n        value.attachGraph(this._graphCtx);\r\n\r\n        if (updateGraph)\r\n            value.updateGraph();\r\n\r\n        value.onParentChanged();\r\n\r\n        return value;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParameters(result: ParameterViewModel[]): boolean {\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateParameters() {\r\n        const values: ParameterViewModel[] = [];\r\n        if (this.createParameters(values)) {\r\n            this.parameters.removeAll();\r\n            values.forEach(a => this.parameters.push(a));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateGraphWork() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setChildrenStateWork(state: TState) {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onSelected() {\r\n        if (this.mainExpression && this._graphCtx)\r\n            this._graphCtx.setSelectedId(this.mainExpression);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphChanged() {\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateColor() {\r\n\r\n    }\r\n\r\n    get mainExpression(): string {\r\n        return undefined;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    folderId: string;\r\n    time = ko.observable(0);\r\n    optionsTemplateName: string;\r\n    parameters = ko.observableArray<ParameterViewModel>();\r\n}","﻿import { MATERIAL_COLORS } from \"../Types\";\r\n\r\ninterface IColorViewModel {\r\n    select(): void;\r\n    value: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ColorPicker {\r\n\r\n    private _onSelected: (color: string) => void;\r\n    private _element: HTMLElement;\r\n    private _mouseDown: (ev: MouseEvent) => void;\r\n\r\n    /****************************************/\r\n\r\n    constructor() {\r\n        for (var color in MATERIAL_COLORS)\r\n            this.addColor(MATERIAL_COLORS[color][600]);\r\n        this._mouseDown = ev => this.onMouseDown(ev);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachNode(element: HTMLElement) {\r\n        this._element = element;\r\n        document.body.appendChild(this._element);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async pick(): Promise<string> {\r\n        await this.open();\r\n        return new Promise(res => this._onSelected = res);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addColor(color: string) {\r\n        this.colors.push({\r\n            value: color,\r\n            select: () => {\r\n                if (this._onSelected)\r\n                    this._onSelected(color);\r\n                this._onSelected = null;\r\n                this.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async open() {\r\n\r\n        if (this.isOpened())\r\n            return;\r\n\r\n        this.isOpened(true);\r\n\r\n        if (window.event) {\r\n            const mouseEvent = <MouseEvent>window.event;\r\n            const coords = { x: mouseEvent.pageX, y: mouseEvent.pageY };\r\n            //await PromiseUtils.delay(0);\r\n            this._element.style.left = coords.x + \"px\";\r\n            this._element.style.top = (coords.y - this._element.clientHeight) + \"px\";\r\n        }\r\n        document.body.addEventListener(\"mousedown\", this._mouseDown);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    close() {\r\n        if (!this.isOpened())\r\n            return;\r\n\r\n        this.isOpened(false);\r\n\r\n        document.body.removeEventListener(\"mousedown\", this._mouseDown);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onMouseDown(ev: MouseEvent) {\r\n\r\n        if ((<HTMLElement>ev.target).parentElement != this._element) {\r\n            if (this._onSelected)\r\n                this._onSelected(undefined);\r\n            this._onSelected = null;\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    isOpened = ko.observable(false);\r\n    colors: IColorViewModel[] = [];\r\n\r\n    static readonly instance = new ColorPicker();\r\n}","﻿import { ParameterViewModel } from \"../Pages/StudioPage\";\r\nimport * as Desmos from \"desmos\";\r\nimport { apply, IDictionary, linq, round } from \"../WebApp\";\r\nimport { BaseStudioItem, IStudioItemConfig, IStudioItemState } from \"./BaseStudioItem\";\r\nimport { StudioSerie } from \"./StudioSerie\";\r\n\r\nexport type RegressionFunctionType = \"linear\" | \"exponential\" | \"normal\" | \"log-normal\";\r\n\r\n\r\nfunction blendColor(p, c0, c1, l) {\r\n    let r, g, b, P, f, t, h, i = parseInt, m = Math.round, a: any = typeof (c1) == \"string\";\r\n    if (typeof (p) != \"number\" || p < -1 || p > 1 || typeof (c0) != \"string\" || (c0[0] != 'r' && c0[0] != '#') || (c1 && !a)) return null;\r\n    if (!this.pSBCr) this.pSBCr = (d) => {\r\n        let n = d.length, x: any = {};\r\n        if (n > 9) {\r\n            [r, g, b, a] = d = d.split(\",\"), n = d.length;\r\n            if (n < 3 || n > 4) return null;\r\n            x.r = i(r[3] == \"a\" ? r.slice(5) : r.slice(4)), x.g = i(g), x.b = i(b), x.a = a ? parseFloat(a) : -1\r\n        } else {\r\n            if (n == 8 || n == 6 || n < 4) return null;\r\n            if (n < 6) d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (n > 4 ? d[4] + d[4] : \"\");\r\n            d = i(d.slice(1), 16);\r\n            if (n == 9 || n == 5) x.r = d >> 24 & 255, x.g = d >> 16 & 255, x.b = d >> 8 & 255, x.a = m((d & 255) / 0.255) / 1000;\r\n            else x.r = d >> 16, x.g = d >> 8 & 255, x.b = d & 255, x.a = -1\r\n        } return x\r\n    };\r\n    h = c0.length > 9, h = a ? c1.length > 9 ? true : c1 == \"c\" ? !h : false : h, f = this.pSBCr(c0), P = p < 0, t = c1 && c1 != \"c\" ? this.pSBCr(c1) : P ? { r: 0, g: 0, b: 0, a: -1 } : { r: 255, g: 255, b: 255, a: -1 }, p = P ? p * -1 : p, P = 1 - p;\r\n    if (!f || !t) return null;\r\n    if (l) r = m(P * f.r + p * t.r), g = m(P * f.g + p * t.g), b = m(P * f.b + p * t.b);\r\n    else r = m((P * f.r ** 2 + p * t.r ** 2) ** 0.5), g = m((P * f.g ** 2 + p * t.g ** 2) ** 0.5), b = m((P * f.b ** 2 + p * t.b ** 2) ** 0.5);\r\n    a = f.a, t = t.a, f = a >= 0 || t >= 0, a = f ? a < 0 ? t : t < 0 ? a : a * P + t * p : 0;\r\n    if (h) return \"rgb\" + (f ? \"a(\" : \"(\") + r + \",\" + g + \",\" + b + (f ? \",\" + m(a * 1000) / 1000 : \"\") + \")\";\r\n    else return \"#\" + (4294967296 + r * 16777216 + g * 65536 + b * 256 + (f ? m(a * 255) : 0)).toString(16).slice(1, f ? undefined : -2)\r\n}\r\n\r\nfunction toSafeString(value: any): string {\r\n    if (value == null || value == undefined)\r\n        return undefined;\r\n    return value.toString();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioRegressionConfig extends IStudioItemConfig {\r\n    function?: IRegressionFunction;\r\n    showIntegration?: boolean;\r\n    startDay?: number;\r\n    endDay?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioRegressionState extends IStudioRegressionConfig, IStudioItemState {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IRegressionFunctionVar {\r\n    name: string;\r\n    label?: string;\r\n    autoCompute: boolean;\r\n    minValue?: number;\r\n    maxValue?: number;\r\n    precision?: number;\r\n    step?: number;\r\n    value?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IRegressionFunction {\r\n    type: RegressionFunctionType\r\n    name: string;\r\n    value: string;\r\n    vars: IRegressionFunctionVar[];\r\n}\r\n\r\n/****************************************/\r\n\r\nclass RegressionFunctionViewModel {\r\n\r\n    select() {\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    icon: string;\r\n    value: IRegressionFunction;\r\n    vars = ko.observable<RegressionFunctionVarViewModel[]>();\r\n}\r\n\r\n/****************************************/\r\n\r\nclass RegressionFunctionVarViewModel {\r\n\r\n    value: IRegressionFunctionVar;\r\n    curValue = ko.observable<number>();\r\n    autoCompute = ko.observable<boolean>();\r\n    min = ko.observable<number>();\r\n    max = ko.observable<number>();\r\n    step = ko.observable<number>();\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class StudioSerieRegression extends BaseStudioItem<IStudioRegressionState, StudioSerie, any> {\r\n\r\n    protected _varsMap: IDictionary<string> = {};\r\n\r\n    /****************************************/\r\n\r\n    constructor(config?: IStudioRegressionConfig) {\r\n\r\n        super();\r\n\r\n        this._varsMap = {\r\n            \"fun\": null,\r\n            \"sum\": null,\r\n            \"n1\": null,\r\n            \"n2\": null,\r\n            \"value\": null,\r\n            \"time\": null,\r\n            \"tend\": null,\r\n            \"tstart\": null,\r\n            \"xp\": null,\r\n            \"s\": null,\r\n            \"n3\": null,\r\n        };\r\n\r\n        this.itemType = \"regression\";\r\n        this.icon = \"show_chart\";\r\n        this.optionsTemplateName = \"RegressionOptionsTemplate\";\r\n\r\n        this.functions = [];\r\n\r\n        this.addFunction({\r\n            name: $string(\"$(log-normal)\"),\r\n            type: \"log-normal\",\r\n            value: \"$s\\\\sim $c\\\\cdot\\\\frac{ e^ {-\\\\frac{ \\\\left(\\\\ln\\\\ \\\\left($x - $a\\\\right) \\\\ -$u\\\\right)^ { 2}} { 2$o^ { 2} }}}{ \\\\left($x - $a\\\\right) \\\\sqrt{ 2\\\\pi } $o }\",\r\n            vars: [{\r\n                name: \"a\",\r\n                label: $string(\"$(offset)\"),\r\n                autoCompute: true,\r\n                precision: 0\r\n            },\r\n            {\r\n                name: \"c\",\r\n                label: $string(\"$(total)\"),\r\n                autoCompute: true,\r\n                precision: 0\r\n            },\r\n            {\r\n                name: \"o\",\r\n                label: $string(\"$(variance)\"),\r\n                autoCompute: true,\r\n                precision: 5\r\n            },\r\n            {\r\n                name: \"u\",\r\n                label: $string(\"$(average)\"),\r\n                autoCompute: true,\r\n                precision: 5\r\n            }]\r\n        });\r\n\r\n        this.addFunction({\r\n            name: $string(\"$(normal)\"),\r\n            type: \"normal\",\r\n            value: \"$s\\\\sim $c\\\\cdot\\\\ \\\\left(\\\\frac{1}{\\\\sqrt{2\\\\cdot\\\\pi}\\\\cdot $o}\\\\right)\\\\cdot e^{-\\\\frac{1}{2}\\\\cdot\\\\left(\\\\frac{\\\\left($x-$u\\\\right)}{$o}\\\\right)^{2}}\",\r\n            vars: [\r\n                {\r\n                    name: \"c\",\r\n                    label: $string(\"$(total)\"),\r\n                    autoCompute: true,\r\n                    precision: 0\r\n                },\r\n                {\r\n                    name: \"o\",\r\n                    label: $string(\"$(variance)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                },\r\n                {\r\n                    name: \"u\",\r\n                    label: $string(\"$(avg-peak)\"),\r\n                    autoCompute: true,\r\n                    precision: 0\r\n                }]\r\n        });\r\n\r\n        this.addFunction({\r\n            name: $string(\"$(exponential)\"),\r\n            type: \"exponential\",\r\n            value: \"$s\\\\sim $a^{\\\\left($x-$b\\\\right)}\",\r\n            vars: [\r\n                {\r\n                    name: \"a\",\r\n                    label: $string(\"$(base)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                },\r\n                {\r\n                    name: \"b\",\r\n                    label: $string(\"$(offset)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                }]\r\n        });\r\n\r\n        this.addFunction({\r\n            name: $string(\"$(linear)\"),\r\n            type: \"linear\",\r\n            value: \"$s\\\\sim $a+$m$x\",\r\n            vars: [\r\n                {\r\n                    name: \"a\",\r\n                    label: $string(\"$(offset)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                },\r\n                {\r\n                    name: \"m\",\r\n                    label: $string(\"$(slope)\"),\r\n                    autoCompute: true,\r\n                    precision: 5\r\n                }]\r\n        });\r\n\r\n        this.showIntegration.subscribe(() => {\r\n            this._graphCtx.setItemVisibile(this.getGraphId(\"sum-serie\"), this.isFullVisible() && this.showIntegration());\r\n            this._graphCtx.setItemVisibile(this.getGraphId(\"sum-point\"), this.isFullVisible() && this.showIntegration());\r\n\r\n        });\r\n\r\n        this.selectedFunction.subscribe(a => {\r\n            if (!this.name() && a)\r\n                return this.name(a.value.name);\r\n\r\n        });\r\n\r\n        this.startDay.subscribe(a => this.updateStartDay());\r\n        this.endDay.subscribe(a => this.updateEndDay());\r\n        this.maxDay.subscribe(a => {\r\n            this.updateEndDay();\r\n            this.updateStartDay();\r\n        });\r\n\r\n        this.selectedFunction(this.functions[0]);\r\n\r\n        if (config)\r\n            this.setState(config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get mainExpression(): string {\r\n        return this.getGraphId(\"main-func\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected addFunction(value: IRegressionFunction): RegressionFunctionViewModel {\r\n        const model = new RegressionFunctionViewModel();\r\n        model.value = value;\r\n        model.select = () => {\r\n            this.selectedFunction(model);\r\n            this.name(model.value.name);\r\n            this.updateGraph()\r\n        };\r\n\r\n        const vars: RegressionFunctionVarViewModel[] = [];\r\n        for (let item of value.vars) {\r\n            const vModel = new RegressionFunctionVarViewModel();\r\n            vModel.value = item;\r\n\r\n            vModel.curValue(item.value);\r\n            vModel.autoCompute(item.autoCompute);\r\n            vModel.min(item.minValue);\r\n            vModel.max(item.maxValue);\r\n            vModel.step(item.step);\r\n\r\n            vModel.min.subscribe(a => item.minValue = a);\r\n            vModel.max.subscribe(a => item.maxValue = a);\r\n            vModel.step.subscribe(a => item.step = a);\r\n            vModel.curValue.subscribe(a => item.value = a);\r\n            vModel.autoCompute.subscribe(a => {\r\n                item.autoCompute = a;\r\n                this.updateGraph();\r\n            });\r\n\r\n            vModel.curValue.subscribe(value => {\r\n                if (!vModel.autoCompute()) {\r\n                    this._graphCtx.updateVariable(this.getGraphId(item.name + \"-value\"), this.getVar(item.name), value);\r\n                }\r\n            });\r\n\r\n            vars.push(vModel);\r\n        }\r\n\r\n        model.vars(vars);\r\n\r\n        this.functions.push(model);\r\n        return model;\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphChanged() {\r\n        /*\r\n        const item = this._graphCtx.calculator.expressionAnalysis[this.getGraphId(\"end-day\")];\r\n        if (item && item.evaluation)\r\n            this.endDay(item.evaluation.value);*/\r\n\r\n        this.updateRegressionVars();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateRegressionVars() {\r\n        let model = this._graphCtx.calculator.controller.getItemModel(this.getGraphId(\"main\"));\r\n        if (model && model.regressionParameters) {\r\n            for (let item of this.selectedFunction().vars()) {\r\n                const varName = this.getVar(item.value.name).replace(\"{\", \"\").replace(\"}\", \"\");\r\n                let value = model.regressionParameters[varName];\r\n                if (value != undefined) {\r\n                    if (item.value.precision != undefined)\r\n                        value = round(value, item.value.precision);\r\n                    item.curValue(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParameters(result: ParameterViewModel[]): boolean {\r\n        result.push(apply(new ParameterViewModel({ value: this.startDay, name: $string(\"$(start-day)\") }), p => {\r\n            p.max = this.maxDay;\r\n            p.min(1);\r\n            p.step(1);\r\n        }));\r\n        result.push(apply(new ParameterViewModel({ value: this.endDay, name: $string(\"$(end-day)\") }), p => {\r\n            p.max = this.maxDay;\r\n            p.min(1);\r\n            p.step(1);\r\n        }));\r\n\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setStateWork(state: IStudioRegressionState) {\r\n        if (state.function) {\r\n            const func = linq(this.functions).first(a => a.value.type == state.function.type);\r\n            if (func) {\r\n                for (let item of state.function.vars) {\r\n                    const funcVar = linq(func.vars()).first(a => a.value.name == item.name);\r\n                    if (funcVar) {\r\n                        funcVar.autoCompute(item.autoCompute);\r\n                        funcVar.max(item.maxValue);\r\n                        funcVar.min(item.minValue);\r\n                        funcVar.step(item.step);\r\n                        funcVar.curValue(item.value);\r\n                    }\r\n                }\r\n                this.selectedFunction(func);\r\n            }\r\n        }\r\n        if (state.showIntegration != undefined)\r\n            this.showIntegration(state.showIntegration);\r\n\r\n        if (state.startDay != undefined)\r\n            this.startDay(state.startDay);\r\n\r\n        if (state.endDay != undefined)\r\n            this.endDay(state.endDay);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): IStudioRegressionState {\r\n        const state = super.getState();\r\n        state.function = this.selectedFunction().value;\r\n        state.showIntegration = this.showIntegration();\r\n        state.startDay = this.startDay();\r\n        state.endDay = this.endDay();\r\n\r\n        for (let item of this.selectedFunction().vars()) {\r\n            item.value.value = item.curValue();\r\n            item.value.maxValue = item.max();\r\n            item.value.minValue = item.min();\r\n            item.value.step = item.step();\r\n            item.value.autoCompute = item.autoCompute();\r\n        }\r\n        return state;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    onParentChanged() {\r\n        super.onParentChanged();\r\n        this.color(this.parent.color());\r\n        this.maxDay(linq(this.parent.values).max(a => a.x as number));\r\n        if (this.endDay() == undefined)\r\n            this.endDay(this.maxDay());\r\n        if (this.startDay() == undefined)\r\n            this.startDay(1);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateEndDay() {\r\n        if (!this._varsMap[\"tend\"])\r\n            return;\r\n        this._graphCtx.updateExpression({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"end-day\"),\r\n            latex: this._varsMap[\"tend\"] + \"=\" + this.endDay(),\r\n            slider: {\r\n                min: \"0\",\r\n                step: \"1\",\r\n                max: (this.maxDay()).toString(),\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateStartDay() {\r\n        if (!this._varsMap[\"tstart\"])\r\n            return;\r\n        this._graphCtx.updateExpression({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"start-day\"),\r\n            latex: this._varsMap[\"tstart\"] + \"=\" + this.startDay(),\r\n            slider: {\r\n                min: \"0\",\r\n                step: \"1\",\r\n                max: (this.maxDay()).toString(),\r\n            }\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateColor() {\r\n        this._graphCtx.setColor(this.getGraphId(\"main-func\"), this.color());\r\n        this._graphCtx.setColor(this.getGraphId(\"sum-serie\"), this.color());\r\n        this._graphCtx.setColor(this.getGraphId(\"sum-point\"), this.color());\r\n        this._graphCtx.setColor(this.getGraphId(\"end-day-line\"), this.color());\r\n        this._graphCtx.setColor(this.getGraphId(\"start-day-line\"), this.color());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateGraphWork() {\r\n        this.updateRegressionVars();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getExpressions(): Desmos.Expression[] {\r\n\r\n        const values: Desmos.Expression[] = [];\r\n\r\n        values.push({\r\n            type: \"folder\",\r\n            id: this.getGraphId(\"public\"),\r\n            title: this.parent.name() + \" - \" + this.name(),\r\n            collapsed: true\r\n        });\r\n        values.push({\r\n            type: \"folder\",\r\n            id: this.getGraphId(\"private\"),\r\n            secret: true,\r\n            title: this.parent.name() + \" - \" + this.name(),\r\n            collapsed: true\r\n        });\r\n\r\n        const func = this.selectedFunction().value;\r\n\r\n        this._varsMap[\"x\"] = \"\";\r\n        this._varsMap[\"y\"] = this.parent.getVar(\"y\");\r\n        this._varsMap[\"time\"] = this.parent.parent.getVar(\"time\");\r\n\r\n        for (let item of func.vars) {\r\n            if (!this._varsMap[item.name])\r\n                this._varsMap[item.name] = null;\r\n        }\r\n\r\n        this._graphCtx.generateVars(this._varsMap);\r\n        this._varsMap[\"x\"] = this.getVar(\"xp\");\r\n\r\n        const regColor = blendColor(-0.3, this.color(), false, true);\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"main\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(func.value),\r\n            hidden: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"main-func\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(func.value.replace(\"$s\\\\sim \", \"$fun\\\\left(x\\\\right)=\").replace(/\\$x/g, \"x\")),\r\n            color: regColor,\r\n            lineStyle: Desmos.Styles.DASHED\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-func\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"$sum\\\\left(x\\\\right)=\\\\sum_{$n1=1}^{x}\\\\operatorname{round}\\\\left($fun\\\\left($n1\\\\right)\\\\right)\"),\r\n            hidden: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"subserie-func\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"$s=\\\\sum_{$n3=$xp}^{$xp}{$y}[$n3+1]\"),\r\n            hidden: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"subserie-hl\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"($xp, $s)\"),\r\n            color: regColor,\r\n            lines: false,\r\n            lineStyle: Desmos.Styles.POINT,\r\n            pointStyle: \"NONE\",\r\n            points: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-x-time\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"$n2=\\\\left[1,...,$time\\\\right]\"),\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-serie\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            latex: this.replaceVars(\"\\\\left($n2,\\\\ $sum\\\\left($n2\\\\right)\\\\right)\"),\r\n            color: this.parent.color(),\r\n            lines: true,\r\n            hidden: !this.showIntegration(),\r\n            lineStyle: Desmos.Styles.SOLID,\r\n            pointStyle: \"NONE\",\r\n            points: false\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-value\"),\r\n            folderId: this.getGraphId(\"public\"),\r\n            latex: this.replaceVars(\"$value=$sum\\\\left($time\\\\right)\"),\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"sum-point\"),\r\n            folderId: this.getGraphId(\"private\"),\r\n            hidden: !this.showIntegration(),\r\n            latex: this.replaceVars(\"\\\\left($time,$value\\\\right)\"),\r\n            color: this.parent.color(),\r\n            label: this.parent.name(),\r\n            dragMode: \"XY\",\r\n            showLabel: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"end-day\"),\r\n            latex: this._varsMap[\"tend\"] + \"=\" + this.endDay(),\r\n            folderId: this.getGraphId(\"public\"),\r\n            label: \"Fine Previsione\",\r\n            slider: {\r\n                min: (0).toString(),\r\n                max: (this.maxDay()).toString(),\r\n                hardMax: true,\r\n                hardMin: true,\r\n                step: \"1\"\r\n            }\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"start-day\"),\r\n            latex: this._varsMap[\"tstart\"] + \"=\" + this.startDay(),\r\n            folderId: this.getGraphId(\"public\"),\r\n            label: \"Inizio Previsione\",\r\n            slider: {\r\n                min: (0).toString(),\r\n                max: (this.maxDay()).toString(),\r\n                hardMax: true,\r\n                hardMin: true,\r\n                step: \"1\"\r\n            }\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"end-day-line\"),\r\n            color: regColor,\r\n            latex: \"x=\" + this._varsMap[\"tend\"],\r\n            folderId: this.getGraphId(\"private\"),\r\n            lines: true\r\n        });\r\n\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"start-day-line\"),\r\n            color: regColor,\r\n            latex: \"x=\" + this._varsMap[\"tstart\"],\r\n            folderId: this.getGraphId(\"private\"),\r\n            lines: true\r\n        });\r\n\r\n        values.push({\r\n            type: \"expression\",\r\n            id: this.getGraphId(\"end-day-serie\"),\r\n            latex: this.replaceVars(\"$xp=[$tstart,...,$tend]+\" + this.parent.getVar(\"ofs\")),\r\n            folderId: this.getGraphId(\"private\"),\r\n            hidden: true\r\n        });\r\n\r\n        for (let item of this.selectedFunction().vars()) {\r\n            if (item.autoCompute())\r\n                this._graphCtx.calculator.removeExpression({ id: this.getGraphId(item.value.name + \"-value\") });\r\n            else {\r\n                values.push({\r\n                    type: \"expression\",\r\n                    id: this.getGraphId(item.value.name + \"-value\"),\r\n                    latex: this.getVar(item.value.name) + \"=\" + (item.curValue() ? item.curValue().toString() : \"0\"),\r\n                    folderId: this.getGraphId(\"public\"),\r\n                    label: item.value.name,\r\n                    slider: {\r\n                        min: toSafeString(item.value.minValue),\r\n                        max: toSafeString(item.value.maxValue),\r\n                        hardMax: true,\r\n                        hardMin: true,\r\n                        step: toSafeString(item.value.step)\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        return values;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    functions: RegressionFunctionViewModel[];\r\n    selectedFunction = ko.observable<RegressionFunctionViewModel>();\r\n    showIntegration = ko.observable<boolean>(true);\r\n    maxDay = ko.observable<number>();\r\n    endDay = ko.observable<number>();\r\n    startDay = ko.observable<number>();\r\n}","﻿\r\nimport { Api } from \"../Api\";\r\nimport { InfectionDataSet } from \"../Data/InfectionDataSet\";\r\nimport { RangeDayAreaDataSet } from \"../Data/RangeDayAreaDataSet\";\r\nimport { IDaSeriePoint } from \"../Framework/DataAdapter\";\r\nimport { IndicatorCalculator } from \"../Indicators\";\r\nimport { ParameterViewModel, StudioData } from \"../Pages/StudioPage\";\r\nimport { IDayAreaSerieSource, IFunctionPoint, SerieSource } from \"../Types\";\r\nimport { apply, dateDiff, linq } from \"../WebApp\";\r\nimport { BaseStudioItem, IStudioItemConfig, IStudioItemState } from \"./BaseStudioItem\";\r\nimport { ColorPicker } from \"./ColorPicker\";\r\nimport { GraphContext } from \"./GraphContext\";\r\nimport { StudioProject } from \"./StudioProject\";\r\nimport { IStudioRegressionConfig, IStudioRegressionState, StudioSerieRegression } from \"./StudioRegression\";\r\nimport { ActionView } from \"./TreeView\";\r\n\r\ninterface IFunction {\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\ninterface IDiscreteFunction extends IFunction {\r\n    readonly values: IFunctionPoint[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioSerieConfig extends IStudioItemConfig {\r\n    source?: SerieSource;\r\n    values?: IFunctionPoint[];\r\n    offsetX?: number;\r\n    children?: IStudioRegressionConfig[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioSerieState extends IStudioSerieConfig, IStudioItemState {\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class StudioSerie extends BaseStudioItem<IStudioSerieState, StudioProject, StudioSerieRegression> implements IDiscreteFunction {\r\n\r\n    constructor(config?: IStudioSerieConfig) {\r\n        super();\r\n\r\n        this.canDrag = true;\r\n        this.itemType = \"serie\";\r\n        this.icon = \"insert_chart\";\r\n        this.optionsTemplateName = \"StudioOptionsTemplate\";\r\n\r\n        this._varsMap = {\r\n            \"x\": null,\r\n            \"y\": null,\r\n            \"ofs\": null,\r\n            \"xofs\": null,\r\n        };\r\n\r\n        if (config) {\r\n            this.setState(config);\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    importValues(points: IDaSeriePoint[]) {\r\n\r\n        if (points && points.length > 0) {\r\n\r\n            if (points[0].x instanceof Date) {\r\n                const startDate = <Date>points[0].x;\r\n                this.values = linq(points).select(a => (<IFunctionPoint>{\r\n                    x: Math.round(dateDiff(a.x, startDate).totalDays),\r\n                    xLabel: a.x,\r\n                    y: a.y\r\n                })).toArray();\r\n            }\r\n\r\n            else if (isNaN(points[0].x)) {\r\n                this.values = linq(points).select((a, i) => (<IFunctionPoint>{\r\n                    x: i,\r\n                    xLabel: a.x,\r\n                    y: a.y\r\n                })).toArray();\r\n                return;\r\n            }\r\n            else\r\n                this.values = points;\r\n        }\r\n        else\r\n            this.values = [];\r\n\r\n        this.onSerieChanged();\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    writeData(transfer: DataTransfer): boolean {\r\n        var data: StudioData = {\r\n            version: 1,\r\n            type: \"serieState\",\r\n            state: this.getState()\r\n        };\r\n        transfer.setData(\"application/json+studio\", JSON.stringify(data));\r\n        transfer.setData(\"text/html+id\", this.node.element.id);\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createActions(result: ActionView[]) {\r\n\r\n        super.createActions(result);\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(update)\");\r\n            action.icon = \"autorenew\";\r\n            action.execute = () => this.updateSerie();\r\n        }));\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(new-regression)\");\r\n            action.icon = \"add_box\";\r\n            action.execute = () => {\r\n                const reg = this.addRegression(null, false);\r\n                reg.updateGraph();\r\n                this.node.isExpanded(true);\r\n                reg.node.isSelected(true);\r\n            }\r\n        }));\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(zoom)\");\r\n            action.icon = \"zoom_in\";\r\n            action.execute = () => this.zoom();\r\n\r\n        }));\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(align-with-this)\");\r\n            action.icon = \"compare_arrows\";\r\n            action.execute = () => {\r\n                let answer = prompt($string(\"$(tollerance)\"), \"10\");\r\n                this.alignOthers(isNaN(<any>answer) ? 10 : parseInt(answer));\r\n            };\r\n        }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    static fromText(text: string): StudioSerie {\r\n        try {\r\n            const obj = <StudioData>JSON.parse(text);\r\n            if (obj) {\r\n\r\n                if (obj.type == \"serie\")\r\n                    return new StudioSerie({\r\n                        name: obj.title,\r\n                        values: obj.values,\r\n                        source: obj.serie,\r\n                        color: obj.color\r\n                    });\r\n\r\n                if (obj.type == \"serieState\")\r\n                    return new StudioSerie(obj.state);\r\n            }\r\n        }\r\n        catch {\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getExpressions(): Desmos.Expression[] {\r\n\r\n        if (!this.color())\r\n            this.color(\"#0000ff\");\r\n\r\n        this._graphCtx.generateVars(this._varsMap);\r\n\r\n        const values: Desmos.Expression[] = [\r\n            {\r\n                type: \"folder\",\r\n                id: this.getGraphId(\"public\"),\r\n                title: this.parent.name() + \" - \" + this.name(),\r\n                collapsed: true\r\n            }, {\r\n                type: \"folder\",\r\n                id: this.getGraphId(\"private\"),\r\n                title: this.parent.name() + \" - \" + this.name(),\r\n                secret: true,\r\n                collapsed: true\r\n            }, {\r\n                type: \"expression\",\r\n                id: this.getGraphId(\"offset\"),\r\n                latex: this._varsMap[\"ofs\"] + \"=\" + this.offsetX(),\r\n                folderId: this.getGraphId(\"public\"),\r\n                label: \"Scostamento\",\r\n                slider: {\r\n                    min: (-this.values.length).toString(),\r\n                    max: (this.values.length).toString(),\r\n                    hardMax: true,\r\n                    hardMin: true,\r\n                    step: \"1\"\r\n                }\r\n            }, {\r\n                type: \"expression\",\r\n                id: this.getGraphId(\"offset-x\"),\r\n                latex: this._varsMap[\"xofs\"] + \"=\" + this._varsMap[\"x\"] + \"+\" + this._varsMap[\"ofs\"],\r\n                folderId: this.getGraphId(\"private\"),\r\n            }, {\r\n                type: \"expression\",\r\n                id: this.getGraphId(\"offset-x-serie\"),\r\n                latex: \"(\" + this._varsMap[\"xofs\"] + \",\" + this._varsMap[\"y\"] + \")\",\r\n                folderId: this.getGraphId(\"private\"),\r\n                points: true,\r\n                lines: true,\r\n                color: this.color()\r\n            }, {\r\n                type: \"table\",\r\n                id: this.getGraphId(\"table\"),\r\n                folderId: this.getGraphId(\"private\"),\r\n                columns: [\r\n                    {\r\n                        id: this.getGraphId(\"table/x\"),\r\n                        latex: this._varsMap[\"x\"],\r\n                    },\r\n                    {\r\n                        id: this.getGraphId(\"table/y\"),\r\n                        latex: this._varsMap[\"y\"],\r\n                        hidden: true\r\n                    }\r\n                ]\r\n            }];\r\n        return values;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    alignOthers(tollerance: number, ...series: StudioSerie[]) {\r\n        if (!series || series.length == 0)\r\n            series = this.parent.children.where(a => a != this).toArray();\r\n        for (let serie of series)\r\n            serie.alignWith(this, tollerance);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    alignWith(other: StudioSerie, tollerance: number) {\r\n\r\n        let minOfs = 0;\r\n        let minValue = Number.NEGATIVE_INFINITY;\r\n        for (let ofs = -this.values.length; ofs < this.values.length; ofs++) {\r\n\r\n            let value = 0;\r\n            for (let i = 0; i < this.values.length; i++) {\r\n                const ofsX = i - ofs;\r\n\r\n                if (ofsX < 0 || ofsX >= this.values.length)\r\n                    continue;\r\n\r\n                if (i >= other.values.length)\r\n                    continue;\r\n\r\n                if (Math.abs(this.values[ofsX].y - other.values[i].y) < tollerance)\r\n                    value++;\r\n            }\r\n            if (value > minValue) {\r\n                minValue = value;\r\n                minOfs = ofs;\r\n            }\r\n        }\r\n\r\n        other.offsetX(0);\r\n        this.offsetX(minOfs);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get mainExpression(): string {\r\n        return this.getGraphId(\"offset-x-serie\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParameters(result: ParameterViewModel[]): boolean {\r\n        result.push(apply(new ParameterViewModel({ value: this.offsetX, name: $string(\"$(shift)\") }), p => {\r\n            p.max(this.values.length);\r\n            p.min(-this.values.length);\r\n            p.step(1);\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateGraphWork() {\r\n        this._graphCtx.updateTable(this.getGraphId(\"table\"), this.values);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphChanged() {\r\n        /*\r\n        const item = this._graphCtx.calculator.expressionAnalysis[this.getGraphId(\"offset\")];\r\n        if (item && item.evaluation)\r\n            this.offsetX(item.evaluation.value);*/\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onSelected() {\r\n        super.onSelected();\r\n        //this._graphCtx.expressionZoomFit(this.getGraphId(\"table\"));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateColor() {\r\n        this._graphCtx.setColor(this.getGraphId(\"offset-x-serie\"), this.color());\r\n        this.children.foreach(a => a.onParentChanged());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachGraph(ctx: GraphContext) {\r\n        super.attachGraph(ctx);\r\n\r\n        this.offsetX.subscribe(value => {\r\n            this._graphCtx.updateVariable(this.getGraphId(\"offset\"), this._varsMap[\"ofs\"], value);\r\n            this.onSerieChanged();\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onSerieChanged() {\r\n        if (this._isUpdating == 0)\r\n            this.parent.updateAggregate();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setChildrenStateWork(state: IStudioSerieState) {\r\n        if (state.children != undefined) {\r\n\r\n            this.children.foreach(a => a.remove());\r\n\r\n            state.children.forEach(a => {\r\n                const reg = this.addRegression(null, false);\r\n                reg.setState(a);\r\n            });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setStateWork(state: IStudioSerieState) {\r\n\r\n        if (state.offsetX != undefined)\r\n            this.offsetX(state.offsetX);\r\n\r\n        if (state.source)\r\n            this.source = this.upgradeSource(state.source);\r\n\r\n        if (state.values != undefined)\r\n            this.importValues(state.values);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected upgradeSource(source: SerieSource): SerieSource {\r\n\r\n        if (!source.type)\r\n            source.type = \"geoplot\";\r\n\r\n        if (source.type == \"geoplot\") {\r\n\r\n            source.areaId = this.upgradeAreaId(source.areaId);\r\n            if (source.exeludedAreaIds)\r\n                for (let i = 0; i < source.exeludedAreaIds.length; i++)\r\n                    source.exeludedAreaIds[i] = this.upgradeAreaId(source.exeludedAreaIds[i]);\r\n\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected upgradeAreaId(id: string): string {\r\n\r\n        if (id) {\r\n            if (id.startsWith(\"R\") && id.length == 2)\r\n                return \"R0\" + id.substring(1);\r\n            if (id.startsWith(\"D\") && id.length == 2)\r\n                return \"D00\" + id.substring(1);\r\n            if (id.startsWith(\"D\") && id.length == 3)\r\n                return \"D0\" + id.substring(1);\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): IStudioSerieState {\r\n        const state = super.getState();\r\n        state.offsetX = this.offsetX();\r\n        state.source = this.source;\r\n        state.values = this.values;\r\n        state.children = this.children.select(a => a.getState()).toArray();\r\n        return state;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addRegression(configOrState?: IStudioRegressionState | StudioSerieRegression, updateGraph = true): StudioSerieRegression {\r\n        return this.addChildrenWork(configOrState instanceof StudioSerieRegression ? configOrState : new StudioSerieRegression(configOrState), updateGraph);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async changeColor() {\r\n\r\n        const color = await ColorPicker.instance.pick();\r\n        if (color)\r\n            this.color(color);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async updateSerie() {\r\n\r\n        if (this.source.type == \"geoplot\" || !this.source.type) {\r\n\r\n            if (!this._graphCtx.serieCalculator) {\r\n                M.toast({ html: $string(\"$(msg-downloading-data)\") })\r\n                const model = await Api.loadStudioData();\r\n                this._graphCtx.serieCalculator = new IndicatorCalculator(new RangeDayAreaDataSet(model.data), InfectionDataSet, model.geo);\r\n            }\r\n\r\n            const daySource = this.source as IDayAreaSerieSource;\r\n\r\n            if (daySource.range) {\r\n                this._graphCtx.serieCalculator.data.startDay = daySource.range.start;\r\n                this._graphCtx.serieCalculator.data.endDay = daySource.range.end;\r\n            }\r\n            else {\r\n                this._graphCtx.serieCalculator.data.startDay = undefined;\r\n                this._graphCtx.serieCalculator.data.endDay = undefined;\r\n            }\r\n\r\n            this.importValues(this._graphCtx.serieCalculator.getSerie(daySource));\r\n\r\n            this._graphCtx.updateTable(this.getGraphId(\"table\"), this.values);\r\n            this.children.foreach(a => a.onParentChanged());\r\n\r\n            this.onSerieChanged();\r\n\r\n            M.toast({ html: $string(\"$(msg-update-complete)\") })\r\n        }\r\n        else\r\n            M.toast({ html: $string(\"$(msg-update-not-supported)\") })\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    zoom() {\r\n        const minX = linq(this.values).min(a => a.x as number);\r\n        const minY = linq(this.values).min(a => a.y);\r\n        const maxX = linq(this.values).max(a => a.x as number);\r\n        const maxY = linq(this.values).max(a => a.y);\r\n\r\n        this._graphCtx.calculator.setMathBounds({\r\n            top: maxY + (maxY - minY) * 0.1,\r\n            right: maxX + (maxX - minX) * 0.1,\r\n            bottom: minY - (maxY - minY) * 0.1,\r\n            left: minX - (maxX - minX) * 0.1,\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    color = ko.observable<string>();\r\n    offsetX = ko.observable<number>(0);\r\n    source: SerieSource;\r\n    values: IFunctionPoint[] = [];\r\n}","﻿import { ParameterViewModel } from \"../Pages/StudioPage\";\r\nimport { IFunctionPoint, ITextValue } from \"../Types\";\r\nimport { apply, linq } from \"../WebApp\";\r\nimport { BaseStudioItem, IStudioItemConfig, IStudioItemState } from \"./BaseStudioItem\";\r\nimport { GraphContext } from \"./GraphContext\";\r\nimport { IStudioSerieConfig, IStudioSerieState, StudioSerie } from \"./StudioSerie\";\r\nimport { ActionView } from \"./TreeView\";\r\n\r\ntype AggregateMode = \"none\" | \"sum\" | \"avg\";\r\n\r\nexport interface IStudioProjectConfig extends IStudioItemConfig {\r\n    aggregationMode?: AggregateMode;\r\n    children?: IStudioSerieState[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioProjectState extends IStudioProjectConfig, IStudioItemState {\r\n    time?: number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class StudioProject extends BaseStudioItem<IStudioProjectState, any, StudioSerie> {\r\n\r\n    constructor(config?: IStudioProjectConfig) {\r\n\r\n        super();\r\n\r\n        this.itemType = \"project\";\r\n        this.icon = \"folder\";\r\n        this.optionsTemplateName = \"ProjectOptionsTemplate\";\r\n\r\n        this.aggregationModes = [\r\n            {\r\n                text: $string(\"$(none)\"),\r\n                value: \"none\"\r\n            },\r\n            {\r\n                text: $string(\"$(sum)\"),\r\n                value: \"sum\"\r\n            },\r\n            {\r\n                text: $string(\"$(average)\"),\r\n                value: \"avg\",\r\n            }\r\n        ];\r\n\r\n        this._varsMap = {\r\n            \"time\": null,\r\n            \"xagg\": null,\r\n            \"yagg\": null\r\n        };\r\n\r\n        if (config)\r\n            this.setState(config);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    createActions(result: ActionView[]) {\r\n\r\n        super.createActions(result);\r\n\r\n        result.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(update-all-proj)\");\r\n            action.icon = \"autorenew\";\r\n            action.execute = () => this.updateAllSerie();\r\n        }));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async updateAllSerie() {\r\n\r\n        for (let item of this.children)\r\n            await item.updateSerie();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canAccept(value: object): boolean {\r\n        return (value instanceof StudioSerie);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    canReadData(transfer: DataTransfer): boolean {\r\n        return transfer.types.indexOf(\"application/json+studio\") != -1;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    readData(transfer: DataTransfer) {\r\n\r\n        const textData = transfer.getData(\"application/json+studio\");\r\n        let serie = StudioSerie.fromText(textData);\r\n        if (serie) {\r\n            this.addSerie(serie);\r\n            this.node.isExpanded(true);\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected getExpressions(): Desmos.Expression[] {\r\n\r\n        this._graphCtx.generateVars(this._varsMap);\r\n\r\n        const values: Desmos.Expression[] = [\r\n            {\r\n                type: \"folder\",\r\n                id: this.getGraphId(\"public\"),\r\n                title: this.name(),\r\n                collapsed: true\r\n            },\r\n            {\r\n                type: \"folder\",\r\n                id: this.getGraphId(\"private\"),\r\n                title: this.name(),\r\n                secret: true,\r\n                collapsed: true\r\n            },\r\n            {\r\n                type: \"expression\",\r\n                folderId: this.getGraphId(\"public\"),\r\n                id: this.getGraphId(\"time\"),\r\n                latex: this._varsMap[\"time\"] + \"=\" + this.time(),\r\n                slider: {\r\n                    hardMin: true,\r\n                    hardMax: true,\r\n                    min: \"0\",\r\n                    max: \"100\",\r\n                    step: \"1\"\r\n                }\r\n            },\r\n            {\r\n                type: \"table\",\r\n                id: this.getGraphId(\"aggregate\"),\r\n                folderId: this.getGraphId(\"private\"),\r\n                columns: [\r\n                    {\r\n                        id: this.getGraphId(\"table/xagg\"),\r\n                        latex: this._varsMap[\"xagg\"],\r\n                    },\r\n                    {\r\n                        id: this.getGraphId(\"table/yagg\"),\r\n                        latex: this._varsMap[\"yagg\"],\r\n                        lines: true,\r\n                        points: true\r\n                        //hidden: this.aggregationMode() == \"none\"\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n\r\n        return values;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    updateAggregate() {\r\n\r\n        const values: { [key: number]: number } = {};\r\n\r\n        const children = this.children.toArray();\r\n\r\n        for (var child of children) {\r\n            const ofs = parseInt(<any>child.offsetX());\r\n            for (var item of child.values) {\r\n                const xReal = item.x as number + ofs;\r\n                if (!(xReal in values))\r\n                    values[xReal] = item.y;\r\n                else\r\n                    values[xReal] += item.y;\r\n            }\r\n        }\r\n\r\n        const funValues = linq(values).orderBy(a => a.key).select(a => (<IFunctionPoint>{ x: <any>a.key, y: a.value })).toArray();\r\n        this._graphCtx.updateTable(this.getGraphId(\"aggregate\"), funValues);\r\n\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateColor() {\r\n        this._graphCtx.setColor(this.getGraphId(\"aggregate\"), this.color());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    get mainExpression() {\r\n        return this.getGraphId(\"aggregate\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected createParameters(result: ParameterViewModel[]): boolean {\r\n        result.push(apply(new ParameterViewModel({ value: this.time, name: $string(\"$(day)\") }), p => {\r\n            p.max(100);\r\n            p.min(0);\r\n            p.step(1);\r\n        }));\r\n        return true;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setStateWork(state: IStudioProjectState) {\r\n        if (state.time != undefined)\r\n            this.time(state.time);\r\n        if (state.aggregationMode)\r\n            this.aggregationMode(state.aggregationMode);\r\n        else\r\n            this.aggregationMode(\"none\");\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected setChildrenStateWork(state: IStudioProjectState) {\r\n        if (state.children != undefined) {\r\n\r\n            this.children.foreach(a => a.remove());\r\n\r\n            state.children.forEach(a => {\r\n                const item = this.addSerie(null, false);\r\n                item.setState(a);\r\n            });\r\n        }\r\n        if (this.aggregationMode() != \"none\")\r\n            this.updateAggregate();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): IStudioProjectState {\r\n        const state = super.getState();\r\n        state.time = this.time();\r\n        state.children = this.children.select(a => a.getState()).toArray();\r\n        state.aggregationMode = this.aggregationMode();\r\n        return state;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphChanged() {\r\n        /*\r\n        const item = this._graphCtx.calculator.expressionAnalysis[this.getGraphId(\"time\")];\r\n        if (item)\r\n            this.time(item.evaluation.value);*/\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    attachGraph(ctx: GraphContext) {\r\n        super.attachGraph(ctx);\r\n\r\n        this.time.subscribe(value =>\r\n            this._graphCtx.updateVariable(this.getGraphId(\"time\"), this._varsMap[\"time\"], this.time()));\r\n\r\n        this.aggregationMode.subscribe(a => this.updateAggregate());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addSerie(configOrSerie?: IStudioSerieConfig | StudioSerie, updateGraph = true): StudioSerie {\r\n        return this.addChildrenWork(configOrSerie instanceof StudioSerie ? configOrSerie : new StudioSerie(configOrSerie), updateGraph);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    time = ko.observable(0);\r\n    aggregationMode = ko.observable<AggregateMode>(\"none\");\r\n    aggregationModes: ITextValue<AggregateMode>[];\r\n}","﻿import { Api } from \"../Api\";\r\nimport { DataImportControl, IDataImportSerieSource } from \"../Components/DataImport\";\r\nimport { GraphContext } from \"../Components/GraphContext\";\r\nimport { IStudioProjectConfig, IStudioProjectState, StudioProject } from \"../Components/StudioProject\";\r\nimport { StudioSerieRegression } from \"../Components/StudioRegression\";\r\nimport { IStudioSerieState, StudioSerie } from \"../Components/StudioSerie\";\r\nimport { ActionView, ITreeItem, TreeNode, TreeView } from \"../Components/TreeView\";\r\nimport { IInfectionData } from \"../Data/InfectionDataSet\";\r\nimport * as Desmos from \"desmos\";\r\n\r\nimport { IDayAreaDataSet, IDayAreaSerieSource, IFunctionPoint, IGeoAreaSet } from \"../Types\";\r\nimport { apply, copyText, Guid, IDictionary, Linq, linq, Uri, uuidv4 } from \"../WebApp\";\r\n\r\ntype TData = IInfectionData;\r\n\r\nexport type StudioData = ISerieStudioData | ISerieStateStudioData;\r\n\r\nexport interface IStudioData {\r\n    version: number;\r\n}\r\n\r\nexport interface ISerieStudioData extends IStudioData {\r\n    type: \"serie\";\r\n    serie: IDayAreaSerieSource;\r\n    title: string;\r\n    values?: IFunctionPoint[];\r\n    color?: string;\r\n}\r\n\r\nexport interface ISerieStateStudioData extends IStudioData {\r\n    type: \"serieState\";\r\n    state: IStudioSerieState;\r\n}\r\n\r\n/****************************************/\r\n/* ParameterViewModel\r\n/****************************************/\r\n\r\ninterface IParameterConfig {\r\n    value: KnockoutObservable<number>;\r\n    name: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport class ParameterViewModel {\r\n\r\n    constructor(config: IParameterConfig) {\r\n        this.value = config.value;\r\n        this.name = config.name;\r\n    }\r\n\r\n    name: string;\r\n    min = ko.observable<number>();\r\n    max = ko.observable<number>();\r\n    step = ko.observable<number>();\r\n    isSelected = ko.observable<boolean>(true);\r\n    value: KnockoutObservable<number>;\r\n}\r\n\r\n/****************************************/\r\n/* Page\r\n/****************************************/\r\n\r\ninterface IPageState {\r\n    version: number;\r\n    graphState?: Desmos.IGraphState;\r\n    projects?: IStudioProjectState[];\r\n    vars?: IDictionary<number>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IStudioViewModel {\r\n    data: IDayAreaDataSet<TData>;\r\n    geo: IGeoAreaSet;\r\n}\r\n\r\n/****************************************/\r\n\r\n\r\nexport class StudioPage {\r\n\r\n    private _graphCtx: GraphContext;\r\n    private _projectId: Guid;\r\n\r\n    constructor(projectId: Guid) {\r\n\r\n        this._projectId = projectId;\r\n\r\n        this._graphCtx = new GraphContext();\r\n        this._graphCtx.calculator = Desmos.GraphingCalculator(document.getElementById(\"calculator\"), {\r\n            //xAxisArrowMode: Desmos.AxisArrowModes.BOTH,\r\n            pasteGraphLink: false,\r\n            pasteTableData: false,\r\n            expressionsCollapsed: true,\r\n            //lockViewport: false,\r\n            restrictedFunctions: true,\r\n            //restrictGridToFirstQuadrant: true,\r\n            administerSecretFolders: true,\r\n            authorIDE: true,\r\n            advancedStyling: true\r\n        });\r\n\r\n        this._graphCtx.calculator.controller.listModel.onSelectionChanged = item => this.onGraphSelectionChanged(item);\r\n\r\n        const actions: ActionView[] = [];\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(new-project)\"),\r\n                action.icon = \"create_new_folder\";\r\n            action.execute = () => this.newProject();\r\n        }));\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(save)\"),\r\n                action.icon = \"save\";\r\n            action.execute = () => this.saveState();\r\n        }));\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(import)\"),\r\n                action.icon = \"import_export\";\r\n            action.execute = () => this.import();\r\n        }));\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(share) Studio\"),\r\n                action.icon = \"share\";\r\n            action.execute = () => this.share();\r\n        }));\r\n        actions.push(apply(new ActionView(), action => {\r\n            action.text = $string(\"$(options)\"),\r\n            action.icon = \"settings\";\r\n            action.execute = () => this.showOptions();\r\n        }));\r\n\r\n        const root = new TreeNode<any>();\r\n        root.actions(actions);\r\n        this.items.setRoot(root);\r\n\r\n        document.body.addEventListener(\"paste\", async ev => {\r\n            if ((<HTMLElement>ev.target).tagName == \"INPUT\")\r\n                return;\r\n            if (await this.onPaste(ev.clipboardData))\r\n                ev.preventDefault();\r\n        });\r\n\r\n        M.Modal.init(document.getElementById(\"options\"), {\r\n            onCloseEnd: () => this.updateOptions()\r\n        });\r\n\r\n\r\n        setTimeout(() => this.init());\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected onGraphSelectionChanged(item: { id: string, folderId?: string }) {\r\n        if (!item || !item.folderId)\r\n            return;\r\n        const folderGuid = item.folderId.split(\"/\")[0];\r\n        const treeItem = this._graphCtx.treeItems[folderGuid];\r\n        if (!treeItem)\r\n            return;\r\n        treeItem.node.select(true);\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected updateOptions() {\r\n        const maxX = parseInt(<any>this.maxX());\r\n        const maxY = parseInt(<any>this.maxY());\r\n        this._graphCtx.calculator.setMathBounds({\r\n            bottom: -maxY / 10,\r\n            left: -maxX / 10,\r\n            right: maxX,\r\n            top: maxY\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async share() {\r\n        const projectId = uuidv4();\r\n        await Api.saveState(projectId, this.getState());\r\n        const url = Uri.absolute(\"~/\" + $language.split(\"-\")[0] + \"/Studio/\" + projectId);\r\n        await copyText(url);\r\n        M.toast({ html: $string(\"$(msg-shared)\") });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    showOptions() {\r\n        const bounds = this._graphCtx.calculator.graphpaperBounds;\r\n        this.maxX(Math.round(bounds.mathCoordinates.width));\r\n        this.maxY(Math.round(bounds.mathCoordinates.height));\r\n        const dialog = M.Modal.getInstance(document.getElementById(\"options\"));\r\n        dialog.open();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getSelectedProject(): StudioProject {\r\n        if (!this.items.selectedNode())\r\n            return;\r\n\r\n        const value = this.items.selectedNode().value();\r\n\r\n        if (value.itemType == \"project\")\r\n            return <StudioProject>value;\r\n\r\n        if (value.itemType == \"serie\")\r\n            return (<StudioSerie>value).parent;\r\n\r\n        if (value.itemType == \"regression\")\r\n            return (<StudioSerieRegression>value).parent.parent;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    newProject(): StudioProject {\r\n        const proj = this.addProject({ name: \"Project \" + (this.projects.count() + 1) });\r\n        proj.node.isSelected(true);\r\n        return proj;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    addProject(config?: IStudioProjectConfig, updateGraph = true): StudioProject {\r\n        const project = new StudioProject(config);\r\n        const node = new TreeNode(project);\r\n        this.items.root().addNode(node);\r\n        project.attachNode(node);\r\n        project.attachGraph(this._graphCtx);\r\n        if (updateGraph)\r\n            project.updateGraph();\r\n        return project;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    getState(): IPageState {\r\n\r\n        const result: IPageState = { version: 2 };\r\n        result.graphState = this._graphCtx.calculator.getState();\r\n        result.vars = this._graphCtx.vars;\r\n        result.projects = this.projects.select(a => a.getState()).toArray();\r\n        return result;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    setState(value: IPageState) {\r\n\r\n        if (!value)\r\n            return;\r\n\r\n        if (value.graphState) {\r\n            value.graphState.expressions.list = [];\r\n            this._graphCtx.calculator.setState(value.graphState);\r\n        }\r\n\r\n        if (value.projects != undefined) {\r\n            this.projects.toArray().forEach(a => a.remove());\r\n            value.projects.forEach(a => {\r\n                const proj = this.addProject(null, false);\r\n                proj.setState(a);\r\n            });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async loadState() {\r\n        if (this._projectId) {\r\n            let result = await Api.loadState<IPageState>(this._projectId);\r\n            this.setState(result);\r\n        }\r\n        else {\r\n            const json = localStorage.getItem(\"studio\");\r\n            if (json)\r\n                this.setState(JSON.parse(json));\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async saveState() {\r\n\r\n        if (this._projectId) {\r\n            await Api.saveState(this._projectId, this.getState());\r\n            M.toast({ html: $string(\"$(msg-saved)\") });\r\n        }\r\n        else {\r\n            localStorage.setItem(\"studio\", JSON.stringify(this.getState()));\r\n            M.toast({ html: $string(\"$(msg-saved-device)\") });\r\n        }\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected demo() {\r\n        const proj = this.addProject({ name: \"Project 1\" });\r\n        this.addProject({ name: \"Project 2\" });\r\n        this.addProject({ name: \"Project 3\" });\r\n\r\n        proj.addSerie({\r\n            name: \"Serie 1\"\r\n        });\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected async onPaste(data: DataTransfer): Promise<boolean> {\r\n\r\n        const text = data.getData(\"text/plain\").toString();\r\n        if (text)\r\n            return await this.importText(text);\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async import() {\r\n        //var text = await (await fetch(\"https://raw.githubusercontent.com/datasets/covid-19/master/data/countries-aggregated.csv\")).text();\r\n        let project = this.getSelectedProject();\r\n        const data = await this.dataImport.show();\r\n        this.addImportedData(data, project);\r\n        return true;\r\n    }\r\n    /****************************************/\r\n\r\n    async importText(text: string): Promise<boolean> {\r\n\r\n        let project = this.getSelectedProject();\r\n        if (!project && !this.projects.any())\r\n            project = this.newProject();\r\n\r\n        if (!project) {\r\n            M.toast({ html: $string(\"$(msg-select-project)\") });\r\n            return false;\r\n        }\r\n\r\n        const serie = StudioSerie.fromText(text);\r\n        if (serie) {\r\n            project.addSerie(serie);\r\n            project.node.isExpanded(true);\r\n            serie.node.isExpanded(true);\r\n            serie.zoom();\r\n            const reg = serie.addRegression(null, false);\r\n            reg.updateGraph();\r\n            reg.node.isSelected(true);\r\n            return true;\r\n        }\r\n\r\n        try {\r\n\r\n            if (await this.dataImport.importText(text))\r\n                await this.import();\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        M.toast({ html: $string(\"$(msg-format-not-reconized)\") });\r\n\r\n        return false;\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    protected addImportedData(data: IDataImportSerieSource[], project: StudioProject) {\r\n\r\n        if (data.length == 1) {\r\n            if (this.items.selectedNode() && this.items.selectedNode().value() instanceof StudioSerie) {\r\n                if (confirm($string(\"$(msg-replace-serie)\"))) {\r\n                    const serie = <StudioSerie>this.items.selectedNode().value();\r\n                    serie.source = data[0];\r\n                    serie.importValues(data[0].serie.values);\r\n                    serie.updateGraph(true);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        project.node.isExpanded(true);\r\n\r\n        for (let item of data) {\r\n\r\n            const serie = new StudioSerie({\r\n                name: item.serie.name,\r\n                values: item.serie.values,\r\n                source: item\r\n            });\r\n\r\n            project.addSerie(serie);\r\n            serie.node.isExpanded(true);\r\n\r\n            const reg = serie.addRegression(null, false);\r\n            reg.updateGraph();\r\n            reg.node.isSelected(true);\r\n        }\r\n    }\r\n\r\n\r\n    /****************************************/\r\n\r\n    get projects(): Linq<StudioProject> {\r\n\r\n        function* items(this: StudioPage) {\r\n            for (let node of this.items.root().nodes())\r\n                yield (<StudioProject>node.value());\r\n        }\r\n\r\n        return linq(items.apply(this));\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    async init() {\r\n        this.loadState();\r\n    }\r\n\r\n    /****************************************/\r\n\r\n    items = new TreeView<ITreeItem>();\r\n\r\n    maxX = ko.observable<number>();\r\n\r\n    maxY = ko.observable<number>();\r\n\r\n    dataImport = new DataImportControl();\r\n}","﻿import { IDataImportSerieSource } from \"./Components/DataImport\";\r\nimport { ViewMode } from \"./Data/ViewModes\";\r\nimport { IPoly2D, IRect2D, LinearGradient } from \"./Framework/Graphics\";\r\nimport { IDictionary } from \"./WebApp\";\r\n\r\nexport enum AggregationFunc {\r\n    SUm,\r\n    Avg\r\n}\r\n\r\nexport interface IGeoPoint {\r\n    lat: number;\r\n    lng: number;\r\n}\r\n\r\nexport interface IDayAreaGroupItem<TValue> {\r\n    date: string;\r\n    values: IDictionary<TValue>;\r\n}\r\n\r\nexport interface IDayAreaDataSet<TData> {\r\n    days: IDayAreaGroupItem<TData>[];\r\n}\r\n\r\nexport enum GeoAreaType {\r\n    Continent = 0,\r\n    CountryGroup = 1,\r\n    Country = 2,\r\n    State = 3,\r\n    Region = 4,\r\n    District = 5,\r\n    Municipality = 6\r\n}\r\n\r\nexport enum Gender {\r\n    All,\r\n    Male,\r\n    Female\r\n}\r\n\r\nexport interface IAggregateDemography {\r\n    total: number;\r\n    male?: number;\r\n    female?: number;\r\n    over65?: number;\r\n}\r\n\r\nexport interface IGeoArea {\r\n    id: string;\r\n    name: string;\r\n    demography: IAggregateDemography;\r\n    surface: number;\r\n    type: GeoAreaType;\r\n    geography: IPoly2D[];\r\n    parentId: string;\r\n}\r\n\r\nexport interface IGeoAreaSet {\r\n    viewBox: IRect2D;\r\n    areas: IDictionary<IGeoArea>;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IIndicatorFunction<TData> {\r\n    value(main: TData, delta: TData, exMain: TData[], exDelta: TData[], area: IGeoArea): number;\r\n}\r\n\r\nexport interface IFactorFunction<TData> {\r\n    value(main: TData[], delta: TData[], exMain: TData[][], exDelta: TData[][], area: IGeoArea, indicator: IIndicatorFunction<TData>): number;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IIndicator<TData> {\r\n    id: keyof TData | string;\r\n    name: string;\r\n    description?: string;\r\n    validFor?: ViewMode[];\r\n    colorLight?: string;\r\n    colorDark?: string;\r\n    gradient?: LinearGradient;\r\n    canBeNegative?: boolean;\r\n    showInFavorites?: boolean;\r\n    compute: IIndicatorFunction<TData>;\r\n}\r\n\r\nexport interface IFactor<TData> {\r\n    id: string;\r\n    name: string;\r\n    validFor?: ViewMode[];\r\n    compute: IFactorFunction<TData>;\r\n    format: (value: number) => string,\r\n    reference: (value: TData, area: IGeoArea) => any;\r\n    description: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IDataSet<TData> {\r\n    name: string;\r\n    empty: TData;\r\n    indicators: IIndicator<TData>[];\r\n    factors: IFactor<TData>[];\r\n}\r\n\r\n/****************************************/\r\n\r\nexport type SerieSource = IDayAreaSerieSource | IDataImportSerieSource;\r\n\r\n/****************************************/\r\n\r\nexport interface IDayAreaSerieSource {\r\n    type: \"geoplot\";\r\n    areaId: string;\r\n    exeludedAreaIds?: string[];\r\n    indicatorId: string;\r\n    factorId?: string;\r\n    groupSize?: number;\r\n    startDay?: number;\r\n    endDay?: number;\r\n    isDelta?: boolean;\r\n    xAxis: \"dayNumber\" | \"date\";\r\n    range?: {\r\n        start: number,\r\n        end: number\r\n    };\r\n\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IFunctionPoint {\r\n    x: number | Date;\r\n    y: number;\r\n    xLabel?: string;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface IApiResult<T> {\r\n    error: string;\r\n    data: T;\r\n    isSuccess: boolean;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport interface ITextValue<TValue> {\r\n    text: string;\r\n    value: TValue;\r\n}\r\n\r\n/****************************************/\r\n\r\nexport const MATERIAL_COLORS = {\r\n    \"red\": { \"600\": \"#f44336\" },\r\n    \"pink\": { \"600\": \"#e91e63\" },\r\n    \"purple\": { \"600\": \"#9c27b0\" },\r\n    \"deep_purple\": { \"600\": \"#673ab7\" },\r\n    \"indigo\": { \"600\": \"#3f51b5\" },\r\n    \"blue\": { \"600\": \"#2196f3\" },\r\n    \"light_blue\": { \"600\": \"#03a9f4\" },\r\n    \"cyan\": { \"600\": \"#00bcd4\" },\r\n    \"teal\": { \"600\": \"#009688\" },\r\n    \"green\": { \"600\": \"#4caf50\" },\r\n    \"light_green\": { \"600\": \"#8bc34a\" },\r\n    \"lime\": { \"600\": \"#cddc39\" },\r\n    \"yellow\": { \"600\": \"#ffeb3b\" },\r\n    \"amber\": { \"600\": \"#ffc107\" },\r\n    \"orange\": { \"600\": \"#ff9800\" },\r\n    \"depp_orange\": { \"600\": \"#ff5722\" },\r\n    \"brown\": { \"600\": \"#795548\" },\r\n    \"grey\": { \"600\": \"#9e9e9e\" },\r\n    \"blue_gray\": { \"600\": \"#607d8b\" },\r\n};\r\n\r\n\r\ndeclare function gtag(...args: any);","module.exports = __WEBPACK_EXTERNAL_MODULE__5665__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1404__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3794__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7836__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}